  I0914 12:19:13.601563      20 e2e.go:109] Starting e2e run "31e4654d-6d80-4ffd-996c-32e409590e0d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1726316353 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0914 12:19:13.792261 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:19:13.793264 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0914 12:19:13.834466 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0914 12:19:13.840168 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0914 12:19:13.840392 20 e2e.go:245] e2e test version: v1.31.1
  I0914 12:19:13.842109 20 e2e.go:254] kube-apiserver version: v1.31.1
  I0914 12:19:13.842307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:19:13.847650 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/14/24 12:19:14.056
  I0914 12:19:14.056929 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/24 12:19:14.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:19:14.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:19:14.099
  STEP: Performing setup for networking test in namespace pod-network-test-4681 @ 09/14/24 12:19:14.103
  STEP: creating a selector @ 09/14/24 12:19:14.104
  STEP: Creating the service pods in kubernetes @ 09/14/24 12:19:14.104
  I0914 12:19:14.104324 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/14/24 12:19:36.253
  I0914 12:19:38.304581 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 12:19:38.304622 20 utils.go:496] Going to poll 192.168.17.130 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 12:19:38.309442 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.17.130:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:19:38.309462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:19:38.309899 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:19:38.309949 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.17.130%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0914 12:19:38.368550 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0914 12:19:38.368580 20 utils.go:496] Going to poll 192.168.108.198 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 12:19:38.373873 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.108.198:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:19:38.373894 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:19:38.374298 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:19:38.374347 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.108.198%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0914 12:19:38.422480 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0914 12:19:38.422614 20 utils.go:496] Going to poll 192.168.254.66 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 12:19:38.427208 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.254.66:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:19:38.427224 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:19:38.427623 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:19:38.427688 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.254.66%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0914 12:19:38.473255 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0914 12:19:38.473434 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4681" for this suite. @ 09/14/24 12:19:38.478
â€¢ [24.430 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/14/24 12:19:38.487
  I0914 12:19:38.487497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 12:19:38.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:19:38.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:19:38.508
  STEP: Creating pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984 @ 09/14/24 12:19:38.512
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 12:19:40.535
  I0914 12:19:40.539516 20 container_probe.go:1749] Initial restart count of pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea is 0
  I0914 12:19:40.544081 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:42.550022 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:44.554933 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:46.560338 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:48.566871 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:50.572678 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:52.578312 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:54.583356 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:56.590094 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:19:58.595581 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:00.602127 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:02.608599 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:04.614536 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:06.620766 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:08.627598 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:10.634088 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:12.640251 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:14.647604 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:16.653807 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:18.659221 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:20.666033 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:22.671924 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:24.677713 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:26.684310 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:28.690293 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:30.696264 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:32.702267 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:34.709132 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:36.714845 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:38.721785 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:40.728509 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:42.734632 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:44.741763 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:46.748103 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:48.754610 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:50.760535 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:52.766198 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:54.771581 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:56.777760 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:20:58.783147 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:00.789737 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:02.796129 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:04.803217 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:06.810048 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:08.816122 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:10.822504 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:12.827847 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:14.836429 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:16.841955 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:18.848236 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:20.853999 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:22.860320 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:24.867650 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:26.874004 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:28.880124 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:30.886522 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:32.893991 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:34.899718 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:36.905569 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:38.912272 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:40.918152 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:42.923573 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:44.930258 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:46.935644 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:48.941798 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:50.948019 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:52.954155 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:54.960004 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:56.966568 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:21:58.972343 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:00.978093 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:02.984233 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:04.990464 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:06.996898 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:09.003424 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:11.009681 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:13.016831 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:15.022950 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:17.029449 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:19.035733 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:21.041846 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:23.047964 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:25.055129 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:27.062180 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:29.068899 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:31.074490 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:33.080313 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:35.086438 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:37.092598 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:39.098402 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:41.104924 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:43.110487 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:45.117173 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:47.122849 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:49.129308 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:51.135565 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:53.141776 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:55.147727 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:57.154226 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:22:59.160504 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:01.166247 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:03.171788 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:05.178389 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:07.185088 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:09.191262 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:11.198010 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:13.204609 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:15.213618 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:17.219787 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:19.225956 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:21.232362 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:23.240348 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:25.247287 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:27.254134 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:29.260084 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:31.265466 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:33.271914 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:35.277691 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:37.284792 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  I0914 12:23:39.290535 20 container_probe.go:1759] Get pod test-grpc-44bfcb57-90b5-41c1-b76d-1c0b9c5095ea in namespace container-probe-3984
  STEP: deleting the pod @ 09/14/24 12:23:41.291
  I0914 12:23:41.307784 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3984" for this suite. @ 09/14/24 12:23:41.314
â€¢ [242.835 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/14/24 12:23:41.322
  I0914 12:23:41.322354 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename endpointslice @ 09/14/24 12:23:41.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:23:41.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:23:41.342
  I0914 12:23:41.359400 20 endpointslice.go:1045] Endpoints addresses: [172.31.2.197 172.31.23.19] , ports: [6443]
  I0914 12:23:41.359425 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.2.197 172.31.23.19] , ports: [6443]
  I0914 12:23:41.359493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1978" for this suite. @ 09/14/24 12:23:41.364
â€¢ [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/14/24 12:23:41.38
  I0914 12:23:41.380178 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename csi-storageclass @ 09/14/24 12:23:41.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:23:41.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:23:41.398
  STEP: Creating a StorageClass @ 09/14/24 12:23:41.402
  STEP: Get StorageClass "e2e-s2z2f" @ 09/14/24 12:23:41.41
  STEP: Patching the StorageClass "e2e-s2z2f" @ 09/14/24 12:23:41.414
  STEP: Delete StorageClass "e2e-s2z2f" @ 09/14/24 12:23:41.426
  STEP: Confirm deletion of StorageClass "e2e-s2z2f" @ 09/14/24 12:23:41.434
  STEP: Create a replacement StorageClass @ 09/14/24 12:23:41.44
  STEP: Updating StorageClass "e2e-v2-d75bc" @ 09/14/24 12:23:41.445
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-d75bc=updated" @ 09/14/24 12:23:41.456
  STEP: Deleting StorageClass "e2e-v2-d75bc" via DeleteCollection @ 09/14/24 12:23:41.459
  STEP: Confirm deletion of StorageClass "e2e-v2-d75bc" @ 09/14/24 12:23:41.472
  I0914 12:23:41.477129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3074" for this suite. @ 09/14/24 12:23:41.481
â€¢ [0.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/14/24 12:23:41.49
  I0914 12:23:41.490713 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/14/24 12:23:41.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:23:41.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:23:41.51
  STEP: Creating 50 configmaps @ 09/14/24 12:23:41.513
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/24 12:23:41.783
  I0914 12:23:41.909887 20 resource.go:87] Pod name wrapped-volume-race-ff4c22cf-05ad-4a2e-ac6d-82a4f64ce586: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/24 12:23:41.909
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/24 12:23:45.96
  I0914 12:23:45.975315 20 resource.go:87] Pod name wrapped-volume-race-45ab8afc-f9d2-44c9-b812-8dcd4edb2f2e: Found 0 pods out of 5
  I0914 12:23:50.984058 20 resource.go:87] Pod name wrapped-volume-race-45ab8afc-f9d2-44c9-b812-8dcd4edb2f2e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/24 12:23:50.984
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/24 12:23:51.01
  I0914 12:23:51.030087 20 resource.go:87] Pod name wrapped-volume-race-346a04d4-302c-4865-8689-14a5b81a6b93: Found 0 pods out of 5
  I0914 12:23:56.048008 20 resource.go:87] Pod name wrapped-volume-race-346a04d4-302c-4865-8689-14a5b81a6b93: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/24 12:23:56.048
  STEP: deleting ReplicationController wrapped-volume-race-346a04d4-302c-4865-8689-14a5b81a6b93 in namespace emptydir-wrapper-8206, will wait for the garbage collector to delete the pods @ 09/14/24 12:23:56.07
  I0914 12:23:56.133977 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-346a04d4-302c-4865-8689-14a5b81a6b93 took: 9.311166ms
  I0914 12:23:56.235095 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-346a04d4-302c-4865-8689-14a5b81a6b93 pods took: 101.102783ms
  STEP: deleting ReplicationController wrapped-volume-race-45ab8afc-f9d2-44c9-b812-8dcd4edb2f2e in namespace emptydir-wrapper-8206, will wait for the garbage collector to delete the pods @ 09/14/24 12:23:57.436
  I0914 12:23:57.501057 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-45ab8afc-f9d2-44c9-b812-8dcd4edb2f2e took: 9.006558ms
  I0914 12:23:57.602120 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-45ab8afc-f9d2-44c9-b812-8dcd4edb2f2e pods took: 101.05497ms
  STEP: deleting ReplicationController wrapped-volume-race-ff4c22cf-05ad-4a2e-ac6d-82a4f64ce586 in namespace emptydir-wrapper-8206, will wait for the garbage collector to delete the pods @ 09/14/24 12:23:58.803
  I0914 12:23:58.871700 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-ff4c22cf-05ad-4a2e-ac6d-82a4f64ce586 took: 11.889346ms
  I0914 12:23:58.972645 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-ff4c22cf-05ad-4a2e-ac6d-82a4f64ce586 pods took: 100.938364ms
  STEP: Cleaning up the configMaps @ 09/14/24 12:24:00.472
  I0914 12:24:00.863809 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8206" for this suite. @ 09/14/24 12:24:00.867
â€¢ [19.386 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/14/24 12:24:00.877
  I0914 12:24:00.877056 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 12:24:00.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:24:00.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:24:00.894
  STEP: creating the pod with failed condition @ 09/14/24 12:24:00.898
  STEP: updating the pod @ 09/14/24 12:26:00.908
  I0914 12:26:01.425736 20 pod_client.go:173] Successfully updated pod "var-expansion-1a098100-2395-44dc-b701-fbd730259aa1"
  STEP: waiting for pod running @ 09/14/24 12:26:01.425
  STEP: deleting the pod gracefully @ 09/14/24 12:26:03.437
  I0914 12:26:03.437277 20 delete.go:62] Deleting pod "var-expansion-1a098100-2395-44dc-b701-fbd730259aa1" in namespace "var-expansion-82"
  I0914 12:26:03.447460 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-1a098100-2395-44dc-b701-fbd730259aa1" to be fully deleted
  I0914 12:26:35.549988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-82" for this suite. @ 09/14/24 12:26:35.555
â€¢ [154.687 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/14/24 12:26:35.563
  I0914 12:26:35.563763 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context-test @ 09/14/24 12:26:35.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:26:35.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:26:35.583
  I0914 12:26:39.611910 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-707" for this suite. @ 09/14/24 12:26:39.617
â€¢ [4.062 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/14/24 12:26:39.626
  I0914 12:26:39.626278 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename podtemplate @ 09/14/24 12:26:39.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:26:39.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:26:39.647
  STEP: Create set of pod templates @ 09/14/24 12:26:39.65
  I0914 12:26:39.655858 20 podtemplates.go:143] created test-podtemplate-1
  I0914 12:26:39.663863 20 podtemplates.go:143] created test-podtemplate-2
  I0914 12:26:39.670467 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/14/24 12:26:39.67
  STEP: delete collection of pod templates @ 09/14/24 12:26:39.674
  I0914 12:26:39.674309 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/14/24 12:26:39.696
  I0914 12:26:39.696955 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0914 12:26:39.701798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6752" for this suite. @ 09/14/24 12:26:39.706
â€¢ [0.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/14/24 12:26:39.714
  I0914 12:26:39.714637 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 12:26:39.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:26:39.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:26:39.736
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/14/24 12:26:39.739
  STEP: Saw pod success @ 09/14/24 12:26:43.767
  I0914 12:26:43.771418 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-84d5df8a-f99f-49c4-b7d6-10ace1109596 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:26:43.798
  I0914 12:26:43.818883 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1804" for this suite. @ 09/14/24 12:26:43.823
â€¢ [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/14/24 12:26:43.832
  I0914 12:26:43.832270 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:26:43.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:26:43.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:26:43.85
  STEP: Saw pod success @ 09/14/24 12:26:49.923
  I0914 12:26:49.928604 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod client-envvars-a83f1ac6-a734-4f8b-b4b6-ed04ffaa2dbf container env3cont: <nil>
  STEP: delete the pod @ 09/14/24 12:26:49.948
  I0914 12:26:49.969761 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6417" for this suite. @ 09/14/24 12:26:49.974
â€¢ [6.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/14/24 12:26:49.982
  I0914 12:26:49.982902 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 12:26:49.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:26:50.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:26:50.006
  STEP: creating the pod @ 09/14/24 12:26:50.009
  STEP: waiting for pod running @ 09/14/24 12:26:50.018
  STEP: creating a file in subpath @ 09/14/24 12:26:52.029
  I0914 12:26:52.034878 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1840 PodName:var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:26:52.034901 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:26:52.035347 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:26:52.035400 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1840/pods/var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/14/24 12:26:52.093
  I0914 12:26:52.098796 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1840 PodName:var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:26:52.098820 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:26:52.099166 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:26:52.099201 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1840/pods/var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/14/24 12:26:52.152
  I0914 12:26:52.668243 20 pod_client.go:173] Successfully updated pod "var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674"
  STEP: waiting for annotated pod running @ 09/14/24 12:26:52.668
  STEP: deleting the pod gracefully @ 09/14/24 12:26:52.672
  I0914 12:26:52.672309 20 delete.go:62] Deleting pod "var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674" in namespace "var-expansion-1840"
  I0914 12:26:52.682523 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-ead69db3-1c1c-4989-807d-690ec40a2674" to be fully deleted
  I0914 12:27:24.785355 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1840" for this suite. @ 09/14/24 12:27:24.79
â€¢ [34.817 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/14/24 12:27:24.8
  I0914 12:27:24.800077 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 12:27:24.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:27:24.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:27:24.823
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/14/24 12:27:24.826
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/14/24 12:27:24.826
  STEP: creating a pod to probe DNS @ 09/14/24 12:27:24.826
  STEP: submitting the pod to kubernetes @ 09/14/24 12:27:24.826
  STEP: retrieving the pod @ 09/14/24 12:27:30.863
  STEP: looking for the results for each expected name from probers @ 09/14/24 12:27:30.867
  I0914 12:27:30.887784 20 dns_common.go:527] DNS probes using dns-9907/dns-test-bd0fc42d-4519-4ce1-a4cd-040451259202 succeeded

  STEP: deleting the pod @ 09/14/24 12:27:30.887
  I0914 12:27:30.905061 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9907" for this suite. @ 09/14/24 12:27:30.909
â€¢ [6.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/14/24 12:27:30.917
  I0914 12:27:30.917663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:27:30.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:27:30.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:27:30.938
  STEP: creating all guestbook components @ 09/14/24 12:27:30.941
  I0914 12:27:30.941898 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0914 12:27:30.942020 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.045114 20 builder.go:146] stderr: ""
  I0914 12:27:31.045159 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0914 12:27:31.045207 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0914 12:27:31.045265 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.137240 20 builder.go:146] stderr: ""
  I0914 12:27:31.137279 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0914 12:27:31.137323 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0914 12:27:31.137397 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.221326 20 builder.go:146] stderr: ""
  I0914 12:27:31.221364 20 builder.go:147] stdout: "service/frontend created\n"
  I0914 12:27:31.221424 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0914 12:27:31.221531 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.286473 20 builder.go:146] stderr: ""
  I0914 12:27:31.286510 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0914 12:27:31.286577 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0914 12:27:31.286641 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.356521 20 builder.go:146] stderr: ""
  I0914 12:27:31.356578 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0914 12:27:31.356652 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0914 12:27:31.356717 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 create -f -'
  I0914 12:27:31.416519 20 builder.go:146] stderr: ""
  I0914 12:27:31.416554 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/14/24 12:27:31.416
  I0914 12:27:31.416645 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0914 12:27:36.468054 20 kubectl.go:2276] Waiting for frontend to serve content.
  I0914 12:27:36.481309 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0914 12:27:36.496156 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.51
  I0914 12:27:36.510395 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.575884 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.575920 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.575
  I0914 12:27:36.576045 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.706744 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.706795 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.706
  I0914 12:27:36.706914 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.767896 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.767939 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.768
  I0914 12:27:36.768132 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.816533 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.816580 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.816
  I0914 12:27:36.816879 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.878661 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.878698 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/14/24 12:27:36.878
  I0914 12:27:36.878930 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-5291 delete --grace-period=0 --force -f -'
  I0914 12:27:36.961469 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:27:36.961511 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0914 12:27:36.961621 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5291" for this suite. @ 09/14/24 12:27:36.967
â€¢ [6.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/14/24 12:27:36.976
  I0914 12:27:36.976727 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename tables @ 09/14/24 12:27:36.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:27:36.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:27:36.999
  I0914 12:27:37.006250 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2253" for this suite. @ 09/14/24 12:27:37.012
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/14/24 12:27:37.021
  I0914 12:27:37.021856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename aggregator @ 09/14/24 12:27:37.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:27:37.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:27:37.046
  I0914 12:27:37.049724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Registering the sample API server. @ 09/14/24 12:27:37.05
  I0914 12:27:37.273520 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0914 12:27:37.313082 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0914 12:27:39.369934 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:41.376541 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:43.377101 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:45.375286 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:47.376860 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:49.376468 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:51.377384 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:53.377242 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:55.376751 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:57.377116 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:27:59.376043 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 12:28:01.502831 20 aggregator.go:755] Waited 114.97683ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/14/24 12:28:01.538
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/14/24 12:28:01.544
  STEP: List APIServices @ 09/14/24 12:28:01.553
  I0914 12:28:01.558819 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/14/24 12:28:01.558
  I0914 12:28:01.573100 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/14/24 12:28:01.573
  I0914 12:28:01.586346 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 14, 12, 28, 1, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/14/24 12:28:01.586
  I0914 12:28:01.590141 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-14 12:28:01 +0000 UTC Passed all checks passed}
  I0914 12:28:01.590160 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 12:28:01.590199 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/14/24 12:28:01.59
  I0914 12:28:01.601827 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1363731931" @ 09/14/24 12:28:01.602
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/14/24 12:28:01.61
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/14/24 12:28:01.617
  STEP: Patch APIService Status @ 09/14/24 12:28:01.622
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/14/24 12:28:01.63
  I0914 12:28:01.634350 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-14 12:28:01 +0000 UTC Passed all checks passed}
  I0914 12:28:01.634612 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 12:28:01.634776 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0914 12:28:01.634902 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/14/24 12:28:01.635
  STEP: Confirm that the generated APIService has been deleted @ 09/14/24 12:28:01.647
  I0914 12:28:01.647530 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0914 12:28:01.652990 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0914 12:28:01.653217 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0914 12:28:01.772686 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2331" for this suite. @ 09/14/24 12:28:01.777
â€¢ [24.765 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/14/24 12:28:01.786
  I0914 12:28:01.787039 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption @ 09/14/24 12:28:01.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:01.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:01.806
  STEP: Waiting for the pdb to be processed @ 09/14/24 12:28:01.815
  STEP: Waiting for all pods to be running @ 09/14/24 12:28:03.916
  I0914 12:28:03.921967 20 disruption.go:691] running pods: 0 < 3
  I0914 12:28:05.927192 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5109" for this suite. @ 09/14/24 12:28:05.932
â€¢ [4.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/14/24 12:28:05.941
  I0914 12:28:05.941883 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:28:05.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:05.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:05.963
  I0914 12:28:05.966961 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 create -f -'
  I0914 12:28:06.049337 20 builder.go:146] stderr: ""
  I0914 12:28:06.049388 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0914 12:28:06.049437 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 create -f -'
  I0914 12:28:06.137584 20 builder.go:146] stderr: ""
  I0914 12:28:06.137629 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/24 12:28:06.137
  I0914 12:28:07.143199 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:28:07.143234 20 framework.go:733] Found 1 / 1
  I0914 12:28:07.143247 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0914 12:28:07.147887 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:28:07.147905 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 12:28:07.147953 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 describe pod agnhost-primary-dgql4'
  I0914 12:28:07.201480 20 builder.go:146] stderr: ""
  I0914 12:28:07.201548 20 builder.go:147] stdout: "Name:             agnhost-primary-dgql4\nNamespace:        kubectl-4512\nPriority:         0\nService Account:  default\nNode:             ip-172-31-33-255/172.31.33.255\nStart Time:       Sat, 14 Sep 2024 12:28:06 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.17.147\nIPs:\n  IP:           192.168.17.147\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://58c09c0748dfc295fc5c0150182e4deca161cec7d1feed10caf4792f13b62f5f\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 14 Sep 2024 12:28:06 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5mhxq (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-5mhxq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-4512/agnhost-primary-dgql4 to ip-172-31-33-255\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0914 12:28:07.201602 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 describe rc agnhost-primary'
  I0914 12:28:07.261693 20 builder.go:146] stderr: ""
  I0914 12:28:07.261743 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4512\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-dgql4\n"
  I0914 12:28:07.261796 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 describe service agnhost-primary'
  I0914 12:28:07.321060 20 builder.go:146] stderr: ""
  I0914 12:28:07.321100 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-4512\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.213\nIPs:                      10.152.183.213\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.17.147:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0914 12:28:07.326095 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 describe node ip-172-31-2-197'
  I0914 12:28:07.424096 20 builder.go:146] stderr: ""
  I0914 12:28:07.424329 20 builder.go:147] stdout: "Name:               ip-172-31-2-197\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-2-197\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 14 Sep 2024 11:52:47 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-2-197\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 14 Sep 2024 12:28:02 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 14 Sep 2024 12:14:13 +0000   Sat, 14 Sep 2024 12:14:13 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 14 Sep 2024 12:24:35 +0000   Sat, 14 Sep 2024 11:52:47 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 14 Sep 2024 12:24:35 +0000   Sat, 14 Sep 2024 11:52:47 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 14 Sep 2024 12:24:35 +0000   Sat, 14 Sep 2024 11:52:47 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 14 Sep 2024 12:24:35 +0000   Sat, 14 Sep 2024 11:54:35 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.2.197\n  Hostname:    ip-172-31-2-197\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958136Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855736Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2ddced978d4650ffcda0d1ae55f075\n  System UUID:                ec2ddced-978d-4650-ffcd-a0d1ae55f075\n  Boot ID:                    8420d071-9f5b-4494-b2b3-978f81916572\n  Kernel Version:             6.5.0-1024-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.1\n  Kube-Proxy Version:         v1.31.1\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-kz2v4                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         13m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-w67bn    0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m4s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 18m                kube-proxy       \n  Normal   Starting                 29m                kube-proxy       \n  Normal   Starting                 27m                kube-proxy       \n  Normal   Starting                 28m                kube-proxy       \n  Normal   Starting                 13m                kube-proxy       \n  Normal   Starting                 33m                kube-proxy       \n  Normal   Starting                 30m                kube-proxy       \n  Normal   Starting                 27m                kube-proxy       \n  Normal   Starting                 23m                kube-proxy       \n  Normal   Starting                 21m                kube-proxy       \n  Normal   Starting                 20m                kube-proxy       \n  Normal   Starting                 34m                kube-proxy       \n  Normal   Starting                 26m                kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 14m                kube-proxy       \n  Normal   Starting                 14m                kube-proxy       \n  Normal   Starting                 32m                kube-proxy       \n  Normal   Starting                 22m                kube-proxy       \n  Normal   Starting                 23m                kube-proxy       \n  Normal   Starting                 15m                kube-proxy       \n  Normal   Starting                 16m                kube-proxy       \n  Normal   Starting                 19m                kube-proxy       \n  Normal   Starting                 17m                kube-proxy       \n  Normal   Starting                 24m                kube-proxy       \n  Normal   Starting                 31m                kube-proxy       \n  Normal   Starting                 18m                kube-proxy       \n  Normal   Starting                 32m                kube-proxy       \n  Normal   RegisteredNode           35m                node-controller  Node ip-172-31-2-197 event: Registered Node ip-172-31-2-197 in Controller\n  Normal   Starting                 34m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  34m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     34m (x2 over 34m)  kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    34m (x2 over 34m)  kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  34m (x2 over 34m)  kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      34m                kubelet          invalid capacity 0 on image filesystem\n  Normal   RegisteredNode           34m                node-controller  Node ip-172-31-2-197 event: Registered Node ip-172-31-2-197 in Controller\n  Normal   NodeHasNoDiskPressure    33m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 33m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      33m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  33m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  33m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     33m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeReady                33m                kubelet          Node ip-172-31-2-197 status is now: NodeReady\n  Normal   NodeHasSufficientPID     32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 32m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      32m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  32m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  32m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      32m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 32m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    32m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Warning  InvalidDiskCapacity      31m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 31m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  31m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     31m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    31m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  31m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   RegisteredNode           31m                node-controller  Node ip-172-31-2-197 event: Registered Node ip-172-31-2-197 in Controller\n  Normal   NodeHasSufficientPID     30m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    30m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  30m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  30m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 30m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  29m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   Starting                 29m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     29m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    29m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  29m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      29m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  28m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 28m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    28m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  28m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     28m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      28m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  27m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      27m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 27m                kubelet          Starting kubelet.\n  Normal   RegisteredNode           27m                node-controller  Node ip-172-31-2-197 event: Registered Node ip-172-31-2-197 in Controller\n  Normal   NodeAllocatableEnforced  27m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      27m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 27m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    27m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Warning  InvalidDiskCapacity      26m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     26m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    26m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  26m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  26m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 26m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     25m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    25m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  25m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    24m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     24m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  24m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   Starting                 24m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  24m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      24m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      23m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  23m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    22m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     22m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  22m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      22m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 22m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      21m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  21m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  21m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    21m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     21m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 21m                kubelet          Starting kubelet.\n  Normal   Starting                 20m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     20m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      20m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  20m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  20m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    20m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 19m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      19m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     19m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    19m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  19m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  19m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           19m                node-controller  Node ip-172-31-2-197 event: Registered Node ip-172-31-2-197 in Controller\n  Warning  InvalidDiskCapacity      18m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  18m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 18m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 18m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  18m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    18m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  17m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    17m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     17m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      17m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  17m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 17m                kubelet          Starting kubelet.\n  Normal   Starting                 16m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      16m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasNoDiskPressure    16m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     16m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  16m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  16m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  15m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  15m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    15m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     15m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   Starting                 15m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      15m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 14m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      14m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  14m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    14m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  14m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      14m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 14m                kubelet          Starting kubelet.\n  Normal   Starting                 13m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  13m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  13m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    13m                kubelet          Node ip-172-31-2-197 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     13m                kubelet          Node ip-172-31-2-197 status is now: NodeHasSufficientPID\n"
  I0914 12:28:07.424404 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4512 describe namespace kubectl-4512'
  I0914 12:28:07.478483 20 builder.go:146] stderr: ""
  I0914 12:28:07.478524 20 builder.go:147] stdout: "Name:         kubectl-4512\nLabels:       e2e-framework=kubectl\n              e2e-run=31e4654d-6d80-4ffd-996c-32e409590e0d\n              kubernetes.io/metadata.name=kubectl-4512\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0914 12:28:07.478693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4512" for this suite. @ 09/14/24 12:28:07.483
â€¢ [1.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/14/24 12:28:07.492
  I0914 12:28:07.492326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:28:07.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:07.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:07.513
  STEP: creating a replication controller @ 09/14/24 12:28:07.516
  I0914 12:28:07.516917 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 create -f -'
  I0914 12:28:07.597630 20 builder.go:146] stderr: ""
  I0914 12:28:07.597678 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/24 12:28:07.597
  I0914 12:28:07.597755 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 12:28:07.648472 20 builder.go:146] stderr: ""
  I0914 12:28:07.648505 20 builder.go:147] stdout: "update-demo-nautilus-p7vqn update-demo-nautilus-zqz7b "
  I0914 12:28:07.648562 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods update-demo-nautilus-p7vqn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:28:07.688775 20 builder.go:146] stderr: ""
  I0914 12:28:07.688809 20 builder.go:147] stdout: ""
  I0914 12:28:07.688817 20 kubectl.go:2502] update-demo-nautilus-p7vqn is created but not running
  I0914 12:28:12.692063 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 12:28:12.737682 20 builder.go:146] stderr: ""
  I0914 12:28:12.737725 20 builder.go:147] stdout: "update-demo-nautilus-p7vqn update-demo-nautilus-zqz7b "
  I0914 12:28:12.737816 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods update-demo-nautilus-p7vqn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:28:12.788716 20 builder.go:146] stderr: ""
  I0914 12:28:12.788751 20 builder.go:147] stdout: "true"
  I0914 12:28:12.788793 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods update-demo-nautilus-p7vqn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 12:28:12.832023 20 builder.go:146] stderr: ""
  I0914 12:28:12.832067 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 12:28:12.832078 20 kubectl.go:2393] validating pod update-demo-nautilus-p7vqn
  I0914 12:28:12.838936 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 12:28:12.838999 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 12:28:12.839074 20 kubectl.go:2520] update-demo-nautilus-p7vqn is verified up and running
  I0914 12:28:12.839148 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods update-demo-nautilus-zqz7b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:28:12.880908 20 builder.go:146] stderr: ""
  I0914 12:28:12.880950 20 builder.go:147] stdout: "true"
  I0914 12:28:12.880991 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods update-demo-nautilus-zqz7b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 12:28:12.923655 20 builder.go:146] stderr: ""
  I0914 12:28:12.923705 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 12:28:12.923716 20 kubectl.go:2393] validating pod update-demo-nautilus-zqz7b
  I0914 12:28:12.930132 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 12:28:12.930171 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 12:28:12.930183 20 kubectl.go:2520] update-demo-nautilus-zqz7b is verified up and running
  STEP: using delete to clean up resources @ 09/14/24 12:28:12.93
  I0914 12:28:12.930258 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 delete --grace-period=0 --force -f -'
  I0914 12:28:12.982575 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:28:12.982604 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0914 12:28:12.982643 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get rc,svc -l name=update-demo --no-headers'
  I0914 12:28:13.041757 20 builder.go:146] stderr: "No resources found in kubectl-7618 namespace.\n"
  I0914 12:28:13.041796 20 builder.go:147] stdout: ""
  I0914 12:28:13.041839 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7618 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 12:28:13.104954 20 builder.go:146] stderr: ""
  I0914 12:28:13.104992 20 builder.go:147] stdout: ""
  I0914 12:28:13.105133 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7618" for this suite. @ 09/14/24 12:28:13.11
â€¢ [5.626 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/14/24 12:28:13.118
  I0914 12:28:13.118548 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/24 12:28:13.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:13.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:13.139
  STEP: Waiting for pod completion @ 09/14/24 12:28:13.151
  I0914 12:28:17.184801 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6715" for this suite. @ 09/14/24 12:28:17.189
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/14/24 12:28:17.198
  I0914 12:28:17.198594 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 12:28:17.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:17.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:17.218
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/24 12:28:17.248
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 12:28:17.254
  I0914 12:28:17.259602 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:17.259627 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:17.263611 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:28:17.263630 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:28:18.258549 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:18.258587 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:18.262958 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:28:18.262977 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:28:19.260808 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:19.260953 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:19.265441 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:28:19.265557 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:28:20.260620 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:20.260661 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:20.264634 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:28:20.264652 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:28:21.260403 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:21.260432 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:28:21.264480 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 12:28:21.264501 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/14/24 12:28:21.269
  I0914 12:28:21.274990 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/14/24 12:28:21.275
  I0914 12:28:21.285921 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/14/24 12:28:21.285
  I0914 12:28:21.287832 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0914 12:28:21.287948 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.288153 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.288323 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.288404 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.288430 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1499 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 12:28:21.288440 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/14/24 12:28:21.288
  STEP: watching for the daemon set status to be patched @ 09/14/24 12:28:21.296
  I0914 12:28:21.298473 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0914 12:28:21.298576 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.298636 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.298790 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.298878 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.298945 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1499 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 12:28:21.299023 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 12:28:21.299053 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1499 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0914 12:28:21.299062 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 12:28:21.303
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1499, will wait for the garbage collector to delete the pods @ 09/14/24 12:28:21.303
  I0914 12:28:21.367804 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.96278ms
  I0914 12:28:21.468510 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.70106ms
  I0914 12:28:23.874835 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:28:23.874880 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 12:28:23.880007 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7120"},"items":null}

  I0914 12:28:23.884211 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7120"},"items":null}

  I0914 12:28:23.902324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1499" for this suite. @ 09/14/24 12:28:23.907
â€¢ [6.716 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/14/24 12:28:23.915
  I0914 12:28:23.915132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/24 12:28:23.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:23.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:23.937
  I0914 12:28:23.940769 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:28:24.486935 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8237" for this suite. @ 09/14/24 12:28:24.493
â€¢ [0.587 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/14/24 12:28:24.502
  I0914 12:28:24.502734 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:28:24.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:24.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:24.525
  STEP: Setting up server cert @ 09/14/24 12:28:24.548
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:28:24.862
  STEP: Deploying the webhook pod @ 09/14/24 12:28:24.873
  STEP: Wait for the deployment to be ready @ 09/14/24 12:28:24.886
  I0914 12:28:24.898641 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:28:26.913
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:28:26.924
  I0914 12:28:27.925124 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 12:28:27.934532 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8746-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/24 12:28:28.449
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/14/24 12:28:28.466
  I0914 12:28:31.078932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6477" for this suite. @ 09/14/24 12:28:31.084
  STEP: Destroying namespace "webhook-markers-9391" for this suite. @ 09/14/24 12:28:31.102
â€¢ [6.634 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/14/24 12:28:31.136
  I0914 12:28:31.136682 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context-test @ 09/14/24 12:28:31.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:31.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:31.158
  I0914 12:28:35.194972 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3566" for this suite. @ 09/14/24 12:28:35.2
â€¢ [4.072 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/14/24 12:28:35.208
  I0914 12:28:35.208760 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subpath @ 09/14/24 12:28:35.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:35.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:35.231
  STEP: Setting up data @ 09/14/24 12:28:35.234
  STEP: Creating pod pod-subpath-test-secret-ng74 @ 09/14/24 12:28:35.246
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/24 12:28:35.246
  STEP: Saw pod success @ 09/14/24 12:28:59.34
  I0914 12:28:59.345594 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-subpath-test-secret-ng74 container test-container-subpath-secret-ng74: <nil>
  STEP: delete the pod @ 09/14/24 12:28:59.353
  STEP: Deleting pod pod-subpath-test-secret-ng74 @ 09/14/24 12:28:59.371
  I0914 12:28:59.371755 20 delete.go:62] Deleting pod "pod-subpath-test-secret-ng74" in namespace "subpath-2780"
  I0914 12:28:59.376287 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2780" for this suite. @ 09/14/24 12:28:59.381
â€¢ [24.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/14/24 12:28:59.39
  I0914 12:28:59.390506 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 12:28:59.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:28:59.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:28:59.409
  STEP: creating service in namespace services-2624 @ 09/14/24 12:28:59.412
  STEP: creating service affinity-clusterip in namespace services-2624 @ 09/14/24 12:28:59.412
  STEP: creating replication controller affinity-clusterip in namespace services-2624 @ 09/14/24 12:28:59.425
  I0914 12:28:59.433910      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-2624, replica count: 3
  I0914 12:29:02.486071      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 12:29:02.496613 20 resource.go:361] Creating new exec pod
  I0914 12:29:05.514636 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-2624 exec execpod-affinitymqwt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0914 12:29:05.607071 20 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0914 12:29:05.607112 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:29:05.607189 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-2624 exec execpod-affinitymqwt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  I0914 12:29:05.690016 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.72 80\n+ echo hostName\nConnection to 10.152.183.72 80 port [tcp/http] succeeded!\n"
  I0914 12:29:05.690059 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:29:05.690131 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-2624 exec execpod-affinitymqwt9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.72:80/ ; done'
  I0914 12:29:05.846635 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.72:80/\n"
  I0914 12:29:05.846684 20 builder.go:147] stdout: "\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx\naffinity-clusterip-pmsrx"
  I0914 12:29:05.846698 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846705 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846712 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846717 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846724 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846729 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846734 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846740 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846746 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846752 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846760 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846765 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846780 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846785 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846804 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846810 20 service.go:242] Received response from host: affinity-clusterip-pmsrx
  I0914 12:29:05.846893 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-2624, will wait for the garbage collector to delete the pods @ 09/14/24 12:29:05.864
  I0914 12:29:05.928594 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.192237ms
  I0914 12:29:06.028959 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.360615ms
  I0914 12:29:09.251731 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2624" for this suite. @ 09/14/24 12:29:09.256
â€¢ [9.874 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/14/24 12:29:09.265
  I0914 12:29:09.265112 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 12:29:09.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:09.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:09.282
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/14/24 12:29:09.285
  STEP: Saw pod success @ 09/14/24 12:29:13.314
  I0914 12:29:13.319299 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-81097a4b-4820-4ee5-9961-de4a8cef1f80 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:29:13.326
  I0914 12:29:13.348275 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8411" for this suite. @ 09/14/24 12:29:13.354
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/14/24 12:29:13.364
  I0914 12:29:13.364128 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 12:29:13.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:13.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:13.382
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2467.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/14/24 12:29:13.385
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2467.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/14/24 12:29:13.385
  STEP: creating a pod to probe /etc/hosts @ 09/14/24 12:29:13.385
  STEP: submitting the pod to kubernetes @ 09/14/24 12:29:13.385
  STEP: retrieving the pod @ 09/14/24 12:29:15.409
  STEP: looking for the results for each expected name from probers @ 09/14/24 12:29:15.413
  I0914 12:29:15.434964 20 dns_common.go:527] DNS probes using dns-2467/dns-test-bb9738cc-fa1e-4999-be2c-7e54014de79c succeeded

  STEP: deleting the pod @ 09/14/24 12:29:15.435
  I0914 12:29:15.450829 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2467" for this suite. @ 09/14/24 12:29:15.455
â€¢ [2.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/14/24 12:29:15.464
  I0914 12:29:15.464984 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/24 12:29:15.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:15.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:15.485
  I0914 12:29:15.488644 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:29:18.549350 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5116" for this suite. @ 09/14/24 12:29:18.554
â€¢ [3.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/14/24 12:29:18.562
  I0914 12:29:18.562927 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption @ 09/14/24 12:29:18.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:18.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:18.584
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/14/24 12:29:18.588
  STEP: Waiting for the pdb to be processed @ 09/14/24 12:29:18.594
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/14/24 12:29:18.608
  STEP: Waiting for all pods to be running @ 09/14/24 12:29:18.608
  I0914 12:29:18.612591 20 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 09/14/24 12:29:20.619
  STEP: Updating the pdb to allow a pod to be evicted @ 09/14/24 12:29:20.633
  STEP: Waiting for the pdb to be processed @ 09/14/24 12:29:20.643
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/14/24 12:29:20.648
  STEP: Waiting for all pods to be running @ 09/14/24 12:29:20.648
  STEP: Waiting for the pdb to observed all healthy pods @ 09/14/24 12:29:20.652
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/14/24 12:29:20.686
  STEP: Waiting for the pdb to be processed @ 09/14/24 12:29:20.701
  STEP: Waiting for all pods to be running @ 09/14/24 12:29:22.707
  STEP: locating a running pod @ 09/14/24 12:29:22.712
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/14/24 12:29:22.724
  STEP: Waiting for the pdb to be deleted @ 09/14/24 12:29:22.732
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/14/24 12:29:22.736
  STEP: Waiting for all pods to be running @ 09/14/24 12:29:22.736
  I0914 12:29:22.761248 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9346" for this suite. @ 09/14/24 12:29:22.77
â€¢ [4.222 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/14/24 12:29:22.785
  I0914 12:29:22.785193 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 12:29:22.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:22.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:22.81
  STEP: fetching services @ 09/14/24 12:29:22.814
  I0914 12:29:22.817957 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8372" for this suite. @ 09/14/24 12:29:22.824
â€¢ [0.046 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/14/24 12:29:22.831
  I0914 12:29:22.831538 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 12:29:22.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:22.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:22.851
  STEP: creating a Deployment @ 09/14/24 12:29:22.859
  I0914 12:29:22.859596 20 deployment.go:507] Creating simple deployment test-deployment-dp72n
  I0914 12:29:22.878901 20 deployment.go:222] deployment "test-deployment-dp72n" doesn't have the required revision set
  STEP: Getting /status @ 09/14/24 12:29:24.898
  I0914 12:29:24.902610 20 deployment.go:532] Deployment test-deployment-dp72n has Conditions: [{Available True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:23 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dp72n-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/14/24 12:29:24.902
  I0914 12:29:24.915319 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 29, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 29, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 12, 29, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 12, 29, 22, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-dp72n-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/14/24 12:29:24.915
  I0914 12:29:24.917268 20 deployment.go:579] Observed &Deployment event: ADDED
  I0914 12:29:24.917356 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dp72n-f4dbbbf74"}
  I0914 12:29:24.917495 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0914 12:29:24.917619 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dp72n-f4dbbbf74"}
  I0914 12:29:24.917706 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 12:29:24.917849 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0914 12:29:24.917893 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 12:29:24.918012 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dp72n-f4dbbbf74" is progressing.}
  I0914 12:29:24.918128 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0914 12:29:24.918170 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:23 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 12:29:24.918244 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dp72n-f4dbbbf74" has successfully progressed.}
  I0914 12:29:24.918352 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0914 12:29:24.918392 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:23 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 12:29:24.918429 20 deployment.go:575] Observed Deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dp72n-f4dbbbf74" has successfully progressed.}
  I0914 12:29:24.918498 20 deployment.go:572] Found Deployment test-deployment-dp72n in namespace deployment-5481 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 12:29:24.918531 20 deployment.go:583] Deployment test-deployment-dp72n has an updated status
  STEP: patching the Statefulset Status @ 09/14/24 12:29:24.918
  I0914 12:29:24.918684 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 12:29:24.925758 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/14/24 12:29:24.925
  I0914 12:29:24.927788 20 deployment.go:616] Observed &Deployment event: ADDED
  I0914 12:29:24.927861 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dp72n-f4dbbbf74"}
  I0914 12:29:24.927961 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0914 12:29:24.928156 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dp72n-f4dbbbf74"}
  I0914 12:29:24.928199 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 12:29:24.928317 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0914 12:29:24.928362 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 12:29:24.928463 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:22 +0000 UTC 2024-09-14 12:29:22 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dp72n-f4dbbbf74" is progressing.}
  I0914 12:29:24.928597 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0914 12:29:24.928668 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:23 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 12:29:24.928756 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dp72n-f4dbbbf74" has successfully progressed.}
  I0914 12:29:24.928874 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0914 12:29:24.928924 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:23 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 12:29:24.928982 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-14 12:29:23 +0000 UTC 2024-09-14 12:29:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dp72n-f4dbbbf74" has successfully progressed.}
  I0914 12:29:24.929017 20 deployment.go:612] Observed deployment test-deployment-dp72n in namespace deployment-5481 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 12:29:24.929145 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0914 12:29:24.929189 20 deployment.go:609] Found deployment test-deployment-dp72n in namespace deployment-5481 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0914 12:29:24.929226 20 deployment.go:620] Deployment test-deployment-dp72n has a patched status
  I0914 12:29:24.936359 20 deployment.go:633] Deployment "test-deployment-dp72n":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-dp72n",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35cffe8b-1c1a-43d0-965d-8df86068ae1b",
      ResourceVersion: (string) (len=4) "7835",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861913762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-dp72n-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 12:29:24.963564 20 deployment.go:39] New ReplicaSet "test-deployment-dp72n-f4dbbbf74" of Deployment "test-deployment-dp72n":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-dp72n-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8687421f-2c35-4862-9555-c203f881b6e5",
      ResourceVersion: (string) (len=4) "7829",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861913762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-dp72n",
          UID: (types.UID) (len=36) "35cffe8b-1c1a-43d0-965d-8df86068ae1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 35 63  |k:{\"uid\":\"35c|
              00000120  66 66 65 38 62 2d 31 63  31 61 2d 34 33 64 30 2d  |ffe8b-1c1a-43d0-|
              00000130  39 36 35 64 2d 38 64 66  38 36 30 36 38 61 65 31  |965d-8df86068ae1|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 12:29:24.975610 20 deployment.go:67] Pod "test-deployment-dp72n-f4dbbbf74-tfsgl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-dp72n-f4dbbbf74-tfsgl",
      GenerateName: (string) (len=32) "test-deployment-dp72n-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-5481",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21858bdf-df53-44aa-9e35-3bff543e996d",
      ResourceVersion: (string) (len=4) "7828",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861913762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-dp72n-f4dbbbf74",
          UID: (types.UID) (len=36) "8687421f-2c35-4862-9555-c203f881b6e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 36 38 37 34 32 31  66 2d 32 63 33 35 2d 34  |"8687421f-2c35-4|
              000000a0  38 36 32 2d 39 35 35 35  2d 63 32 30 33 66 38 38  |862-9555-c203f88|
              000000b0  31 62 36 65 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1b6e5\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  2e 31 35 33 5c 22 7d 22  |2.168.17.153\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rttjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rttjh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861913762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861913762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861913763,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e491ebb428078bbc0be82241b8447ee2d8d3b0bd6db86483407ba032d0c04315",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rttjh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 12:29:24.976642 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5481" for this suite. @ 09/14/24 12:29:24.981
â€¢ [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/14/24 12:29:24.989
  I0914 12:29:24.989547 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 12:29:24.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:25.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:25.007
  STEP: create the rc @ 09/14/24 12:29:25.011
  W0914 12:29:25.017325      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/14/24 12:29:30.026
  STEP: wait for all pods to be garbage collected @ 09/14/24 12:29:30.038
  STEP: Gathering metrics @ 09/14/24 12:29:35.049
  W0914 12:29:35.055480      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 12:29:35.055508 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 12:29:35.055761 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7153" for this suite. @ 09/14/24 12:29:35.06
â€¢ [10.080 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/14/24 12:29:35.069
  I0914 12:29:35.069223 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 12:29:35.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:35.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:35.091
  STEP: Creating ServiceAccount "e2e-sa-hlx6z"  @ 09/14/24 12:29:35.094
  I0914 12:29:35.100068 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-hlx6z"  @ 09/14/24 12:29:35.1
  I0914 12:29:35.109845 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I0914 12:29:35.110027 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1772" for this suite. @ 09/14/24 12:29:35.114
â€¢ [0.052 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/14/24 12:29:35.121
  I0914 12:29:35.121754 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 12:29:35.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:35.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:35.14
  I0914 12:29:35.181847 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"12499b19-6cec-4acf-87d0-9be4c2400276", Controller:(*bool)(0xc000ac7f16), BlockOwnerDeletion:(*bool)(0xc000ac7f17)}}
  I0914 12:29:35.194315 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"97af3ae7-3fcd-4db9-a6f7-b5b63a29e9f9", Controller:(*bool)(0xc000b0415e), BlockOwnerDeletion:(*bool)(0xc000b0415f)}}
  I0914 12:29:35.201545 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"716cbaf2-888a-4825-b6c9-c85b77770015", Controller:(*bool)(0xc000b0440a), BlockOwnerDeletion:(*bool)(0xc000b0440b)}}
  I0914 12:29:40.217924 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7815" for this suite. @ 09/14/24 12:29:40.223
â€¢ [5.111 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/14/24 12:29:40.232
  I0914 12:29:40.232957 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:29:40.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:40.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:40.257
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:29:40.262
  STEP: Saw pod success @ 09/14/24 12:29:44.293
  I0914 12:29:44.299097 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-4f7ee494-3c19-49d2-af7f-bc597fa6ccbd container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:29:44.308
  I0914 12:29:44.329266 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2511" for this suite. @ 09/14/24 12:29:44.334
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/14/24 12:29:44.342
  I0914 12:29:44.342497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 12:29:44.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:44.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:44.363
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/14/24 12:29:44.366
  STEP: Saw pod success @ 09/14/24 12:29:48.394
  I0914 12:29:48.399719 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-1a17c35a-0d29-4e1d-ad15-0adbb3e130d9 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:29:48.408
  I0914 12:29:48.429577 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2323" for this suite. @ 09/14/24 12:29:48.434
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/14/24 12:29:48.442
  I0914 12:29:48.442762 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:29:48.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:48.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:48.462
  STEP: Creating configMap with name projected-configmap-test-volume-a68f1845-b2eb-4ff7-bb52-9a25a5395027 @ 09/14/24 12:29:48.465
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:29:48.47
  STEP: Saw pod success @ 09/14/24 12:29:52.501
  I0914 12:29:52.506193 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-configmaps-fdb3c4cc-f27a-4e1a-8ad2-53836fb169a4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:29:52.515
  I0914 12:29:52.536756 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6650" for this suite. @ 09/14/24 12:29:52.541
â€¢ [4.109 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/14/24 12:29:52.551
  I0914 12:29:52.551777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:29:52.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:52.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:52.572
  STEP: Creating secret with name secret-test-c4e9c95e-85d2-40d9-a0ec-e6327a226635 @ 09/14/24 12:29:52.576
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:29:52.581
  STEP: Saw pod success @ 09/14/24 12:29:56.608
  I0914 12:29:56.613472 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-f414aba5-cb1f-45c5-a76b-160906a717df container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:29:56.622
  I0914 12:29:56.643963 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9564" for this suite. @ 09/14/24 12:29:56.648
â€¢ [4.105 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/14/24 12:29:56.656
  I0914 12:29:56.656372 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:29:56.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:29:56.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:29:56.675
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:29:56.678
  STEP: Saw pod success @ 09/14/24 12:30:00.705
  I0914 12:30:00.709986 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-e8b83dfe-fe66-4d5d-8699-009c3220734d container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:30:00.718
  I0914 12:30:00.738000 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2960" for this suite. @ 09/14/24 12:30:00.742
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/14/24 12:30:00.75
  I0914 12:30:00.750530 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 12:30:00.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:30:00.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:30:00.771
  STEP: Creating service test in namespace statefulset-6924 @ 09/14/24 12:30:00.777
  STEP: Creating statefulset ss in namespace statefulset-6924 @ 09/14/24 12:30:00.783
  I0914 12:30:00.798278 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0914 12:30:10.801312 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/14/24 12:30:10.81
  STEP: updating a scale subresource @ 09/14/24 12:30:10.814
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/14/24 12:30:10.821
  STEP: Patch a scale subresource @ 09/14/24 12:30:10.83
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/14/24 12:30:10.847
  I0914 12:30:10.853516 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6924
  I0914 12:30:10.857686 20 rest.go:150] Scaling statefulset ss to 0
  I0914 12:30:20.897868 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 12:30:20.902508 20 rest.go:88] Deleting statefulset ss
  I0914 12:30:20.918924 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6924" for this suite. @ 09/14/24 12:30:20.924
â€¢ [20.182 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/14/24 12:30:20.932
  I0914 12:30:20.932976 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 12:30:20.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:30:20.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:30:20.952
  STEP: Creating pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609 @ 09/14/24 12:30:20.955
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 12:30:22.976
  I0914 12:30:22.980683 20 container_probe.go:1749] Initial restart count of pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 is 0
  I0914 12:30:22.985614 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:24.991060 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:26.997441 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:29.004011 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:31.009071 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:33.014577 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:35.021599 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:37.030345 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:39.036796 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:41.042471 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:43.049562 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:45.056145 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:47.062184 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:49.068187 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:51.075364 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:53.081281 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:55.087259 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:57.093842 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:30:59.101133 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:01.106997 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:03.112935 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:05.118628 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:07.124793 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:09.130580 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:11.136623 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:13.142993 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:15.149205 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:17.155358 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:19.162084 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:21.168865 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:23.173811 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:25.182977 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:27.189194 20 container_probe.go:1759] Get pod test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 in namespace container-probe-2609
  I0914 12:31:27.189230 20 container_probe.go:1763] Restart count of pod container-probe-2609/test-grpc-2c053c3e-7f52-4bdc-9e55-45f208b0ee74 is now 1 (1m4.208518619s elapsed)
  STEP: deleting the pod @ 09/14/24 12:31:27.189
  I0914 12:31:27.208263 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2609" for this suite. @ 09/14/24 12:31:27.212
â€¢ [66.290 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/14/24 12:31:27.223
  I0914 12:31:27.223361 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:31:27.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:27.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:27.243
  STEP: Setting up server cert @ 09/14/24 12:31:27.269
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:31:27.598
  STEP: Deploying the webhook pod @ 09/14/24 12:31:27.609
  STEP: Wait for the deployment to be ready @ 09/14/24 12:31:27.622
  I0914 12:31:27.637677 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:31:29.652
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:31:29.664
  I0914 12:31:30.665149 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/14/24 12:31:30.676
  STEP: verifying the validating webhook match conditions @ 09/14/24 12:31:30.69
  STEP: updating the validating webhook match conditions @ 09/14/24 12:31:30.694
  STEP: verifying the validating webhook match conditions @ 09/14/24 12:31:30.703
  I0914 12:31:30.761213 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 09/14/24 12:31:30.768
  STEP: Destroying namespace "webhook-markers-3284" for this suite. @ 09/14/24 12:31:30.78
â€¢ [3.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/14/24 12:31:30.791
  I0914 12:31:30.791074 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 12:31:30.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:30.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:30.813
  STEP: apply creating a deployment @ 09/14/24 12:31:30.818
  I0914 12:31:30.841869 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3016" for this suite. @ 09/14/24 12:31:30.846
â€¢ [0.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/14/24 12:31:30.854
  I0914 12:31:30.854805 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 12:31:30.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:30.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:30.89
  STEP: create the rc1 @ 09/14/24 12:31:30.9
  STEP: create the rc2 @ 09/14/24 12:31:30.907
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/14/24 12:31:36.919
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/14/24 12:31:37.432
  STEP: wait for the rc to be deleted @ 09/14/24 12:31:37.441
  I0914 12:31:42.455570 20 garbage_collector.go:762] 72 pods remaining
  I0914 12:31:42.455599 20 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I0914 12:31:42.455605 20 garbage_collector.go:770] 
  STEP: Gathering metrics @ 09/14/24 12:31:47.453
  W0914 12:31:47.460139      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 12:31:47.460174 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 12:31:47.460230 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-24j8f" in namespace "gc-5346"
  I0914 12:31:47.479372 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-24r4l" in namespace "gc-5346"
  I0914 12:31:47.493161 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28k8z" in namespace "gc-5346"
  I0914 12:31:47.509922 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29brn" in namespace "gc-5346"
  I0914 12:31:47.525485 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sdxh" in namespace "gc-5346"
  I0914 12:31:47.540723 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46rr8" in namespace "gc-5346"
  I0914 12:31:47.560176 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bzdm" in namespace "gc-5346"
  I0914 12:31:47.579856 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fvq5" in namespace "gc-5346"
  I0914 12:31:47.594509 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gdpv" in namespace "gc-5346"
  I0914 12:31:47.610296 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zwkb" in namespace "gc-5346"
  I0914 12:31:47.625496 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64dwp" in namespace "gc-5346"
  I0914 12:31:47.643707 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bq9q" in namespace "gc-5346"
  I0914 12:31:47.661806 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6k96g" in namespace "gc-5346"
  I0914 12:31:47.683653 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6kswg" in namespace "gc-5346"
  I0914 12:31:47.695209 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lp7v" in namespace "gc-5346"
  I0914 12:31:47.713102 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mszj" in namespace "gc-5346"
  I0914 12:31:47.727968 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rlk4" in namespace "gc-5346"
  I0914 12:31:47.746195 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74vp7" in namespace "gc-5346"
  I0914 12:31:47.765947 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79lkq" in namespace "gc-5346"
  I0914 12:31:47.790037 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nml5" in namespace "gc-5346"
  I0914 12:31:47.806355 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7v8k7" in namespace "gc-5346"
  I0914 12:31:47.819291 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88tcv" in namespace "gc-5346"
  I0914 12:31:47.840222 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8q4md" in namespace "gc-5346"
  I0914 12:31:47.858637 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9k5nb" in namespace "gc-5346"
  I0914 12:31:47.878828 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mr4w" in namespace "gc-5346"
  I0914 12:31:47.895751 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9r2c2" in namespace "gc-5346"
  I0914 12:31:47.907547 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8qjx" in namespace "gc-5346"
  I0914 12:31:47.927717 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bd59r" in namespace "gc-5346"
  I0914 12:31:47.953767 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgdrs" in namespace "gc-5346"
  I0914 12:31:47.968168 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bsmx5" in namespace "gc-5346"
  I0914 12:31:47.990761 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8c4r" in namespace "gc-5346"
  I0914 12:31:48.009060 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqzxp" in namespace "gc-5346"
  I0914 12:31:48.028522 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crmn6" in namespace "gc-5346"
  I0914 12:31:48.046495 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-csp8c" in namespace "gc-5346"
  I0914 12:31:48.066544 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8ckh" in namespace "gc-5346"
  I0914 12:31:48.096968 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dql6m" in namespace "gc-5346"
  I0914 12:31:48.111737 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f967s" in namespace "gc-5346"
  I0914 12:31:48.129209 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhc4z" in namespace "gc-5346"
  I0914 12:31:48.153365 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkpf8" in namespace "gc-5346"
  I0914 12:31:48.167717 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnghw" in namespace "gc-5346"
  I0914 12:31:48.184212 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frm4p" in namespace "gc-5346"
  I0914 12:31:48.238383 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gg4bv" in namespace "gc-5346"
  I0914 12:31:48.255074 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghbm4" in namespace "gc-5346"
  I0914 12:31:48.267968 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-grwfr" in namespace "gc-5346"
  I0914 12:31:48.292844 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hzwd8" in namespace "gc-5346"
  I0914 12:31:48.310663 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k7dj7" in namespace "gc-5346"
  I0914 12:31:48.327193 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k8l6x" in namespace "gc-5346"
  I0914 12:31:48.345090 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l5thv" in namespace "gc-5346"
  I0914 12:31:48.362260 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-lgzgt" in namespace "gc-5346"
  I0914 12:31:48.380638 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-lmkjz" in namespace "gc-5346"
  I0914 12:31:48.400292 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5346" for this suite. @ 09/14/24 12:31:48.407
â€¢ [17.561 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/14/24 12:31:48.416
  I0914 12:31:48.416223 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:31:48.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:48.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:48.441
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:31:48.444
  STEP: Saw pod success @ 09/14/24 12:31:52.473
  I0914 12:31:52.478963 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-ca2f19e5-d895-4f62-b69b-f8a6391fa923 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:31:52.494
  I0914 12:31:52.522254 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6599" for this suite. @ 09/14/24 12:31:52.527
â€¢ [4.119 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/14/24 12:31:52.535
  I0914 12:31:52.535446 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/14/24 12:31:52.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:52.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:52.555
  STEP: Setting up the test @ 09/14/24 12:31:52.558
  STEP: Creating hostNetwork=false pod @ 09/14/24 12:31:52.558
  STEP: Creating hostNetwork=true pod @ 09/14/24 12:31:54.579
  STEP: Running the test @ 09/14/24 12:31:56.605
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/14/24 12:31:56.605
  I0914 12:31:56.605312 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.605331 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.605763 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.605795 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0914 12:31:56.651029 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.651079 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.651116 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.651575 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.651626 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0914 12:31:56.702901 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.702945 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.702953 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.703356 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.703400 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0914 12:31:56.750517 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.750599 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.750610 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.751083 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.751124 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0914 12:31:56.794268 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/14/24 12:31:56.794
  I0914 12:31:56.794363 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.794383 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.794816 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.794856 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0914 12:31:56.842546 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.842600 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.842609 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.843033 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.843076 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0914 12:31:56.890535 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/14/24 12:31:56.89
  I0914 12:31:56.890658 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.890667 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.891092 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.891137 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0914 12:31:56.944745 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.944795 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.944804 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.945186 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.945227 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0914 12:31:56.992294 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:56.992367 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:56.992385 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:56.992832 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:56.992875 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0914 12:31:57.048196 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:57.048260 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6552 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:31:57.048312 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:31:57.049127 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:31:57.049296 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6552/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0914 12:31:57.104172 20 exec_util.go:111] Exec stderr: ""
  I0914 12:31:57.104359 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6552" for this suite. @ 09/14/24 12:31:57.108
â€¢ [4.581 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/14/24 12:31:57.117
  I0914 12:31:57.117040 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:31:57.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:31:57.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:31:57.137
  STEP: Creating secret with name secret-test-map-29590022-1736-4f16-a912-5d2cd1beb558 @ 09/14/24 12:31:57.14
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:31:57.145
  STEP: Saw pod success @ 09/14/24 12:32:01.174
  I0914 12:32:01.179642 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-8dca19db-e72f-4c83-9f5c-99c6cb01bd0d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:32:01.188
  I0914 12:32:01.211604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7465" for this suite. @ 09/14/24 12:32:01.216
â€¢ [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/14/24 12:32:01.226
  I0914 12:32:01.226551 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 12:32:01.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:01.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:01.245
  STEP: Looking for a node to schedule job pod @ 09/14/24 12:32:01.249
  STEP: Creating a job @ 09/14/24 12:32:01.253
  STEP: Ensuring job fails @ 09/14/24 12:32:01.26
  I0914 12:32:05.269698 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5829" for this suite. @ 09/14/24 12:32:05.274
â€¢ [4.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/14/24 12:32:05.283
  I0914 12:32:05.283650 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:32:05.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:05.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:05.304
  STEP: Creating a pod to test downward api env vars @ 09/14/24 12:32:05.307
  STEP: Saw pod success @ 09/14/24 12:32:07.33
  I0914 12:32:07.334825 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downward-api-ef02aa59-5802-44bf-b9bf-8d37667335a7 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 12:32:07.343
  I0914 12:32:07.361013 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-360" for this suite. @ 09/14/24 12:32:07.365
â€¢ [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/14/24 12:32:07.385
  I0914 12:32:07.385098 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:32:07.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:07.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:07.413
  STEP: Creating configMap with name configmap-test-volume-e95c837b-f0f8-44a0-8439-829141a19772 @ 09/14/24 12:32:07.416
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:32:07.422
  STEP: Saw pod success @ 09/14/24 12:32:09.47
  I0914 12:32:09.476174 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-97e953e9-b85f-46d3-b755-8df4b2479734 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:32:09.485
  I0914 12:32:09.508251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9221" for this suite. @ 09/14/24 12:32:09.513
â€¢ [2.138 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/14/24 12:32:09.523
  I0914 12:32:09.523554 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 12:32:09.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:09.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:09.544
  STEP: set up a multi version CRD @ 09/14/24 12:32:09.547
  I0914 12:32:09.547906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: mark a version not serverd @ 09/14/24 12:32:12.849
  STEP: check the unserved version gets removed @ 09/14/24 12:32:12.866
  STEP: check the other version is not changed @ 09/14/24 12:32:13.551
  I0914 12:32:16.056517 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5376" for this suite. @ 09/14/24 12:32:16.063
â€¢ [6.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/14/24 12:32:16.071
  I0914 12:32:16.071712 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/24 12:32:16.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:16.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:16.095
  STEP: fetching the /apis discovery document @ 09/14/24 12:32:16.098
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/14/24 12:32:16.099
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/14/24 12:32:16.099
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/14/24 12:32:16.099
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/14/24 12:32:16.101
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/14/24 12:32:16.101
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/14/24 12:32:16.102
  I0914 12:32:16.102395 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7900" for this suite. @ 09/14/24 12:32:16.107
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/14/24 12:32:16.116
  I0914 12:32:16.116980 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:32:16.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:16.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:16.14
  STEP: Creating projection with secret that has name projected-secret-test-ccb66a91-042f-4a69-84bf-493cdd4ced8b @ 09/14/24 12:32:16.143
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:32:16.149
  STEP: Saw pod success @ 09/14/24 12:32:20.177
  I0914 12:32:20.182308 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-secrets-910be0de-8b7b-42b9-9ef7-a0e5f5fd5c8f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:32:20.193
  I0914 12:32:20.212674 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5659" for this suite. @ 09/14/24 12:32:20.217
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/14/24 12:32:20.225
  I0914 12:32:20.225740 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:32:20.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:20.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:20.252
  STEP: Setting up server cert @ 09/14/24 12:32:20.283
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:32:20.602
  STEP: Deploying the webhook pod @ 09/14/24 12:32:20.616
  STEP: Wait for the deployment to be ready @ 09/14/24 12:32:20.631
  I0914 12:32:20.643484 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:32:22.658
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:32:22.671
  I0914 12:32:23.671789 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/14/24 12:32:23.682
  STEP: create a pod @ 09/14/24 12:32:23.696
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/14/24 12:32:25.716
  I0914 12:32:25.716369 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=webhook-4205 attach --namespace=webhook-4205 to-be-attached-pod -i -c=container1'
  I0914 12:32:25.795007 20 builder.go:135] rc: 1
  I0914 12:32:25.842947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4205" for this suite. @ 09/14/24 12:32:25.848
  STEP: Destroying namespace "webhook-markers-9153" for this suite. @ 09/14/24 12:32:25.857
â€¢ [5.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/14/24 12:32:25.866
  I0914 12:32:25.866849 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 12:32:25.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:25.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:25.887
  I0914 12:32:47.978250 20 container_probe.go:92] Container started at 2024-09-14 12:32:26 +0000 UTC, pod became ready at 2024-09-14 12:32:46 +0000 UTC
  I0914 12:32:47.978492 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1442" for this suite. @ 09/14/24 12:32:47.983
â€¢ [22.125 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/14/24 12:32:47.992
  I0914 12:32:47.992220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:32:47.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:48.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:48.014
  STEP: creating the pod @ 09/14/24 12:32:48.017
  STEP: setting up watch @ 09/14/24 12:32:48.017
  STEP: submitting the pod to kubernetes @ 09/14/24 12:32:48.122
  STEP: verifying the pod is in kubernetes @ 09/14/24 12:32:48.132
  STEP: verifying pod creation was observed @ 09/14/24 12:32:48.136
  STEP: deleting the pod gracefully @ 09/14/24 12:32:50.149
  STEP: verifying pod deletion was observed @ 09/14/24 12:32:50.159
  I0914 12:32:51.235932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4971" for this suite. @ 09/14/24 12:32:51.241
â€¢ [3.259 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/14/24 12:32:51.251
  I0914 12:32:51.251308 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:32:51.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:51.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:51.275
  STEP: Creating configMap that has name configmap-test-emptyKey-eb5f6fdc-90fb-49e7-b960-3582cd453354 @ 09/14/24 12:32:51.278
  I0914 12:32:51.280473 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-564" for this suite. @ 09/14/24 12:32:51.284
â€¢ [0.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/14/24 12:32:51.292
  I0914 12:32:51.292162 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:32:51.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:51.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:51.313
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:32:51.316
  STEP: Saw pod success @ 09/14/24 12:32:55.343
  I0914 12:32:55.347955 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-342ab848-eefd-4a4c-a830-b6005da17f03 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:32:55.37
  I0914 12:32:55.391084 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4324" for this suite. @ 09/14/24 12:32:55.396
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/14/24 12:32:55.406
  I0914 12:32:55.406800 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:32:55.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:55.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:55.427
  I0914 12:32:55.474863 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-876" for this suite. @ 09/14/24 12:32:55.478
â€¢ [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/14/24 12:32:55.487
  I0914 12:32:55.487856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:32:55.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:55.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:55.51
  STEP: Creating configMap configmap-1921/configmap-test-ee41e106-8a13-4f42-9152-1593dd65be10 @ 09/14/24 12:32:55.513
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:32:55.518
  STEP: Saw pod success @ 09/14/24 12:32:57.541
  I0914 12:32:57.545266 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-622dcbc3-6e20-4867-b2f5-f98416b7dda7 container env-test: <nil>
  STEP: delete the pod @ 09/14/24 12:32:57.553
  I0914 12:32:57.570512 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1921" for this suite. @ 09/14/24 12:32:57.575
â€¢ [2.095 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/14/24 12:32:57.583
  I0914 12:32:57.583274 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename conformance-tests @ 09/14/24 12:32:57.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:57.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:57.607
  STEP: Getting node addresses @ 09/14/24 12:32:57.609
  I0914 12:32:57.609791 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0914 12:32:57.619385 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1323" for this suite. @ 09/14/24 12:32:57.623
â€¢ [0.049 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/14/24 12:32:57.632
  I0914 12:32:57.632297 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:32:57.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:32:57.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:32:57.653
  STEP: Creating the pod @ 09/14/24 12:32:57.655
  I0914 12:33:00.204974 20 pod_client.go:173] Successfully updated pod "annotationupdatef9ae379e-6d89-4ef1-8e5d-b9d077026267"
  I0914 12:33:04.234404 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2102" for this suite. @ 09/14/24 12:33:04.239
â€¢ [6.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/14/24 12:33:04.247
  I0914 12:33:04.247385 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:33:04.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:33:04.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:33:04.27
  STEP: creating the pod @ 09/14/24 12:33:04.272
  STEP: submitting the pod to kubernetes @ 09/14/24 12:33:04.272
  STEP: verifying QOS class is set on the pod @ 09/14/24 12:33:04.283
  I0914 12:33:04.287711 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9637" for this suite. @ 09/14/24 12:33:04.292
â€¢ [0.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/14/24 12:33:04.301
  I0914 12:33:04.301657 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 12:33:04.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:33:04.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:33:04.325
  STEP: reading a file in the container @ 09/14/24 12:33:06.353
  I0914 12:33:06.353541 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1470 pod-service-account-f6de8625-1732-4ba2-9df8-e6bc6274a59d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/14/24 12:33:06.452
  I0914 12:33:06.452598 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1470 pod-service-account-f6de8625-1732-4ba2-9df8-e6bc6274a59d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/14/24 12:33:06.544
  I0914 12:33:06.544154 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1470 pod-service-account-f6de8625-1732-4ba2-9df8-e6bc6274a59d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0914 12:33:06.636773 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-1470"
  I0914 12:33:06.638652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1470" for this suite. @ 09/14/24 12:33:06.643
â€¢ [2.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/14/24 12:33:06.651
  I0914 12:33:06.651650 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 12:33:06.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:33:06.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:33:06.675
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/14/24 12:33:06.678
  I0914 12:33:06.688219 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5843  095ce281-dec8-432a-98f4-7c0101e51e6c 12105 0 2024-09-14 12:33:06 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-14 12:33:06 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jbwcw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jbwcw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/14/24 12:33:08.698
  I0914 12:33:08.698475 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5843 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:33:08.698493 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:33:08.698907 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:33:08.698944 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5843/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/14/24 12:33:08.756
  I0914 12:33:08.756527 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5843 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:33:08.756544 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:33:08.757063 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:33:08.757118 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5843/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0914 12:33:08.812668 20 dns.go:423] Deleting pod test-dns-nameservers...
  I0914 12:33:08.826413 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5843" for this suite. @ 09/14/24 12:33:08.83
â€¢ [2.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/14/24 12:33:08.839
  I0914 12:33:08.839160 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:33:08.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:33:08.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:33:08.865
  STEP: Creating configMap with name cm-test-opt-del-c92d5e7f-6316-4b5a-88dc-6847a0112c42 @ 09/14/24 12:33:08.872
  STEP: Creating configMap with name cm-test-opt-upd-521a9806-b779-4fda-8341-ccb3c5fa7f13 @ 09/14/24 12:33:08.877
  STEP: Creating the pod @ 09/14/24 12:33:08.882
  STEP: Deleting configmap cm-test-opt-del-c92d5e7f-6316-4b5a-88dc-6847a0112c42 @ 09/14/24 12:33:10.937
  STEP: Updating configmap cm-test-opt-upd-521a9806-b779-4fda-8341-ccb3c5fa7f13 @ 09/14/24 12:33:10.945
  STEP: Creating configMap with name cm-test-opt-create-89d28afc-dfb2-4c76-aaad-112aa2e92f84 @ 09/14/24 12:33:10.95
  STEP: waiting to observe update in volume @ 09/14/24 12:33:10.955
  I0914 12:34:33.388704 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4654" for this suite. @ 09/14/24 12:34:33.392
â€¢ [84.562 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/14/24 12:34:33.401
  I0914 12:34:33.401136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:34:33.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:34:33.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:34:33.425
  STEP: Creating configMap with name configmap-projected-all-test-volume-97756234-7ea9-49e5-9c9c-7746a8f93b71 @ 09/14/24 12:34:33.428
  STEP: Creating secret with name secret-projected-all-test-volume-a6591eff-fd69-49a6-b439-eabe9e9aec16 @ 09/14/24 12:34:33.437
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/14/24 12:34:33.445
  STEP: Saw pod success @ 09/14/24 12:34:37.475
  I0914 12:34:37.480203 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod projected-volume-5e0f2514-7c97-4e35-82ca-2d49a67a99a7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:34:37.494
  I0914 12:34:37.512147 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4158" for this suite. @ 09/14/24 12:34:37.517
â€¢ [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/14/24 12:34:37.527
  I0914 12:34:37.527516 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 12:34:37.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:34:37.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:34:37.551
  STEP: Creating namespace "e2e-ns-n5cf8" @ 09/14/24 12:34:37.554
  I0914 12:34:37.624882 20 namespace.go:411] Namespace "e2e-ns-n5cf8-9776" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-n5cf8-9776" @ 09/14/24 12:34:37.624
  I0914 12:34:37.636765 20 namespace.go:434] Namespace "e2e-ns-n5cf8-9776" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-n5cf8-9776" @ 09/14/24 12:34:37.636
  I0914 12:34:37.648267 20 namespace.go:463] Namespace "e2e-ns-n5cf8-9776" has []v1.FinalizerName{"kubernetes"}
  I0914 12:34:37.648472 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5006" for this suite. @ 09/14/24 12:34:37.652
  STEP: Destroying namespace "e2e-ns-n5cf8-9776" for this suite. @ 09/14/24 12:34:37.66
â€¢ [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/14/24 12:34:37.668
  I0914 12:34:37.668745 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 12:34:37.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:34:37.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:34:37.69
  STEP: Creating service test in namespace statefulset-9235 @ 09/14/24 12:34:37.692
  STEP: Creating a new StatefulSet @ 09/14/24 12:34:37.697
  I0914 12:34:37.710949 20 wait.go:40] Found 0 stateful pods, waiting for 3
  I0914 12:34:47.710754 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:34:47.710786 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:34:47.710792 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/14/24 12:34:47.723
  I0914 12:34:47.733430 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/14/24 12:34:47.733
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/14/24 12:34:57.744
  STEP: Performing a canary update @ 09/14/24 12:34:57.745
  I0914 12:34:57.755204 20 statefulset.go:2507] Updating stateful set ss2
  I0914 12:34:57.766785 20 wait.go:74] Waiting for Pod statefulset-9235/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/14/24 12:35:07.765
  I0914 12:35:07.805582 20 wait.go:40] Found 1 stateful pods, waiting for 3
  I0914 12:35:17.807159 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:35:17.807193 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:35:17.807201 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/14/24 12:35:17.815
  I0914 12:35:17.826615 20 statefulset.go:2507] Updating stateful set ss2
  I0914 12:35:17.837019 20 wait.go:74] Waiting for Pod statefulset-9235/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0914 12:35:27.851962 20 statefulset.go:2507] Updating stateful set ss2
  I0914 12:35:27.862560 20 wait.go:56] Waiting for StatefulSet statefulset-9235/ss2 to complete update
  I0914 12:35:27.862727 20 wait.go:63] Waiting for Pod statefulset-9235/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0914 12:35:37.861919 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9235
  I0914 12:35:37.866075 20 rest.go:150] Scaling statefulset ss2 to 0
  I0914 12:35:47.881985 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 12:35:47.887075 20 rest.go:88] Deleting statefulset ss2
  I0914 12:35:47.903212 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9235" for this suite. @ 09/14/24 12:35:47.907
â€¢ [70.245 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/14/24 12:35:47.913
  I0914 12:35:47.913933 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:35:47.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:35:47.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:35:47.936
  STEP: Creating configMap with name projected-configmap-test-volume-ca41c1b2-b509-4469-ba5c-121568b96661 @ 09/14/24 12:35:47.939
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:35:47.944
  STEP: Saw pod success @ 09/14/24 12:35:51.972
  I0914 12:35:51.977710 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-configmaps-4926b9e9-41e0-4adc-91e9-04011b673861 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:35:51.985
  I0914 12:35:52.002738 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4495" for this suite. @ 09/14/24 12:35:52.007
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/14/24 12:35:52.015
  I0914 12:35:52.015703 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 12:35:52.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:35:52.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:35:52.045
  STEP: creating a Service @ 09/14/24 12:35:52.051
  STEP: watching for the Service to be added @ 09/14/24 12:35:52.068
  I0914 12:35:52.070516 20 service.go:3445] Found Service test-service-h7qhg in namespace services-4081 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30312}]
  I0914 12:35:52.070785 20 service.go:3452] Service test-service-h7qhg created
  STEP: Getting /status @ 09/14/24 12:35:52.07
  I0914 12:35:52.075580 20 service.go:3463] Service test-service-h7qhg has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/14/24 12:35:52.075
  STEP: watching for the Service to be patched @ 09/14/24 12:35:52.081
  I0914 12:35:52.083015 20 service.go:3486] observed Service test-service-h7qhg in namespace services-4081 with annotations: map[] & LoadBalancer: {[]}
  I0914 12:35:52.083038 20 service.go:3489] Found Service test-service-h7qhg in namespace services-4081 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc004bf2c20 []}]}
  I0914 12:35:52.083046 20 service.go:3496] Service test-service-h7qhg has service status patched
  STEP: updating the ServiceStatus @ 09/14/24 12:35:52.083
  I0914 12:35:52.093376 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/14/24 12:35:52.093
  I0914 12:35:52.095157 20 service.go:3527] Observed Service test-service-h7qhg in namespace services-4081 with annotations: map[] & Conditions: []
  I0914 12:35:52.095318 20 service.go:3538] Observed Service test-service-h7qhg in namespace services-4081 with annotations: map[patchedstatus:true] & Conditions: []
  I0914 12:35:52.095392 20 service.go:3534] Found Service test-service-h7qhg in namespace services-4081 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 12:35:52.095432 20 service.go:3545] Service test-service-h7qhg has service status updated
  STEP: patching the service @ 09/14/24 12:35:52.095
  STEP: watching for the Service to be patched @ 09/14/24 12:35:52.106
  I0914 12:35:52.107543 20 service.go:3568] observed Service test-service-h7qhg in namespace services-4081 with labels: map[test-service-static:true]
  I0914 12:35:52.107562 20 service.go:3568] observed Service test-service-h7qhg in namespace services-4081 with labels: map[test-service-static:true]
  I0914 12:35:52.107664 20 service.go:3568] observed Service test-service-h7qhg in namespace services-4081 with labels: map[test-service-static:true]
  I0914 12:35:52.107685 20 service.go:3571] Found Service test-service-h7qhg in namespace services-4081 with labels: map[test-service:patched test-service-static:true]
  I0914 12:35:52.107692 20 service.go:3578] Service test-service-h7qhg patched
  STEP: deleting the service @ 09/14/24 12:35:52.107
  STEP: watching for the Service to be deleted @ 09/14/24 12:35:52.127
  I0914 12:35:52.129114 20 service.go:3602] Observed event: ADDED
  I0914 12:35:52.129269 20 service.go:3602] Observed event: MODIFIED
  I0914 12:35:52.129283 20 service.go:3602] Observed event: MODIFIED
  I0914 12:35:52.129291 20 service.go:3602] Observed event: MODIFIED
  I0914 12:35:52.129365 20 service.go:3598] Found Service test-service-h7qhg in namespace services-4081 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0914 12:35:52.129408 20 service.go:3607] Service test-service-h7qhg deleted
  I0914 12:35:52.129553 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4081" for this suite. @ 09/14/24 12:35:52.133
â€¢ [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/14/24 12:35:52.141
  I0914 12:35:52.141562 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/14/24 12:35:52.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:35:52.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:35:52.165
  STEP: mirroring a new custom Endpoint @ 09/14/24 12:35:52.178
  I0914 12:35:52.187780 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/14/24 12:35:54.193
  I0914 12:35:54.204934 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 09/14/24 12:35:56.21
  I0914 12:35:56.224255 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0914 12:35:58.230203 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4510" for this suite. @ 09/14/24 12:35:58.234
â€¢ [6.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/14/24 12:35:58.242
  I0914 12:35:58.242250 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subjectreview @ 09/14/24 12:35:58.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:35:58.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:35:58.265
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3693" @ 09/14/24 12:35:58.268
  I0914 12:35:58.272094 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3693:e2e"
  I0914 12:35:58.272118 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3693"}
  I0914 12:35:58.272125 20 subjectreviews.go:71] saUID: "923699a6-9810-406d-836c-265c0bb10a54"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3693:e2e" @ 09/14/24 12:35:58.272
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3693:e2e" @ 09/14/24 12:35:58.272
  I0914 12:35:58.273869 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3693:e2e" api 'list' configmaps in "subjectreview-3693" namespace @ 09/14/24 12:35:58.273
  I0914 12:35:58.275206 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3693:e2e" @ 09/14/24 12:35:58.275
  I0914 12:35:58.276787 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0914 12:35:58.276800 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0914 12:35:58.276928 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3693" for this suite. @ 09/14/24 12:35:58.28
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/14/24 12:35:58.287
  I0914 12:35:58.287412 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:35:58.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:35:58.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:35:58.309
  STEP: Creating secret with name projected-secret-test-c8e047eb-01fd-4b8f-b088-066ac0b8fdcd @ 09/14/24 12:35:58.311
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:35:58.316
  STEP: Saw pod success @ 09/14/24 12:36:02.342
  I0914 12:36:02.346452 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-secrets-5b10580a-e04f-456b-bb49-d45ff649fef1 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:36:02.353
  I0914 12:36:02.371293 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7102" for this suite. @ 09/14/24 12:36:02.376
â€¢ [4.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/14/24 12:36:02.386
  I0914 12:36:02.386915 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:36:02.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:36:02.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:36:02.409
  STEP: Creating projection with secret that has name projected-secret-test-map-cfff4de1-a9d1-4196-8624-be1aff4148cd @ 09/14/24 12:36:02.412
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:36:02.418
  STEP: Saw pod success @ 09/14/24 12:36:06.444
  I0914 12:36:06.448365 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-secrets-c93ae3f3-94b4-480d-a51b-d7275416a211 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:36:06.456
  I0914 12:36:06.473818 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1935" for this suite. @ 09/14/24 12:36:06.478
â€¢ [4.099 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/14/24 12:36:06.486
  I0914 12:36:06.486132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 12:36:06.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:36:06.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:36:06.506
  STEP: Counting existing ResourceQuota @ 09/14/24 12:36:23.515
  STEP: Creating a ResourceQuota @ 09/14/24 12:36:28.521
  STEP: Ensuring resource quota status is calculated @ 09/14/24 12:36:28.526
  STEP: Creating a ConfigMap @ 09/14/24 12:36:30.533
  STEP: Ensuring resource quota status captures configMap creation @ 09/14/24 12:36:30.545
  STEP: Deleting a ConfigMap @ 09/14/24 12:36:32.55
  STEP: Ensuring resource quota status released usage @ 09/14/24 12:36:32.558
  I0914 12:36:34.564462 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2250" for this suite. @ 09/14/24 12:36:34.568
â€¢ [28.091 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/14/24 12:36:34.577
  I0914 12:36:34.577853 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/24 12:36:34.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:36:34.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:36:34.602
  STEP: Performing setup for networking test in namespace pod-network-test-7992 @ 09/14/24 12:36:34.605
  STEP: creating a selector @ 09/14/24 12:36:34.605
  STEP: Creating the service pods in kubernetes @ 09/14/24 12:36:34.605
  I0914 12:36:34.605134 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/14/24 12:36:56.73
  I0914 12:36:58.755607 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 12:36:58.755638 20 networking.go:42] Breadth first check of 192.168.17.141 on host 172.31.33.255...
  I0914 12:36:58.759704 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.91:9080/dial?request=hostname&protocol=udp&host=192.168.17.141&port=8081&tries=1'] Namespace:pod-network-test-7992 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:36:58.759729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:36:58.760231 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:36:58.760292 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7992/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.17.141%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 12:36:58.818496 20 utils.go:356] Waiting for responses: map[]
  I0914 12:36:58.818563 20 utils.go:360] reached 192.168.17.141 after 0/1 tries
  I0914 12:36:58.818588 20 networking.go:42] Breadth first check of 192.168.108.244 on host 172.31.65.235...
  I0914 12:36:58.823640 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.91:9080/dial?request=hostname&protocol=udp&host=192.168.108.244&port=8081&tries=1'] Namespace:pod-network-test-7992 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:36:58.823660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:36:58.824105 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:36:58.824155 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7992/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.108.244%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 12:36:58.874116 20 utils.go:356] Waiting for responses: map[]
  I0914 12:36:58.874186 20 utils.go:360] reached 192.168.108.244 after 0/1 tries
  I0914 12:36:58.874204 20 networking.go:42] Breadth first check of 192.168.254.90 on host 172.31.8.243...
  I0914 12:36:58.878860 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.91:9080/dial?request=hostname&protocol=udp&host=192.168.254.90&port=8081&tries=1'] Namespace:pod-network-test-7992 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:36:58.878880 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:36:58.879266 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:36:58.879305 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7992/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.254.90%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 12:36:58.929084 20 utils.go:356] Waiting for responses: map[]
  I0914 12:36:58.929120 20 utils.go:360] reached 192.168.254.90 after 0/1 tries
  I0914 12:36:58.929130 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0914 12:36:58.929256 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7992" for this suite. @ 09/14/24 12:36:58.934
â€¢ [24.365 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/14/24 12:36:58.943
  I0914 12:36:58.943524 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/24 12:36:58.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:36:58.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:36:58.966
  STEP: Deleting RuntimeClass runtimeclass-6689-delete-me @ 09/14/24 12:36:58.973
  STEP: Waiting for the RuntimeClass to disappear @ 09/14/24 12:36:58.98
  I0914 12:36:58.992494 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6689" for this suite. @ 09/14/24 12:36:58.996
â€¢ [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/14/24 12:36:59.005
  I0914 12:36:59.005079 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:36:59.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:36:59.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:36:59.027
  STEP: Setting up server cert @ 09/14/24 12:36:59.056
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:36:59.2
  STEP: Deploying the webhook pod @ 09/14/24 12:36:59.21
  STEP: Wait for the deployment to be ready @ 09/14/24 12:36:59.224
  I0914 12:36:59.237835 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:37:01.253
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:37:01.264
  I0914 12:37:02.265269 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/14/24 12:37:02.275
  STEP: create a namespace for the webhook @ 09/14/24 12:37:02.29
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/14/24 12:37:02.308
  I0914 12:37:02.396074 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9363" for this suite. @ 09/14/24 12:37:02.4
  STEP: Destroying namespace "webhook-markers-1280" for this suite. @ 09/14/24 12:37:02.408
  STEP: Destroying namespace "fail-closed-namespace-9568" for this suite. @ 09/14/24 12:37:02.417
â€¢ [3.420 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/14/24 12:37:02.425
  I0914 12:37:02.425101 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/24 12:37:02.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:37:02.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:37:02.451
  I0914 12:37:02.479855 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0914 12:38:02.485610 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/14/24 12:38:02.489
  I0914 12:38:02.512709 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0914 12:38:02.520980 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0914 12:38:02.542712 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0914 12:38:02.550354 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0914 12:38:02.567173 20 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0914 12:38:02.581821 20 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/14/24 12:38:02.581
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/14/24 12:38:04.617
  I0914 12:38:08.738683 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6080" for this suite. @ 09/14/24 12:38:08.743
â€¢ [66.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/14/24 12:38:08.752
  I0914 12:38:08.752375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sysctl @ 09/14/24 12:38:08.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:08.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:08.776
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/14/24 12:38:08.779
  I0914 12:38:08.784740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1240" for this suite. @ 09/14/24 12:38:08.788
â€¢ [0.046 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/14/24 12:38:08.798
  I0914 12:38:08.798056 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 12:38:08.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:08.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:08.819
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/14/24 12:38:08.822
  I0914 12:38:08.836968 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 12:38:08.837
  STEP: getting scale subresource @ 09/14/24 12:38:10.848
  STEP: updating a scale subresource @ 09/14/24 12:38:10.853
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/14/24 12:38:10.861
  STEP: Patch a scale subresource @ 09/14/24 12:38:10.867
  I0914 12:38:10.880548 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4058" for this suite. @ 09/14/24 12:38:10.885
â€¢ [2.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/14/24 12:38:10.896
  I0914 12:38:10.896410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename proxy @ 09/14/24 12:38:10.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:10.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:10.92
  STEP: starting an echo server on multiple ports @ 09/14/24 12:38:10.933
  STEP: creating replication controller proxy-service-dxlv6 in namespace proxy-1867 @ 09/14/24 12:38:10.933
  I0914 12:38:10.940678      20 runners.go:193] Created replication controller with name: proxy-service-dxlv6, namespace: proxy-1867, replica count: 1
  I0914 12:38:11.991354      20 runners.go:193] proxy-service-dxlv6 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 12:38:12.991542      20 runners.go:193] proxy-service-dxlv6 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 12:38:12.996628 20 proxy.go:230] setup took 2.073837612s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/14/24 12:38:12.996
  I0914 12:38:13.006448 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 9.450543ms)
  I0914 12:38:13.006598 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 9.60597ms)
  I0914 12:38:13.006614 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 9.607531ms)
  I0914 12:38:13.006641 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 9.679239ms)
  I0914 12:38:13.006752 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 9.683296ms)
  I0914 12:38:13.007825 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 10.76583ms)
  I0914 12:38:13.008700 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 11.923258ms)
  I0914 12:38:13.008763 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 11.90499ms)
  I0914 12:38:13.009119 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 12.06764ms)
  I0914 12:38:13.009802 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 12.279527ms)
  I0914 12:38:13.009817 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 12.913537ms)
  I0914 12:38:13.009997 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 13.075554ms)
  I0914 12:38:13.010056 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 13.015754ms)
  I0914 12:38:13.010067 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 13.091521ms)
  I0914 12:38:13.010075 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 13.139573ms)
  I0914 12:38:13.010085 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 13.207027ms)
  I0914 12:38:13.016747 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 5.806882ms)
  I0914 12:38:13.016817 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 5.958396ms)
  I0914 12:38:13.016856 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.107904ms)
  I0914 12:38:13.017320 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 6.733218ms)
  I0914 12:38:13.017860 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 7.152605ms)
  I0914 12:38:13.017928 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.098282ms)
  I0914 12:38:13.018315 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.390614ms)
  I0914 12:38:13.018549 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 8.08957ms)
  I0914 12:38:13.018714 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 7.870071ms)
  I0914 12:38:13.018895 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 7.986614ms)
  I0914 12:38:13.019060 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 8.560976ms)
  I0914 12:38:13.019273 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 8.39649ms)
  I0914 12:38:13.019486 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 8.816085ms)
  I0914 12:38:13.019563 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 8.940948ms)
  I0914 12:38:13.019782 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 8.707661ms)
  I0914 12:38:13.020280 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 9.503132ms)
  I0914 12:38:13.025378 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 5.073968ms)
  I0914 12:38:13.026090 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 5.547836ms)
  I0914 12:38:13.026087 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 5.531181ms)
  I0914 12:38:13.027005 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.43078ms)
  I0914 12:38:13.027622 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 7.197102ms)
  I0914 12:38:13.027651 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.19594ms)
  I0914 12:38:13.027872 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 7.398834ms)
  I0914 12:38:13.027875 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 7.256306ms)
  I0914 12:38:13.028312 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 7.798869ms)
  I0914 12:38:13.028427 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 7.933255ms)
  I0914 12:38:13.028695 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 8.166673ms)
  I0914 12:38:13.028982 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 8.383231ms)
  I0914 12:38:13.029422 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 9.073754ms)
  I0914 12:38:13.029785 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.386253ms)
  I0914 12:38:13.030750 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 10.161616ms)
  I0914 12:38:13.030931 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 10.490677ms)
  I0914 12:38:13.035023 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 3.982273ms)
  I0914 12:38:13.037752 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.53855ms)
  I0914 12:38:13.037765 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.610969ms)
  I0914 12:38:13.037779 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 6.596169ms)
  I0914 12:38:13.038932 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.734564ms)
  I0914 12:38:13.039110 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 7.845082ms)
  I0914 12:38:13.039516 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 8.534334ms)
  I0914 12:38:13.039526 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 8.296726ms)
  I0914 12:38:13.039751 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 8.578557ms)
  I0914 12:38:13.040756 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 9.672291ms)
  I0914 12:38:13.041106 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 10.001388ms)
  I0914 12:38:13.041237 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 10.235353ms)
  I0914 12:38:13.041248 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 10.127984ms)
  I0914 12:38:13.042716 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 11.649739ms)
  I0914 12:38:13.042716 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 11.46651ms)
  I0914 12:38:13.043412 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 12.276318ms)
  I0914 12:38:13.048575 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 5.08093ms)
  I0914 12:38:13.048586 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 4.982083ms)
  I0914 12:38:13.049370 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 5.826325ms)
  I0914 12:38:13.049668 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.00698ms)
  I0914 12:38:13.049978 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.240193ms)
  I0914 12:38:13.050205 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 6.559944ms)
  I0914 12:38:13.050616 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 7.04736ms)
  I0914 12:38:13.050757 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 7.05064ms)
  I0914 12:38:13.051373 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.784716ms)
  I0914 12:38:13.051373 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 7.655641ms)
  I0914 12:38:13.051666 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 8.034857ms)
  I0914 12:38:13.052469 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 9.035435ms)
  I0914 12:38:13.052647 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 8.972611ms)
  I0914 12:38:13.053009 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.322687ms)
  I0914 12:38:13.053066 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 9.546467ms)
  I0914 12:38:13.053789 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 10.172657ms)
  I0914 12:38:13.057821 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 3.986996ms)
  I0914 12:38:13.058191 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 4.27706ms)
  I0914 12:38:13.058332 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 4.465056ms)
  I0914 12:38:13.060104 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.061704ms)
  I0914 12:38:13.060443 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 6.369743ms)
  I0914 12:38:13.060593 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.585838ms)
  I0914 12:38:13.060623 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.568206ms)
  I0914 12:38:13.060649 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 6.512598ms)
  I0914 12:38:13.060658 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.726532ms)
  I0914 12:38:13.060666 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 6.638971ms)
  I0914 12:38:13.060971 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 6.881016ms)
  I0914 12:38:13.062098 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 8.106711ms)
  I0914 12:38:13.062098 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 7.97884ms)
  I0914 12:38:13.062292 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 8.342779ms)
  I0914 12:38:13.063492 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 9.518635ms)
  I0914 12:38:13.063914 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.80964ms)
  I0914 12:38:13.067813 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 3.809167ms)
  I0914 12:38:13.069638 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 5.376249ms)
  I0914 12:38:13.070198 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.079984ms)
  I0914 12:38:13.070827 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 6.594506ms)
  I0914 12:38:13.070830 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.802317ms)
  I0914 12:38:13.070872 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 6.767738ms)
  I0914 12:38:13.070882 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.715002ms)
  I0914 12:38:13.071433 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 7.184205ms)
  I0914 12:38:13.071539 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 7.344283ms)
  I0914 12:38:13.071581 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 7.485465ms)
  I0914 12:38:13.071773 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.632355ms)
  I0914 12:38:13.072576 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 8.637926ms)
  I0914 12:38:13.072593 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 8.503287ms)
  I0914 12:38:13.072602 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 8.388186ms)
  I0914 12:38:13.073110 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 8.956359ms)
  I0914 12:38:13.073656 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 9.473193ms)
  I0914 12:38:13.078569 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 4.822491ms)
  I0914 12:38:13.078569 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 4.792797ms)
  I0914 12:38:13.079387 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 5.339821ms)
  I0914 12:38:13.079416 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 5.493411ms)
  I0914 12:38:13.079948 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.010065ms)
  I0914 12:38:13.080602 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.538238ms)
  I0914 12:38:13.080786 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 6.765798ms)
  I0914 12:38:13.080898 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.042358ms)
  I0914 12:38:13.081207 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.39335ms)
  I0914 12:38:13.081450 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 7.545256ms)
  I0914 12:38:13.081689 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 7.848985ms)
  I0914 12:38:13.082040 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 8.155515ms)
  I0914 12:38:13.082125 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 8.427325ms)
  I0914 12:38:13.082512 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 8.515764ms)
  I0914 12:38:13.083500 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.51841ms)
  I0914 12:38:13.083929 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 9.96702ms)
  I0914 12:38:13.090927 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 6.899412ms)
  I0914 12:38:13.090972 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.901499ms)
  I0914 12:38:13.090987 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.862173ms)
  I0914 12:38:13.091001 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 6.773809ms)
  I0914 12:38:13.091326 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.110845ms)
  I0914 12:38:13.091581 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 7.433757ms)
  I0914 12:38:13.091626 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 7.363782ms)
  I0914 12:38:13.092358 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 8.072918ms)
  I0914 12:38:13.092374 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 8.269246ms)
  I0914 12:38:13.092429 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 8.229389ms)
  I0914 12:38:13.092926 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 8.872829ms)
  I0914 12:38:13.093033 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 9.085423ms)
  I0914 12:38:13.093579 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 9.2794ms)
  I0914 12:38:13.093767 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 9.583352ms)
  I0914 12:38:13.093919 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 9.65028ms)
  I0914 12:38:13.094916 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 10.752311ms)
  I0914 12:38:13.099034 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 4.070166ms)
  I0914 12:38:13.100240 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 5.14447ms)
  I0914 12:38:13.100511 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 5.373458ms)
  I0914 12:38:13.101114 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 5.960808ms)
  I0914 12:38:13.101253 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.132666ms)
  I0914 12:38:13.105585 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 10.573963ms)
  I0914 12:38:13.105756 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 10.726325ms)
  I0914 12:38:13.105915 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 10.807513ms)
  I0914 12:38:13.106028 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 10.967077ms)
  I0914 12:38:13.106172 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 10.986427ms)
  I0914 12:38:13.106311 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 11.080664ms)
  I0914 12:38:13.106396 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 11.151997ms)
  I0914 12:38:13.106508 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 11.302722ms)
  I0914 12:38:13.107131 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 12.052832ms)
  I0914 12:38:13.107378 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 12.161474ms)
  I0914 12:38:13.107488 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 12.322847ms)
  I0914 12:38:13.115808 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 8.113271ms)
  I0914 12:38:13.116287 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 8.075229ms)
  I0914 12:38:13.116372 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 8.630138ms)
  I0914 12:38:13.116312 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 8.458285ms)
  I0914 12:38:13.116606 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 8.339747ms)
  I0914 12:38:13.116622 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 8.450402ms)
  I0914 12:38:13.116636 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 8.817132ms)
  I0914 12:38:13.116698 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 8.917996ms)
  I0914 12:38:13.116745 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 9.147142ms)
  I0914 12:38:13.116758 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 8.726094ms)
  I0914 12:38:13.116816 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 8.679082ms)
  I0914 12:38:13.117018 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 8.950167ms)
  I0914 12:38:13.117241 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 9.320333ms)
  I0914 12:38:13.117400 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 9.43884ms)
  I0914 12:38:13.117585 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.699759ms)
  I0914 12:38:13.118611 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 10.507721ms)
  I0914 12:38:13.123410 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 4.767508ms)
  I0914 12:38:13.124123 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 5.415511ms)
  I0914 12:38:13.124216 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 5.334713ms)
  I0914 12:38:13.124567 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 5.744825ms)
  I0914 12:38:13.126193 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.323792ms)
  I0914 12:38:13.126477 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 7.737784ms)
  I0914 12:38:13.126511 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 7.562467ms)
  I0914 12:38:13.126532 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.736786ms)
  I0914 12:38:13.126546 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 7.708912ms)
  I0914 12:38:13.126575 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 7.676121ms)
  I0914 12:38:13.126590 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 7.780207ms)
  I0914 12:38:13.126802 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 7.868597ms)
  I0914 12:38:13.127271 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 8.491297ms)
  I0914 12:38:13.127767 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 9.009472ms)
  I0914 12:38:13.128507 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 9.589697ms)
  I0914 12:38:13.129440 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 10.586759ms)
  I0914 12:38:13.133417 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 3.952705ms)
  I0914 12:38:13.135469 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 5.802627ms)
  I0914 12:38:13.135865 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 6.065282ms)
  I0914 12:38:13.136005 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 6.382194ms)
  I0914 12:38:13.136114 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.586112ms)
  I0914 12:38:13.136169 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.389964ms)
  I0914 12:38:13.136264 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.617575ms)
  I0914 12:38:13.136568 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 6.83612ms)
  I0914 12:38:13.136734 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 7.053684ms)
  I0914 12:38:13.136838 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 7.071802ms)
  I0914 12:38:13.137108 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 7.498656ms)
  I0914 12:38:13.137615 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 8.07269ms)
  I0914 12:38:13.138357 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 8.765283ms)
  I0914 12:38:13.138786 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 9.035297ms)
  I0914 12:38:13.139194 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 9.498531ms)
  I0914 12:38:13.139882 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 10.170895ms)
  I0914 12:38:13.148073 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 8.129873ms)
  I0914 12:38:13.148090 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.985082ms)
  I0914 12:38:13.149524 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 9.386596ms)
  I0914 12:38:13.151275 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 11.022557ms)
  I0914 12:38:13.151289 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 11.320817ms)
  I0914 12:38:13.151955 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 12.051942ms)
  I0914 12:38:13.154588 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 14.554096ms)
  I0914 12:38:13.155678 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 15.492629ms)
  I0914 12:38:13.155743 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 15.623036ms)
  I0914 12:38:13.155749 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 15.581906ms)
  I0914 12:38:13.155915 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 15.702272ms)
  I0914 12:38:13.156028 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 15.82876ms)
  I0914 12:38:13.156053 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 15.976542ms)
  I0914 12:38:13.156091 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 15.941294ms)
  I0914 12:38:13.156102 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 16.013192ms)
  I0914 12:38:13.157700 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 17.4705ms)
  I0914 12:38:13.163429 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 5.692274ms)
  I0914 12:38:13.164278 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 6.325035ms)
  I0914 12:38:13.165281 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 7.434193ms)
  I0914 12:38:13.165281 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 7.346247ms)
  I0914 12:38:13.165932 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 8.13164ms)
  I0914 12:38:13.165944 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 7.972688ms)
  I0914 12:38:13.165966 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 7.960927ms)
  I0914 12:38:13.166222 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 8.35925ms)
  I0914 12:38:13.168035 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 10.046056ms)
  I0914 12:38:13.168035 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 10.013738ms)
  I0914 12:38:13.168064 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 10.031428ms)
  I0914 12:38:13.168103 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 10.346345ms)
  I0914 12:38:13.168117 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 10.238255ms)
  I0914 12:38:13.168393 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 10.475724ms)
  I0914 12:38:13.170151 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 12.256272ms)
  I0914 12:38:13.170632 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 12.577904ms)
  I0914 12:38:13.175554 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 4.867592ms)
  I0914 12:38:13.177132 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 6.404641ms)
  I0914 12:38:13.180931 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 9.984336ms)
  I0914 12:38:13.180955 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 10.053172ms)
  I0914 12:38:13.180974 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 9.974988ms)
  I0914 12:38:13.180995 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 10.071014ms)
  I0914 12:38:13.181008 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 10.047144ms)
  I0914 12:38:13.181032 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 10.05169ms)
  I0914 12:38:13.181041 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 10.207817ms)
  I0914 12:38:13.181361 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 10.510869ms)
  I0914 12:38:13.181587 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 10.702119ms)
  I0914 12:38:13.182329 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 11.527219ms)
  I0914 12:38:13.182366 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 11.599279ms)
  I0914 12:38:13.182800 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 12.149273ms)
  I0914 12:38:13.182850 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 12.040158ms)
  I0914 12:38:13.182861 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 11.997336ms)
  I0914 12:38:13.188502 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 5.511378ms)
  I0914 12:38:13.190441 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 7.392806ms)
  I0914 12:38:13.192610 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 9.593839ms)
  I0914 12:38:13.192692 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 9.612812ms)
  I0914 12:38:13.192720 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 9.469325ms)
  I0914 12:38:13.193243 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 10.062977ms)
  I0914 12:38:13.193540 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 10.442596ms)
  I0914 12:38:13.193585 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 10.319232ms)
  I0914 12:38:13.193994 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 10.7678ms)
  I0914 12:38:13.194494 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 11.334429ms)
  I0914 12:38:13.194668 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 11.429844ms)
  I0914 12:38:13.194884 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 11.690048ms)
  I0914 12:38:13.196033 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 12.90633ms)
  I0914 12:38:13.196355 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 13.242818ms)
  I0914 12:38:13.196907 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 13.760166ms)
  I0914 12:38:13.197180 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 13.970754ms)
  I0914 12:38:13.206489 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 9.145548ms)
  I0914 12:38:13.208267 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 10.739736ms)
  I0914 12:38:13.208267 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 10.628898ms)
  I0914 12:38:13.209358 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 11.989771ms)
  I0914 12:38:13.210016 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 12.555506ms)
  I0914 12:38:13.210092 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 12.470095ms)
  I0914 12:38:13.210102 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 12.660108ms)
  I0914 12:38:13.210173 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 12.502785ms)
  I0914 12:38:13.210300 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 12.885649ms)
  I0914 12:38:13.210526 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 12.870281ms)
  I0914 12:38:13.210810 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 13.20219ms)
  I0914 12:38:13.210993 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 13.483522ms)
  I0914 12:38:13.211636 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 14.14713ms)
  I0914 12:38:13.211636 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 14.044394ms)
  I0914 12:38:13.211874 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 14.297574ms)
  I0914 12:38:13.212200 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 14.657607ms)
  I0914 12:38:13.219246 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 6.923171ms)
  I0914 12:38:13.219276 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 6.713513ms)
  I0914 12:38:13.223951 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 11.453174ms)
  I0914 12:38:13.224016 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 11.573072ms)
  I0914 12:38:13.224061 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 11.768086ms)
  I0914 12:38:13.224070 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 11.726868ms)
  I0914 12:38:13.224078 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 11.718834ms)
  I0914 12:38:13.224031 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 11.517376ms)
  I0914 12:38:13.224088 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 11.661676ms)
  I0914 12:38:13.224095 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 11.635555ms)
  I0914 12:38:13.224102 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 11.627596ms)
  I0914 12:38:13.224121 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 11.575829ms)
  I0914 12:38:13.224237 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 12.017744ms)
  I0914 12:38:13.224269 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 11.741062ms)
  I0914 12:38:13.224277 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 11.871072ms)
  I0914 12:38:13.224285 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 11.898563ms)
  I0914 12:38:13.237449 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:460/proxy/: tls baz (200; 12.619128ms)
  I0914 12:38:13.237911 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:462/proxy/: tls qux (200; 12.933723ms)
  I0914 12:38:13.238094 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">... (200; 13.14534ms)
  I0914 12:38:13.238637 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 13.733882ms)
  I0914 12:38:13.239369 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 14.57243ms)
  I0914 12:38:13.239531 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:1080/proxy/rewriteme">test<... (200; 14.460813ms)
  I0914 12:38:13.239805 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8/proxy/rewriteme">test</a> (200; 14.757262ms)
  I0914 12:38:13.239934 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/http:proxy-service-dxlv6-tqvl8:160/proxy/: foo (200; 14.972004ms)
  I0914 12:38:13.239959 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/proxy-service-dxlv6-tqvl8:162/proxy/: bar (200; 15.076607ms)
  I0914 12:38:13.240151 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/: <a href="/api/v1/namespaces/proxy-1867/pods/https:proxy-service-dxlv6-tqvl8:443/proxy/tlsrewritem... (200; 15.360444ms)
  I0914 12:38:13.240269 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname1/proxy/: tls baz (200; 15.166215ms)
  I0914 12:38:13.241455 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname1/proxy/: foo (200; 16.42183ms)
  I0914 12:38:13.242375 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname1/proxy/: foo (200; 17.384673ms)
  I0914 12:38:13.242452 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/proxy-service-dxlv6:portname2/proxy/: bar (200; 17.43598ms)
  I0914 12:38:13.243563 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/https:proxy-service-dxlv6:tlsportname2/proxy/: tls qux (200; 18.631767ms)
  I0914 12:38:13.243839 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1867/services/http:proxy-service-dxlv6:portname2/proxy/: bar (200; 18.752997ms)
  STEP: deleting ReplicationController proxy-service-dxlv6 in namespace proxy-1867, will wait for the garbage collector to delete the pods @ 09/14/24 12:38:13.243
  I0914 12:38:13.307562 20 resources.go:139] Deleting ReplicationController proxy-service-dxlv6 took: 9.053595ms
  I0914 12:38:13.408166 20 resources.go:163] Terminating ReplicationController proxy-service-dxlv6 pods took: 100.599853ms
  I0914 12:38:16.409189 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1867" for this suite. @ 09/14/24 12:38:16.415
â€¢ [5.528 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/14/24 12:38:16.424
  I0914 12:38:16.424482 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:38:16.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:16.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:16.451
  STEP: Creating configMap with name configmap-test-volume-fb608f36-4bb3-4dd3-a44f-0f0d2e1a9241 @ 09/14/24 12:38:16.454
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:38:16.459
  STEP: Saw pod success @ 09/14/24 12:38:20.489
  I0914 12:38:20.494334 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-d49a3d6a-6a56-4cba-ba54-1d0d5580adfa container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:38:20.51
  I0914 12:38:20.529060 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7261" for this suite. @ 09/14/24 12:38:20.533
â€¢ [4.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/14/24 12:38:20.544
  I0914 12:38:20.544728 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 12:38:20.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:20.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:20.567
  STEP: creating an Endpoint @ 09/14/24 12:38:20.573
  STEP: waiting for available Endpoint @ 09/14/24 12:38:20.579
  STEP: listing all Endpoints @ 09/14/24 12:38:20.58
  STEP: updating the Endpoint @ 09/14/24 12:38:20.584
  STEP: fetching the Endpoint @ 09/14/24 12:38:20.593
  STEP: patching the Endpoint @ 09/14/24 12:38:20.597
  STEP: fetching the Endpoint @ 09/14/24 12:38:20.609
  STEP: deleting the Endpoint by Collection @ 09/14/24 12:38:20.614
  STEP: waiting for Endpoint deletion @ 09/14/24 12:38:20.626
  STEP: fetching the Endpoint @ 09/14/24 12:38:20.631
  I0914 12:38:20.643446 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7582" for this suite. @ 09/14/24 12:38:20.649
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/14/24 12:38:20.658
  I0914 12:38:20.658794 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/24 12:38:20.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:20.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:20.684
  I0914 12:38:22.718843 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2087" for this suite. @ 09/14/24 12:38:22.723
â€¢ [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/14/24 12:38:22.73
  I0914 12:38:22.730929 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:38:22.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:22.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:22.753
  STEP: Setting up server cert @ 09/14/24 12:38:22.784
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:38:23.323
  STEP: Deploying the webhook pod @ 09/14/24 12:38:23.33
  STEP: Wait for the deployment to be ready @ 09/14/24 12:38:23.344
  I0914 12:38:23.358218 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:38:25.373
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:38:25.385
  I0914 12:38:26.385688 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 12:38:26.395269 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/14/24 12:38:26.907
  STEP: Creating a custom resource that should be denied by the webhook @ 09/14/24 12:38:26.923
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/14/24 12:38:28.94
  STEP: Updating the custom resource with disallowed data should be denied @ 09/14/24 12:38:28.949
  STEP: Deleting the custom resource should be denied @ 09/14/24 12:38:28.959
  STEP: Remove the offending key and value from the custom resource data @ 09/14/24 12:38:28.967
  STEP: Deleting the updated custom resource should be successful @ 09/14/24 12:38:28.978
  I0914 12:38:29.550898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4546" for this suite. @ 09/14/24 12:38:29.556
  STEP: Destroying namespace "webhook-markers-7812" for this suite. @ 09/14/24 12:38:29.565
â€¢ [6.843 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/14/24 12:38:29.574
  I0914 12:38:29.574177 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:38:29.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:29.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:29.595
  STEP: creating the pod @ 09/14/24 12:38:29.597
  I0914 12:38:29.598219 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 create -f -'
  I0914 12:38:29.688265 20 builder.go:146] stderr: ""
  I0914 12:38:29.688306 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/14/24 12:38:31.7
  I0914 12:38:31.700229 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 label pods pause testing-label=testing-label-value'
  I0914 12:38:31.750811 20 builder.go:146] stderr: ""
  I0914 12:38:31.750844 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/14/24 12:38:31.75
  I0914 12:38:31.750955 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 get pod pause -L testing-label'
  I0914 12:38:31.791907 20 builder.go:146] stderr: ""
  I0914 12:38:31.791943 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/14/24 12:38:31.791
  I0914 12:38:31.792048 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 label pods pause testing-label-'
  I0914 12:38:31.840717 20 builder.go:146] stderr: ""
  I0914 12:38:31.840757 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/14/24 12:38:31.84
  I0914 12:38:31.840829 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 get pod pause -L testing-label'
  I0914 12:38:31.883753 20 builder.go:146] stderr: ""
  I0914 12:38:31.883789 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/14/24 12:38:31.883
  I0914 12:38:31.883910 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 delete --grace-period=0 --force -f -'
  I0914 12:38:31.936079 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:38:31.936133 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0914 12:38:31.936172 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 get rc,svc -l name=pause --no-headers'
  I0914 12:38:31.984235 20 builder.go:146] stderr: "No resources found in kubectl-6411 namespace.\n"
  I0914 12:38:31.984274 20 builder.go:147] stdout: ""
  I0914 12:38:31.984315 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6411 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 12:38:32.025954 20 builder.go:146] stderr: ""
  I0914 12:38:32.025991 20 builder.go:147] stdout: ""
  I0914 12:38:32.026153 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6411" for this suite. @ 09/14/24 12:38:32.031
â€¢ [2.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/14/24 12:38:32.042
  I0914 12:38:32.042164 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:38:32.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:32.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:32.065
  STEP: Setting up server cert @ 09/14/24 12:38:32.09
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:38:32.429
  STEP: Deploying the webhook pod @ 09/14/24 12:38:32.435
  STEP: Wait for the deployment to be ready @ 09/14/24 12:38:32.447
  I0914 12:38:32.457099 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/24 12:38:34.473
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:38:34.488
  I0914 12:38:35.489092 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/14/24 12:38:35.5
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/14/24 12:38:35.514
  STEP: Creating a dummy validating-webhook-configuration object @ 09/14/24 12:38:35.528
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/14/24 12:38:35.537
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/14/24 12:38:35.545
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/14/24 12:38:35.554
  I0914 12:38:35.616507 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1730" for this suite. @ 09/14/24 12:38:35.62
  STEP: Destroying namespace "webhook-markers-9082" for this suite. @ 09/14/24 12:38:35.628
â€¢ [3.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/14/24 12:38:35.635
  I0914 12:38:35.635960 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-pred @ 09/14/24 12:38:35.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:35.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:35.66
  I0914 12:38:35.663338 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 12:38:35.671193 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 12:38:35.674946 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-33-255 before test
  I0914 12:38:35.680178 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kjgv8 from ingress-nginx-kubernetes-worker started at 2024-09-14 12:10:30 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.680193 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 12:38:35.680199 20 predicates.go:957] calico-node-tq8px from kube-system started at 2024-09-14 12:15:30 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.680204 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 12:38:35.680332 20 predicates.go:957] sonobuoy-e2e-job-7d38388d155d451e from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 12:38:35.680341 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0914 12:38:35.680347 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 12:38:35.680361 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-shbkb from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 12:38:35.680366 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 12:38:35.680371 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 12:38:35.680376 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-235 before test
  I0914 12:38:35.686317 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-pt48j from ingress-nginx-kubernetes-worker started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686336 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 12:38:35.686342 20 predicates.go:957] calico-node-44nhq from kube-system started at 2024-09-14 12:15:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686362 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 12:38:35.686367 20 predicates.go:957] coredns-5b4857d7c8-rxhfh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686371 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0914 12:38:35.686376 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7f8zh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686380 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0914 12:38:35.686385 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wh6sp from kube-system started at 2024-09-14 12:09:09 +0000 UTC (2 container statuses recorded)
  I0914 12:38:35.686389 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0914 12:38:35.686394 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0914 12:38:35.686398 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2ghwq from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686402 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0914 12:38:35.686407 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-n8bk4 from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.686421 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0914 12:38:35.686444 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-75c6n from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 12:38:35.686448 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 12:38:35.686452 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 12:38:35.686457 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-243 before test
  I0914 12:38:35.692098 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-vbnds from ingress-nginx-kubernetes-worker started at 2024-09-14 12:14:37 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.692116 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 12:38:35.692124 20 predicates.go:957] calico-node-qxqsq from kube-system started at 2024-09-14 12:14:28 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.692129 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 12:38:35.692135 20 predicates.go:957] busybox-scheduling-2593a3ac-ffb2-4655-b642-49e33441dd36 from kubelet-test-2087 started at 2024-09-14 12:38:20 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.692141 20 predicates.go:959] 	Container busybox-scheduling-2593a3ac-ffb2-4655-b642-49e33441dd36 ready: true, restart count 0
  I0914 12:38:35.692147 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-14 12:19:02 +0000 UTC (1 container statuses recorded)
  I0914 12:38:35.692152 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 12:38:35.692171 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-zcj27 from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 12:38:35.692178 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 12:38:35.692183 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/24 12:38:35.692
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/24 12:38:37.716
  STEP: Trying to apply a random label on the found node. @ 09/14/24 12:38:37.734
  STEP: verifying the node has the label kubernetes.io/e2e-637bee6c-b303-4eac-a663-5735057322aa 42 @ 09/14/24 12:38:37.744
  STEP: Trying to relaunch the pod, now with labels. @ 09/14/24 12:38:37.748
  STEP: removing the label kubernetes.io/e2e-637bee6c-b303-4eac-a663-5735057322aa off the node ip-172-31-33-255 @ 09/14/24 12:38:39.769
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-637bee6c-b303-4eac-a663-5735057322aa @ 09/14/24 12:38:39.781
  I0914 12:38:39.788099 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8110" for this suite. @ 09/14/24 12:38:39.792
â€¢ [4.163 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/14/24 12:38:39.8
  I0914 12:38:39.800291 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 12:38:39.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:39.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:39.823
  I0914 12:38:39.848983 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/14/24 12:38:39.855
  I0914 12:38:39.860160 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:38:39.860199 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/14/24 12:38:39.86
  I0914 12:38:39.882545 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:38:39.882566 20 fixtures.go:130] Node ip-172-31-8-243 is running 0 daemon pod, expected 1
  I0914 12:38:40.882149 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:38:40.882181 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/14/24 12:38:40.885
  I0914 12:38:40.901142 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:38:40.901168 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0914 12:38:41.903269 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:38:41.903303 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/14/24 12:38:41.903
  I0914 12:38:41.914716 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:38:41.914738 20 fixtures.go:130] Node ip-172-31-8-243 is running 0 daemon pod, expected 1
  I0914 12:38:42.916702 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:38:42.916735 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 12:38:42.925
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6702, will wait for the garbage collector to delete the pods @ 09/14/24 12:38:42.925
  I0914 12:38:42.989463 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.988789ms
  I0914 12:38:43.090341 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.871901ms
  I0914 12:38:44.895144 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:38:44.895176 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 12:38:44.899514 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14391"},"items":null}

  I0914 12:38:44.904182 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14391"},"items":null}

  I0914 12:38:44.929141 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6702" for this suite. @ 09/14/24 12:38:44.933
â€¢ [5.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/14/24 12:38:44.943
  I0914 12:38:44.943407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 12:38:44.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:44.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:44.963
  STEP: Creating a test namespace @ 09/14/24 12:38:44.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:44.984
  STEP: Creating a service in the namespace @ 09/14/24 12:38:44.986
  STEP: Deleting the namespace @ 09/14/24 12:38:44.997
  STEP: Waiting for the namespace to be removed. @ 09/14/24 12:38:45.007
  STEP: Recreating the namespace @ 09/14/24 12:38:51.012
  STEP: Verifying there is no service in the namespace @ 09/14/24 12:38:51.033
  I0914 12:38:51.037579 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2194" for this suite. @ 09/14/24 12:38:51.041
  STEP: Destroying namespace "nsdeletetest-9136" for this suite. @ 09/14/24 12:38:51.048
  I0914 12:38:51.052027 20 framework.go:370] Namespace nsdeletetest-9136 was already deleted
  STEP: Destroying namespace "nsdeletetest-5635" for this suite. @ 09/14/24 12:38:51.052
â€¢ [6.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/14/24 12:38:51.06
  I0914 12:38:51.060101 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:38:51.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:51.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:51.081
  STEP: creating Agnhost RC @ 09/14/24 12:38:51.083
  I0914 12:38:51.083716 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4120 create -f -'
  I0914 12:38:51.163326 20 builder.go:146] stderr: ""
  I0914 12:38:51.163367 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/24 12:38:51.163
  I0914 12:38:52.169248 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:38:52.169277 20 framework.go:733] Found 0 / 1
  I0914 12:38:53.168717 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:38:53.168756 20 framework.go:733] Found 1 / 1
  I0914 12:38:53.168771 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/14/24 12:38:53.168
  I0914 12:38:53.175005 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:38:53.175020 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 12:38:53.175069 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4120 patch pod agnhost-primary-4mt9m -p {"metadata":{"annotations":{"x":"y"}}}'
  I0914 12:38:53.229414 20 builder.go:146] stderr: ""
  I0914 12:38:53.229450 20 builder.go:147] stdout: "pod/agnhost-primary-4mt9m patched\n"
  STEP: checking annotations @ 09/14/24 12:38:53.229
  I0914 12:38:53.234425 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 12:38:53.234449 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 12:38:53.234538 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4120" for this suite. @ 09/14/24 12:38:53.24
â€¢ [2.190 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/14/24 12:38:53.25
  I0914 12:38:53.250300 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/24 12:38:53.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:53.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:53.273
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/24 12:38:53.282
  STEP: create the pod with lifecycle hook @ 09/14/24 12:38:55.31
  STEP: delete the pod with lifecycle hook @ 09/14/24 12:38:57.335
  STEP: check prestop hook @ 09/14/24 12:38:59.355
  I0914 12:38:59.369789 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8421" for this suite. @ 09/14/24 12:38:59.375
â€¢ [6.136 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/14/24 12:38:59.386
  I0914 12:38:59.386272 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 12:38:59.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:38:59.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:38:59.459
  STEP: Counting existing ResourceQuota @ 09/14/24 12:38:59.462
  STEP: Creating a ResourceQuota @ 09/14/24 12:39:04.466
  STEP: Ensuring resource quota status is calculated @ 09/14/24 12:39:04.474
  STEP: Creating a Service @ 09/14/24 12:39:06.479
  STEP: Creating a NodePort Service @ 09/14/24 12:39:06.496
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/14/24 12:39:06.521
  STEP: Ensuring resource quota status captures service creation @ 09/14/24 12:39:06.546
  STEP: Deleting Services @ 09/14/24 12:39:08.551
  STEP: Ensuring resource quota status released usage @ 09/14/24 12:39:08.597
  I0914 12:39:10.603528 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8743" for this suite. @ 09/14/24 12:39:10.607
â€¢ [11.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/14/24 12:39:10.617
  I0914 12:39:10.617719 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 12:39:10.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:10.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:10.647
  I0914 12:39:10.655961 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-8016"
  I0914 12:39:10.664727 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-8016"
  STEP: waiting for a new root ca configmap created @ 09/14/24 12:39:11.165
  I0914 12:39:11.170564 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-8016"
  I0914 12:39:11.176812 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-8016"
  STEP: waiting for the root ca configmap reconciled @ 09/14/24 12:39:11.677
  I0914 12:39:11.682205 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-8016"
  I0914 12:39:11.682409 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8016" for this suite. @ 09/14/24 12:39:11.687
â€¢ [1.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/14/24 12:39:11.696
  I0914 12:39:11.696249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pv @ 09/14/24 12:39:11.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:11.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:11.717
  STEP: Creating initial PV and PVC @ 09/14/24 12:39:11.72
  I0914 12:39:11.720270 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-738" @ 09/14/24 12:39:11.734
  STEP: Listing PVCs in namespace "pv-738" @ 09/14/24 12:39:11.739
  STEP: Reading "pvc-ck44b" Status @ 09/14/24 12:39:11.744
  STEP: Reading "pv-738-lsc4c" Status @ 09/14/24 12:39:11.749
  STEP: Patching "pvc-ck44b" Status @ 09/14/24 12:39:11.755
  STEP: Patching "pv-738-lsc4c" Status @ 09/14/24 12:39:11.76
  STEP: Updating "pvc-ck44b" Status @ 09/14/24 12:39:11.772
  STEP: Updating "pv-738-lsc4c" Status @ 09/14/24 12:39:11.782
  I0914 12:39:11.793340 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0914 12:39:11.793357 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-ck44b"
  I0914 12:39:11.802337 20 pv.go:193] Deleting PersistentVolume "pv-738-lsc4c"
  I0914 12:39:11.818897 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-738" for this suite. @ 09/14/24 12:39:11.823
â€¢ [0.135 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/14/24 12:39:11.831
  I0914 12:39:11.831316 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/24 12:39:11.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:11.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:11.902
  I0914 12:39:11.909004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6898" for this suite. @ 09/14/24 12:39:11.912
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/14/24 12:39:11.92
  I0914 12:39:11.920405 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename events @ 09/14/24 12:39:11.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:11.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:11.943
  STEP: creating a test event @ 09/14/24 12:39:11.946
  STEP: listing events in all namespaces @ 09/14/24 12:39:11.955
  STEP: listing events in test namespace @ 09/14/24 12:39:11.968
  STEP: listing events with field selection filtering on source @ 09/14/24 12:39:11.972
  STEP: listing events with field selection filtering on reportingController @ 09/14/24 12:39:11.976
  STEP: getting the test event @ 09/14/24 12:39:11.986
  STEP: patching the test event @ 09/14/24 12:39:11.989
  STEP: getting the test event @ 09/14/24 12:39:11.999
  STEP: updating the test event @ 09/14/24 12:39:12.003
  STEP: getting the test event @ 09/14/24 12:39:12.012
  STEP: deleting the test event @ 09/14/24 12:39:12.015
  STEP: listing events in all namespaces @ 09/14/24 12:39:12.025
  STEP: listing events in test namespace @ 09/14/24 12:39:12.037
  I0914 12:39:12.042138 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9794" for this suite. @ 09/14/24 12:39:12.046
â€¢ [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/14/24 12:39:12.053
  I0914 12:39:12.053582 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:39:12.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:12.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:12.076
  I0914 12:39:12.126120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2481" for this suite. @ 09/14/24 12:39:12.13
â€¢ [0.085 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/14/24 12:39:12.138
  I0914 12:39:12.138329 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 12:39:12.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:12.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:12.159
  STEP: Discovering how many secrets are in namespace by default @ 09/14/24 12:39:12.162
  STEP: Counting existing ResourceQuota @ 09/14/24 12:39:17.166
  STEP: Creating a ResourceQuota @ 09/14/24 12:39:22.172
  STEP: Ensuring resource quota status is calculated @ 09/14/24 12:39:22.177
  STEP: Creating a Secret @ 09/14/24 12:39:24.184
  STEP: Ensuring resource quota status captures secret creation @ 09/14/24 12:39:24.197
  STEP: Deleting a secret @ 09/14/24 12:39:26.203
  STEP: Ensuring resource quota status released usage @ 09/14/24 12:39:26.212
  I0914 12:39:28.219137 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9534" for this suite. @ 09/14/24 12:39:28.223
â€¢ [16.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/14/24 12:39:28.231
  I0914 12:39:28.231654 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename limitrange @ 09/14/24 12:39:28.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:28.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:28.255
  STEP: Creating LimitRange "e2e-limitrange-29hnh" in namespace "limitrange-5156" @ 09/14/24 12:39:28.258
  STEP: Creating another limitRange in another namespace @ 09/14/24 12:39:28.264
  I0914 12:39:28.280921 20 limit_range.go:299] Namespace "e2e-limitrange-29hnh-493" created
  I0914 12:39:28.280941 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-29hnh" in namespace "e2e-limitrange-29hnh-493"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-29hnh" @ 09/14/24 12:39:28.285
  I0914 12:39:28.289114 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-29hnh" in "limitrange-5156" namespace @ 09/14/24 12:39:28.289
  I0914 12:39:28.295718 20 limit_range.go:335] LimitRange "e2e-limitrange-29hnh" has been patched
  STEP: Delete LimitRange "e2e-limitrange-29hnh" by Collection with labelSelector: "e2e-limitrange-29hnh=patched" @ 09/14/24 12:39:28.295
  STEP: Confirm that the limitRange "e2e-limitrange-29hnh" has been deleted @ 09/14/24 12:39:28.306
  I0914 12:39:28.306048 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0914 12:39:28.309695 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-29hnh=patched"
  I0914 12:39:28.309718 20 limit_range.go:344] LimitRange "e2e-limitrange-29hnh" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-29hnh" @ 09/14/24 12:39:28.309
  I0914 12:39:28.313461 20 limit_range.go:350] Found 1 limitRange
  I0914 12:39:28.313587 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5156" for this suite. @ 09/14/24 12:39:28.317
  STEP: Destroying namespace "e2e-limitrange-29hnh-493" for this suite. @ 09/14/24 12:39:28.326
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/14/24 12:39:28.334
  I0914 12:39:28.334863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename server-version @ 09/14/24 12:39:28.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:28.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:28.357
  STEP: Request ServerVersion @ 09/14/24 12:39:28.36
  STEP: Confirm major version @ 09/14/24 12:39:28.361
  I0914 12:39:28.361209 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/14/24 12:39:28.361
  I0914 12:39:28.361231 20 server_version.go:58] cleanMinorVersion: 31
  I0914 12:39:28.361239 20 server_version.go:62] Minor version: 31
  I0914 12:39:28.361336 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1053" for this suite. @ 09/14/24 12:39:28.365
â€¢ [0.038 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/14/24 12:39:28.373
  I0914 12:39:28.373119 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-runtime @ 09/14/24 12:39:28.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:28.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:28.395
  STEP: create the container @ 09/14/24 12:39:28.397
  W0914 12:39:28.415378      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/14/24 12:39:28.415
  STEP: get the container status @ 09/14/24 12:39:31.438
  STEP: the container should be terminated @ 09/14/24 12:39:31.444
  STEP: the termination message should be set @ 09/14/24 12:39:31.444
  I0914 12:39:31.444140 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/14/24 12:39:31.444
  I0914 12:39:31.462089 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-813" for this suite. @ 09/14/24 12:39:31.466
â€¢ [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/14/24 12:39:31.476
  I0914 12:39:31.476308 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:39:31.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:31.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:31.498
  STEP: Creating the pod @ 09/14/24 12:39:31.501
  I0914 12:39:34.052677 20 pod_client.go:173] Successfully updated pod "labelsupdate30d1b787-0eee-494d-99c9-6f735745c5db"
  I0914 12:39:36.071294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6082" for this suite. @ 09/14/24 12:39:36.076
â€¢ [4.610 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/14/24 12:39:36.086
  I0914 12:39:36.086468 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/24 12:39:36.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:36.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:36.111
  STEP: getting /apis @ 09/14/24 12:39:36.119
  STEP: getting /apis/admissionregistration.k8s.io @ 09/14/24 12:39:36.122
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/14/24 12:39:36.123
  STEP: creating @ 09/14/24 12:39:36.124
  STEP: getting @ 09/14/24 12:39:36.14
  STEP: listing @ 09/14/24 12:39:36.144
  STEP: watching @ 09/14/24 12:39:36.148
  I0914 12:39:36.148707 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/14/24 12:39:36.149
  STEP: updating @ 09/14/24 12:39:36.154
  I0914 12:39:36.164137 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/14/24 12:39:36.164
  STEP: deleting a collection @ 09/14/24 12:39:36.179
  I0914 12:39:36.204145 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9401" for this suite. @ 09/14/24 12:39:36.209
â€¢ [0.130 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/14/24 12:39:36.217
  I0914 12:39:36.217147 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename podtemplate @ 09/14/24 12:39:36.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:36.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:36.245
  STEP: Create a pod template @ 09/14/24 12:39:36.247
  STEP: Replace a pod template @ 09/14/24 12:39:36.253
  I0914 12:39:36.264423 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0914 12:39:36.264537 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5109" for this suite. @ 09/14/24 12:39:36.268
â€¢ [0.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/14/24 12:39:36.276
  I0914 12:39:36.276502 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename podtemplate @ 09/14/24 12:39:36.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:36.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:36.296
  I0914 12:39:36.334604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4441" for this suite. @ 09/14/24 12:39:36.338
â€¢ [0.070 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/14/24 12:39:36.346
  I0914 12:39:36.346736 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 12:39:36.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:36.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:36.368
  STEP: Creating a job @ 09/14/24 12:39:36.371
  STEP: Ensuring active pods == parallelism @ 09/14/24 12:39:36.379
  STEP: Orphaning one of the Job's Pods @ 09/14/24 12:39:38.385
  I0914 12:39:38.906154 20 pod_client.go:173] Successfully updated pod "adopt-release-6jwhk"
  STEP: Checking that the Job readopts the Pod @ 09/14/24 12:39:38.906
  STEP: Removing the labels from the Job's Pod @ 09/14/24 12:39:40.916
  I0914 12:39:41.430592 20 pod_client.go:173] Successfully updated pod "adopt-release-6jwhk"
  STEP: Checking that the Job releases the Pod @ 09/14/24 12:39:41.43
  I0914 12:39:43.441019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1773" for this suite. @ 09/14/24 12:39:43.444
â€¢ [7.105 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/14/24 12:39:43.452
  I0914 12:39:43.452445 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/24 12:39:43.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:43.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:43.474
  I0914 12:39:45.511249 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7216" for this suite. @ 09/14/24 12:39:45.516
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/14/24 12:39:45.528
  I0914 12:39:45.528607 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename apf @ 09/14/24 12:39:45.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:45.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:45.553
  STEP: getting /apis @ 09/14/24 12:39:45.555
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/14/24 12:39:45.558
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/14/24 12:39:45.559
  STEP: creating @ 09/14/24 12:39:45.56
  STEP: getting @ 09/14/24 12:39:45.578
  STEP: listing @ 09/14/24 12:39:45.583
  STEP: watching @ 09/14/24 12:39:45.587
  I0914 12:39:45.587523 20 flowcontrol.go:620] starting watch
  STEP: patching @ 09/14/24 12:39:45.588
  STEP: updating @ 09/14/24 12:39:45.594
  I0914 12:39:45.602937 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/14/24 12:39:45.603
  STEP: patching /status @ 09/14/24 12:39:45.607
  STEP: updating /status @ 09/14/24 12:39:45.612
  STEP: deleting @ 09/14/24 12:39:45.622
  STEP: deleting a collection @ 09/14/24 12:39:45.638
  I0914 12:39:45.663314 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4701" for this suite. @ 09/14/24 12:39:45.667
â€¢ [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/14/24 12:39:45.675
  I0914 12:39:45.675077 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 12:39:45.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:45.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:45.697
  STEP: Creating a pod to test substitution in volume subpath @ 09/14/24 12:39:45.7
  STEP: Saw pod success @ 09/14/24 12:39:49.726
  I0914 12:39:49.730590 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod var-expansion-d3c14b0b-4975-49e7-b4ac-fa0ce3d53e01 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 12:39:49.738
  I0914 12:39:49.755888 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9431" for this suite. @ 09/14/24 12:39:49.76
â€¢ [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/14/24 12:39:49.767
  I0914 12:39:49.767536 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/24 12:39:49.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:39:49.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:39:49.79
  I0914 12:39:49.809775 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0914 12:40:49.815503 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/14/24 12:40:49.819
  I0914 12:40:49.837428 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0914 12:40:49.844080 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0914 12:40:49.857489 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0914 12:40:49.862450 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0914 12:40:49.874747 20 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I0914 12:40:49.881562 20 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/14/24 12:40:49.881
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/14/24 12:40:51.916
  I0914 12:40:56.021269 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1132" for this suite. @ 09/14/24 12:40:56.025
â€¢ [66.264 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/14/24 12:40:56.032
  I0914 12:40:56.032344 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 12:40:56.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:40:56.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:40:56.057
  I0914 12:40:56.059941 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0914 12:40:56.064648 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0914 12:40:56.072119 20 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0914 12:40:58.082744 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0914 12:40:58.085969 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0914 12:40:58.096519 20 deployment.go:313] Updating deployment test-recreate-deployment
  I0914 12:40:58.096540 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0914 12:40:58.190950 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2888268e-56ac-4003-b2d3-c6ede66e362f",
      ResourceVersion: (string) (len=5) "15481",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861914456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 12:40:58.195668 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba25287a-32da-44b9-ab9e-62854dee8fa3",
      ResourceVersion: (string) (len=5) "15480",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861914458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2888268e-56ac-4003-b2d3-c6ede66e362f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 38 38 32 36  38 65 2d 35 36 61 63 2d  |\"2888268e-56ac-|
              00000120  34 30 30 33 2d 62 32 64  33 2d 63 36 65 64 65 36  |4003-b2d3-c6ede6|
              00000130  36 65 33 36 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6e362f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 12:40:58.196477 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0914 12:40:58.196745 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c4a2768-f4dc-4bd8-829f-155fbb0a2bf6",
      ResourceVersion: (string) (len=5) "15470",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861914456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2888268e-56ac-4003-b2d3-c6ede66e362f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 38 38 32 36  38 65 2d 35 36 61 63 2d  |\"2888268e-56ac-|
              00000120  34 30 30 33 2d 62 32 64  33 2d 63 36 65 64 65 36  |4003-b2d3-c6ede6|
              00000130  36 65 33 36 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6e362f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 12:40:58.202081 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-d6f6w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-d6f6w",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-4833",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb1531c2-7514-4e35-be25-8f72aac4b2b7",
      ResourceVersion: (string) (len=5) "15482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861914458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "ba25287a-32da-44b9-ab9e-62854dee8fa3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  32 35 32 38 37 61 2d 33  |d\":\"ba25287a-3|
              00000090  32 64 61 2d 34 34 62 39  2d 61 62 39 65 2d 36 32  |2da-44b9-ab9e-62|
              000000a0  38 35 34 64 65 65 38 66  61 33 5c 22 7d 22 3a 7b  |854dee8fa3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6h58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6h58",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861914458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861914458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z6h58",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 12:40:58.203327 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4833" for this suite. @ 09/14/24 12:40:58.207
â€¢ [2.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/14/24 12:40:58.217
  I0914 12:40:58.217920 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 12:40:58.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:40:58.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:40:58.239
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/24 12:40:58.263
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 12:40:58.27
  I0914 12:40:58.276750 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:40:58.276779 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:40:58.280735 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:40:58.280757 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:40:59.276094 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:40:59.276134 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:40:59.280979 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:40:59.280997 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:41:00.277791 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:00.278061 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:00.283408 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 12:41:00.283426 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/14/24 12:41:00.288
  I0914 12:41:00.308195 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:00.308225 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:00.311912 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 12:41:00.311926 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:41:01.308520 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:01.308663 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:01.312769 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 12:41:01.312856 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:41:02.309294 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:02.309328 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:02.313316 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 12:41:02.313332 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  I0914 12:41:03.309419 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:03.309457 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:41:03.313201 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 12:41:03.313221 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 12:41:03.318
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1588, will wait for the garbage collector to delete the pods @ 09/14/24 12:41:03.318
  I0914 12:41:03.381590 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.566851ms
  I0914 12:41:03.481747 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.144564ms
  I0914 12:41:05.687518 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:41:05.687556 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 12:41:05.690953 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15701"},"items":null}

  I0914 12:41:05.695147 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15701"},"items":null}

  I0914 12:41:05.711771 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1588" for this suite. @ 09/14/24 12:41:05.716
â€¢ [7.508 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/14/24 12:41:05.725
  I0914 12:41:05.725824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:41:05.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:05.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:05.75
  STEP: validating api versions @ 09/14/24 12:41:05.753
  I0914 12:41:05.753697 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-3937 api-versions'
  I0914 12:41:05.791579 20 builder.go:146] stderr: ""
  I0914 12:41:05.791623 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0914 12:41:05.791703 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3937" for this suite. @ 09/14/24 12:41:05.797
â€¢ [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/14/24 12:41:05.806
  I0914 12:41:05.806199 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-runtime @ 09/14/24 12:41:05.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:05.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:05.825
  STEP: create the container @ 09/14/24 12:41:05.828
  W0914 12:41:05.838070      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/14/24 12:41:05.838
  STEP: get the container status @ 09/14/24 12:41:08.861
  STEP: the container should be terminated @ 09/14/24 12:41:08.865
  STEP: the termination message should be set @ 09/14/24 12:41:08.865
  I0914 12:41:08.865589 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/14/24 12:41:08.865
  I0914 12:41:08.887184 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2706" for this suite. @ 09/14/24 12:41:08.891
â€¢ [3.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/14/24 12:41:08.899
  I0914 12:41:08.899817 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 12:41:08.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:08.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:08.924
  STEP: creating a ReplicationController @ 09/14/24 12:41:08.93
  STEP: waiting for RC to be added @ 09/14/24 12:41:08.937
  STEP: waiting for available Replicas @ 09/14/24 12:41:08.937
  STEP: patching ReplicationController @ 09/14/24 12:41:10.103
  STEP: waiting for RC to be modified @ 09/14/24 12:41:10.11
  STEP: patching ReplicationController status @ 09/14/24 12:41:10.111
  STEP: waiting for RC to be modified @ 09/14/24 12:41:10.118
  STEP: waiting for available Replicas @ 09/14/24 12:41:10.118
  STEP: fetching ReplicationController status @ 09/14/24 12:41:10.123
  STEP: patching ReplicationController scale @ 09/14/24 12:41:10.127
  STEP: waiting for RC to be modified @ 09/14/24 12:41:10.133
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/14/24 12:41:10.133
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/14/24 12:41:11.62
  STEP: updating ReplicationController status @ 09/14/24 12:41:11.625
  STEP: waiting for RC to be modified @ 09/14/24 12:41:11.632
  STEP: listing all ReplicationControllers @ 09/14/24 12:41:11.632
  STEP: checking that ReplicationController has expected values @ 09/14/24 12:41:11.638
  STEP: deleting ReplicationControllers by collection @ 09/14/24 12:41:11.638
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/14/24 12:41:11.65
  I0914 12:41:11.697686 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 12:41:11.697909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6496" for this suite. @ 09/14/24 12:41:11.702
â€¢ [2.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/14/24 12:41:11.711
  I0914 12:41:11.711923 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename containers @ 09/14/24 12:41:11.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:11.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:11.733
  STEP: Creating a pod to test override all @ 09/14/24 12:41:11.736
  E0914 12:41:12.698037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:13.698345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:14.698850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:15.699012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:41:15.761
  I0914 12:41:15.765622 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod client-containers-9825082a-dc6b-468e-94c1-2a67fe715205 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:41:15.773
  I0914 12:41:15.789266 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4277" for this suite. @ 09/14/24 12:41:15.793
â€¢ [4.091 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/14/24 12:41:15.803
  I0914 12:41:15.803606 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/24 12:41:15.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:15.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:15.825
  I0914 12:41:15.832224 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6030" for this suite. @ 09/14/24 12:41:15.836
â€¢ [0.041 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/14/24 12:41:15.844
  I0914 12:41:15.844805 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 12:41:15.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:15.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:15.867
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/14/24 12:41:15.871
  E0914 12:41:16.699777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:17.699862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:18.700914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:19.701024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:41:19.901
  I0914 12:41:19.905393 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-006d5e41-8ff8-4f82-95ea-ac53b46c152f container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:41:19.913
  I0914 12:41:19.935129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5546" for this suite. @ 09/14/24 12:41:19.938
â€¢ [4.102 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/14/24 12:41:19.946
  I0914 12:41:19.946920 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:41:19.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:19.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:19.971
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:41:19.974
  E0914 12:41:20.702108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:21.702279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:22.702404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:23.702908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:41:24
  I0914 12:41:24.005852 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-db7a5c24-c79d-4059-b85e-f51a65e99786 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:41:24.014
  I0914 12:41:24.031254 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3993" for this suite. @ 09/14/24 12:41:24.035
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/14/24 12:41:24.044
  I0914 12:41:24.045008 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 12:41:24.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:41:24.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:41:24.067
  STEP: Creating pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910 @ 09/14/24 12:41:24.07
  E0914 12:41:24.703081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:25.703167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 12:41:26.09
  I0914 12:41:26.095646 20 container_probe.go:1749] Initial restart count of pod liveness-960c4be9-e362-4a08-aa5c-396b426530db is 0
  I0914 12:41:26.100301 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:26.704119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:27.704244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:28.105344 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:28.705123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:29.705234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:30.110821 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:30.705428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:31.705529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:32.116784 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:32.706514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:33.707021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:34.123879 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:34.707356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:35.707563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:36.129653 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:36.708351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:37.708535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:38.136052 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:38.708797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:39.709217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:40.142131 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:40.709310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:41.709408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:42.147907 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:42.709514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:43.709896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:44.154789 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:44.710023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:45.710116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:46.161711 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:46.710317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:47.710408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:48.168430 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:48.710957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:49.711165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:50.173820 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:50.711386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:51.711519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:52.179859 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:52.711557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:53.712125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:54.186381 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:54.713061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:55.713149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:56.192294 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:56.713977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:57.714294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:41:58.198705 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:41:58.714450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:41:59.714633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:00.205658 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:00.715288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:01.715517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:02.211035 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:02.715621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:03.716103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:04.217366 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:04.717062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:05.717162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:06.223545 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:06.718133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:07.718197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:08.229550 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:08.719066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:09.719541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:10.235583 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:10.719771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:11.719955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:12.241065 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:12.720681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:13.720991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:14.247065 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:14.721229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:15.721336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:16.253894 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:16.721418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:17.721512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:18.259222 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:18.721884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:19.722103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:20.265943 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:20.722418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:21.722512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:22.271508 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:22.722625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:23.723004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:24.276394 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:24.724008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:25.724204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:26.282536 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:26.725112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:27.725341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:28.288012 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:28.725668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:29.725846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:30.294103 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:30.726753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:31.726922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:32.300263 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:32.727949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:33.728417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:34.307440 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:34.729039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:35.729237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:36.313954 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:36.729401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:37.729493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:38.320463 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:38.730260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:39.730336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:40.325499 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:40.730601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:41.730695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:42.331254 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:42.730748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:43.730836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:44.337571 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:44.731002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:45.731143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:46.345701 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:46.732221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:47.732309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:48.352496 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:48.733026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:49.733372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:50.358134 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:50.733543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:51.733650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:52.363574 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:52.733984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:53.734325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:54.370033 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:54.734467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:55.734566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:56.376325 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:56.734764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:57.734854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:42:58.381547 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:42:58.734988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:42:59.735099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:00.387764 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:00.735234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:01.735330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:02.393658 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:02.736129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:03.736324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:04.399300 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:04.736643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:05.737299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:06.406744 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:06.738266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:07.739313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:08.412878 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:08.740390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:09.740483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:10.418664 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:10.741135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:11.741225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:12.424529 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:12.741909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:13.742934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:14.430227 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:14.743652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:15.743820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:16.435558 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:16.744063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:17.744119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:18.442409 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:18.744906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:19.745001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:20.447908 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:20.745315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:21.745614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:22.453518 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:22.745714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:23.746005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:24.459551 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:24.746997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:25.747216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:26.465515 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:26.747940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:27.748117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:28.471373 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:28.748923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:29.749792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:30.476475 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:30.749811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:31.749989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:32.482220 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:32.750546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:33.750929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:34.488102 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:34.751456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:35.751562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:36.493197 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:36.752638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:37.753262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:38.498605 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:38.754109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:39.754348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:40.505636 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:40.755056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:41.755257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:42.511399 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:42.755836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:43.756108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:44.518259 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:44.756569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:45.756656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:46.524261 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:46.757629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:47.757912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:48.529976 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:48.758575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:49.759565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:50.535597 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:50.759860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:51.760047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:52.542539 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:52.760891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:53.761178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:54.547884 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:54.762219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:55.762436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:56.554301 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:56.762624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:57.762823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:43:58.559368 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:43:58.763856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:43:59.763961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:00.565612 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:00.765024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:01.765236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:02.571821 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:02.766134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:03.767058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:04.576436 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:04.767787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:05.768066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:06.582772 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:06.769072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:07.769870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:08.589415 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:08.770944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:09.771147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:10.596357 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:10.771792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:11.771899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:12.602894 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:12.772051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:13.772089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:14.608577 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:14.772954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:15.773158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:16.614158 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:16.773554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:17.773756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:18.620799 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:18.774084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:19.774209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:20.631949 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:20.775022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:21.775220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:22.641917 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:22.775292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:23.775825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:24.648738 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:24.776011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:25.776230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:26.654066 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:26.776292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:27.777207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:28.659471 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:28.777683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:29.777922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:30.665982 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:30.778373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:31.778617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:32.671184 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:32.779421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:33.779943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:34.676957 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:34.780172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:35.780273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:36.682114 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:36.781337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:37.781520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:38.687720 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:38.782077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:39.782257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:40.693948 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:40.783181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:41.783432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:42.699141 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:42.784352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:43.784677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:44.705352 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:44.785556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:45.786592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:46.710429 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:46.787686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:47.787745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:48.715863 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:48.788063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:49.788133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:50.722277 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:50.788430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:51.788531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:52.728401 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:52.789558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:53.789863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:54.734469 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:54.790584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:55.790681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:56.740483 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:56.790757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:57.790962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:44:58.747433 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:44:58.791628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:44:59.791751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:00.752901 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:00.792086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:01.792374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:02.760044 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:02.793414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:03.793687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:04.766400 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:04.794637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:05.794882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:06.773460 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:06.795688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:07.795869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:08.780051 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:08.796269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:09.796397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:10.786034 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:10.797335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:11.797497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:12.791657 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:12.797797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:13.798085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:14.797883 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:14.798854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:15.798986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:16.799298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:16.804271 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:17.800115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:18.801041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:18.810003 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:19.802122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:20.803078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:20.815745 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:21.803317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:22.803494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:22.820997 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:23.804122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:24.804255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:24.827480 20 container_probe.go:1759] Get pod liveness-960c4be9-e362-4a08-aa5c-396b426530db in namespace container-probe-2910
  E0914 12:45:25.804358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:26.805293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/14/24 12:45:26.828
  I0914 12:45:26.848460 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2910" for this suite. @ 09/14/24 12:45:26.853
â€¢ [242.816 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/14/24 12:45:26.861
  I0914 12:45:26.861690 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 12:45:26.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:26.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:26.885
  STEP: creating a ServiceAccount @ 09/14/24 12:45:26.888
  STEP: watching for the ServiceAccount to be added @ 09/14/24 12:45:26.896
  STEP: patching the ServiceAccount @ 09/14/24 12:45:26.897
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/14/24 12:45:26.903
  STEP: deleting the ServiceAccount @ 09/14/24 12:45:26.906
  I0914 12:45:26.926889 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2386" for this suite. @ 09/14/24 12:45:26.933
â€¢ [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/14/24 12:45:26.94
  I0914 12:45:26.940615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 12:45:26.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:26.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:26.965
  STEP: Given a ReplicationController is created @ 09/14/24 12:45:26.968
  STEP: When the matched label of one of its pods change @ 09/14/24 12:45:26.974
  I0914 12:45:26.979028 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0914 12:45:27.805391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:28.805476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:29.805674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:30.805936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:31.806184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:31.984195 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/14/24 12:45:31.996
  E0914 12:45:32.806424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:33.006261 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5430" for this suite. @ 09/14/24 12:45:33.01
â€¢ [6.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/14/24 12:45:33.019
  I0914 12:45:33.019740 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:45:33.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:33.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:33.039
  STEP: Creating secret with name secret-test-map-b424c122-bb6d-4c26-8da7-c0966e1c3732 @ 09/14/24 12:45:33.042
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:45:33.047
  E0914 12:45:33.807136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:34.807319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:35.807435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:36.807558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:45:37.078
  I0914 12:45:37.083010 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-secrets-ae610783-871e-478e-b0aa-38aa014c0c95 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:45:37.099
  I0914 12:45:37.120961 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3333" for this suite. @ 09/14/24 12:45:37.126
â€¢ [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/14/24 12:45:37.137
  I0914 12:45:37.137021 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 12:45:37.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:37.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:37.16
  STEP: Creating a suspended job @ 09/14/24 12:45:37.167
  STEP: Patching the Job @ 09/14/24 12:45:37.172
  STEP: Watching for Job to be patched @ 09/14/24 12:45:37.189
  I0914 12:45:37.191041 20 job.go:1330] Event ADDED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-job-label:e2e-cmb77] and annotations: map[]
  I0914 12:45:37.191076 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-job-label:e2e-cmb77] and annotations: map[]
  I0914 12:45:37.191119 20 job.go:1333] Event MODIFIED found for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[]
  STEP: Updating the job @ 09/14/24 12:45:37.191
  STEP: Watching for Job to be updated @ 09/14/24 12:45:37.201
  I0914 12:45:37.202504 20 job.go:1333] Event MODIFIED found for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:37.202530 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/14/24 12:45:37.202
  I0914 12:45:37.207203 20 job.go:1233] Job: e2e-cmb77 as labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77]
  STEP: Waiting for job to complete @ 09/14/24 12:45:37.207
  E0914 12:45:37.807922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:38.808049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:39.808743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:40.808853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:41.809195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:42.809641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:43.809945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:44.810134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:45.810992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:46.811088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/14/24 12:45:47.218
  STEP: Watching for Job to be deleted @ 09/14/24 12:45:47.229
  I0914 12:45:47.231366 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231477 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231500 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231621 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231669 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231699 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231778 20 job.go:1330] Event MODIFIED observed for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  I0914 12:45:47.231892 20 job.go:1333] Event DELETED found for Job e2e-cmb77 in namespace job-6157 with labels: map[e2e-cmb77:patched e2e-job-label:e2e-cmb77] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/14/24 12:45:47.231
  I0914 12:45:47.236294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6157" for this suite. @ 09/14/24 12:45:47.243
â€¢ [10.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/14/24 12:45:47.254
  I0914 12:45:47.254687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:45:47.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:47.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:47.278
  STEP: Creating secret with name secret-test-87b573af-1062-4870-bf8d-dddf283a3121 @ 09/14/24 12:45:47.281
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:45:47.287
  E0914 12:45:47.812111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:48.812604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:49.812698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:50.813303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:45:51.318
  I0914 12:45:51.324248 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-783f3d80-31d2-42e6-99c6-aa2214c91342 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:45:51.343
  I0914 12:45:51.360882 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8249" for this suite. @ 09/14/24 12:45:51.364
â€¢ [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/14/24 12:45:51.372
  I0914 12:45:51.372644 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/14/24 12:45:51.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:51.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:51.394
  STEP: getting /apis @ 09/14/24 12:45:51.397
  STEP: getting /apis/storage.k8s.io @ 09/14/24 12:45:51.4
  STEP: getting /apis/storage.k8s.io/v1 @ 09/14/24 12:45:51.401
  STEP: creating @ 09/14/24 12:45:51.402
  STEP: watching @ 09/14/24 12:45:51.421
  I0914 12:45:51.421194 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/14/24 12:45:51.428
  STEP: listing in namespace @ 09/14/24 12:45:51.434
  STEP: listing across namespaces @ 09/14/24 12:45:51.438
  STEP: patching @ 09/14/24 12:45:51.442
  STEP: updating @ 09/14/24 12:45:51.448
  I0914 12:45:51.453482 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0914 12:45:51.453633 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/14/24 12:45:51.453
  STEP: deleting a collection @ 09/14/24 12:45:51.469
  I0914 12:45:51.490508 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6068" for this suite. @ 09/14/24 12:45:51.495
â€¢ [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/14/24 12:45:51.503
  I0914 12:45:51.503208 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context @ 09/14/24 12:45:51.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:51.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:51.524
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/14/24 12:45:51.527
  E0914 12:45:51.813419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:52.813450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:53.814442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:54.814618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:45:55.553
  I0914 12:45:55.557860 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod security-context-4dd9c233-4cc7-4e56-935f-29c3e9473366 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:45:55.566
  I0914 12:45:55.581481 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3743" for this suite. @ 09/14/24 12:45:55.585
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/14/24 12:45:55.593
  I0914 12:45:55.593286 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename watch @ 09/14/24 12:45:55.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:55.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:55.616
  STEP: getting a starting resourceVersion @ 09/14/24 12:45:55.619
  STEP: starting a background goroutine to produce watch events @ 09/14/24 12:45:55.623
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/14/24 12:45:55.623
  E0914 12:45:55.814818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:56.815527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:57.816139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:45:58.401392 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8032" for this suite. @ 09/14/24 12:45:58.45
â€¢ [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/14/24 12:45:58.504
  I0914 12:45:58.504037 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename taint-single-pod @ 09/14/24 12:45:58.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:45:58.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:45:58.525
  I0914 12:45:58.528283 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0914 12:45:58.817022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:45:59.817216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:00.818271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:01.818366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:02.818463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:03.818914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:04.819056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:05.819760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:06.820354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:07.820516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:08.820824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:09.820910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:10.821156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:11.821389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:12.822143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:13.823065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:14.823112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:15.823360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:16.823452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:17.823637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:18.824505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:19.825311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:20.826364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:21.827321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:22.827431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:23.827925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:24.828902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:25.829519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:26.829612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:27.829789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:28.829855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:29.830035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:30.830249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:31.830430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:32.830712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:33.831032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:34.832071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:35.832164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:36.832919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:37.833053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:38.833513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:39.834586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:40.834760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:41.834971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:42.835099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:43.835594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:44.836427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:45.837318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:46.837443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:47.837656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:48.837762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:49.838605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:50.838662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:51.839732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:52.839830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:53.840089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:54.840676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:55.840778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:56.840906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:57.841276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:46:58.529248 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 12:46:58.534363 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/14/24 12:46:58.534
  I0914 12:46:58.753203 20 taints.go:294] Pod is running on ip-172-31-8-243. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/14/24 12:46:58.753
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/24 12:46:58.764
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/14/24 12:46:58.771
  I0914 12:46:58.771462 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0914 12:46:58.771500 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/24 12:46:58.783
  STEP: Waiting some time to make sure that toleration time passed. @ 09/14/24 12:46:58.79
  E0914 12:46:58.841814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:46:59.842505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:00.842686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:01.842929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:02.843151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:03.844200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:04.845205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:05.845300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:06.845548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:07.845664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:08.846016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:09.846204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:10.846256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:11.846436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:12.846603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:13.846982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:14.847120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:15.847305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:16.847494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:17.847695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:18.847827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:19.848040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:20.848281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:21.849201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:22.849300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:23.849640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:24.849823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:25.850436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:26.850569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:27.851085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:28.851643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:29.852606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:30.852703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:31.853212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:32.853405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:33.853651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:34.853775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:35.853890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:36.854082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:37.854286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:38.854541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:39.854727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:40.854926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:41.855119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:42.855326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:43.855740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:44.855934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:45.856123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:46.856267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:47.857224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:48.858054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:49.858151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:50.858391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:51.858549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:52.858884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:53.859110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:54.860053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:55.860126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:56.861188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:57.861372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:58.861937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:47:59.862157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:00.862284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:01.862522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:02.862620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:03.862996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:04.863166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:05.863434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:06.863522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:07.863733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:08.864021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:09.864129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:10.865206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:11.865397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:12.865599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:48:13.790735 20 taints.go:329] Pod wasn't evicted. Test successful
  I0914 12:48:13.790904 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3255" for this suite. @ 09/14/24 12:48:13.796
â€¢ [135.301 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/14/24 12:48:13.805
  I0914 12:48:13.805110 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 12:48:13.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:13.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:13.829
  STEP: Creating a test namespace @ 09/14/24 12:48:13.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:13.853
  STEP: Creating a pod in the namespace @ 09/14/24 12:48:13.856
  E0914 12:48:13.866191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pod to have running status @ 09/14/24 12:48:13.866
  E0914 12:48:14.866420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:15.866572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/14/24 12:48:15.875
  STEP: Waiting for the namespace to be removed. @ 09/14/24 12:48:15.885
  E0914 12:48:16.867242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:17.868135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:18.869104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:19.869225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:20.869355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:21.869470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:22.869559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:23.869877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:24.869975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:25.870068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:26.870163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/14/24 12:48:26.891
  STEP: Verifying there are no pods in the namespace @ 09/14/24 12:48:26.912
  I0914 12:48:26.916493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4364" for this suite. @ 09/14/24 12:48:26.92
  STEP: Destroying namespace "nsdeletetest-384" for this suite. @ 09/14/24 12:48:26.928
  I0914 12:48:26.934669 20 framework.go:370] Namespace nsdeletetest-384 was already deleted
  STEP: Destroying namespace "nsdeletetest-7194" for this suite. @ 09/14/24 12:48:26.934
â€¢ [13.137 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/14/24 12:48:26.942
  I0914 12:48:26.942317 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/14/24 12:48:26.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:26.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:26.963
  STEP: creating @ 09/14/24 12:48:26.966
  STEP: getting @ 09/14/24 12:48:26.987
  STEP: listing in namespace @ 09/14/24 12:48:26.992
  STEP: patching @ 09/14/24 12:48:26.996
  STEP: deleting @ 09/14/24 12:48:27.002
  I0914 12:48:27.022322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6446" for this suite. @ 09/14/24 12:48:27.027
â€¢ [0.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/14/24 12:48:27.034
  I0914 12:48:27.034350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:48:27.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:27.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:27.055
  STEP: Creating configMap with name projected-configmap-test-volume-map-6622afc0-c5a9-4320-8d52-c6877317d744 @ 09/14/24 12:48:27.058
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:48:27.062
  E0914 12:48:27.870255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:28.871053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:29.871148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:30.871271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:48:31.09
  I0914 12:48:31.093788 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-configmaps-e66ad9b2-5979-40da-ad3a-67197a7fe423 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:48:31.105
  I0914 12:48:31.124183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9282" for this suite. @ 09/14/24 12:48:31.128
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/14/24 12:48:31.136
  I0914 12:48:31.136676 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:48:31.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:31.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:31.16
  STEP: Creating secret with name secret-test-5d902239-5da4-4bde-956b-de71de9902d5 @ 09/14/24 12:48:31.185
  STEP: Creating a pod to test consume secrets @ 09/14/24 12:48:31.191
  E0914 12:48:31.871380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:32.871604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:33.872111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:34.872157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:48:35.219
  I0914 12:48:35.224095 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-f37f4d18-d706-427a-a445-3624a5f43ff4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:48:35.233
  I0914 12:48:35.254099 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6134" for this suite. @ 09/14/24 12:48:35.257
  STEP: Destroying namespace "secret-namespace-6935" for this suite. @ 09/14/24 12:48:35.267
â€¢ [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/14/24 12:48:35.281
  I0914 12:48:35.281220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:48:35.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:35.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:35.305
  STEP: Setting up server cert @ 09/14/24 12:48:35.336
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:48:35.536
  STEP: Deploying the webhook pod @ 09/14/24 12:48:35.546
  STEP: Wait for the deployment to be ready @ 09/14/24 12:48:35.558
  I0914 12:48:35.567270 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 12:48:35.872631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:36.873298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 12:48:37.584
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:48:37.595
  E0914 12:48:37.874230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:48:38.596043 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/14/24 12:48:38.605
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/24 12:48:38.605
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/14/24 12:48:38.617
  E0914 12:48:38.875000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/14/24 12:48:39.63
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/24 12:48:39.63
  E0914 12:48:39.875119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/14/24 12:48:40.667
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/24 12:48:40.667
  E0914 12:48:40.875567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:41.875771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:42.876091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:43.876737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:44.876803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/14/24 12:48:45.702
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/24 12:48:45.703
  E0914 12:48:45.877738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:46.877949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:47.878039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:48.878048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:49.879074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:48:50.803974 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-782" for this suite. @ 09/14/24 12:48:50.808
  STEP: Destroying namespace "webhook-markers-3948" for this suite. @ 09/14/24 12:48:50.814
â€¢ [15.541 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/14/24 12:48:50.822
  I0914 12:48:50.822310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subpath @ 09/14/24 12:48:50.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:48:50.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:48:50.845
  STEP: Setting up data @ 09/14/24 12:48:50.847
  STEP: Creating pod pod-subpath-test-projected-krbz @ 09/14/24 12:48:50.859
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/24 12:48:50.859
  E0914 12:48:50.879849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:51.880903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:52.881437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:53.881683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:54.882307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:55.882623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:56.882799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:57.882962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:58.883118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:48:59.883321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:00.883426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:01.883539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:02.883601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:03.883891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:04.884042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:05.884168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:06.884389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:07.884486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:08.885009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:09.885177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:10.885387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:11.885491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:12.885579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:13.886074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:14.886169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:49:14.948
  I0914 12:49:14.953460 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-subpath-test-projected-krbz container test-container-subpath-projected-krbz: <nil>
  STEP: delete the pod @ 09/14/24 12:49:14.961
  STEP: Deleting pod pod-subpath-test-projected-krbz @ 09/14/24 12:49:14.982
  I0914 12:49:14.982908 20 delete.go:62] Deleting pod "pod-subpath-test-projected-krbz" in namespace "subpath-8658"
  I0914 12:49:14.988014 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8658" for this suite. @ 09/14/24 12:49:14.992
â€¢ [24.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/14/24 12:49:15.001
  I0914 12:49:15.001581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/14/24 12:49:15.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:15.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:15.024
  STEP: creating a target pod @ 09/14/24 12:49:15.026
  E0914 12:49:15.886284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:16.886448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/14/24 12:49:17.051
  E0914 12:49:17.886612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:18.886721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/14/24 12:49:19.071
  I0914 12:49:19.071786 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2201 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:49:19.071803 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 12:49:19.072244 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 12:49:19.072279 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2201/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0914 12:49:19.127526 20 exec_util.go:111] Exec stderr: ""
  I0914 12:49:19.137259 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2201" for this suite. @ 09/14/24 12:49:19.142
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/14/24 12:49:19.151
  I0914 12:49:19.151827 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename events @ 09/14/24 12:49:19.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:19.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:19.174
  STEP: Create set of events @ 09/14/24 12:49:19.177
  I0914 12:49:19.182744 20 core_events.go:198] created test-event-1
  I0914 12:49:19.188785 20 core_events.go:198] created test-event-2
  I0914 12:49:19.194952 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/14/24 12:49:19.194
  STEP: delete collection of events @ 09/14/24 12:49:19.198
  I0914 12:49:19.198394 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/14/24 12:49:19.227
  I0914 12:49:19.227520 20 core_events.go:230] requesting list of events to confirm quantity
  I0914 12:49:19.232045 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9883" for this suite. @ 09/14/24 12:49:19.236
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/14/24 12:49:19.244
  I0914 12:49:19.244724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 12:49:19.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:19.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:19.27
  STEP: Creating service test in namespace statefulset-1029 @ 09/14/24 12:49:19.272
  STEP: Looking for a node to schedule stateful set and pod @ 09/14/24 12:49:19.279
  STEP: Creating pod with conflicting port in namespace statefulset-1029 @ 09/14/24 12:49:19.286
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1029 @ 09/14/24 12:49:19.294
  E0914 12:49:19.886796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:20.887000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1029 @ 09/14/24 12:49:21.305
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1029 @ 09/14/24 12:49:21.314
  I0914 12:49:21.329553 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1029, name: ss-0, uid: fd8bf7ae-9b2b-4e27-8ce2-976cb9b8d4b7, status phase: Pending. Waiting for statefulset controller to delete.
  I0914 12:49:21.351779 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1029, name: ss-0, uid: fd8bf7ae-9b2b-4e27-8ce2-976cb9b8d4b7, status phase: Failed. Waiting for statefulset controller to delete.
  I0914 12:49:21.358838 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-1029, name: ss-0, uid: fd8bf7ae-9b2b-4e27-8ce2-976cb9b8d4b7, status phase: Failed. Waiting for statefulset controller to delete.
  I0914 12:49:21.365033 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-1029
  STEP: Removing pod with conflicting port in namespace statefulset-1029 @ 09/14/24 12:49:21.365
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1029 and will be in running state @ 09/14/24 12:49:21.381
  E0914 12:49:21.887447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:22.887737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:23.393296 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1029
  I0914 12:49:23.398489 20 rest.go:150] Scaling statefulset ss to 0
  E0914 12:49:23.888006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:24.888234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:25.889212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:26.889418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:27.889504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:28.889886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:29.889952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:30.890463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:31.890642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:32.890923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:33.415102 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 12:49:33.419729 20 rest.go:88] Deleting statefulset ss
  I0914 12:49:33.434804 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1029" for this suite. @ 09/14/24 12:49:33.439
â€¢ [14.203 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/14/24 12:49:33.447
  I0914 12:49:33.447864 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 12:49:33.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:33.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:33.472
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/14/24 12:49:33.475
  E0914 12:49:33.891621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:34.891758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:35.891799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:36.892002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:49:37.503
  I0914 12:49:37.507916 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-53757c06-8172-46a5-bfc4-0b5a38de7db9 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 12:49:37.521
  I0914 12:49:37.536322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8671" for this suite. @ 09/14/24 12:49:37.54
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/14/24 12:49:37.549
  I0914 12:49:37.549318 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename controllerrevisions @ 09/14/24 12:49:37.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:37.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:37.572
  STEP: Creating DaemonSet "e2e-97wsc-daemon-set" @ 09/14/24 12:49:37.598
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 12:49:37.605
  I0914 12:49:37.610083 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:37.610108 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:37.613901 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-97wsc-daemon-set: 0
  I0914 12:49:37.613921 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 12:49:37.892146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:38.610597 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:38.610637 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:38.614145 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-97wsc-daemon-set: 1
  I0914 12:49:38.614159 20 fixtures.go:130] Node ip-172-31-65-235 is running 0 daemon pod, expected 1
  E0914 12:49:38.892521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:39.611458 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:39.611503 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 12:49:39.615395 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-97wsc-daemon-set: 3
  I0914 12:49:39.615415 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-97wsc-daemon-set
  STEP: Confirm DaemonSet "e2e-97wsc-daemon-set" successfully created with "daemonset-name=e2e-97wsc-daemon-set" label @ 09/14/24 12:49:39.619
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-97wsc-daemon-set" @ 09/14/24 12:49:39.627
  I0914 12:49:39.632135 20 controller_revision.go:162] Located ControllerRevision: "e2e-97wsc-daemon-set-bc7c7fffc"
  STEP: Patching ControllerRevision "e2e-97wsc-daemon-set-bc7c7fffc" @ 09/14/24 12:49:39.636
  I0914 12:49:39.644169 20 controller_revision.go:173] e2e-97wsc-daemon-set-bc7c7fffc has been patched
  STEP: Create a new ControllerRevision @ 09/14/24 12:49:39.644
  I0914 12:49:39.651057 20 controller_revision.go:191] Created ControllerRevision: e2e-97wsc-daemon-set-67f9b6bbd9
  STEP: Confirm that there are two ControllerRevisions @ 09/14/24 12:49:39.651
  I0914 12:49:39.651112 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 12:49:39.655456 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-97wsc-daemon-set-bc7c7fffc" @ 09/14/24 12:49:39.655
  STEP: Confirm that there is only one ControllerRevision @ 09/14/24 12:49:39.662
  I0914 12:49:39.662926 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 12:49:39.666829 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-97wsc-daemon-set-67f9b6bbd9" @ 09/14/24 12:49:39.67
  I0914 12:49:39.680629 20 controller_revision.go:220] e2e-97wsc-daemon-set-67f9b6bbd9 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/14/24 12:49:39.68
  W0914 12:49:39.687884      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/14/24 12:49:39.688
  I0914 12:49:39.688048 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0914 12:49:39.894210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:40.689783 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 12:49:40.696338 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-97wsc-daemon-set-67f9b6bbd9=updated" @ 09/14/24 12:49:40.696
  STEP: Confirm that there is only one ControllerRevision @ 09/14/24 12:49:40.707
  I0914 12:49:40.707819 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 12:49:40.712495 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0914 12:49:40.716271 20 controller_revision.go:246] ControllerRevision "e2e-97wsc-daemon-set-846649c464" has revision 3
  STEP: Deleting DaemonSet "e2e-97wsc-daemon-set" @ 09/14/24 12:49:40.719
  STEP: deleting DaemonSet.extensions e2e-97wsc-daemon-set in namespace controllerrevisions-502, will wait for the garbage collector to delete the pods @ 09/14/24 12:49:40.719
  I0914 12:49:40.785407 20 resources.go:139] Deleting DaemonSet.extensions e2e-97wsc-daemon-set took: 10.473592ms
  I0914 12:49:40.886045 20 resources.go:163] Terminating DaemonSet.extensions e2e-97wsc-daemon-set pods took: 100.632836ms
  E0914 12:49:40.895248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:41.895451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:42.492212 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-97wsc-daemon-set: 0
  I0914 12:49:42.492244 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-97wsc-daemon-set
  I0914 12:49:42.497085 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18086"},"items":null}

  I0914 12:49:42.501913 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18086"},"items":null}

  I0914 12:49:42.517826 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-502" for this suite. @ 09/14/24 12:49:42.522
â€¢ [4.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/14/24 12:49:42.531
  I0914 12:49:42.531109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:49:42.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:42.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:42.553
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:49:42.556
  E0914 12:49:42.895571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:43.896068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:49:44.576
  I0914 12:49:44.581043 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-a01d8025-4597-4d02-8353-2b8189369c86 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:49:44.589
  I0914 12:49:44.607846 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5642" for this suite. @ 09/14/24 12:49:44.611
â€¢ [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/14/24 12:49:44.62
  I0914 12:49:44.620631 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename containers @ 09/14/24 12:49:44.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:44.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:44.645
  STEP: Creating a pod to test override command @ 09/14/24 12:49:44.649
  E0914 12:49:44.896466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:45.896565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:46.897544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:47.897670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:49:48.672
  I0914 12:49:48.678098 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod client-containers-47a683ab-79e6-4e48-8546-91f684b68921 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:49:48.686
  I0914 12:49:48.701965 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-329" for this suite. @ 09/14/24 12:49:48.706
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/14/24 12:49:48.714
  I0914 12:49:48.714409 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:49:48.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:48.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:48.736
  STEP: Creating configMap with name projected-configmap-test-volume-5769bee4-7ec1-4a3b-baad-9776ac0e1438 @ 09/14/24 12:49:48.739
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:49:48.743
  E0914 12:49:48.898481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:49.899505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:49:50.764
  I0914 12:49:50.768099 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-projected-configmaps-8a362bba-8914-405a-ad3f-8667da139a79 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 12:49:50.775
  I0914 12:49:50.796077 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3276" for this suite. @ 09/14/24 12:49:50.8
â€¢ [2.093 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/14/24 12:49:50.807
  I0914 12:49:50.807825 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 12:49:50.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:50.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:50.833
  I0914 12:49:50.859083 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0914 12:49:50.859107 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0914 12:49:50.868704 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I0914 12:49:50.868726 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0914 12:49:50.875384 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0914 12:49:50.875575 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0914 12:49:50.885059 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0914 12:49:50.885077 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0914 12:49:50.891774 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0914 12:49:50.891848 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  E0914 12:49:50.900088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:50.902491 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0914 12:49:50.902513 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0914 12:49:50.910701 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0914 12:49:50.910765 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0914 12:49:50.916490 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0914 12:49:50.916565 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0914 12:49:50.924101 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0914 12:49:50.924170 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0914 12:49:50.924287 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-432" for this suite. @ 09/14/24 12:49:50.933
â€¢ [0.136 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/14/24 12:49:50.943
  I0914 12:49:50.943523 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:49:50.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:50.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:50.974
  STEP: creating the pod @ 09/14/24 12:49:50.977
  STEP: submitting the pod to kubernetes @ 09/14/24 12:49:50.977
  W0914 12:49:50.987782      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0914 12:49:51.900142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:52.901174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/14/24 12:49:53.004
  STEP: updating the pod @ 09/14/24 12:49:53.008
  I0914 12:49:53.523524 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-75377d1e-ed34-4295-88e1-8f9e1e304e42"
  E0914 12:49:53.901308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:54.901379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:55.901511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:56.901595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:49:57.536373 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5140" for this suite. @ 09/14/24 12:49:57.54
â€¢ [6.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/14/24 12:49:57.55
  I0914 12:49:57.550080 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 12:49:57.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:49:57.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:49:57.574
  STEP: Creating resourceQuota "e2e-rq-status-lzmrx" @ 09/14/24 12:49:57.579
  I0914 12:49:57.592163 20 resource_quota.go:1102] Resource quota "e2e-rq-status-lzmrx" reports spec: hard cpu limit of 500m
  I0914 12:49:57.592190 20 resource_quota.go:1104] Resource quota "e2e-rq-status-lzmrx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-lzmrx" /status @ 09/14/24 12:49:57.592
  STEP: Confirm /status for "e2e-rq-status-lzmrx" resourceQuota via watch @ 09/14/24 12:49:57.602
  I0914 12:49:57.603361 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-lzmrx" in namespace "resourcequota-9327" with hard status: v1.ResourceList(nil)
  I0914 12:49:57.603456 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-lzmrx" in namespace "resourcequota-9327" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0914 12:49:57.603465 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-lzmrx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/14/24 12:49:57.608
  I0914 12:49:57.613490 20 resource_quota.go:1152] Resource quota "e2e-rq-status-lzmrx" reports spec: hard cpu limit of 1
  I0914 12:49:57.613508 20 resource_quota.go:1153] Resource quota "e2e-rq-status-lzmrx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-lzmrx" /status @ 09/14/24 12:49:57.613
  STEP: Confirm /status for "e2e-rq-status-lzmrx" resourceQuota via watch @ 09/14/24 12:49:57.62
  I0914 12:49:57.621490 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-lzmrx" in namespace "resourcequota-9327" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0914 12:49:57.621532 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-lzmrx" in namespace "resourcequota-9327" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0914 12:49:57.621552 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-lzmrx" /status was patched
  STEP: Get "e2e-rq-status-lzmrx" /status @ 09/14/24 12:49:57.621
  I0914 12:49:57.625927 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-lzmrx" reports status: hard cpu of 1
  I0914 12:49:57.625944 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-lzmrx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-lzmrx" /status before checking Spec is unchanged @ 09/14/24 12:49:57.629
  I0914 12:49:57.635605 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-lzmrx" reports status: hard cpu of 2
  I0914 12:49:57.635624 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-lzmrx" reports status: hard memory of 2Gi
  I0914 12:49:57.636923 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-lzmrx" in namespace "resourcequota-9327" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0914 12:49:57.641337 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:49:57.901642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:58.902173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:49:59.902461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:00.902544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:01.902755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:02.642230 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61c98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:02.903613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:03.903734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:04.903826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:05.903933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:06.904154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:07.642930 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61e60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61ea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b61f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:07.904216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:08.905211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:09.905317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:10.905583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:11.905711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:12.643241 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bad938), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bad968), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bad998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:12.906623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:13.906931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:14.907148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:15.907244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:16.907453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:17.642043 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f725a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f725d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:17.908438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:18.909286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:19.909679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:20.909771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:21.909965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:22.643283 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f729d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:22.910411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:23.910503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:24.910671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:25.910867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:26.910979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:27.643423 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72c48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:27.911864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:28.912157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:29.912225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:30.912304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:31.913200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:32.642208 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:32.913515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:33.913851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:34.914143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:35.914341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:36.914447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:37.642329 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:37.914601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:38.915176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:39.915397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:40.915605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:41.915815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:42.643272 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea6d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:42.916122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:43.916157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:44.916168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:45.917226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:46.917412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:47.641877 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:47.918334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:48.918782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:49.919913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:50.920121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:51.921221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:52.642666 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f725a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f725d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:52.922005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:53.922123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:54.922218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:55.922387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:56.922570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:50:57.643344 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f729d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:50:57.922706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:58.923124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:50:59.923304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:00.923906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:01.924117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:02.643212 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:02.924683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:03.924985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:04.925324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:05.925514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:06.925754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:07.643374 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72d50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f72dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:07.926775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:08.926968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:09.927142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:10.927331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:11.927511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:12.641984 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea7b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cea810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:12.928482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:13.928704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:14.928752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:15.929509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:16.929629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:17.643069 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceaa20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceaa80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceab40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:17.930438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:18.930729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:19.930911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:20.931045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:21.931234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:22.643120 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f733b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f733f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f73440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:22.931451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:23.931749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:24.932014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:25.932138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:26.932242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:27.641865 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f737a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f73830), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f738a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:27.933174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:28.933457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:29.933691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:30.933946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:31.934229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:32.643536 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f73f08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc048), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:32.935136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:33.935192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:34.935382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:35.935669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:36.935856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:37.643371 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceaea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceaed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceaf18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:37.936749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:38.936858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:39.937243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:40.937338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:41.937518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:42.642129 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb1d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:42.938529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:43.938636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:44.939512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:45.939621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:46.940109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:47.644034 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb4b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:47.940193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:48.940881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:49.941166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:50.941274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:51.941458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:52.643618 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb7b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ceb890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:52.941956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:53.942110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:54.942276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:55.942450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:56.942665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:51:57.642408 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebb00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebb60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:51:57.942712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:58.942835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:51:59.943039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:00.943235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:01.943441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:02.643030 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebd10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebd58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cebdb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:02.944415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:03.945206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:04.945307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:05.945478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:06.945680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:07.643799 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc5b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:07.946185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:08.947186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:09.947376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:10.947741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:11.947889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:12.642386 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008920a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008920f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:12.948844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:13.948942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:14.949833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:15.950158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:16.950336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:17.642740 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008923d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:17.951094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:18.951489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:19.951702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:20.951885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:21.952103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:22.642686 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008927b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008927f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:22.953204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:23.953631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:24.953818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:25.954020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:26.954222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:27.641019 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fca08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fca38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:27.954507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:28.954803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:29.954997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:30.955220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:31.955400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:32.643193 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcbe8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcc48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcc90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:32.955515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:33.955824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:34.956040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:35.956273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:36.957264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:37.643275 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fced0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcf30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcf78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:37.957669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:38.957981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:39.958125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:40.958232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:41.959195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:42.642544 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:42.959493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:43.959430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:44.959778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:45.959871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:46.960075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:47.644179 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:47.960602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:48.961002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:49.961130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:50.961338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:51.961528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:52.641631 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc3d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:52.962045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:53.963178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:54.963284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:55.963496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:56.963717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:52:57.642580 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:52:57.964015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:58.964213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:52:59.965266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:00.965458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:01.965651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:02.643257 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fc9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fca08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fca38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:02.966681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:03.966784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:04.966977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:05.967169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:06.967293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:07.641892 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcc78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcca8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fccf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:07.967332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:08.967904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:09.968113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:10.969183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:11.969287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:12.642843 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcf78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fcff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040fd038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:12.969353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:13.969852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:14.970116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:15.970217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:16.970510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:17.643339 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008922b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:17.970625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:18.970923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:19.971131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:20.971310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:21.971401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:22.641957 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:22.972481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:23.972583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:24.973220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:25.973324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:26.973438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:27.642976 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lzmrx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lzmrx", GenerateName:"", Namespace:"resourcequota-9327", SelfLink:"", UID:"927fddfe-bc99-47bf-9084-04977ff69e0b", ResourceVersion:"18420", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lzmrx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 12, 49, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000892990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0914 12:53:27.974402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:28.974647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:29.974831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:30.974989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:31.975278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:32.642888 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-lzmrx" Spec was unchanged and /status reset
  I0914 12:53:32.643037 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9327" for this suite. @ 09/14/24 12:53:32.647
â€¢ [215.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/14/24 12:53:32.657
  I0914 12:53:32.657986 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:53:32.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:53:32.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:53:32.687
  STEP: creating a Pod with a static label @ 09/14/24 12:53:32.698
  STEP: watching for Pod to be ready @ 09/14/24 12:53:32.709
  I0914 12:53:32.711202 20 pods.go:945] observed Pod pod-test in namespace pods-1312 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0914 12:53:32.713899 20 pods.go:945] observed Pod pod-test in namespace pods-1312 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  }]
  I0914 12:53:32.733662 20 pods.go:945] observed Pod pod-test in namespace pods-1312 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  }]
  E0914 12:53:32.976024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:33.976171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:34.311762 20 pods.go:948] Found Pod pod-test in namespace pods-1312 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:34 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:34 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 12:53:32 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/14/24 12:53:34.316
  STEP: getting the Pod and ensuring that it's patched @ 09/14/24 12:53:34.325
  STEP: replacing the Pod's status Ready condition to False @ 09/14/24 12:53:34.329
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/14/24 12:53:34.341
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/14/24 12:53:34.341
  STEP: watching for the Pod to be deleted @ 09/14/24 12:53:34.352
  I0914 12:53:34.354094 20 pods.go:1058] observed event type MODIFIED
  E0914 12:53:34.976269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:35.977215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:36.312331 20 pods.go:1058] observed event type MODIFIED
  I0914 12:53:36.485580 20 pods.go:1058] observed event type MODIFIED
  E0914 12:53:36.978194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:53:37.326525 20 pods.go:1058] observed event type MODIFIED
  I0914 12:53:37.337397 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1312" for this suite. @ 09/14/24 12:53:37.342
â€¢ [4.694 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/14/24 12:53:37.352
  I0914 12:53:37.352136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 12:53:37.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:53:37.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:53:37.376
  STEP: Creating secret with name s-test-opt-del-f4eb7a67-a139-4242-9773-8f5c502d111c @ 09/14/24 12:53:37.384
  STEP: Creating secret with name s-test-opt-upd-0abd432c-e02e-444c-92cf-fabdbd757373 @ 09/14/24 12:53:37.39
  STEP: Creating the pod @ 09/14/24 12:53:37.396
  E0914 12:53:37.979118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:38.979218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f4eb7a67-a139-4242-9773-8f5c502d111c @ 09/14/24 12:53:39.456
  STEP: Updating secret s-test-opt-upd-0abd432c-e02e-444c-92cf-fabdbd757373 @ 09/14/24 12:53:39.464
  STEP: Creating secret with name s-test-opt-create-795c2a30-dea5-4120-99b7-713e616420fd @ 09/14/24 12:53:39.47
  STEP: waiting to observe update in volume @ 09/14/24 12:53:39.475
  E0914 12:53:39.979540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:40.979727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:41.980499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:42.981201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:43.981767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:44.981960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:45.982767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:46.982965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:47.983089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:48.983222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:49.983442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:50.983509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:51.983677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:52.983905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:53.984489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:54.984557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:55.985248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:56.985373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:57.985892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:58.986137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:53:59.986244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:00.986402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:01.986920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:02.987206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:03.987828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:04.988734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:05.989216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:06.989814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:07.990684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:08.990776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:09.991457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:10.991688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:11.992680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:12.992741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:13.993701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:14.993917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:15.994123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:16.994227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:17.995159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:18.995369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:19.996017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:20.996190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:21.997096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:22.997213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:23.997744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:24.997995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:25.999014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:26.999110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:27.999548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:28.999649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:30.000134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:31.001210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:32.001334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:33.001426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:34.001459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:35.001553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:36.001617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:37.001709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:38.002121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:39.002618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:40.003178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:41.003359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:42.003968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:43.004257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:44.004711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:45.005196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:46.005529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:47.005639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:48.006334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:49.006872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:50.007005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:51.007382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:52.008011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:53.008131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:54:53.859224 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7009" for this suite. @ 09/14/24 12:54:53.863
â€¢ [76.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/14/24 12:54:53.871
  I0914 12:54:53.871198 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-runtime @ 09/14/24 12:54:53.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:54:53.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:54:53.892
  STEP: create the container @ 09/14/24 12:54:53.894
  W0914 12:54:53.905956      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/14/24 12:54:53.906
  E0914 12:54:54.008919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:55.008971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:56.009263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/14/24 12:54:56.927
  STEP: the container should be terminated @ 09/14/24 12:54:56.931
  STEP: the termination message should be set @ 09/14/24 12:54:56.931
  I0914 12:54:56.931796 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/14/24 12:54:56.931
  I0914 12:54:56.949101 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9021" for this suite. @ 09/14/24 12:54:56.954
â€¢ [3.090 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/14/24 12:54:56.961
  I0914 12:54:56.961595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:54:56.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:54:56.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:54:56.983
  E0914 12:54:57.009212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/14/24 12:54:57.011
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:54:57.24
  STEP: Deploying the webhook pod @ 09/14/24 12:54:57.25
  STEP: Wait for the deployment to be ready @ 09/14/24 12:54:57.263
  I0914 12:54:57.273362 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 12:54:58.010086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:54:59.010205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 12:54:59.286
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:54:59.299
  E0914 12:55:00.010290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:00.300761 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/14/24 12:55:00.31
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/14/24 12:55:00.311
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/14/24 12:55:00.311
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/14/24 12:55:00.311
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/14/24 12:55:00.312
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/14/24 12:55:00.312
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/14/24 12:55:00.314
  I0914 12:55:00.357553 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5769" for this suite. @ 09/14/24 12:55:00.364
  STEP: Destroying namespace "webhook-markers-1582" for this suite. @ 09/14/24 12:55:00.371
â€¢ [3.419 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/14/24 12:55:00.38
  I0914 12:55:00.380383 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 12:55:00.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:00.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:00.401
  STEP: creating a Deployment @ 09/14/24 12:55:00.408
  STEP: waiting for Deployment to be created @ 09/14/24 12:55:00.413
  STEP: waiting for all Replicas to be Ready @ 09/14/24 12:55:00.415
  I0914 12:55:00.416566 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.416597 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.426498 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.426515 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.442780 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.442834 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.478697 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:55:00.478725 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0914 12:55:01.010376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:01.473240 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0914 12:55:01.473281 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0914 12:55:01.919379 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/14/24 12:55:01.919
  I0914 12:55:01.930892 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/14/24 12:55:01.93
  I0914 12:55:01.932418 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932439 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932453 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932459 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932467 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932476 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932542 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932577 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 0
  I0914 12:55:01.932616 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:01.932650 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:01.932682 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.932709 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.932773 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.932804 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.942630 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.942651 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.953502 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.953528 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:01.975274 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:01.975303 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:01.993627 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:01.993652 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  E0914 12:55:02.011196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:03.011426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:03.480702 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:03.480736 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:03.509115 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  STEP: listing Deployments @ 09/14/24 12:55:03.509
  I0914 12:55:03.513410 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/14/24 12:55:03.513
  I0914 12:55:03.525581 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/14/24 12:55:03.525
  I0914 12:55:03.532852 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:03.536199 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:03.555778 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:03.572590 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:03.584873 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0914 12:55:04.011543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:04.488562 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:04.519130 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:55:04.536445 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0914 12:55:05.012359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:05.938057 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/14/24 12:55:05.959
  STEP: fetching the DeploymentStatus @ 09/14/24 12:55:05.968
  I0914 12:55:05.977780 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:05.977804 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:05.977814 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:05.977882 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:05.977890 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 1
  I0914 12:55:05.977897 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:05.977961 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:05.977973 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 2
  I0914 12:55:05.977983 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-1963 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/14/24 12:55:05.978
  I0914 12:55:05.990415 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990438 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990446 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990508 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990514 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990521 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990567 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990573 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990579 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990646 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990656 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.990663 20 deployment.go:475] observed event type MODIFIED
  I0914 12:55:05.993920 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0914 12:55:06.000739 20 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3ef4f45-b707-40e7-8bdf-40f1f90c95f5",
      ResourceVersion: (string) (len=5) "19422",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7cf7d1a0-428b-4638-870e-73e821816b2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 63 66 37  64 31 61 30 2d 34 32 38  |":\"7cf7d1a0-428|
              00000130  62 2d 34 36 33 38 2d 38  37 30 65 2d 37 33 65 38  |b-4638-870e-73e8|
              00000140  32 31 38 31 36 62 32 66  5c 22 7d 22 3a 7b 7d 7d  |21816b2f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0914 12:55:06.006839 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-pt78t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-pt78t",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-1963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "928012fa-3072-4fd1-a332-ef4699106446",
      ResourceVersion: (string) (len=5) "19417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "a3ef4f45-b707-40e7-8bdf-40f1f90c95f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 33 65 66 34 66 34 35  |uid\":\"a3ef4f45|
              000000a0  2d 62 37 30 37 2d 34 30  65 37 2d 38 62 64 66 2d  |-b707-40e7-8bdf-|
              000000b0  34 30 66 31 66 39 30 63  39 35 66 35 5c 22 7d 22  |40f1f90c95f5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 37 33 5c 22 7d 22  |2.168.254.73\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mwxz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mwxz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=14) "192.168.254.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.254.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861915302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://5cccf8d73ad17cda2d235b23f91318322712f769a33206c339f0013e4f52d4e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5mwxz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0914 12:55:06.009029 20 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01a683ff-027a-4ea1-a8a6-702307d3caaf",
      ResourceVersion: (string) (len=5) "19309",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915300,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7cf7d1a0-428b-4638-870e-73e821816b2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 63 66 37  64 31 61 30 2d 34 32 38  |":\"7cf7d1a0-428|
              00000130  62 2d 34 36 33 38 2d 38  37 30 65 2d 37 33 65 38  |b-4638-870e-73e8|
              00000140  32 31 38 31 36 62 32 66  5c 22 7d 22 3a 7b 7d 7d  |21816b2f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  E0914 12:55:06.012619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:06.015310 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1963" for this suite. @ 09/14/24 12:55:06.022
â€¢ [5.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/14/24 12:55:06.031
  I0914 12:55:06.031565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 12:55:06.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:06.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:06.052
  I0914 12:55:06.054844 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: creating the pod @ 09/14/24 12:55:06.055
  STEP: submitting the pod to kubernetes @ 09/14/24 12:55:06.055
  E0914 12:55:07.012847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:08.012902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:08.100141 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8913" for this suite. @ 09/14/24 12:55:08.105
â€¢ [2.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/14/24 12:55:08.113
  I0914 12:55:08.113334 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pv @ 09/14/24 12:55:08.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:08.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:08.135
  STEP: Creating initial PV and PVC @ 09/14/24 12:55:08.138
  I0914 12:55:08.138358 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2308" @ 09/14/24 12:55:08.151
  STEP: Listing PVCs in namespace "pv-2308" @ 09/14/24 12:55:08.155
  STEP: Patching the PV "pv-2308-s5wqw" @ 09/14/24 12:55:08.162
  STEP: Patching the PVC "pvc-b977w" @ 09/14/24 12:55:08.172
  STEP: Getting PV "pv-2308-s5wqw" @ 09/14/24 12:55:08.183
  STEP: Getting PVC "pvc-b977w" @ 09/14/24 12:55:08.186
  STEP: Deleting PVC "pvc-b977w" @ 09/14/24 12:55:08.19
  STEP: Confirm deletion of PVC "pvc-b977w" @ 09/14/24 12:55:08.201
  E0914 12:55:09.013220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:10.013364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2308-s5wqw" @ 09/14/24 12:55:10.211
  STEP: Confirm deletion of PV "pv-2308-s5wqw" @ 09/14/24 12:55:10.222
  E0914 12:55:11.014404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:12.014545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/14/24 12:55:12.232
  I0914 12:55:12.232199 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2308-4ffjr" @ 09/14/24 12:55:12.243
  STEP: Updating the PVC "pvc-l2xw4" @ 09/14/24 12:55:12.272
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-l2xw4=updated" @ 09/14/24 12:55:12.282
  STEP: Deleting PVC "pvc-l2xw4" via DeleteCollection @ 09/14/24 12:55:12.286
  STEP: Confirm deletion of PVC "pvc-l2xw4" @ 09/14/24 12:55:12.296
  E0914 12:55:13.014629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:14.014797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2308-4ffjr" via DeleteCollection @ 09/14/24 12:55:14.305
  STEP: Confirm deletion of PV "pv-2308-4ffjr" @ 09/14/24 12:55:14.316
  E0914 12:55:15.014922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:16.015061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:16.327379 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0914 12:55:16.327408 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-l2xw4"
  I0914 12:55:16.332393 20 pv.go:193] Deleting PersistentVolume "pv-2308-4ffjr"
  I0914 12:55:16.336334 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2308" for this suite. @ 09/14/24 12:55:16.34
â€¢ [8.234 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/14/24 12:55:16.347
  I0914 12:55:16.347770 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:55:16.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:16.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:16.37
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/24 12:55:16.373
  I0914 12:55:16.373627 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-1068 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0914 12:55:16.423859 20 builder.go:146] stderr: ""
  I0914 12:55:16.423890 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/14/24 12:55:16.423
  E0914 12:55:17.015563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:18.015740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:19.016040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:20.016157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:21.016285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/14/24 12:55:21.474
  I0914 12:55:21.475098 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-1068 get pod e2e-test-httpd-pod -o json'
  I0914 12:55:21.518178 20 builder.go:146] stderr: ""
  I0914 12:55:21.518271 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-14T12:55:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1068\",\n        \"resourceVersion\": \"19603\",\n        \"uid\": \"8d114049-05df-486a-b373-fc83ed1263e6\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vk5ln\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-8-243\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-vk5ln\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-14T12:55:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-14T12:55:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-14T12:55:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-14T12:55:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-14T12:55:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6b96376796a51a9a15b7ccfede8f14a3e4b6fae0e5e4456af8f3f2ce017e7244\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-14T12:55:16Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vk5ln\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.8.243\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.8.243\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.254.75\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.254.75\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-14T12:55:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/14/24 12:55:21.518
  I0914 12:55:21.518519 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-1068 replace -f -'
  I0914 12:55:21.598755 20 builder.go:146] stderr: ""
  I0914 12:55:21.598797 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/14/24 12:55:21.598
  I0914 12:55:21.604021 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-1068 delete pods e2e-test-httpd-pod'
  E0914 12:55:22.016953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:23.017362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:23.513308 20 builder.go:146] stderr: ""
  I0914 12:55:23.513345 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0914 12:55:23.513516 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1068" for this suite. @ 09/14/24 12:55:23.518
â€¢ [7.180 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/14/24 12:55:23.53
  I0914 12:55:23.530262 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename volumeattachment @ 09/14/24 12:55:23.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:23.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:23.553
  STEP: Create VolumeAttachment "va-e2e-ww6m8" on node "ip-172-31-33-255" @ 09/14/24 12:55:23.564
  STEP: Get VolumeAttachment "va-e2e-ww6m8" on node "ip-172-31-33-255" @ 09/14/24 12:55:23.568
  STEP: Patch VolumeAttachment "va-e2e-ww6m8" on node "ip-172-31-33-255" @ 09/14/24 12:55:23.572
  STEP: List VolumeAttachments with "va-e2e-ww6m8=patched" label @ 09/14/24 12:55:23.577
  STEP: Delete VolumeAttachment "va-e2e-ww6m8" on node "ip-172-31-33-255" @ 09/14/24 12:55:23.581
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ww6m8" on node "ip-172-31-33-255" @ 09/14/24 12:55:23.588
  STEP: Create VolumeAttachment "va-e2e-t92hw" on node "ip-172-31-2-197" @ 09/14/24 12:55:23.596
  STEP: Update the VolumeAttachment "va-e2e-t92hw" on node "ip-172-31-2-197" with label "va-e2e=updated" @ 09/14/24 12:55:23.601
  STEP: Create VolumeAttachment "va-e2e-kgfrw" on node "ip-172-31-8-243" @ 09/14/24 12:55:23.615
  STEP: Update the VolumeAttachment "va-e2e-kgfrw" on node "ip-172-31-8-243" with label "va-e2e=updated" @ 09/14/24 12:55:23.62
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/14/24 12:55:23.631
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/14/24 12:55:23.648
  I0914 12:55:23.652708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4358" for this suite. @ 09/14/24 12:55:23.657
â€¢ [0.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/14/24 12:55:23.665
  I0914 12:55:23.665526 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 12:55:23.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:23.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:23.689
  STEP: Starting the proxy @ 09/14/24 12:55:23.691
  I0914 12:55:23.691862 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-6427 proxy --unix-socket=/tmp/kubectl-proxy-unix1656834469/test'
  STEP: retrieving proxy /api/ output @ 09/14/24 12:55:23.722
  I0914 12:55:23.723207 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6427" for this suite. @ 09/14/24 12:55:23.728
â€¢ [0.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/14/24 12:55:23.737
  I0914 12:55:23.737180 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:55:23.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:23.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:23.762
  STEP: Setting up server cert @ 09/14/24 12:55:23.791
  E0914 12:55:24.017761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:55:24.208
  STEP: Deploying the webhook pod @ 09/14/24 12:55:24.215
  STEP: Wait for the deployment to be ready @ 09/14/24 12:55:24.229
  I0914 12:55:24.236522 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 12:55:25.017908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:26.018169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 12:55:26.252
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:55:26.265
  E0914 12:55:27.018288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:27.265817 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/24 12:55:27.275
  STEP: verifying the mutating webhook match conditions @ 09/14/24 12:55:27.289
  STEP: updating the mutating webhook match conditions @ 09/14/24 12:55:27.293
  STEP: verifying the mutating webhook match conditions @ 09/14/24 12:55:27.301
  I0914 12:55:27.354303 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3266" for this suite. @ 09/14/24 12:55:27.361
  STEP: Destroying namespace "webhook-markers-4085" for this suite. @ 09/14/24 12:55:27.371
â€¢ [3.641 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/14/24 12:55:27.378
  I0914 12:55:27.378740 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 12:55:27.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:27.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:27.399
  STEP: Counting existing ResourceQuota @ 09/14/24 12:55:27.402
  E0914 12:55:28.018703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:29.019603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:30.019729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:31.019836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:32.019853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/14/24 12:55:32.409
  STEP: Ensuring resource quota status is calculated @ 09/14/24 12:55:32.415
  E0914 12:55:33.020730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:34.020793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:34.421699 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-38" for this suite. @ 09/14/24 12:55:34.427
â€¢ [7.058 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/14/24 12:55:34.436
  I0914 12:55:34.436306 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 12:55:34.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:34.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:34.46
  STEP: creating service in namespace services-7156 @ 09/14/24 12:55:34.462
  STEP: creating service affinity-nodeport in namespace services-7156 @ 09/14/24 12:55:34.462
  STEP: creating replication controller affinity-nodeport in namespace services-7156 @ 09/14/24 12:55:34.479
  I0914 12:55:34.489515      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7156, replica count: 3
  E0914 12:55:35.021748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:36.022381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:37.022501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:37.541119      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 12:55:37.555760 20 resource.go:361] Creating new exec pod
  E0914 12:55:38.022710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:39.022919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:40.023615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:40.579491 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7156 exec execpod-affinitynggf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0914 12:55:40.719615 20 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0914 12:55:40.719659 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:55:40.719732 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7156 exec execpod-affinitynggf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.61 80'
  I0914 12:55:40.814385 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.61 80\n+ echo hostName\nConnection to 10.152.183.61 80 port [tcp/http] succeeded!\n"
  I0914 12:55:40.814432 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:55:40.814517 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7156 exec execpod-affinitynggf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.235 32677'
  I0914 12:55:40.905809 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.65.235 32677\n+ echo hostName\nConnection to 172.31.65.235 32677 port [tcp/*] succeeded!\n"
  I0914 12:55:40.905867 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:55:40.906031 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7156 exec execpod-affinitynggf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.243 32677'
  I0914 12:55:41.004532 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.8.243 32677\n+ echo hostName\nConnection to 172.31.8.243 32677 port [tcp/*] succeeded!\n"
  I0914 12:55:41.004580 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:55:41.004649 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7156 exec execpod-affinitynggf4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.255:32677/ ; done'
  E0914 12:55:41.024170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:41.187211 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32677/\n"
  I0914 12:55:41.187260 20 builder.go:147] stdout: "\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm\naffinity-nodeport-bp4hm"
  I0914 12:55:41.187272 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187280 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187286 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187292 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187298 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187305 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187310 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187317 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187324 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187329 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187335 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187340 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187345 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187350 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187355 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187362 20 service.go:242] Received response from host: affinity-nodeport-bp4hm
  I0914 12:55:41.187465 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7156, will wait for the garbage collector to delete the pods @ 09/14/24 12:55:41.203
  I0914 12:55:41.267358 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.613526ms
  I0914 12:55:41.367965 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.601737ms
  E0914 12:55:42.024547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:43.025319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:44.026335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:44.694818 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7156" for this suite. @ 09/14/24 12:55:44.701
â€¢ [10.273 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/14/24 12:55:44.709
  I0914 12:55:44.709293 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 12:55:44.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:44.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:44.731
  STEP: Creating a test headless service @ 09/14/24 12:55:44.734
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8194.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8194.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_udp@PTR;check="$$(dig +tcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_tcp@PTR;sleep 1; done
   @ 09/14/24 12:55:44.752
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8194.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8194.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8194.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8194.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8194.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_udp@PTR;check="$$(dig +tcp +noall +answer +search 111.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.111_tcp@PTR;sleep 1; done
   @ 09/14/24 12:55:44.752
  STEP: creating a pod to probe DNS @ 09/14/24 12:55:44.752
  STEP: submitting the pod to kubernetes @ 09/14/24 12:55:44.753
  E0914 12:55:45.026924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:46.027202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 12:55:46.773
  STEP: looking for the results for each expected name from probers @ 09/14/24 12:55:46.778
  I0914 12:55:46.784386 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.788654 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.793898 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.799546 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.822741 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.827467 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.831575 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.836303 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local from pod dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f: the server could not find the requested resource (get pods dns-test-e150500f-16a4-4378-a2e9-a602de7c630f)
  I0914 12:55:46.855330 20 dns_common.go:489] Lookups using dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f failed for: [wheezy_udp@dns-test-service.dns-8194.svc.cluster.local wheezy_tcp@dns-test-service.dns-8194.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local jessie_udp@dns-test-service.dns-8194.svc.cluster.local jessie_tcp@dns-test-service.dns-8194.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8194.svc.cluster.local]

  I0914 12:55:46.863300 20 dns_common.go:495] Pod client logs for webserver: 
  I0914 12:55:46.870868 20 dns_common.go:495] Pod client logs for querier: 
  I0914 12:55:46.879797 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0914 12:55:47.028137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:48.029210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:49.029253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:50.029397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:51.029478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:55:51.849410 20 dns_common.go:527] DNS probes using dns-8194/dns-test-e150500f-16a4-4378-a2e9-a602de7c630f succeeded

  STEP: deleting the pod @ 09/14/24 12:55:51.849
  STEP: deleting the test service @ 09/14/24 12:55:51.862
  STEP: deleting the test headless service @ 09/14/24 12:55:51.888
  I0914 12:55:51.900790 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8194" for this suite. @ 09/14/24 12:55:51.905
â€¢ [7.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/14/24 12:55:51.912
  I0914 12:55:51.912773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:55:51.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:51.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:51.935
  STEP: Creating configMap configmap-7463/configmap-test-01d67dd0-c32c-4bcc-b032-10e9e820d3a7 @ 09/14/24 12:55:51.938
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:55:51.944
  E0914 12:55:52.030166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:53.030262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:55:53.966
  I0914 12:55:53.970013 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-51508b65-a7b4-4d36-a0ab-8d76c10d2f0e container env-test: <nil>
  STEP: delete the pod @ 09/14/24 12:55:53.977
  I0914 12:55:53.997824 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7463" for this suite. @ 09/14/24 12:55:54.002
â€¢ [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/14/24 12:55:54.011
  I0914 12:55:54.011076 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 12:55:54.011
  E0914 12:55:54.030413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:54.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:54.032
  STEP: Creating a job @ 09/14/24 12:55:54.035
  STEP: Ensuring active pods == parallelism @ 09/14/24 12:55:54.045
  E0914 12:55:55.030585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:56.031544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/14/24 12:55:56.051
  STEP: deleting Job.batch foo in namespace job-3514, will wait for the garbage collector to delete the pods @ 09/14/24 12:55:56.051
  I0914 12:55:56.116532 20 resources.go:139] Deleting Job.batch foo took: 8.596557ms
  I0914 12:55:56.217456 20 resources.go:163] Terminating Job.batch foo pods took: 100.904937ms
  E0914 12:55:57.032519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/14/24 12:55:57.618
  I0914 12:55:57.623810 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3514" for this suite. @ 09/14/24 12:55:57.629
â€¢ [3.625 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/14/24 12:55:57.636
  I0914 12:55:57.636574 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 12:55:57.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:55:57.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:55:57.662
  STEP: Creating pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065 @ 09/14/24 12:55:57.665
  E0914 12:55:58.032638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:55:59.032718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 12:55:59.683
  I0914 12:55:59.687848 20 container_probe.go:1749] Initial restart count of pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac is 0
  I0914 12:55:59.693003 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:00.033249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:01.033344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:01.697952 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:02.034412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:03.034559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:03.705112 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:04.034627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:05.034796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:05.710939 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:06.035477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:07.035557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:07.716864 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:08.036423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:09.036525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:09.723618 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:10.037068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:11.037197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:11.728600 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:12.037977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:13.038080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:13.735209 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:14.038694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:15.038753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:15.741331 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:16.039719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:17.039891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:17.746164 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:18.040356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:19.041217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:19.753053 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  I0914 12:56:19.753083 20 container_probe.go:1763] Restart count of pod container-probe-1065/liveness-e81af3a0-621a-482b-8f33-373719ed00ac is now 1 (20.065208381s elapsed)
  E0914 12:56:20.041373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:21.041477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:21.757946 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:22.042315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:23.042507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:23.764030 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:24.043444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:25.043670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:25.769881 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:26.044356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:27.044457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:27.775203 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:28.044560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:29.044656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:29.780362 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:30.045723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:31.045927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:31.786706 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:32.046121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:33.046253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:33.793083 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:34.046413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:35.046511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:35.797380 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:36.046786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:37.047030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:37.803515 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:38.047966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:39.048112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:39.808521 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  I0914 12:56:39.808565 20 container_probe.go:1763] Restart count of pod container-probe-1065/liveness-e81af3a0-621a-482b-8f33-373719ed00ac is now 2 (40.12069016s elapsed)
  E0914 12:56:40.048864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:41.048948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:41.813122 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:42.049452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:43.049633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:43.819585 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:44.049837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:45.050054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:45.825585 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:46.050760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:47.050885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:47.831792 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:48.051051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:49.051156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:49.836768 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:50.051267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:51.051439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:51.842291 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:52.051543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:53.051770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:53.849182 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:54.052515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:55.052622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:55.853779 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:56.053057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:57.053231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:57.859712 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:56:58.054051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:56:59.054272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:56:59.866184 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  I0914 12:56:59.866231 20 container_probe.go:1763] Restart count of pod container-probe-1065/liveness-e81af3a0-621a-482b-8f33-373719ed00ac is now 3 (1m0.17835555s elapsed)
  E0914 12:57:00.054421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:01.054642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:01.871389 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:02.054827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:03.055019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:03.878375 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:04.055752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:05.055853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:05.884057 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:06.056293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:07.056393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:07.890442 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:08.056853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:09.056933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:09.895712 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:10.057995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:11.058219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:11.901848 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:12.059082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:13.059836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:13.908204 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:14.060460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:15.060558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:15.913588 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:16.060804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:17.061315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:17.920105 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:18.062294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:19.062346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:19.926097 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  I0914 12:57:19.926133 20 container_probe.go:1763] Restart count of pod container-probe-1065/liveness-e81af3a0-621a-482b-8f33-373719ed00ac is now 4 (1m20.238258219s elapsed)
  E0914 12:57:20.063349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:21.063557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:21.931431 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:22.063749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:23.063960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:23.938342 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:24.064694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:25.064985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:25.944562 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:26.065414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:27.065508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:27.950966 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:28.066112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:29.066421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:29.957946 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:30.067302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:31.067512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:31.963527 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:32.067709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:33.068046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:33.970368 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:34.068548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:35.069282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:35.976648 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:36.069853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:37.070191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:37.981992 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:38.071226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:39.071325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:39.989062 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:40.072380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:41.073266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:41.994672 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:42.073823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:43.073952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:44.001485 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:44.074823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:45.074934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:46.007060 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:46.075191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:47.075354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:48.013402 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:48.075580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:49.075944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:50.020380 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:50.076587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:51.077212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:52.026373 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:52.077568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:53.077742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:54.032883 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:54.078149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:55.078192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:56.039558 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:56.078676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:57.079664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:57:58.044846 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:57:58.079942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:57:59.080127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:00.050344 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:00.080518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:01.081183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:02.057380 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:02.081526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:03.081705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:04.062702 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:04.081858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:05.082073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:06.068783 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:06.082939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:07.083075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:08.073695 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:08.083924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:09.084117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:10.078710 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:10.084835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:11.085235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:12.084687 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:12.085733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:13.085901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:14.086382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:14.090256 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:15.086525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:16.086815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:16.096763 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:17.086997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:18.087263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:18.103671 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:19.087897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:20.088028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:20.109076 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  E0914 12:58:21.088129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:22.089177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:58:22.115376 20 container_probe.go:1759] Get pod liveness-e81af3a0-621a-482b-8f33-373719ed00ac in namespace container-probe-1065
  I0914 12:58:22.115411 20 container_probe.go:1763] Restart count of pod container-probe-1065/liveness-e81af3a0-621a-482b-8f33-373719ed00ac is now 5 (2m22.427536028s elapsed)
  STEP: deleting the pod @ 09/14/24 12:58:22.115
  I0914 12:58:22.129189 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1065" for this suite. @ 09/14/24 12:58:22.134
â€¢ [144.506 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/14/24 12:58:22.142
  I0914 12:58:22.142724 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/24 12:58:22.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:58:22.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:58:22.165
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/24 12:58:22.172
  E0914 12:58:23.089405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:24.089447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/14/24 12:58:24.335
  E0914 12:58:25.089539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:26.089628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/14/24 12:58:26.358
  E0914 12:58:27.090620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:28.090734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/14/24 12:58:28.379
  I0914 12:58:28.390591 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4458" for this suite. @ 09/14/24 12:58:28.395
â€¢ [6.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/14/24 12:58:28.404
  I0914 12:58:28.404027 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 12:58:28.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:58:28.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:58:28.426
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:58:28.429
  E0914 12:58:29.091490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:30.091868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:58:30.445
  I0914 12:58:30.449795 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-6ceffc7f-80b1-4072-a715-58d912029c85 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:58:30.466
  I0914 12:58:30.484594 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8096" for this suite. @ 09/14/24 12:58:30.488
â€¢ [2.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/14/24 12:58:30.496
  I0914 12:58:30.496852 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 12:58:30.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:58:30.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:58:30.521
  STEP: create the rc @ 09/14/24 12:58:30.531
  W0914 12:58:30.536681      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0914 12:58:31.092279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:32.096176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:33.099204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:34.114467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/14/24 12:58:34.564
  STEP: wait for the rc to be deleted @ 09/14/24 12:58:34.572
  E0914 12:58:35.115291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:36.115351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:37.115469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:38.115790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:39.115926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/14/24 12:58:39.577
  E0914 12:58:40.116166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:41.116191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:42.116256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:43.116371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:44.117203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:45.117345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:46.117439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:47.117571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:48.117760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:49.118104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:50.118182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:51.118388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:52.119420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:53.119587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:54.120450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:55.121265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:56.121372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:57.121589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:58.121679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:58:59.121775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:00.121882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:01.122050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:02.122227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:03.122429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:04.122809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:05.122962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:06.123175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:07.123369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:08.123635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:09.124015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/14/24 12:59:09.588
  W0914 12:59:09.594877      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 12:59:09.594901 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 12:59:09.595177 20 delete.go:95] Deleting pod "simpletest.rc-2258t" in namespace "gc-3880"
  I0914 12:59:09.607363 20 delete.go:95] Deleting pod "simpletest.rc-28v6t" in namespace "gc-3880"
  I0914 12:59:09.620247 20 delete.go:95] Deleting pod "simpletest.rc-2d6dd" in namespace "gc-3880"
  I0914 12:59:09.632586 20 delete.go:95] Deleting pod "simpletest.rc-2kxz9" in namespace "gc-3880"
  I0914 12:59:09.645986 20 delete.go:95] Deleting pod "simpletest.rc-44t26" in namespace "gc-3880"
  I0914 12:59:09.662123 20 delete.go:95] Deleting pod "simpletest.rc-47qgc" in namespace "gc-3880"
  I0914 12:59:09.677385 20 delete.go:95] Deleting pod "simpletest.rc-4ffks" in namespace "gc-3880"
  I0914 12:59:09.694284 20 delete.go:95] Deleting pod "simpletest.rc-4hcgz" in namespace "gc-3880"
  I0914 12:59:09.705715 20 delete.go:95] Deleting pod "simpletest.rc-58xw7" in namespace "gc-3880"
  I0914 12:59:09.721569 20 delete.go:95] Deleting pod "simpletest.rc-5hsf5" in namespace "gc-3880"
  I0914 12:59:09.732142 20 delete.go:95] Deleting pod "simpletest.rc-69cv5" in namespace "gc-3880"
  I0914 12:59:09.746232 20 delete.go:95] Deleting pod "simpletest.rc-6f6lm" in namespace "gc-3880"
  I0914 12:59:09.759154 20 delete.go:95] Deleting pod "simpletest.rc-6g7js" in namespace "gc-3880"
  I0914 12:59:09.770924 20 delete.go:95] Deleting pod "simpletest.rc-6hq2w" in namespace "gc-3880"
  I0914 12:59:09.785180 20 delete.go:95] Deleting pod "simpletest.rc-6l5zc" in namespace "gc-3880"
  I0914 12:59:09.801739 20 delete.go:95] Deleting pod "simpletest.rc-6pgh4" in namespace "gc-3880"
  I0914 12:59:09.817545 20 delete.go:95] Deleting pod "simpletest.rc-7hmg5" in namespace "gc-3880"
  I0914 12:59:09.829301 20 delete.go:95] Deleting pod "simpletest.rc-7jbqw" in namespace "gc-3880"
  I0914 12:59:09.851500 20 delete.go:95] Deleting pod "simpletest.rc-7l7vh" in namespace "gc-3880"
  I0914 12:59:09.863088 20 delete.go:95] Deleting pod "simpletest.rc-7tr92" in namespace "gc-3880"
  I0914 12:59:09.875324 20 delete.go:95] Deleting pod "simpletest.rc-7v2lk" in namespace "gc-3880"
  I0914 12:59:09.887889 20 delete.go:95] Deleting pod "simpletest.rc-7xrvd" in namespace "gc-3880"
  I0914 12:59:09.899180 20 delete.go:95] Deleting pod "simpletest.rc-8n2wz" in namespace "gc-3880"
  I0914 12:59:09.914207 20 delete.go:95] Deleting pod "simpletest.rc-8qwbs" in namespace "gc-3880"
  I0914 12:59:09.925804 20 delete.go:95] Deleting pod "simpletest.rc-8wdnn" in namespace "gc-3880"
  I0914 12:59:09.944702 20 delete.go:95] Deleting pod "simpletest.rc-8wxpr" in namespace "gc-3880"
  I0914 12:59:09.956517 20 delete.go:95] Deleting pod "simpletest.rc-bdzhf" in namespace "gc-3880"
  I0914 12:59:09.975079 20 delete.go:95] Deleting pod "simpletest.rc-bt7rv" in namespace "gc-3880"
  I0914 12:59:09.996607 20 delete.go:95] Deleting pod "simpletest.rc-cqd65" in namespace "gc-3880"
  I0914 12:59:10.009470 20 delete.go:95] Deleting pod "simpletest.rc-ctbd6" in namespace "gc-3880"
  I0914 12:59:10.025318 20 delete.go:95] Deleting pod "simpletest.rc-czmw6" in namespace "gc-3880"
  I0914 12:59:10.039200 20 delete.go:95] Deleting pod "simpletest.rc-d5blb" in namespace "gc-3880"
  I0914 12:59:10.053269 20 delete.go:95] Deleting pod "simpletest.rc-d686z" in namespace "gc-3880"
  I0914 12:59:10.069502 20 delete.go:95] Deleting pod "simpletest.rc-dblbq" in namespace "gc-3880"
  I0914 12:59:10.081202 20 delete.go:95] Deleting pod "simpletest.rc-ddc6h" in namespace "gc-3880"
  I0914 12:59:10.093160 20 delete.go:95] Deleting pod "simpletest.rc-dp75q" in namespace "gc-3880"
  I0914 12:59:10.107878 20 delete.go:95] Deleting pod "simpletest.rc-f64wx" in namespace "gc-3880"
  I0914 12:59:10.120477 20 delete.go:95] Deleting pod "simpletest.rc-fx2dt" in namespace "gc-3880"
  E0914 12:59:10.124819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:10.135600 20 delete.go:95] Deleting pod "simpletest.rc-g22rq" in namespace "gc-3880"
  I0914 12:59:10.152136 20 delete.go:95] Deleting pod "simpletest.rc-gkjzj" in namespace "gc-3880"
  I0914 12:59:10.164633 20 delete.go:95] Deleting pod "simpletest.rc-gnmq4" in namespace "gc-3880"
  I0914 12:59:10.182233 20 delete.go:95] Deleting pod "simpletest.rc-h4nsq" in namespace "gc-3880"
  I0914 12:59:10.192974 20 delete.go:95] Deleting pod "simpletest.rc-h8t2f" in namespace "gc-3880"
  I0914 12:59:10.204187 20 delete.go:95] Deleting pod "simpletest.rc-hqv7b" in namespace "gc-3880"
  I0914 12:59:10.214876 20 delete.go:95] Deleting pod "simpletest.rc-jd47c" in namespace "gc-3880"
  I0914 12:59:10.232893 20 delete.go:95] Deleting pod "simpletest.rc-k4kmd" in namespace "gc-3880"
  I0914 12:59:10.248393 20 delete.go:95] Deleting pod "simpletest.rc-k9jsj" in namespace "gc-3880"
  I0914 12:59:10.261751 20 delete.go:95] Deleting pod "simpletest.rc-kdbzt" in namespace "gc-3880"
  I0914 12:59:10.276441 20 delete.go:95] Deleting pod "simpletest.rc-kllsl" in namespace "gc-3880"
  I0914 12:59:10.296603 20 delete.go:95] Deleting pod "simpletest.rc-llhc5" in namespace "gc-3880"
  I0914 12:59:10.313126 20 delete.go:95] Deleting pod "simpletest.rc-lmslm" in namespace "gc-3880"
  I0914 12:59:10.328044 20 delete.go:95] Deleting pod "simpletest.rc-m97j5" in namespace "gc-3880"
  I0914 12:59:10.343042 20 delete.go:95] Deleting pod "simpletest.rc-mjj4g" in namespace "gc-3880"
  I0914 12:59:10.354665 20 delete.go:95] Deleting pod "simpletest.rc-mzqwg" in namespace "gc-3880"
  I0914 12:59:10.370068 20 delete.go:95] Deleting pod "simpletest.rc-n4hn9" in namespace "gc-3880"
  I0914 12:59:10.384542 20 delete.go:95] Deleting pod "simpletest.rc-n5mg2" in namespace "gc-3880"
  I0914 12:59:10.398940 20 delete.go:95] Deleting pod "simpletest.rc-nglq9" in namespace "gc-3880"
  I0914 12:59:10.415335 20 delete.go:95] Deleting pod "simpletest.rc-nkwmf" in namespace "gc-3880"
  I0914 12:59:10.427201 20 delete.go:95] Deleting pod "simpletest.rc-nvg45" in namespace "gc-3880"
  I0914 12:59:10.438543 20 delete.go:95] Deleting pod "simpletest.rc-p458x" in namespace "gc-3880"
  I0914 12:59:10.451892 20 delete.go:95] Deleting pod "simpletest.rc-pfvkn" in namespace "gc-3880"
  I0914 12:59:10.467464 20 delete.go:95] Deleting pod "simpletest.rc-pfxls" in namespace "gc-3880"
  I0914 12:59:10.478760 20 delete.go:95] Deleting pod "simpletest.rc-q26pv" in namespace "gc-3880"
  I0914 12:59:10.489948 20 delete.go:95] Deleting pod "simpletest.rc-qfbg8" in namespace "gc-3880"
  I0914 12:59:10.501713 20 delete.go:95] Deleting pod "simpletest.rc-qqcz8" in namespace "gc-3880"
  I0914 12:59:10.515611 20 delete.go:95] Deleting pod "simpletest.rc-qvv46" in namespace "gc-3880"
  I0914 12:59:10.529880 20 delete.go:95] Deleting pod "simpletest.rc-qw2gn" in namespace "gc-3880"
  I0914 12:59:10.545664 20 delete.go:95] Deleting pod "simpletest.rc-r5j7l" in namespace "gc-3880"
  I0914 12:59:10.590325 20 delete.go:95] Deleting pod "simpletest.rc-r8554" in namespace "gc-3880"
  I0914 12:59:10.652639 20 delete.go:95] Deleting pod "simpletest.rc-r9s5b" in namespace "gc-3880"
  I0914 12:59:10.691682 20 delete.go:95] Deleting pod "simpletest.rc-rwr5s" in namespace "gc-3880"
  I0914 12:59:10.745507 20 delete.go:95] Deleting pod "simpletest.rc-s22jh" in namespace "gc-3880"
  I0914 12:59:10.790000 20 delete.go:95] Deleting pod "simpletest.rc-s9v72" in namespace "gc-3880"
  I0914 12:59:10.843871 20 delete.go:95] Deleting pod "simpletest.rc-shbnt" in namespace "gc-3880"
  I0914 12:59:10.896110 20 delete.go:95] Deleting pod "simpletest.rc-skngd" in namespace "gc-3880"
  I0914 12:59:10.946790 20 delete.go:95] Deleting pod "simpletest.rc-ssdb8" in namespace "gc-3880"
  I0914 12:59:10.992908 20 delete.go:95] Deleting pod "simpletest.rc-swddm" in namespace "gc-3880"
  I0914 12:59:11.043411 20 delete.go:95] Deleting pod "simpletest.rc-sx7ln" in namespace "gc-3880"
  I0914 12:59:11.093803 20 delete.go:95] Deleting pod "simpletest.rc-tf86b" in namespace "gc-3880"
  E0914 12:59:11.125150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:11.145210 20 delete.go:95] Deleting pod "simpletest.rc-tp7xc" in namespace "gc-3880"
  I0914 12:59:11.190849 20 delete.go:95] Deleting pod "simpletest.rc-tpwkk" in namespace "gc-3880"
  I0914 12:59:11.246180 20 delete.go:95] Deleting pod "simpletest.rc-tvmfn" in namespace "gc-3880"
  I0914 12:59:11.293511 20 delete.go:95] Deleting pod "simpletest.rc-tz5mv" in namespace "gc-3880"
  I0914 12:59:11.341657 20 delete.go:95] Deleting pod "simpletest.rc-v9zh9" in namespace "gc-3880"
  I0914 12:59:11.397585 20 delete.go:95] Deleting pod "simpletest.rc-vrvdb" in namespace "gc-3880"
  I0914 12:59:11.441813 20 delete.go:95] Deleting pod "simpletest.rc-vsdlg" in namespace "gc-3880"
  I0914 12:59:11.494363 20 delete.go:95] Deleting pod "simpletest.rc-vtjmw" in namespace "gc-3880"
  I0914 12:59:11.545773 20 delete.go:95] Deleting pod "simpletest.rc-wcqqd" in namespace "gc-3880"
  I0914 12:59:11.604359 20 delete.go:95] Deleting pod "simpletest.rc-wvwkd" in namespace "gc-3880"
  I0914 12:59:11.644410 20 delete.go:95] Deleting pod "simpletest.rc-wzhqk" in namespace "gc-3880"
  I0914 12:59:11.704798 20 delete.go:95] Deleting pod "simpletest.rc-x2b2z" in namespace "gc-3880"
  I0914 12:59:11.741895 20 delete.go:95] Deleting pod "simpletest.rc-x4fsn" in namespace "gc-3880"
  I0914 12:59:11.794173 20 delete.go:95] Deleting pod "simpletest.rc-xmkvc" in namespace "gc-3880"
  I0914 12:59:11.844846 20 delete.go:95] Deleting pod "simpletest.rc-xv4vt" in namespace "gc-3880"
  I0914 12:59:11.891171 20 delete.go:95] Deleting pod "simpletest.rc-xwqgl" in namespace "gc-3880"
  I0914 12:59:11.956992 20 delete.go:95] Deleting pod "simpletest.rc-xxqk2" in namespace "gc-3880"
  I0914 12:59:11.994229 20 delete.go:95] Deleting pod "simpletest.rc-z4jkc" in namespace "gc-3880"
  I0914 12:59:12.043805 20 delete.go:95] Deleting pod "simpletest.rc-zd8fg" in namespace "gc-3880"
  I0914 12:59:12.098557 20 delete.go:95] Deleting pod "simpletest.rc-zg9t4" in namespace "gc-3880"
  E0914 12:59:12.136346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:12.153667 20 delete.go:95] Deleting pod "simpletest.rc-zrts4" in namespace "gc-3880"
  I0914 12:59:12.201222 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3880" for this suite. @ 09/14/24 12:59:12.236
â€¢ [41.795 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/14/24 12:59:12.292
  I0914 12:59:12.292696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 12:59:12.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:12.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:12.315
  STEP: Setting up server cert @ 09/14/24 12:59:12.403
  E0914 12:59:13.136804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 12:59:13.252
  STEP: Deploying the webhook pod @ 09/14/24 12:59:13.26
  STEP: Wait for the deployment to be ready @ 09/14/24 12:59:13.272
  I0914 12:59:13.306712 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 12:59:14.136931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:15.137053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 12:59:15.319
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 12:59:15.332
  E0914 12:59:16.137152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:16.333500 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/14/24 12:59:16.342
  I0914 12:59:16.390958 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7533" for this suite. @ 09/14/24 12:59:16.395
  STEP: Destroying namespace "webhook-markers-3726" for this suite. @ 09/14/24 12:59:16.401
â€¢ [4.118 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/14/24 12:59:16.411
  I0914 12:59:16.411036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 12:59:16.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:16.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:16.433
  STEP: Creating configMap with name configmap-test-volume-map-c453c5d9-83e8-4eb9-b31f-a66d6eb0835b @ 09/14/24 12:59:16.436
  STEP: Creating a pod to test consume configMaps @ 09/14/24 12:59:16.441
  E0914 12:59:17.137211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:18.137599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:19.138314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:20.138424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:59:20.463
  I0914 12:59:20.467304 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-45760e15-0113-4514-8249-f0e17b1071a3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 12:59:20.481
  I0914 12:59:20.500538 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1478" for this suite. @ 09/14/24 12:59:20.505
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/14/24 12:59:20.512
  I0914 12:59:20.512957 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 12:59:20.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:20.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:20.537
  STEP: set up a multi version CRD @ 09/14/24 12:59:20.539
  I0914 12:59:20.540232 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 12:59:21.139470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:22.140227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:23.140240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/14/24 12:59:23.826
  STEP: check the new version name is served @ 09/14/24 12:59:23.839
  E0914 12:59:24.141127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/14/24 12:59:24.551
  E0914 12:59:25.141100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/14/24 12:59:25.188
  E0914 12:59:26.141298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:27.141945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:27.682740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9370" for this suite. @ 09/14/24 12:59:27.691
â€¢ [7.187 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/14/24 12:59:27.699
  I0914 12:59:27.699666 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename init-container @ 09/14/24 12:59:27.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:27.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:27.722
  STEP: creating the pod @ 09/14/24 12:59:27.725
  I0914 12:59:27.725803 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0914 12:59:28.142062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:29.142367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:30.142537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:31.142642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:31.227643 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5332" for this suite. @ 09/14/24 12:59:31.232
â€¢ [3.541 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/14/24 12:59:31.24
  I0914 12:59:31.240572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename chunking @ 09/14/24 12:59:31.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:31.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:31.262
  STEP: creating a large number of resources @ 09/14/24 12:59:31.265
  E0914 12:59:32.142988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:33.143250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:34.143862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:35.144595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:36.145578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:37.146451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:38.147349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:39.148168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:40.148260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:41.148756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:42.148987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:43.149676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:44.150206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:45.151204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:46.152029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:47.152727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:48.153164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/14/24 12:59:48.948
  I0914 12:59:48.996919 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0914 12:59:49.046530 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0914 12:59:49.097841 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0914 12:59:49.145770 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E0914 12:59:49.153865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:49.197659 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0914 12:59:49.247751 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0914 12:59:49.297180 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0914 12:59:49.347004 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0914 12:59:49.397466 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0914 12:59:49.447302 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0914 12:59:49.497584 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0914 12:59:49.547263 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0914 12:59:49.597057 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0914 12:59:49.646795 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0914 12:59:49.697273 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0914 12:59:49.746015 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0914 12:59:49.796630 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0914 12:59:49.847297 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0914 12:59:49.896930 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0914 12:59:49.946986 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0914 12:59:49.996451 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0914 12:59:50.046844 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0914 12:59:50.097832 20 chunking.go:98] Retrieved 17/17 results with rv 23729 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0914 12:59:50.146606 20 chunking.go:98] Retrieved 9/17 results with rv 23729 and continue 
  E0914 12:59:50.154756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:50.197916 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0914 12:59:50.246947 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0914 12:59:50.296966 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0914 12:59:50.346388 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0914 12:59:50.397526 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0914 12:59:50.447110 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0914 12:59:50.496679 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0914 12:59:50.547665 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0914 12:59:50.597978 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0914 12:59:50.652286 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0914 12:59:50.696622 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0914 12:59:50.747277 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0914 12:59:50.796749 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0914 12:59:50.847557 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0914 12:59:50.896835 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0914 12:59:50.947216 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0914 12:59:50.997341 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0914 12:59:51.046804 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0914 12:59:51.096967 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0914 12:59:51.146707 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  E0914 12:59:51.155727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:51.198078 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0914 12:59:51.246830 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0914 12:59:51.296856 20 chunking.go:98] Retrieved 17/17 results with rv 23731 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0914 12:59:51.347753 20 chunking.go:98] Retrieved 9/17 results with rv 23731 and continue 
  I0914 12:59:51.397506 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0914 12:59:51.447134 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0914 12:59:51.497058 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0914 12:59:51.546140 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0914 12:59:51.596752 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0914 12:59:51.647522 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0914 12:59:51.696982 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0914 12:59:51.746836 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0914 12:59:51.797265 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0914 12:59:51.845968 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0914 12:59:51.896677 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0914 12:59:51.946921 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0914 12:59:51.997302 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0914 12:59:52.052739 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0914 12:59:52.097927 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0914 12:59:52.146139 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E0914 12:59:52.156335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 12:59:52.197542 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0914 12:59:52.247429 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0914 12:59:52.296962 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0914 12:59:52.346932 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0914 12:59:52.397803 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0914 12:59:52.451725 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0914 12:59:52.497884 20 chunking.go:98] Retrieved 17/17 results with rv 23735 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM3MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0914 12:59:52.547591 20 chunking.go:98] Retrieved 9/17 results with rv 23735 and continue 
  STEP: retrieving those results all at once @ 09/14/24 12:59:52.547
  I0914 12:59:52.603449 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1131" for this suite. @ 09/14/24 12:59:52.647
â€¢ [21.462 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/14/24 12:59:52.703
  I0914 12:59:52.703062 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 12:59:52.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:52.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:52.721
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 12:59:52.724
  E0914 12:59:53.157272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:54.157902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:55.158287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:56.158644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 12:59:56.755
  I0914 12:59:56.760300 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-dd8809bd-18a1-45c7-9d4a-af92404f0703 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 12:59:56.771
  I0914 12:59:56.789418 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7439" for this suite. @ 09/14/24 12:59:56.794
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/14/24 12:59:56.802
  I0914 12:59:56.802456 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename prestop @ 09/14/24 12:59:56.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 12:59:56.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 12:59:56.824
  STEP: Creating server pod server in namespace prestop-5046 @ 09/14/24 12:59:56.828
  STEP: Waiting for pods to come up. @ 09/14/24 12:59:56.839
  E0914 12:59:57.158929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 12:59:58.158999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5046 @ 09/14/24 12:59:58.852
  E0914 12:59:59.159127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:00.159215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/14/24 13:00:00.871
  E0914 13:00:01.160256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:02.160343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:03.160431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:04.160553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:05.160658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:05.889503 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/14/24 13:00:05.889
  I0914 13:00:05.907507 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5046" for this suite. @ 09/14/24 13:00:05.912
â€¢ [9.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/14/24 13:00:05.92
  I0914 13:00:05.920947 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:00:05.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:05.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:05.94
  STEP: creating a collection of services @ 09/14/24 13:00:05.943
  I0914 13:00:05.943723 20 service.go:3655] Creating e2e-svc-a-xjmcb
  I0914 13:00:05.956526 20 service.go:3655] Creating e2e-svc-b-25k6x
  I0914 13:00:05.969126 20 service.go:3655] Creating e2e-svc-c-2znzk
  STEP: deleting service collection @ 09/14/24 13:00:05.985
  I0914 13:00:06.025177 20 service.go:3690] Collection of services has been deleted
  I0914 13:00:06.025387 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9651" for this suite. @ 09/14/24 13:00:06.03
â€¢ [0.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/14/24 13:00:06.037
  I0914 13:00:06.037888 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl-logs @ 09/14/24 13:00:06.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:06.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:06.057
  STEP: creating a pod @ 09/14/24 13:00:06.06
  I0914 13:00:06.060875 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0914 13:00:06.114748 20 builder.go:146] stderr: ""
  I0914 13:00:06.114782 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/14/24 13:00:06.114
  I0914 13:00:06.114868 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0914 13:00:06.161333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:07.161430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:08.127447 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/14/24 13:00:08.127
  I0914 13:00:08.127545 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator'
  E0914 13:00:08.161905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:08.176953 20 builder.go:146] stderr: ""
  I0914 13:00:08.176993 20 builder.go:147] stdout: "I0914 13:00:06.679522       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/qtq 346\nI0914 13:00:06.879605       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/ssmq 358\nI0914 13:00:07.080023       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7z7h 448\nI0914 13:00:07.280537       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/cmk 281\nI0914 13:00:07.479837       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/l9g 431\nI0914 13:00:07.680148       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/xw9 306\nI0914 13:00:07.880714       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/9q6 502\nI0914 13:00:08.080017       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/8mwx 532\n"
  STEP: limiting log lines @ 09/14/24 13:00:08.177
  I0914 13:00:08.177206 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator --tail=1'
  I0914 13:00:08.226881 20 builder.go:146] stderr: ""
  I0914 13:00:08.226913 20 builder.go:147] stdout: "I0914 13:00:08.080017       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/8mwx 532\n"
  I0914 13:00:08.226923 20 logs.go:180] got output "I0914 13:00:08.080017       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/8mwx 532\n"
  STEP: limiting log bytes @ 09/14/24 13:00:08.226
  I0914 13:00:08.227006 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator --limit-bytes=1'
  I0914 13:00:08.274470 20 builder.go:146] stderr: ""
  I0914 13:00:08.274518 20 builder.go:147] stdout: "I"
  I0914 13:00:08.274526 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/14/24 13:00:08.274
  I0914 13:00:08.274600 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator --tail=1 --timestamps'
  I0914 13:00:08.324821 20 builder.go:146] stderr: ""
  I0914 13:00:08.324866 20 builder.go:147] stdout: "2024-09-14T13:00:08.280407971Z I0914 13:00:08.280323       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/c8w 245\n"
  I0914 13:00:08.324874 20 logs.go:192] got output "2024-09-14T13:00:08.280407971Z I0914 13:00:08.280323       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/c8w 245\n"
  STEP: restricting to a time range @ 09/14/24 13:00:08.324
  E0914 13:00:09.161997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:10.162232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:10.825119 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator --since=1s'
  I0914 13:00:10.876177 20 builder.go:146] stderr: ""
  I0914 13:00:10.876232 20 builder.go:147] stdout: "I0914 13:00:09.880293       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/mb94 586\nI0914 13:00:10.079532       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/gdg 205\nI0914 13:00:10.279834       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/ff5 252\nI0914 13:00:10.480126       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/rj8 544\nI0914 13:00:10.680423       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/5cz 261\n"
  I0914 13:00:10.876276 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 logs logs-generator logs-generator --since=24h'
  I0914 13:00:10.926672 20 builder.go:146] stderr: ""
  I0914 13:00:10.926729 20 builder.go:147] stdout: "I0914 13:00:06.679522       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/qtq 346\nI0914 13:00:06.879605       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/ssmq 358\nI0914 13:00:07.080023       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/7z7h 448\nI0914 13:00:07.280537       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/cmk 281\nI0914 13:00:07.479837       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/l9g 431\nI0914 13:00:07.680148       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/xw9 306\nI0914 13:00:07.880714       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/9q6 502\nI0914 13:00:08.080017       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/8mwx 532\nI0914 13:00:08.280323       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/c8w 245\nI0914 13:00:08.479574       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/lzl 261\nI0914 13:00:08.679897       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/np7s 382\nI0914 13:00:08.880271       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/bz4v 424\nI0914 13:00:09.080564       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/wnl 594\nI0914 13:00:09.280225       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/f8d 467\nI0914 13:00:09.479689       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/z2bc 478\nI0914 13:00:09.679987       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/5q9r 476\nI0914 13:00:09.880293       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/mb94 586\nI0914 13:00:10.079532       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/gdg 205\nI0914 13:00:10.279834       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/ff5 252\nI0914 13:00:10.480126       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/rj8 544\nI0914 13:00:10.680423       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/5cz 261\nI0914 13:00:10.879681       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/4gxl 449\n"
  I0914 13:00:10.926930 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-logs-9003 delete pod logs-generator'
  E0914 13:00:11.162649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:12.093784 20 builder.go:146] stderr: ""
  I0914 13:00:12.093826 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0914 13:00:12.093943 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9003" for this suite. @ 09/14/24 13:00:12.098
â€¢ [6.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/14/24 13:00:12.107
  I0914 13:00:12.107893 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename endpointslice @ 09/14/24 13:00:12.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:12.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:12.127
  STEP: getting /apis @ 09/14/24 13:00:12.13
  STEP: getting /apis/discovery.k8s.io @ 09/14/24 13:00:12.134
  STEP: getting /apis/discovery.k8s.iov1 @ 09/14/24 13:00:12.135
  STEP: creating @ 09/14/24 13:00:12.136
  STEP: getting @ 09/14/24 13:00:12.155
  STEP: listing @ 09/14/24 13:00:12.161
  E0914 13:00:12.163184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: watching @ 09/14/24 13:00:12.165
  I0914 13:00:12.165026 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/14/24 13:00:12.166
  STEP: cluster-wide watching @ 09/14/24 13:00:12.17
  I0914 13:00:12.170569 20 endpointslice.go:459] starting watch
  STEP: patching @ 09/14/24 13:00:12.171
  STEP: updating @ 09/14/24 13:00:12.177
  I0914 13:00:12.187913 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0914 13:00:12.187953 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/14/24 13:00:12.188
  STEP: deleting a collection @ 09/14/24 13:00:12.203
  I0914 13:00:12.229123 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3296" for this suite. @ 09/14/24 13:00:12.233
â€¢ [0.134 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/14/24 13:00:12.242
  I0914 13:00:12.242312 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename discovery @ 09/14/24 13:00:12.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:12.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:12.263
  STEP: Setting up server cert @ 09/14/24 13:00:12.267
  STEP: Requesting APIResourceList from "/api/v1" @ 09/14/24 13:00:12.511
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/14/24 13:00:12.514
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/14/24 13:00:12.515
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/14/24 13:00:12.517
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/14/24 13:00:12.518
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/14/24 13:00:12.52
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/14/24 13:00:12.521
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/14/24 13:00:12.522
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/14/24 13:00:12.524
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/14/24 13:00:12.525
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/14/24 13:00:12.526
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/14/24 13:00:12.528
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/14/24 13:00:12.529
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/14/24 13:00:12.53
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/14/24 13:00:12.532
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/14/24 13:00:12.533
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/14/24 13:00:12.534
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/14/24 13:00:12.536
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/14/24 13:00:12.537
  I0914 13:00:12.538774 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3542" for this suite. @ 09/14/24 13:00:12.544
â€¢ [0.311 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/14/24 13:00:12.553
  I0914 13:00:12.553430 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 13:00:12.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:12.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:12.573
  STEP: Creating a pod to test env composition @ 09/14/24 13:00:12.577
  E0914 13:00:13.164314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:14.164382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:15.165035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:16.165133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:00:16.606
  I0914 13:00:16.611409 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod var-expansion-08031f01-a77a-46e5-8700-f564fa190ce2 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 13:00:16.619
  I0914 13:00:16.637478 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8546" for this suite. @ 09/14/24 13:00:16.642
â€¢ [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/14/24 13:00:16.65
  I0914 13:00:16.650505 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:00:16.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:16.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:16.67
  STEP: Setting up server cert @ 09/14/24 13:00:16.7
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:00:16.891
  STEP: Deploying the webhook pod @ 09/14/24 13:00:16.899
  STEP: Wait for the deployment to be ready @ 09/14/24 13:00:16.915
  I0914 13:00:16.931972 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:00:17.165250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:18.165358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:00:18.948
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:00:18.961
  E0914 13:00:19.166254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:19.962139 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/24 13:00:19.972
  STEP: create the configmap with a random name @ 09/14/24 13:00:19.99
  STEP: verify the configmap is mutated @ 09/14/24 13:00:20.003
  STEP: create the configmap with 'skip-me' name @ 09/14/24 13:00:20.003
  I0914 13:00:20.069357 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9018" for this suite. @ 09/14/24 13:00:20.074
  STEP: Destroying namespace "webhook-markers-2940" for this suite. @ 09/14/24 13:00:20.082
â€¢ [3.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/14/24 13:00:20.09
  I0914 13:00:20.090304 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 13:00:20.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:20.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:20.11
  STEP: Creating ReplicationController "e2e-rc-q54jk" @ 09/14/24 13:00:20.114
  I0914 13:00:20.120227 20 rc.go:792] Get Replication Controller "e2e-rc-q54jk" to confirm replicas
  E0914 13:00:20.166326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:21.120329 20 rc.go:792] Get Replication Controller "e2e-rc-q54jk" to confirm replicas
  I0914 13:00:21.124600 20 rc.go:801] Found 1 replicas for "e2e-rc-q54jk" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-q54jk" @ 09/14/24 13:00:21.124
  STEP: Updating a scale subresource @ 09/14/24 13:00:21.128
  STEP: Verifying replicas where modified for replication controller "e2e-rc-q54jk" @ 09/14/24 13:00:21.14
  I0914 13:00:21.140191 20 rc.go:792] Get Replication Controller "e2e-rc-q54jk" to confirm replicas
  E0914 13:00:21.166958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:22.141028 20 rc.go:792] Get Replication Controller "e2e-rc-q54jk" to confirm replicas
  I0914 13:00:22.146948 20 rc.go:801] Found 2 replicas for "e2e-rc-q54jk" replication controller
  I0914 13:00:22.147118 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5190" for this suite. @ 09/14/24 13:00:22.151
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/14/24 13:00:22.165
  I0914 13:00:22.165545 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 13:00:22.166
  E0914 13:00:22.167273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:22.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:22.186
  STEP: Creating a job @ 09/14/24 13:00:22.189
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/14/24 13:00:22.196
  E0914 13:00:23.167480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:24.167913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/14/24 13:00:24.203
  STEP: updating /status @ 09/14/24 13:00:24.212
  STEP: get /status @ 09/14/24 13:00:24.222
  I0914 13:00:24.227082 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7004" for this suite. @ 09/14/24 13:00:24.231
â€¢ [2.075 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/14/24 13:00:24.241
  I0914 13:00:24.241166 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/24 13:00:24.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:24.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:24.262
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/24 13:00:24.274
  E0914 13:00:25.168396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:26.168573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/14/24 13:00:26.302
  E0914 13:00:27.168681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:28.168812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/14/24 13:00:28.327
  STEP: delete the pod with lifecycle hook @ 09/14/24 13:00:28.344
  E0914 13:00:29.169489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:30.169711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:30.363864 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8668" for this suite. @ 09/14/24 13:00:30.368
â€¢ [6.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/14/24 13:00:30.377
  I0914 13:00:30.377728 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 13:00:30.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:30.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:30.396
  STEP: Create a ReplicaSet @ 09/14/24 13:00:30.404
  STEP: Verify that the required pods have come up @ 09/14/24 13:00:30.411
  I0914 13:00:30.416097 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0914 13:00:31.176144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:32.177239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:33.177310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:34.178388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:35.178477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:35.423232 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/14/24 13:00:35.423
  I0914 13:00:35.428099 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/14/24 13:00:35.428
  STEP: DeleteCollection of the ReplicaSets @ 09/14/24 13:00:35.432
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/14/24 13:00:35.442
  I0914 13:00:35.447091 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9120" for this suite. @ 09/14/24 13:00:35.452
â€¢ [5.092 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/14/24 13:00:35.469
  I0914 13:00:35.469472 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:00:35.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:35.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:35.486
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/14/24 13:00:35.489
  I0914 13:00:35.490391 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:00:36.178996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:36.713051 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:00:37.179101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:38.179945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:39.180408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:40.181415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:41.181958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:41.728266 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9801" for this suite. @ 09/14/24 13:00:41.736
â€¢ [6.275 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/14/24 13:00:41.745
  I0914 13:00:41.745016 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 13:00:41.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:41.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:41.766
  STEP: Creating a test headless service @ 09/14/24 13:00:41.77
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6167.svc.cluster.local;sleep 1; done
   @ 09/14/24 13:00:41.775
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6167.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6167.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6167.svc.cluster.local;sleep 1; done
   @ 09/14/24 13:00:41.775
  STEP: creating a pod to probe DNS @ 09/14/24 13:00:41.775
  STEP: submitting the pod to kubernetes @ 09/14/24 13:00:41.775
  E0914 13:00:42.182424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:43.182861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:00:43.804
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:00:43.809
  I0914 13:00:43.815971 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.821149 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.826255 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.831060 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.836152 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.841864 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.846702 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.851663 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-6167.svc.cluster.local from pod dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5: the server could not find the requested resource (get pods dns-test-55a03e7d-f030-430a-9af3-a082a40416d5)
  I0914 13:00:43.851687 20 dns_common.go:489] Lookups using dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6167.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6167.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6167.svc.cluster.local jessie_udp@dns-test-service-2.dns-6167.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6167.svc.cluster.local]

  I0914 13:00:43.859786 20 dns_common.go:495] Pod client logs for webserver: 
  I0914 13:00:43.867419 20 dns_common.go:495] Pod client logs for querier: 
  I0914 13:00:43.875895 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0914 13:00:44.183460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:45.183551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:46.183813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:47.184048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:48.184155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:48.853861 20 dns_common.go:527] DNS probes using dns-6167/dns-test-55a03e7d-f030-430a-9af3-a082a40416d5 succeeded

  STEP: deleting the pod @ 09/14/24 13:00:48.854
  STEP: deleting the test headless service @ 09/14/24 13:00:48.873
  I0914 13:00:48.889495 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6167" for this suite. @ 09/14/24 13:00:48.896
â€¢ [7.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/14/24 13:00:48.906
  I0914 13:00:48.906480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:00:48.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:48.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:48.923
  STEP: validating cluster-info @ 09/14/24 13:00:48.927
  I0914 13:00:48.927304 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7135 cluster-info'
  I0914 13:00:48.969486 20 builder.go:146] stderr: ""
  I0914 13:00:48.969523 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0914 13:00:48.969713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7135" for this suite. @ 09/14/24 13:00:48.974
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/14/24 13:00:48.983
  I0914 13:00:48.983534 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:00:48.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:49.003
  STEP: Creating configMap with name configmap-test-volume-f6827d19-81e3-49b8-a28f-7d75fca82ff4 @ 09/14/24 13:00:49.006
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:00:49.011
  E0914 13:00:49.184858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:50.184952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:51.185488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:52.185611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:00:53.035
  I0914 13:00:53.040737 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-48224e69-e447-409a-b44a-0b192d4df6e9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:00:53.05
  I0914 13:00:53.070925 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8375" for this suite. @ 09/14/24 13:00:53.075
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/14/24 13:00:53.084
  I0914 13:00:53.084729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 13:00:53.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:00:53.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:00:53.103
  I0914 13:00:53.106217 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0914 13:00:53.117433 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0914 13:00:53.185648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:54.185758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:55.186018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:56.186168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:57.186397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:00:58.123208 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 13:00:58.123
  I0914 13:00:58.123294 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0914 13:00:58.130208 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0914 13:00:58.139360 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0914 13:00:58.186539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:00:59.186836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:01:00.150528 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0914 13:01:00.155490 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0914 13:01:00.171208 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "598bdd7b-7592-42b0-965f-efc433cec4e1",
      ResourceVersion: (string) (len=5) "25044",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:01:00.176775 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c8484d5-dd25-431e-827e-edee0bcb4f61",
      ResourceVersion: (string) (len=5) "25033",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "598bdd7b-7592-42b0-965f-efc433cec4e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 39 38 62 64 64  37 62 2d 37 35 39 32 2d  |\"598bdd7b-7592-|
              00000120  34 32 62 30 2d 39 36 35  66 2d 65 66 63 34 33 33  |42b0-965f-efc433|
              00000130  63 65 63 34 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cec4e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:01:00.177631 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0914 13:01:00.177889 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7178f730-eb69-4ce3-8ea5-2e0238eb90c5",
      ResourceVersion: (string) (len=5) "25042",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915653,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "598bdd7b-7592-42b0-965f-efc433cec4e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915653,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 39 38 62 64 64 37  |"uid\":\"598bdd7|
              000000b0  62 2d 37 35 39 32 2d 34  32 62 30 2d 39 36 35 66  |b-7592-42b0-965f|
              000000c0  2d 65 66 63 34 33 33 63  65 63 34 65 31 5c 22 7d  |-efc433cec4e1\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:01:00.183081 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-wxx8h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-wxx8h",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-4607",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9cbc038-d5da-4a40-8e81-138552f11562",
      ResourceVersion: (string) (len=5) "25032",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "3c8484d5-dd25-431e-827e-edee0bcb4f61",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 63  38 34 38 34 64 35 2d 64  |d\":\"3c8484d5-d|
              00000090  64 32 35 2d 34 33 31 65  2d 38 32 37 65 2d 65 64  |d25-431e-827e-ed|
              000000a0  65 65 30 62 63 62 34 66  36 31 5c 22 7d 22 3a 7b  |ee0bcb4f61\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 37 31 5c 22 7d 22  |2.168.254.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5rnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5rnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861915658,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=14) "192.168.254.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.254.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861915658,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861915658,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://aaecad8a04af07659ad96621453a0d0576cef2189b86e9614810fbdc87cb0314",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w5rnd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:01:00.185568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 13:01:00.186923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-4607" for this suite. @ 09/14/24 13:01:00.19
â€¢ [7.119 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/14/24 13:01:00.204
  I0914 13:01:00.204247 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/24 13:01:00.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:01:00.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:01:00.222
  I0914 13:01:00.252966 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-687" for this suite. @ 09/14/24 13:01:00.258
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/14/24 13:01:00.267
  I0914 13:01:00.267815 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename cronjob @ 09/14/24 13:01:00.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:01:00.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:01:00.287
  STEP: Creating a ForbidConcurrent cronjob @ 09/14/24 13:01:00.29
  STEP: Ensuring a job is scheduled @ 09/14/24 13:01:00.297
  E0914 13:01:01.187327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:02.187455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:03.187563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:04.187623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:05.187874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:06.188031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:07.188405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:08.189054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:09.189771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:10.190743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:11.191432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:12.192259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:13.193133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:14.193362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:15.193835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:16.194011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:17.194751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:18.194971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:19.195170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:20.195398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:21.196124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:22.196248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:23.196339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:24.197375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:25.197460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:26.197656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:27.197879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:28.198056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:29.199034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:30.199509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:31.200588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:32.200683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:33.200786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:34.200953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:35.201051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:36.201250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:37.201344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:38.201647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:39.201844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:40.202113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:41.202244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:42.202422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:43.203294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:44.203567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:45.204123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:46.204184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:47.204218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:48.204315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:49.205244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:50.205436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:51.205771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:52.205992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:53.206531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:54.206841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:55.206995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:56.207195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:57.207513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:58.207714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:01:59.208566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:00.209431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/14/24 13:02:00.303
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/14/24 13:02:00.307
  STEP: Ensuring no more jobs are scheduled @ 09/14/24 13:02:00.312
  STEP: Removing cronjob @ 09/14/24 13:02:00.317
  I0914 13:02:00.325441 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3981" for this suite. @ 09/14/24 13:02:00.329
â€¢ [60.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/14/24 13:02:00.338
  I0914 13:02:00.338959 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-runtime @ 09/14/24 13:02:00.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:02:00.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:02:00.363
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/14/24 13:02:00.375
  E0914 13:02:01.210527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:02.210619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:03.210719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:04.210812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:05.210903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:06.211296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:07.211397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:08.212029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:09.212946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:10.213047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:11.214034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:12.214318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:13.215378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:14.216342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:15.217176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:16.217234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:17.217344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/14/24 13:02:17.496
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/14/24 13:02:17.501
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/14/24 13:02:17.51
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/14/24 13:02:17.51
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/14/24 13:02:17.538
  E0914 13:02:18.217451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:19.218016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/14/24 13:02:19.558
  E0914 13:02:20.218121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/14/24 13:02:20.567
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/14/24 13:02:20.576
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/14/24 13:02:20.576
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/14/24 13:02:20.603
  E0914 13:02:21.219062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/14/24 13:02:21.616
  E0914 13:02:22.219153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/14/24 13:02:22.625
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/14/24 13:02:22.634
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/14/24 13:02:22.635
  I0914 13:02:22.673980 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8134" for this suite. @ 09/14/24 13:02:22.679
â€¢ [22.349 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/14/24 13:02:22.687
  I0914 13:02:22.687909 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svc-latency @ 09/14/24 13:02:22.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:02:22.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:02:22.707
  I0914 13:02:22.711522 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6061 @ 09/14/24 13:02:22.712
  I0914 13:02:22.721599      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6061, replica count: 1
  E0914 13:02:23.219791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:23.772885      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 13:02:23.886692 20 service_latency.go:356] Created: latency-svc-d9czc
  I0914 13:02:23.899451 20 service_latency.go:363] Got endpoints: latency-svc-d9czc [26.337461ms]
  I0914 13:02:23.916322 20 service_latency.go:356] Created: latency-svc-ls7bm
  I0914 13:02:23.921905 20 service_latency.go:363] Got endpoints: latency-svc-ls7bm [22.330275ms]
  I0914 13:02:23.924293 20 service_latency.go:356] Created: latency-svc-79tpn
  I0914 13:02:23.932008 20 service_latency.go:363] Got endpoints: latency-svc-79tpn [32.202255ms]
  I0914 13:02:23.932895 20 service_latency.go:356] Created: latency-svc-wf9mb
  I0914 13:02:23.939431 20 service_latency.go:363] Got endpoints: latency-svc-wf9mb [39.595659ms]
  I0914 13:02:23.944294 20 service_latency.go:356] Created: latency-svc-8rx85
  I0914 13:02:23.949714 20 service_latency.go:356] Created: latency-svc-jt6g9
  I0914 13:02:23.950598 20 service_latency.go:363] Got endpoints: latency-svc-8rx85 [50.824085ms]
  I0914 13:02:23.956576 20 service_latency.go:363] Got endpoints: latency-svc-jt6g9 [56.960208ms]
  I0914 13:02:23.959241 20 service_latency.go:356] Created: latency-svc-pxkfm
  I0914 13:02:23.966529 20 service_latency.go:363] Got endpoints: latency-svc-pxkfm [66.657445ms]
  I0914 13:02:23.968553 20 service_latency.go:356] Created: latency-svc-p8bp2
  I0914 13:02:23.975003 20 service_latency.go:363] Got endpoints: latency-svc-p8bp2 [75.110642ms]
  I0914 13:02:23.978302 20 service_latency.go:356] Created: latency-svc-p94d8
  I0914 13:02:23.982781 20 service_latency.go:363] Got endpoints: latency-svc-p94d8 [82.868335ms]
  I0914 13:02:23.986364 20 service_latency.go:356] Created: latency-svc-k8x8k
  I0914 13:02:23.992056 20 service_latency.go:363] Got endpoints: latency-svc-k8x8k [92.112482ms]
  I0914 13:02:23.996532 20 service_latency.go:356] Created: latency-svc-lzzg5
  I0914 13:02:24.004504 20 service_latency.go:363] Got endpoints: latency-svc-lzzg5 [104.54649ms]
  I0914 13:02:24.004894 20 service_latency.go:356] Created: latency-svc-lr9hk
  I0914 13:02:24.009780 20 service_latency.go:363] Got endpoints: latency-svc-lr9hk [109.799171ms]
  I0914 13:02:24.013848 20 service_latency.go:356] Created: latency-svc-rzszb
  I0914 13:02:24.019213 20 service_latency.go:363] Got endpoints: latency-svc-rzszb [119.18591ms]
  I0914 13:02:24.023133 20 service_latency.go:356] Created: latency-svc-f4vw5
  I0914 13:02:24.029374 20 service_latency.go:363] Got endpoints: latency-svc-f4vw5 [129.315905ms]
  I0914 13:02:24.030633 20 service_latency.go:356] Created: latency-svc-kvqxf
  I0914 13:02:24.037821 20 service_latency.go:356] Created: latency-svc-58bn4
  I0914 13:02:24.039051 20 service_latency.go:363] Got endpoints: latency-svc-kvqxf [139.303622ms]
  I0914 13:02:24.045933 20 service_latency.go:363] Got endpoints: latency-svc-58bn4 [146.221352ms]
  I0914 13:02:24.046827 20 service_latency.go:356] Created: latency-svc-gxptk
  I0914 13:02:24.054309 20 service_latency.go:363] Got endpoints: latency-svc-gxptk [132.353809ms]
  I0914 13:02:24.057987 20 service_latency.go:356] Created: latency-svc-v9cr5
  I0914 13:02:24.063194 20 service_latency.go:363] Got endpoints: latency-svc-v9cr5 [131.085881ms]
  I0914 13:02:24.066433 20 service_latency.go:356] Created: latency-svc-s27kv
  I0914 13:02:24.072834 20 service_latency.go:363] Got endpoints: latency-svc-s27kv [133.318684ms]
  I0914 13:02:24.074251 20 service_latency.go:356] Created: latency-svc-xl7hm
  I0914 13:02:24.080274 20 service_latency.go:363] Got endpoints: latency-svc-xl7hm [129.646943ms]
  I0914 13:02:24.085183 20 service_latency.go:356] Created: latency-svc-9m425
  I0914 13:02:24.092612 20 service_latency.go:363] Got endpoints: latency-svc-9m425 [136.008474ms]
  I0914 13:02:24.094244 20 service_latency.go:356] Created: latency-svc-vxlmd
  I0914 13:02:24.103492 20 service_latency.go:356] Created: latency-svc-dvb9g
  I0914 13:02:24.103802 20 service_latency.go:363] Got endpoints: latency-svc-vxlmd [137.246366ms]
  I0914 13:02:24.109546 20 service_latency.go:363] Got endpoints: latency-svc-dvb9g [134.522574ms]
  I0914 13:02:24.112196 20 service_latency.go:356] Created: latency-svc-l66b8
  I0914 13:02:24.117475 20 service_latency.go:363] Got endpoints: latency-svc-l66b8 [134.619953ms]
  I0914 13:02:24.120345 20 service_latency.go:356] Created: latency-svc-72l6t
  I0914 13:02:24.126398 20 service_latency.go:363] Got endpoints: latency-svc-72l6t [134.271383ms]
  I0914 13:02:24.131967 20 service_latency.go:356] Created: latency-svc-v2p5g
  I0914 13:02:24.136017 20 service_latency.go:363] Got endpoints: latency-svc-v2p5g [131.470486ms]
  I0914 13:02:24.138517 20 service_latency.go:356] Created: latency-svc-c4mz6
  I0914 13:02:24.145533 20 service_latency.go:363] Got endpoints: latency-svc-c4mz6 [135.731886ms]
  I0914 13:02:24.149760 20 service_latency.go:356] Created: latency-svc-vb67s
  I0914 13:02:24.156681 20 service_latency.go:363] Got endpoints: latency-svc-vb67s [137.44558ms]
  I0914 13:02:24.159189 20 service_latency.go:356] Created: latency-svc-glhpg
  I0914 13:02:24.165311 20 service_latency.go:363] Got endpoints: latency-svc-glhpg [135.913653ms]
  I0914 13:02:24.167540 20 service_latency.go:356] Created: latency-svc-bl2vh
  I0914 13:02:24.172184 20 service_latency.go:363] Got endpoints: latency-svc-bl2vh [132.959447ms]
  I0914 13:02:24.176529 20 service_latency.go:356] Created: latency-svc-ghhc8
  I0914 13:02:24.184257 20 service_latency.go:363] Got endpoints: latency-svc-ghhc8 [138.212287ms]
  I0914 13:02:24.184896 20 service_latency.go:356] Created: latency-svc-7cwvm
  I0914 13:02:24.188323 20 service_latency.go:363] Got endpoints: latency-svc-7cwvm [133.98545ms]
  I0914 13:02:24.192843 20 service_latency.go:356] Created: latency-svc-gq599
  I0914 13:02:24.199523 20 service_latency.go:363] Got endpoints: latency-svc-gq599 [136.086623ms]
  I0914 13:02:24.202685 20 service_latency.go:356] Created: latency-svc-cw8lx
  I0914 13:02:24.208292 20 service_latency.go:363] Got endpoints: latency-svc-cw8lx [135.304947ms]
  I0914 13:02:24.209050 20 service_latency.go:356] Created: latency-svc-bhtwf
  I0914 13:02:24.215577 20 service_latency.go:356] Created: latency-svc-bh4jk
  I0914 13:02:24.217314 20 service_latency.go:363] Got endpoints: latency-svc-bhtwf [136.996514ms]
  E0914 13:02:24.220377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:24.222198 20 service_latency.go:363] Got endpoints: latency-svc-bh4jk [129.324255ms]
  I0914 13:02:24.225946 20 service_latency.go:356] Created: latency-svc-jrctn
  I0914 13:02:24.230983 20 service_latency.go:356] Created: latency-svc-4c2c9
  I0914 13:02:24.237642 20 service_latency.go:356] Created: latency-svc-s2d57
  I0914 13:02:24.243754 20 service_latency.go:356] Created: latency-svc-qfsxx
  I0914 13:02:24.246529 20 service_latency.go:363] Got endpoints: latency-svc-jrctn [142.710165ms]
  I0914 13:02:24.251435 20 service_latency.go:356] Created: latency-svc-qtjvv
  I0914 13:02:24.259171 20 service_latency.go:356] Created: latency-svc-k57fz
  I0914 13:02:24.265609 20 service_latency.go:356] Created: latency-svc-jjd56
  I0914 13:02:24.274253 20 service_latency.go:356] Created: latency-svc-qgfvn
  I0914 13:02:24.281839 20 service_latency.go:356] Created: latency-svc-kxzz9
  I0914 13:02:24.286462 20 service_latency.go:356] Created: latency-svc-hnwsv
  I0914 13:02:24.295052 20 service_latency.go:356] Created: latency-svc-2nww2
  I0914 13:02:24.296334 20 service_latency.go:363] Got endpoints: latency-svc-4c2c9 [186.667734ms]
  I0914 13:02:24.299193 20 service_latency.go:356] Created: latency-svc-7wbzx
  I0914 13:02:24.305961 20 service_latency.go:356] Created: latency-svc-65j96
  I0914 13:02:24.313394 20 service_latency.go:356] Created: latency-svc-bbnr2
  I0914 13:02:24.320839 20 service_latency.go:356] Created: latency-svc-tvfjm
  I0914 13:02:24.326552 20 service_latency.go:356] Created: latency-svc-tzbnj
  I0914 13:02:24.335025 20 service_latency.go:356] Created: latency-svc-bsm9x
  I0914 13:02:24.345577 20 service_latency.go:363] Got endpoints: latency-svc-s2d57 [228.083596ms]
  I0914 13:02:24.356484 20 service_latency.go:356] Created: latency-svc-q4bnp
  I0914 13:02:24.399057 20 service_latency.go:363] Got endpoints: latency-svc-qfsxx [272.465845ms]
  I0914 13:02:24.411707 20 service_latency.go:356] Created: latency-svc-dmc6m
  I0914 13:02:24.447585 20 service_latency.go:363] Got endpoints: latency-svc-qtjvv [311.387809ms]
  I0914 13:02:24.459629 20 service_latency.go:356] Created: latency-svc-zj462
  I0914 13:02:24.497475 20 service_latency.go:363] Got endpoints: latency-svc-k57fz [351.77694ms]
  I0914 13:02:24.510541 20 service_latency.go:356] Created: latency-svc-p4lxt
  I0914 13:02:24.545834 20 service_latency.go:363] Got endpoints: latency-svc-jjd56 [389.124501ms]
  I0914 13:02:24.558385 20 service_latency.go:356] Created: latency-svc-vfvvm
  I0914 13:02:24.596927 20 service_latency.go:363] Got endpoints: latency-svc-qgfvn [431.37332ms]
  I0914 13:02:24.609558 20 service_latency.go:356] Created: latency-svc-sqqdt
  I0914 13:02:24.647274 20 service_latency.go:363] Got endpoints: latency-svc-kxzz9 [475.061937ms]
  I0914 13:02:24.660991 20 service_latency.go:356] Created: latency-svc-6jlg9
  I0914 13:02:24.696403 20 service_latency.go:363] Got endpoints: latency-svc-hnwsv [512.10628ms]
  I0914 13:02:24.709354 20 service_latency.go:356] Created: latency-svc-kv56w
  I0914 13:02:24.745792 20 service_latency.go:363] Got endpoints: latency-svc-2nww2 [557.306555ms]
  I0914 13:02:24.758849 20 service_latency.go:356] Created: latency-svc-k4sgk
  I0914 13:02:24.795785 20 service_latency.go:363] Got endpoints: latency-svc-7wbzx [596.196943ms]
  I0914 13:02:24.811910 20 service_latency.go:356] Created: latency-svc-w9wlr
  I0914 13:02:24.847575 20 service_latency.go:363] Got endpoints: latency-svc-65j96 [639.260309ms]
  I0914 13:02:24.860514 20 service_latency.go:356] Created: latency-svc-cbkn5
  I0914 13:02:24.898254 20 service_latency.go:363] Got endpoints: latency-svc-bbnr2 [680.767071ms]
  I0914 13:02:24.911180 20 service_latency.go:356] Created: latency-svc-v5spd
  I0914 13:02:24.946215 20 service_latency.go:363] Got endpoints: latency-svc-tvfjm [723.839657ms]
  I0914 13:02:24.958684 20 service_latency.go:356] Created: latency-svc-sd672
  I0914 13:02:24.995557 20 service_latency.go:363] Got endpoints: latency-svc-tzbnj [749.002611ms]
  I0914 13:02:25.009749 20 service_latency.go:356] Created: latency-svc-sr9qz
  I0914 13:02:25.047228 20 service_latency.go:363] Got endpoints: latency-svc-bsm9x [750.869724ms]
  I0914 13:02:25.059319 20 service_latency.go:356] Created: latency-svc-zwv9x
  I0914 13:02:25.097947 20 service_latency.go:363] Got endpoints: latency-svc-q4bnp [752.343638ms]
  I0914 13:02:25.109694 20 service_latency.go:356] Created: latency-svc-25jq8
  I0914 13:02:25.147536 20 service_latency.go:363] Got endpoints: latency-svc-dmc6m [748.437921ms]
  I0914 13:02:25.159836 20 service_latency.go:356] Created: latency-svc-86cbm
  I0914 13:02:25.195390 20 service_latency.go:363] Got endpoints: latency-svc-zj462 [747.654962ms]
  I0914 13:02:25.208187 20 service_latency.go:356] Created: latency-svc-c952z
  E0914 13:02:25.221302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:25.246887 20 service_latency.go:363] Got endpoints: latency-svc-p4lxt [748.973828ms]
  I0914 13:02:25.259186 20 service_latency.go:356] Created: latency-svc-s2rfm
  I0914 13:02:25.297942 20 service_latency.go:363] Got endpoints: latency-svc-vfvvm [751.772111ms]
  I0914 13:02:25.309502 20 service_latency.go:356] Created: latency-svc-ntsrt
  I0914 13:02:25.347207 20 service_latency.go:363] Got endpoints: latency-svc-sqqdt [750.238083ms]
  I0914 13:02:25.360629 20 service_latency.go:356] Created: latency-svc-4s99s
  I0914 13:02:25.398290 20 service_latency.go:363] Got endpoints: latency-svc-6jlg9 [750.713925ms]
  I0914 13:02:25.411799 20 service_latency.go:356] Created: latency-svc-wt7wm
  I0914 13:02:25.445480 20 service_latency.go:363] Got endpoints: latency-svc-kv56w [748.809134ms]
  I0914 13:02:25.458287 20 service_latency.go:356] Created: latency-svc-n5gkc
  I0914 13:02:25.495821 20 service_latency.go:363] Got endpoints: latency-svc-k4sgk [749.995405ms]
  I0914 13:02:25.509561 20 service_latency.go:356] Created: latency-svc-qrgkz
  I0914 13:02:25.548348 20 service_latency.go:363] Got endpoints: latency-svc-w9wlr [752.521824ms]
  I0914 13:02:25.559876 20 service_latency.go:356] Created: latency-svc-f2vbz
  I0914 13:02:25.596536 20 service_latency.go:363] Got endpoints: latency-svc-cbkn5 [748.674721ms]
  I0914 13:02:25.607795 20 service_latency.go:356] Created: latency-svc-k8gxt
  I0914 13:02:25.647536 20 service_latency.go:363] Got endpoints: latency-svc-v5spd [749.146788ms]
  I0914 13:02:25.660281 20 service_latency.go:356] Created: latency-svc-f9tpq
  I0914 13:02:25.697561 20 service_latency.go:363] Got endpoints: latency-svc-sd672 [751.229648ms]
  I0914 13:02:25.709866 20 service_latency.go:356] Created: latency-svc-5g88d
  I0914 13:02:25.746147 20 service_latency.go:363] Got endpoints: latency-svc-sr9qz [750.507784ms]
  I0914 13:02:25.762015 20 service_latency.go:356] Created: latency-svc-djhs4
  I0914 13:02:25.796925 20 service_latency.go:363] Got endpoints: latency-svc-zwv9x [749.657612ms]
  I0914 13:02:25.808297 20 service_latency.go:356] Created: latency-svc-qhqq8
  I0914 13:02:25.847632 20 service_latency.go:363] Got endpoints: latency-svc-25jq8 [749.60618ms]
  I0914 13:02:25.860366 20 service_latency.go:356] Created: latency-svc-w7879
  I0914 13:02:25.898869 20 service_latency.go:363] Got endpoints: latency-svc-86cbm [751.227022ms]
  I0914 13:02:25.911400 20 service_latency.go:356] Created: latency-svc-hm9h8
  I0914 13:02:25.945452 20 service_latency.go:363] Got endpoints: latency-svc-c952z [750.020723ms]
  I0914 13:02:25.958263 20 service_latency.go:356] Created: latency-svc-95zqs
  I0914 13:02:25.997219 20 service_latency.go:363] Got endpoints: latency-svc-s2rfm [750.293658ms]
  I0914 13:02:26.010646 20 service_latency.go:356] Created: latency-svc-f25nr
  I0914 13:02:26.047682 20 service_latency.go:363] Got endpoints: latency-svc-ntsrt [749.533064ms]
  I0914 13:02:26.065581 20 service_latency.go:356] Created: latency-svc-xls28
  I0914 13:02:26.097785 20 service_latency.go:363] Got endpoints: latency-svc-4s99s [750.538047ms]
  I0914 13:02:26.110394 20 service_latency.go:356] Created: latency-svc-6jdwp
  I0914 13:02:26.147377 20 service_latency.go:363] Got endpoints: latency-svc-wt7wm [748.92739ms]
  I0914 13:02:26.160129 20 service_latency.go:356] Created: latency-svc-4dhg2
  I0914 13:02:26.195706 20 service_latency.go:363] Got endpoints: latency-svc-n5gkc [750.139187ms]
  I0914 13:02:26.208666 20 service_latency.go:356] Created: latency-svc-6x8tt
  E0914 13:02:26.221807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:26.245138 20 service_latency.go:363] Got endpoints: latency-svc-qrgkz [749.039434ms]
  I0914 13:02:26.257780 20 service_latency.go:356] Created: latency-svc-2slnl
  I0914 13:02:26.297943 20 service_latency.go:363] Got endpoints: latency-svc-f2vbz [749.541001ms]
  I0914 13:02:26.309662 20 service_latency.go:356] Created: latency-svc-s8g86
  I0914 13:02:26.348356 20 service_latency.go:363] Got endpoints: latency-svc-k8gxt [751.76739ms]
  I0914 13:02:26.360050 20 service_latency.go:356] Created: latency-svc-vqv4l
  I0914 13:02:26.397248 20 service_latency.go:363] Got endpoints: latency-svc-f9tpq [749.674897ms]
  I0914 13:02:26.410133 20 service_latency.go:356] Created: latency-svc-cp5zw
  I0914 13:02:26.446207 20 service_latency.go:363] Got endpoints: latency-svc-5g88d [748.603893ms]
  I0914 13:02:26.456824 20 service_latency.go:356] Created: latency-svc-fhd5b
  I0914 13:02:26.496830 20 service_latency.go:363] Got endpoints: latency-svc-djhs4 [750.636214ms]
  I0914 13:02:26.508306 20 service_latency.go:356] Created: latency-svc-kkr6l
  I0914 13:02:26.547098 20 service_latency.go:363] Got endpoints: latency-svc-qhqq8 [750.122257ms]
  I0914 13:02:26.560221 20 service_latency.go:356] Created: latency-svc-rfgzx
  I0914 13:02:26.598335 20 service_latency.go:363] Got endpoints: latency-svc-w7879 [750.657131ms]
  I0914 13:02:26.613365 20 service_latency.go:356] Created: latency-svc-hpbcp
  I0914 13:02:26.645968 20 service_latency.go:363] Got endpoints: latency-svc-hm9h8 [746.96313ms]
  I0914 13:02:26.657509 20 service_latency.go:356] Created: latency-svc-nlrp5
  I0914 13:02:26.697763 20 service_latency.go:363] Got endpoints: latency-svc-95zqs [752.218467ms]
  I0914 13:02:26.709106 20 service_latency.go:356] Created: latency-svc-cl6cz
  I0914 13:02:26.747727 20 service_latency.go:363] Got endpoints: latency-svc-f25nr [750.372981ms]
  I0914 13:02:26.759326 20 service_latency.go:356] Created: latency-svc-8dl2x
  I0914 13:02:26.797046 20 service_latency.go:363] Got endpoints: latency-svc-xls28 [749.316883ms]
  I0914 13:02:26.809725 20 service_latency.go:356] Created: latency-svc-b6rxx
  I0914 13:02:26.845558 20 service_latency.go:363] Got endpoints: latency-svc-6jdwp [747.735223ms]
  I0914 13:02:26.859966 20 service_latency.go:356] Created: latency-svc-k7rmh
  I0914 13:02:26.896572 20 service_latency.go:363] Got endpoints: latency-svc-4dhg2 [748.958382ms]
  I0914 13:02:26.911479 20 service_latency.go:356] Created: latency-svc-ws2h8
  I0914 13:02:26.948637 20 service_latency.go:363] Got endpoints: latency-svc-6x8tt [752.811515ms]
  I0914 13:02:26.961198 20 service_latency.go:356] Created: latency-svc-phqwd
  I0914 13:02:26.998363 20 service_latency.go:363] Got endpoints: latency-svc-2slnl [753.100048ms]
  I0914 13:02:27.010871 20 service_latency.go:356] Created: latency-svc-m6c4n
  I0914 13:02:27.047939 20 service_latency.go:363] Got endpoints: latency-svc-s8g86 [749.956037ms]
  I0914 13:02:27.061032 20 service_latency.go:356] Created: latency-svc-9kdfz
  I0914 13:02:27.096256 20 service_latency.go:363] Got endpoints: latency-svc-vqv4l [747.781519ms]
  I0914 13:02:27.109558 20 service_latency.go:356] Created: latency-svc-969h8
  I0914 13:02:27.146741 20 service_latency.go:363] Got endpoints: latency-svc-cp5zw [749.202472ms]
  I0914 13:02:27.160662 20 service_latency.go:356] Created: latency-svc-mzjt2
  I0914 13:02:27.196406 20 service_latency.go:363] Got endpoints: latency-svc-fhd5b [750.157105ms]
  I0914 13:02:27.208344 20 service_latency.go:356] Created: latency-svc-fjqnz
  E0914 13:02:27.222632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:27.248088 20 service_latency.go:363] Got endpoints: latency-svc-kkr6l [751.084359ms]
  I0914 13:02:27.259403 20 service_latency.go:356] Created: latency-svc-2gp4p
  I0914 13:02:27.296885 20 service_latency.go:363] Got endpoints: latency-svc-rfgzx [749.504247ms]
  I0914 13:02:27.309716 20 service_latency.go:356] Created: latency-svc-ttdjv
  I0914 13:02:27.345930 20 service_latency.go:363] Got endpoints: latency-svc-hpbcp [747.558427ms]
  I0914 13:02:27.359922 20 service_latency.go:356] Created: latency-svc-s5mlt
  I0914 13:02:27.396062 20 service_latency.go:363] Got endpoints: latency-svc-nlrp5 [749.917492ms]
  I0914 13:02:27.412278 20 service_latency.go:356] Created: latency-svc-mq55r
  I0914 13:02:27.447423 20 service_latency.go:363] Got endpoints: latency-svc-cl6cz [749.613694ms]
  I0914 13:02:27.460219 20 service_latency.go:356] Created: latency-svc-2f9kw
  I0914 13:02:27.497792 20 service_latency.go:363] Got endpoints: latency-svc-8dl2x [750.026403ms]
  I0914 13:02:27.508926 20 service_latency.go:356] Created: latency-svc-fc4c7
  I0914 13:02:27.547655 20 service_latency.go:363] Got endpoints: latency-svc-b6rxx [750.379348ms]
  I0914 13:02:27.562376 20 service_latency.go:356] Created: latency-svc-xj5g6
  I0914 13:02:27.598422 20 service_latency.go:363] Got endpoints: latency-svc-k7rmh [752.45408ms]
  I0914 13:02:27.610794 20 service_latency.go:356] Created: latency-svc-rls85
  I0914 13:02:27.646720 20 service_latency.go:363] Got endpoints: latency-svc-ws2h8 [749.204742ms]
  I0914 13:02:27.660665 20 service_latency.go:356] Created: latency-svc-l87ll
  I0914 13:02:27.697773 20 service_latency.go:363] Got endpoints: latency-svc-phqwd [749.019091ms]
  I0914 13:02:27.709599 20 service_latency.go:356] Created: latency-svc-n7qx5
  I0914 13:02:27.747891 20 service_latency.go:363] Got endpoints: latency-svc-m6c4n [749.483376ms]
  I0914 13:02:27.760407 20 service_latency.go:356] Created: latency-svc-f2x4m
  I0914 13:02:27.796260 20 service_latency.go:363] Got endpoints: latency-svc-9kdfz [748.243531ms]
  I0914 13:02:27.808561 20 service_latency.go:356] Created: latency-svc-qb4dz
  I0914 13:02:27.848336 20 service_latency.go:363] Got endpoints: latency-svc-969h8 [751.558704ms]
  I0914 13:02:27.858940 20 service_latency.go:356] Created: latency-svc-fdfql
  I0914 13:02:27.896259 20 service_latency.go:363] Got endpoints: latency-svc-mzjt2 [749.478422ms]
  I0914 13:02:27.912243 20 service_latency.go:356] Created: latency-svc-8x6jk
  I0914 13:02:27.952314 20 service_latency.go:363] Got endpoints: latency-svc-fjqnz [755.867944ms]
  I0914 13:02:27.966436 20 service_latency.go:356] Created: latency-svc-tq5bm
  I0914 13:02:27.994418 20 service_latency.go:363] Got endpoints: latency-svc-2gp4p [746.171481ms]
  I0914 13:02:28.009556 20 service_latency.go:356] Created: latency-svc-jps9g
  I0914 13:02:28.046374 20 service_latency.go:363] Got endpoints: latency-svc-ttdjv [749.319583ms]
  I0914 13:02:28.058795 20 service_latency.go:356] Created: latency-svc-k48rw
  I0914 13:02:28.096902 20 service_latency.go:363] Got endpoints: latency-svc-s5mlt [750.92349ms]
  I0914 13:02:28.108952 20 service_latency.go:356] Created: latency-svc-grrsd
  I0914 13:02:28.148960 20 service_latency.go:363] Got endpoints: latency-svc-mq55r [752.693836ms]
  I0914 13:02:28.161091 20 service_latency.go:356] Created: latency-svc-27kbv
  I0914 13:02:28.196279 20 service_latency.go:363] Got endpoints: latency-svc-2f9kw [748.81321ms]
  I0914 13:02:28.208432 20 service_latency.go:356] Created: latency-svc-v8sfb
  E0914 13:02:28.223656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:28.247400 20 service_latency.go:363] Got endpoints: latency-svc-fc4c7 [749.568942ms]
  I0914 13:02:28.258861 20 service_latency.go:356] Created: latency-svc-fgc9g
  I0914 13:02:28.298021 20 service_latency.go:363] Got endpoints: latency-svc-xj5g6 [750.105938ms]
  I0914 13:02:28.312031 20 service_latency.go:356] Created: latency-svc-v4t4s
  I0914 13:02:28.346411 20 service_latency.go:363] Got endpoints: latency-svc-rls85 [747.935828ms]
  I0914 13:02:28.358395 20 service_latency.go:356] Created: latency-svc-pl2pm
  I0914 13:02:28.397468 20 service_latency.go:363] Got endpoints: latency-svc-l87ll [750.71644ms]
  I0914 13:02:28.411187 20 service_latency.go:356] Created: latency-svc-d4rrz
  I0914 13:02:28.446314 20 service_latency.go:363] Got endpoints: latency-svc-n7qx5 [748.500673ms]
  I0914 13:02:28.458683 20 service_latency.go:356] Created: latency-svc-6rsv2
  I0914 13:02:28.497264 20 service_latency.go:363] Got endpoints: latency-svc-f2x4m [749.328924ms]
  I0914 13:02:28.508236 20 service_latency.go:356] Created: latency-svc-drt5t
  I0914 13:02:28.547906 20 service_latency.go:363] Got endpoints: latency-svc-qb4dz [751.482118ms]
  I0914 13:02:28.559698 20 service_latency.go:356] Created: latency-svc-w5cd6
  I0914 13:02:28.597347 20 service_latency.go:363] Got endpoints: latency-svc-fdfql [748.809154ms]
  I0914 13:02:28.610109 20 service_latency.go:356] Created: latency-svc-68995
  I0914 13:02:28.646245 20 service_latency.go:363] Got endpoints: latency-svc-8x6jk [749.581855ms]
  I0914 13:02:28.657800 20 service_latency.go:356] Created: latency-svc-zzghf
  I0914 13:02:28.696348 20 service_latency.go:363] Got endpoints: latency-svc-tq5bm [743.92872ms]
  I0914 13:02:28.707742 20 service_latency.go:356] Created: latency-svc-v7g8n
  I0914 13:02:28.747901 20 service_latency.go:363] Got endpoints: latency-svc-jps9g [753.439138ms]
  I0914 13:02:28.759916 20 service_latency.go:356] Created: latency-svc-g9b4m
  I0914 13:02:28.797700 20 service_latency.go:363] Got endpoints: latency-svc-k48rw [751.220723ms]
  I0914 13:02:28.811363 20 service_latency.go:356] Created: latency-svc-zblkp
  I0914 13:02:28.846266 20 service_latency.go:363] Got endpoints: latency-svc-grrsd [749.222196ms]
  I0914 13:02:28.858803 20 service_latency.go:356] Created: latency-svc-sqjqm
  I0914 13:02:28.897195 20 service_latency.go:363] Got endpoints: latency-svc-27kbv [748.075641ms]
  I0914 13:02:28.911095 20 service_latency.go:356] Created: latency-svc-wgw58
  I0914 13:02:28.947919 20 service_latency.go:363] Got endpoints: latency-svc-v8sfb [751.465148ms]
  I0914 13:02:28.959706 20 service_latency.go:356] Created: latency-svc-bf4xv
  I0914 13:02:29.155714 20 service_latency.go:363] Got endpoints: latency-svc-fgc9g [908.272308ms]
  I0914 13:02:29.158661 20 service_latency.go:363] Got endpoints: latency-svc-v4t4s [860.594416ms]
  I0914 13:02:29.162992 20 service_latency.go:363] Got endpoints: latency-svc-d4rrz [765.26994ms]
  I0914 13:02:29.163106 20 service_latency.go:363] Got endpoints: latency-svc-pl2pm [816.606918ms]
  I0914 13:02:29.170048 20 service_latency.go:356] Created: latency-svc-vqrpp
  I0914 13:02:29.177397 20 service_latency.go:356] Created: latency-svc-7tmsz
  I0914 13:02:29.183006 20 service_latency.go:356] Created: latency-svc-c6l6n
  I0914 13:02:29.190229 20 service_latency.go:356] Created: latency-svc-r77tj
  I0914 13:02:29.196890 20 service_latency.go:363] Got endpoints: latency-svc-6rsv2 [750.537269ms]
  I0914 13:02:29.209523 20 service_latency.go:356] Created: latency-svc-9s6vb
  E0914 13:02:29.224695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:29.247524 20 service_latency.go:363] Got endpoints: latency-svc-drt5t [750.212127ms]
  I0914 13:02:29.259473 20 service_latency.go:356] Created: latency-svc-9kxlm
  I0914 13:02:29.295936 20 service_latency.go:363] Got endpoints: latency-svc-68995 [698.509832ms]
  I0914 13:02:29.309018 20 service_latency.go:356] Created: latency-svc-86gzr
  I0914 13:02:29.346466 20 service_latency.go:363] Got endpoints: latency-svc-w5cd6 [798.30554ms]
  I0914 13:02:29.358486 20 service_latency.go:356] Created: latency-svc-pvh2d
  I0914 13:02:29.397057 20 service_latency.go:363] Got endpoints: latency-svc-zzghf [750.603521ms]
  I0914 13:02:29.409490 20 service_latency.go:356] Created: latency-svc-9ggtq
  I0914 13:02:29.447464 20 service_latency.go:363] Got endpoints: latency-svc-v7g8n [751.082061ms]
  I0914 13:02:29.459210 20 service_latency.go:356] Created: latency-svc-wbdxf
  I0914 13:02:29.505121 20 service_latency.go:363] Got endpoints: latency-svc-g9b4m [756.933118ms]
  I0914 13:02:29.518923 20 service_latency.go:356] Created: latency-svc-dj49g
  I0914 13:02:29.545603 20 service_latency.go:363] Got endpoints: latency-svc-zblkp [747.61353ms]
  I0914 13:02:29.558224 20 service_latency.go:356] Created: latency-svc-sw6nf
  I0914 13:02:29.595066 20 service_latency.go:363] Got endpoints: latency-svc-sqjqm [748.681218ms]
  I0914 13:02:29.607220 20 service_latency.go:356] Created: latency-svc-pqbvx
  I0914 13:02:29.646892 20 service_latency.go:363] Got endpoints: latency-svc-wgw58 [749.638236ms]
  I0914 13:02:29.658431 20 service_latency.go:356] Created: latency-svc-jshrh
  I0914 13:02:29.697773 20 service_latency.go:363] Got endpoints: latency-svc-bf4xv [749.817532ms]
  I0914 13:02:29.710259 20 service_latency.go:356] Created: latency-svc-2kn4m
  I0914 13:02:29.747026 20 service_latency.go:363] Got endpoints: latency-svc-vqrpp [591.169351ms]
  I0914 13:02:29.760555 20 service_latency.go:356] Created: latency-svc-7wnbh
  I0914 13:02:29.796390 20 service_latency.go:363] Got endpoints: latency-svc-7tmsz [637.699456ms]
  I0914 13:02:29.807850 20 service_latency.go:356] Created: latency-svc-ls8sm
  I0914 13:02:29.849351 20 service_latency.go:363] Got endpoints: latency-svc-c6l6n [686.068937ms]
  I0914 13:02:29.862048 20 service_latency.go:356] Created: latency-svc-p6b5c
  I0914 13:02:29.897964 20 service_latency.go:363] Got endpoints: latency-svc-r77tj [734.496758ms]
  I0914 13:02:29.911271 20 service_latency.go:356] Created: latency-svc-d79mj
  I0914 13:02:29.947190 20 service_latency.go:363] Got endpoints: latency-svc-9s6vb [750.257289ms]
  I0914 13:02:29.958528 20 service_latency.go:356] Created: latency-svc-vhgg2
  I0914 13:02:29.995351 20 service_latency.go:363] Got endpoints: latency-svc-9kxlm [747.662032ms]
  I0914 13:02:30.008502 20 service_latency.go:356] Created: latency-svc-49rhl
  I0914 13:02:30.045863 20 service_latency.go:363] Got endpoints: latency-svc-86gzr [749.532545ms]
  I0914 13:02:30.057459 20 service_latency.go:356] Created: latency-svc-lxwnm
  I0914 13:02:30.098137 20 service_latency.go:363] Got endpoints: latency-svc-pvh2d [751.626319ms]
  I0914 13:02:30.109644 20 service_latency.go:356] Created: latency-svc-j5jpt
  I0914 13:02:30.146934 20 service_latency.go:363] Got endpoints: latency-svc-9ggtq [749.815072ms]
  I0914 13:02:30.160236 20 service_latency.go:356] Created: latency-svc-7tgw8
  I0914 13:02:30.199959 20 service_latency.go:363] Got endpoints: latency-svc-wbdxf [752.335237ms]
  I0914 13:02:30.219853 20 service_latency.go:356] Created: latency-svc-b4gr2
  E0914 13:02:30.225065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:30.246422 20 service_latency.go:363] Got endpoints: latency-svc-dj49g [741.048849ms]
  I0914 13:02:30.263329 20 service_latency.go:356] Created: latency-svc-rk8rv
  I0914 13:02:30.298352 20 service_latency.go:363] Got endpoints: latency-svc-sw6nf [752.715789ms]
  I0914 13:02:30.311187 20 service_latency.go:356] Created: latency-svc-gt4jl
  I0914 13:02:30.347047 20 service_latency.go:363] Got endpoints: latency-svc-pqbvx [751.748144ms]
  I0914 13:02:30.359699 20 service_latency.go:356] Created: latency-svc-vmn29
  I0914 13:02:30.396950 20 service_latency.go:363] Got endpoints: latency-svc-jshrh [750.016856ms]
  I0914 13:02:30.409032 20 service_latency.go:356] Created: latency-svc-llgws
  I0914 13:02:30.446896 20 service_latency.go:363] Got endpoints: latency-svc-2kn4m [749.061479ms]
  I0914 13:02:30.459761 20 service_latency.go:356] Created: latency-svc-f4s65
  I0914 13:02:30.496352 20 service_latency.go:363] Got endpoints: latency-svc-7wnbh [749.266058ms]
  I0914 13:02:30.509500 20 service_latency.go:356] Created: latency-svc-9jgxg
  I0914 13:02:30.546809 20 service_latency.go:363] Got endpoints: latency-svc-ls8sm [750.147838ms]
  I0914 13:02:30.559005 20 service_latency.go:356] Created: latency-svc-v4htz
  I0914 13:02:30.598119 20 service_latency.go:363] Got endpoints: latency-svc-p6b5c [748.498659ms]
  I0914 13:02:30.610816 20 service_latency.go:356] Created: latency-svc-96sqv
  I0914 13:02:30.653716 20 service_latency.go:363] Got endpoints: latency-svc-d79mj [755.373062ms]
  I0914 13:02:30.667397 20 service_latency.go:356] Created: latency-svc-b655q
  I0914 13:02:30.694994 20 service_latency.go:363] Got endpoints: latency-svc-vhgg2 [747.68608ms]
  I0914 13:02:30.706570 20 service_latency.go:356] Created: latency-svc-lp97z
  I0914 13:02:30.747280 20 service_latency.go:363] Got endpoints: latency-svc-49rhl [751.822963ms]
  I0914 13:02:30.761094 20 service_latency.go:356] Created: latency-svc-mhc6s
  I0914 13:02:30.796331 20 service_latency.go:363] Got endpoints: latency-svc-lxwnm [750.428904ms]
  I0914 13:02:30.809447 20 service_latency.go:356] Created: latency-svc-7f452
  I0914 13:02:30.847095 20 service_latency.go:363] Got endpoints: latency-svc-j5jpt [748.905819ms]
  I0914 13:02:30.859437 20 service_latency.go:356] Created: latency-svc-pn8zh
  I0914 13:02:30.896121 20 service_latency.go:363] Got endpoints: latency-svc-7tgw8 [749.151942ms]
  I0914 13:02:30.910480 20 service_latency.go:356] Created: latency-svc-dwbdp
  I0914 13:02:30.946022 20 service_latency.go:363] Got endpoints: latency-svc-b4gr2 [746.002292ms]
  I0914 13:02:30.957277 20 service_latency.go:356] Created: latency-svc-rz6bp
  I0914 13:02:30.996004 20 service_latency.go:363] Got endpoints: latency-svc-rk8rv [749.384831ms]
  I0914 13:02:31.007670 20 service_latency.go:356] Created: latency-svc-5g2wv
  I0914 13:02:31.047051 20 service_latency.go:363] Got endpoints: latency-svc-gt4jl [748.632923ms]
  I0914 13:02:31.058944 20 service_latency.go:356] Created: latency-svc-nb7jj
  I0914 13:02:31.096738 20 service_latency.go:363] Got endpoints: latency-svc-vmn29 [749.293934ms]
  I0914 13:02:31.108988 20 service_latency.go:356] Created: latency-svc-9727d
  I0914 13:02:31.145399 20 service_latency.go:363] Got endpoints: latency-svc-llgws [748.406415ms]
  I0914 13:02:31.158120 20 service_latency.go:356] Created: latency-svc-zgx72
  I0914 13:02:31.196970 20 service_latency.go:363] Got endpoints: latency-svc-f4s65 [750.03707ms]
  I0914 13:02:31.208813 20 service_latency.go:356] Created: latency-svc-g6dnx
  E0914 13:02:31.225952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:31.247649 20 service_latency.go:363] Got endpoints: latency-svc-9jgxg [750.920606ms]
  I0914 13:02:31.260420 20 service_latency.go:356] Created: latency-svc-mnlg6
  I0914 13:02:31.297246 20 service_latency.go:363] Got endpoints: latency-svc-v4htz [750.386802ms]
  I0914 13:02:31.309195 20 service_latency.go:356] Created: latency-svc-nvpjw
  I0914 13:02:31.346372 20 service_latency.go:363] Got endpoints: latency-svc-96sqv [748.205661ms]
  I0914 13:02:31.359822 20 service_latency.go:356] Created: latency-svc-xg2zq
  I0914 13:02:31.395916 20 service_latency.go:363] Got endpoints: latency-svc-b655q [741.934643ms]
  I0914 13:02:31.409924 20 service_latency.go:356] Created: latency-svc-5jgbd
  I0914 13:02:31.446352 20 service_latency.go:363] Got endpoints: latency-svc-lp97z [751.174938ms]
  I0914 13:02:31.459351 20 service_latency.go:356] Created: latency-svc-glmpw
  I0914 13:02:31.497990 20 service_latency.go:363] Got endpoints: latency-svc-mhc6s [750.490554ms]
  I0914 13:02:31.509685 20 service_latency.go:356] Created: latency-svc-txv82
  I0914 13:02:31.547877 20 service_latency.go:363] Got endpoints: latency-svc-7f452 [751.486593ms]
  I0914 13:02:31.558829 20 service_latency.go:356] Created: latency-svc-b5wvs
  I0914 13:02:31.597145 20 service_latency.go:363] Got endpoints: latency-svc-pn8zh [749.816744ms]
  I0914 13:02:31.609390 20 service_latency.go:356] Created: latency-svc-qkzj2
  I0914 13:02:31.645952 20 service_latency.go:363] Got endpoints: latency-svc-dwbdp [749.456308ms]
  I0914 13:02:31.659227 20 service_latency.go:356] Created: latency-svc-pb82t
  I0914 13:02:31.697097 20 service_latency.go:363] Got endpoints: latency-svc-rz6bp [751.025986ms]
  I0914 13:02:31.708384 20 service_latency.go:356] Created: latency-svc-q2q7z
  I0914 13:02:31.745876 20 service_latency.go:363] Got endpoints: latency-svc-5g2wv [749.826918ms]
  I0914 13:02:31.795812 20 service_latency.go:363] Got endpoints: latency-svc-nb7jj [748.643992ms]
  I0914 13:02:31.847614 20 service_latency.go:363] Got endpoints: latency-svc-9727d [750.736386ms]
  I0914 13:02:31.895425 20 service_latency.go:363] Got endpoints: latency-svc-zgx72 [749.847345ms]
  I0914 13:02:31.947267 20 service_latency.go:363] Got endpoints: latency-svc-g6dnx [750.043539ms]
  I0914 13:02:31.996313 20 service_latency.go:363] Got endpoints: latency-svc-mnlg6 [748.627591ms]
  I0914 13:02:32.046128 20 service_latency.go:363] Got endpoints: latency-svc-nvpjw [748.834144ms]
  I0914 13:02:32.096322 20 service_latency.go:363] Got endpoints: latency-svc-xg2zq [749.804296ms]
  I0914 13:02:32.146865 20 service_latency.go:363] Got endpoints: latency-svc-5jgbd [750.896339ms]
  I0914 13:02:32.196413 20 service_latency.go:363] Got endpoints: latency-svc-glmpw [750.022374ms]
  E0914 13:02:32.226429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:32.252914 20 service_latency.go:363] Got endpoints: latency-svc-txv82 [754.892943ms]
  I0914 13:02:32.302720 20 service_latency.go:363] Got endpoints: latency-svc-b5wvs [754.805932ms]
  I0914 13:02:32.346312 20 service_latency.go:363] Got endpoints: latency-svc-qkzj2 [749.124547ms]
  I0914 13:02:32.397890 20 service_latency.go:363] Got endpoints: latency-svc-pb82t [751.888288ms]
  I0914 13:02:32.446091 20 service_latency.go:363] Got endpoints: latency-svc-q2q7z [748.948653ms]
  I0914 13:02:32.446193 20 service_latency.go:114] Latencies: [22.330275ms 32.202255ms 39.595659ms 50.824085ms 56.960208ms 66.657445ms 75.110642ms 82.868335ms 92.112482ms 104.54649ms 109.799171ms 119.18591ms 129.315905ms 129.324255ms 129.646943ms 131.085881ms 131.470486ms 132.353809ms 132.959447ms 133.318684ms 133.98545ms 134.271383ms 134.522574ms 134.619953ms 135.304947ms 135.731886ms 135.913653ms 136.008474ms 136.086623ms 136.996514ms 137.246366ms 137.44558ms 138.212287ms 139.303622ms 142.710165ms 146.221352ms 186.667734ms 228.083596ms 272.465845ms 311.387809ms 351.77694ms 389.124501ms 431.37332ms 475.061937ms 512.10628ms 557.306555ms 591.169351ms 596.196943ms 637.699456ms 639.260309ms 680.767071ms 686.068937ms 698.509832ms 723.839657ms 734.496758ms 741.048849ms 741.934643ms 743.92872ms 746.002292ms 746.171481ms 746.96313ms 747.558427ms 747.61353ms 747.654962ms 747.662032ms 747.68608ms 747.735223ms 747.781519ms 747.935828ms 748.075641ms 748.205661ms 748.243531ms 748.406415ms 748.437921ms 748.498659ms 748.500673ms 748.603893ms 748.627591ms 748.632923ms 748.643992ms 748.674721ms 748.681218ms 748.809134ms 748.809154ms 748.81321ms 748.834144ms 748.905819ms 748.92739ms 748.948653ms 748.958382ms 748.973828ms 749.002611ms 749.019091ms 749.039434ms 749.061479ms 749.124547ms 749.146788ms 749.151942ms 749.202472ms 749.204742ms 749.222196ms 749.266058ms 749.293934ms 749.316883ms 749.319583ms 749.328924ms 749.384831ms 749.456308ms 749.478422ms 749.483376ms 749.504247ms 749.532545ms 749.533064ms 749.541001ms 749.568942ms 749.581855ms 749.60618ms 749.613694ms 749.638236ms 749.657612ms 749.674897ms 749.804296ms 749.815072ms 749.816744ms 749.817532ms 749.826918ms 749.847345ms 749.917492ms 749.956037ms 749.995405ms 750.016856ms 750.020723ms 750.022374ms 750.026403ms 750.03707ms 750.043539ms 750.105938ms 750.122257ms 750.139187ms 750.147838ms 750.157105ms 750.212127ms 750.238083ms 750.257289ms 750.293658ms 750.372981ms 750.379348ms 750.386802ms 750.428904ms 750.490554ms 750.507784ms 750.537269ms 750.538047ms 750.603521ms 750.636214ms 750.657131ms 750.713925ms 750.71644ms 750.736386ms 750.869724ms 750.896339ms 750.920606ms 750.92349ms 751.025986ms 751.082061ms 751.084359ms 751.174938ms 751.220723ms 751.227022ms 751.229648ms 751.465148ms 751.482118ms 751.486593ms 751.558704ms 751.626319ms 751.748144ms 751.76739ms 751.772111ms 751.822963ms 751.888288ms 752.218467ms 752.335237ms 752.343638ms 752.45408ms 752.521824ms 752.693836ms 752.715789ms 752.811515ms 753.100048ms 753.439138ms 754.805932ms 754.892943ms 755.373062ms 755.867944ms 756.933118ms 765.26994ms 798.30554ms 816.606918ms 860.594416ms 908.272308ms]
  I0914 13:02:32.446204 20 service_latency.go:118] 50 %ile: 749.222196ms
  I0914 13:02:32.446210 20 service_latency.go:119] 90 %ile: 752.218467ms
  I0914 13:02:32.446215 20 service_latency.go:120] 99 %ile: 860.594416ms
  I0914 13:02:32.446221 20 service_latency.go:121] Total sample count: 200
  I0914 13:02:32.446346 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6061" for this suite. @ 09/14/24 13:02:32.452
â€¢ [9.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/14/24 13:02:32.461
  I0914 13:02:32.461648 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:02:32.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:02:32.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:02:32.48
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/14/24 13:02:32.483
  E0914 13:02:33.226580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:34.227007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:35.227110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:36.227204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:02:36.514
  I0914 13:02:36.519209 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-f6bbfca1-886f-4ba5-a12a-e45e9d97bebd container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:02:36.531
  I0914 13:02:36.553270 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6247" for this suite. @ 09/14/24 13:02:36.558
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/14/24 13:02:36.566
  I0914 13:02:36.566986 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/24 13:02:36.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:02:36.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:02:36.586
  STEP: creating the policy @ 09/14/24 13:02:36.596
  STEP: waiting until the marker is denied @ 09/14/24 13:02:36.613
  E0914 13:02:37.228005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/14/24 13:02:37.521
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/14/24 13:02:37.539
  I0914 13:02:37.596986 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1959" for this suite. @ 09/14/24 13:02:37.601
â€¢ [1.042 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/14/24 13:02:37.609
  I0914 13:02:37.609761 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 13:02:37.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:02:37.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:02:37.636
  STEP: Creating pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794 @ 09/14/24 13:02:37.64
  E0914 13:02:38.228848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:39.229042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 13:02:39.667
  I0914 13:02:39.672249 20 container_probe.go:1749] Initial restart count of pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb is 0
  I0914 13:02:39.676150 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:40.229830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:41.229926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:41.683566 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:42.230688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:43.230768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:43.689065 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:44.231834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:45.232054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:45.695226 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:46.233049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:47.233250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:47.701118 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:48.233742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:49.234057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:49.707529 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:50.234315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:51.234516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:51.713689 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:52.235362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:53.235571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:53.719945 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:54.235636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:55.235847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:55.725648 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:56.236116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:57.236188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:57.731622 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:02:58.237233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:02:59.237342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:02:59.737433 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:00.238040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:01.238178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:01.743868 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:02.238367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:03.238583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:03.750305 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:04.238669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:05.238723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:05.756783 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:06.239416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:07.240257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:07.763240 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:08.240749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:09.240839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:09.768587 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:10.241066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:11.241150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:11.775482 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:12.242047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:13.242251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:13.781680 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:14.243046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:15.243658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:15.788875 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:16.244436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:17.245459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:17.794787 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:18.246360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:19.246623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:19.800791 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:20.247307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:21.247498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:21.806730 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:22.248396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:23.248588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:23.813265 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:24.248747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:25.249820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:25.819355 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:26.249911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:27.250004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:27.825266 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:28.250749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:29.250854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:29.830897 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:30.251492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:31.251694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:31.837069 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:32.252569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:33.253344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:33.843527 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:34.254082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:35.254173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:35.849600 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:36.254259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:37.254491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:37.855497 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:38.255077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:39.255388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:39.862242 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:40.255527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:41.255745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:41.867933 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:42.256460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:43.257219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:43.873820 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:44.258046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:45.258266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:45.879969 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:46.258311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:47.258417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:47.885155 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:48.259408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:49.259507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:49.891209 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:50.259595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:51.259706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:51.896288 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:52.260739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:53.261100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:53.903073 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:54.261188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:55.261276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:55.909558 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:56.262059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:57.262168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:57.916344 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:03:58.262766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:03:59.263085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:03:59.922746 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:00.263182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:01.263305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:01.928765 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:02.264208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:03.264323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:03.934359 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:04.264916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:05.265019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:05.940454 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:06.266055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:07.266251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:07.948253 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:08.266436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:09.266521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:09.954252 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:10.267543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:11.267718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:11.959549 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:12.267920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:13.268155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:13.965199 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:14.268674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:15.268778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:15.970063 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:16.269285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:17.269961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:17.975795 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:18.270201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:19.270290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:19.981279 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:20.270384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:21.270566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:21.987427 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:22.270735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:23.270957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:23.993509 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:24.272000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:25.272161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:25.999213 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:26.272614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:27.273291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:28.005803 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:28.274204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:29.274527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:30.011783 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:30.275223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:31.275362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:32.017622 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:32.275975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:33.276157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:34.022774 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:34.277068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:35.277489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:36.029261 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:36.277680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:37.277785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:38.034905 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:38.278309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:39.278494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:40.041312 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:40.278602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:41.279431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:42.049046 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:42.279955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:43.280115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:44.055398 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:44.280673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:45.280766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:46.061065 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:46.281196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:47.281391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:48.066431 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:48.281787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:49.282089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:50.072927 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:50.282218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:51.282392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:52.078399 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:52.282494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:53.282598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:54.083241 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:54.282680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:55.282860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:56.090145 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:56.283298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:57.283441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:04:58.095503 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:04:58.283869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:04:59.284147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:00.101409 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:00.284766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:01.284868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:02.107228 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:02.285520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:03.285753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:04.112907 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:04.286250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:05.286405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:06.118855 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:06.287193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:07.287333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:08.124227 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:08.287456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:09.287682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:10.129950 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:10.288294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:11.288557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:12.134718 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:12.288913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:13.289280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:14.140784 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:14.290083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:15.290419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:16.146523 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:16.290689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:17.290823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:18.152014 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:18.291271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:19.291538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:20.159226 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:20.292493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:21.292583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:22.164237 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:22.293470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:23.293665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:24.170607 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:24.294052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:25.294259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:26.176804 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:26.295005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:27.295316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:28.181593 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:28.295786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:29.296134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:30.188322 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:30.296519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:31.296628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:32.194135 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:32.297300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:33.297419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:34.201499 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:34.297670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:35.297762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:36.208055 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:36.298226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:37.298488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:38.213622 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:38.298790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:39.299045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:40.220712 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:40.299878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:41.300278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:42.226118 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:42.301250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:43.301342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:44.231940 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:44.302072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:45.302347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:46.238210 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:46.302453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:47.302557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:48.243761 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:48.303051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:49.303524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:50.250584 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:50.303818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:51.304110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:52.258453 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:52.304719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:53.304833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:54.264340 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:54.305474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:55.306183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:56.270047 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:56.306222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:57.306502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:05:58.274852 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:05:58.307199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:05:59.307380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:00.280713 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:00.307894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:01.308118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:02.286811 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:02.308983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:03.310015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:04.292601 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:04.310680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:05.310931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:06.299105 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:06.311200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:07.311448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:08.304626 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:08.311755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:09.311920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:10.310802 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:10.312851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:11.313096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:12.313387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:12.317323 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:13.314316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:14.314454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:14.323899 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:15.314550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:16.314694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:16.330126 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:17.314888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:18.315091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:18.336019 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:19.315174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:20.315455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:20.342207 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:21.316150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:22.316311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:22.348031 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:23.316387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:24.317303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:24.353407 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:25.317418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:26.317512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:26.359827 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:27.317668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:28.317828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:28.365233 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:29.317943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:30.318029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:30.371421 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:31.318416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:32.318563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:32.377526 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:33.319393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:34.320452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:34.383834 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:35.321214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:36.321305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:36.390616 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:37.321409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:38.321790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:38.396332 20 container_probe.go:1759] Get pod test-webserver-6dc3c5ae-5414-4743-b321-c37d7b205ecb in namespace container-probe-6794
  E0914 13:06:39.321928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:40.322021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/14/24 13:06:40.397
  I0914 13:06:40.420376 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6794" for this suite. @ 09/14/24 13:06:40.424
â€¢ [242.823 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/14/24 13:06:40.432
  I0914 13:06:40.432364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/24 13:06:40.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:06:40.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:06:40.454
  STEP: creating a policy with variables @ 09/14/24 13:06:40.468
  STEP: waiting until the marker is denied @ 09/14/24 13:06:40.485
  STEP: testing a replicated Deployment to be allowed @ 09/14/24 13:06:40.694
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/14/24 13:06:40.713
  I0914 13:06:40.786056 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7213" for this suite. @ 09/14/24 13:06:40.794
â€¢ [0.371 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/14/24 13:06:40.803
  I0914 13:06:40.803737 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:06:40.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:06:40.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:06:40.825
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9288 @ 09/14/24 13:06:40.828
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/14/24 13:06:40.847
  STEP: creating service externalsvc in namespace services-9288 @ 09/14/24 13:06:40.847
  STEP: creating replication controller externalsvc in namespace services-9288 @ 09/14/24 13:06:40.86
  I0914 13:06:40.872040      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9288, replica count: 2
  E0914 13:06:41.322540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:42.322655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:43.322800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:43.922777      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/14/24 13:06:43.928
  I0914 13:06:43.952529 20 resource.go:361] Creating new exec pod
  E0914 13:06:44.323490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:45.323578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:45.970396 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-9288 exec execpod7jms6 -- /bin/sh -x -c nslookup nodeport-service.services-9288.svc.cluster.local'
  I0914 13:06:46.075977 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-9288.svc.cluster.local\n"
  I0914 13:06:46.076047 20 builder.go:147] stdout: "Server:\t\t10.152.183.20\nAddress:\t10.152.183.20#53\n\nnodeport-service.services-9288.svc.cluster.local\tcanonical name = externalsvc.services-9288.svc.cluster.local.\nName:\texternalsvc.services-9288.svc.cluster.local\nAddress: 10.152.183.148\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9288, will wait for the garbage collector to delete the pods @ 09/14/24 13:06:46.076
  I0914 13:06:46.139915 20 resources.go:139] Deleting ReplicationController externalsvc took: 8.167235ms
  I0914 13:06:46.241000 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.080097ms
  E0914 13:06:46.324281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:47.324600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:48.324965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:49.162134 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0914 13:06:49.174666 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9288" for this suite. @ 09/14/24 13:06:49.179
â€¢ [8.384 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/14/24 13:06:49.188
  I0914 13:06:49.188473 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 13:06:49.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:06:49.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:06:49.207
  I0914 13:06:49.210662 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/14/24 13:06:49.222
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/14/24 13:06:49.228
  E0914 13:06:49.325393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/14/24 13:06:50.243
  I0914 13:06:50.257138 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/14/24 13:06:50.257
  E0914 13:06:50.326058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:06:51.267778 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8771" for this suite. @ 09/14/24 13:06:51.272
â€¢ [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/14/24 13:06:51.281
  I0914 13:06:51.281628 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:06:51.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:06:51.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:06:51.3
  STEP: Creating a pod to test downward api env vars @ 09/14/24 13:06:51.303
  E0914 13:06:51.326326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:52.326450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:53.326564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:54.327479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:55.327581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:06:55.338
  I0914 13:06:55.342842 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downward-api-f35f78c3-ed4a-444e-abfc-1fde422605dc container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 13:06:55.363
  I0914 13:06:55.381429 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4295" for this suite. @ 09/14/24 13:06:55.385
â€¢ [4.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/14/24 13:06:55.393
  I0914 13:06:55.393259 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/24 13:06:55.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:06:55.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:06:55.414
  STEP: Performing setup for networking test in namespace pod-network-test-5174 @ 09/14/24 13:06:55.417
  STEP: creating a selector @ 09/14/24 13:06:55.417
  STEP: Creating the service pods in kubernetes @ 09/14/24 13:06:55.417
  I0914 13:06:55.417671 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0914 13:06:56.327678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:57.327782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:58.328144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:06:59.328258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:00.329299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:01.330072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:02.330217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:03.330337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:04.330618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:05.330717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:06.330820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:07.331048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:08.331221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:09.331384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:10.332148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:11.333227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:12.334213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:13.334365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:14.334467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:15.334574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:16.335639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:17.335748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/14/24 13:07:17.549
  E0914 13:07:18.336654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:19.336751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:19.591361 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 13:07:19.591395 20 utils.go:496] Going to poll 192.168.17.162 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:07:19.595141 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.17.162 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5174 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:07:19.595158 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:07:19.595602 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:07:19.595673 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5174/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.17.162+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:07:20.337198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:20.653716 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0914 13:07:20.654101 20 utils.go:496] Going to poll 192.168.108.229 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:07:20.658936 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.108.229 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5174 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:07:20.658959 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:07:20.659409 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:07:20.659499 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5174/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.108.229+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:07:21.337549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:21.711107 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0914 13:07:21.711180 20 utils.go:496] Going to poll 192.168.254.79 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:07:21.716669 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.254.79 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5174 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:07:21.716689 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:07:21.717059 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:07:21.717100 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5174/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.254.79+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:07:22.338254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:22.772282 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0914 13:07:22.772506 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5174" for this suite. @ 09/14/24 13:07:22.777
â€¢ [27.393 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/14/24 13:07:22.786
  I0914 13:07:22.786713 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 13:07:22.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:22.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:22.813
  STEP: Creating a job @ 09/14/24 13:07:22.816
  STEP: Ensuring job reaches completions @ 09/14/24 13:07:22.824
  E0914 13:07:23.338376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:24.338513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:25.339583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:26.339781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:27.340600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:28.340692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:29.340798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:30.340899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:31.341813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:32.341989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:33.342882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:34.343018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:34.837128 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3001" for this suite. @ 09/14/24 13:07:34.842
â€¢ [12.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/14/24 13:07:34.852
  I0914 13:07:34.852755 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/24 13:07:34.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:34.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:34.869
  I0914 13:07:34.873049 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:07:35.343654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:36.343797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:37.343892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:37.933736 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4859" for this suite. @ 09/14/24 13:07:37.939
â€¢ [3.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/14/24 13:07:37.95
  I0914 13:07:37.950155 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename watch @ 09/14/24 13:07:37.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:37.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:37.982
  STEP: creating a watch on configmaps @ 09/14/24 13:07:37.989
  STEP: creating a new configmap @ 09/14/24 13:07:37.994
  STEP: modifying the configmap once @ 09/14/24 13:07:38.005
  STEP: closing the watch once it receives two notifications @ 09/14/24 13:07:38.018
  I0914 13:07:38.018581 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2414  5b27378c-71f5-4013-ad01-a201be352f98 28606 0 2024-09-14 13:07:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-14 13:07:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:07:38.018702 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2414  5b27378c-71f5-4013-ad01-a201be352f98 28607 0 2024-09-14 13:07:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-14 13:07:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/14/24 13:07:38.018
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/14/24 13:07:38.04
  STEP: deleting the configmap @ 09/14/24 13:07:38.042
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/14/24 13:07:38.05
  I0914 13:07:38.050310 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2414  5b27378c-71f5-4013-ad01-a201be352f98 28608 0 2024-09-14 13:07:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-14 13:07:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:07:38.050420 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2414  5b27378c-71f5-4013-ad01-a201be352f98 28609 0 2024-09-14 13:07:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-14 13:07:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:07:38.050554 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2414" for this suite. @ 09/14/24 13:07:38.054
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/14/24 13:07:38.063
  I0914 13:07:38.063914 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:07:38.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:38.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:38.081
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:07:38.085
  E0914 13:07:38.344084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:39.344196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:07:40.107
  I0914 13:07:40.111389 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-bd3450be-a3f4-4f33-95a6-2f8651492799 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:07:40.127
  I0914 13:07:40.148685 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4690" for this suite. @ 09/14/24 13:07:40.153
â€¢ [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/14/24 13:07:40.162
  I0914 13:07:40.162141 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename limitrange @ 09/14/24 13:07:40.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:40.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:40.19
  STEP: Creating a LimitRange @ 09/14/24 13:07:40.193
  STEP: Setting up watch @ 09/14/24 13:07:40.193
  STEP: Submitting a LimitRange @ 09/14/24 13:07:40.299
  STEP: Verifying LimitRange creation was observed @ 09/14/24 13:07:40.305
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/14/24 13:07:40.305
  I0914 13:07:40.309053 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0914 13:07:40.309115 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/14/24 13:07:40.309
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/14/24 13:07:40.316
  I0914 13:07:40.324991 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0914 13:07:40.325016 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/14/24 13:07:40.325
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/14/24 13:07:40.332
  I0914 13:07:40.339713 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0914 13:07:40.339735 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/14/24 13:07:40.339
  STEP: Failing to create a Pod with more than max resources @ 09/14/24 13:07:40.341
  STEP: Updating a LimitRange @ 09/14/24 13:07:40.343
  E0914 13:07:40.344958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying LimitRange updating is effective @ 09/14/24 13:07:40.351
  E0914 13:07:41.345143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:42.345253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/14/24 13:07:42.357
  STEP: Failing to create a Pod with more than max resources @ 09/14/24 13:07:42.369
  STEP: Deleting a LimitRange @ 09/14/24 13:07:42.372
  STEP: Verifying the LimitRange was deleted @ 09/14/24 13:07:42.38
  E0914 13:07:43.346112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:44.346478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:45.346877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:46.347025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:47.347143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:47.386836 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/14/24 13:07:47.386
  I0914 13:07:47.397044 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5524" for this suite. @ 09/14/24 13:07:47.402
â€¢ [7.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/14/24 13:07:47.411
  I0914 13:07:47.411389 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-webhook @ 09/14/24 13:07:47.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:47.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:47.432
  STEP: Setting up server cert @ 09/14/24 13:07:47.435
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/14/24 13:07:47.722
  STEP: Deploying the custom resource conversion webhook pod @ 09/14/24 13:07:47.734
  STEP: Wait for the deployment to be ready @ 09/14/24 13:07:47.748
  I0914 13:07:47.763335 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0914 13:07:48.348070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:49.349088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:07:49.778
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:07:49.789
  E0914 13:07:50.349538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:07:50.790181 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0914 13:07:50.801364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:07:51.350170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:52.350694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:53.351255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/14/24 13:07:53.353
  STEP: Create a v2 custom resource @ 09/14/24 13:07:53.373
  STEP: List CRs in v1 @ 09/14/24 13:07:53.397
  STEP: List CRs in v2 @ 09/14/24 13:07:53.402
  I0914 13:07:53.972294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2809" for this suite. @ 09/14/24 13:07:53.976
â€¢ [6.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/14/24 13:07:53.987
  I0914 13:07:53.987033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:07:53.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:54.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:54.005
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:07:54.008
  E0914 13:07:54.351569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:55.351794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:56.352017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:57.352181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:07:58.035
  I0914 13:07:58.039432 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-f7d2fdc7-d4e7-46e9-9322-ad513261576e container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:07:58.048
  I0914 13:07:58.070232 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9321" for this suite. @ 09/14/24 13:07:58.075
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/14/24 13:07:58.084
  I0914 13:07:58.084265 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:07:58.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:07:58.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:07:58.103
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/14/24 13:07:58.106
  E0914 13:07:58.352213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:07:59.352311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:08:00.129
  I0914 13:08:00.133544 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-be78dc38-4c66-4165-8859-608dcaee2c1a container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:08:00.141
  I0914 13:08:00.164545 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6715" for this suite. @ 09/14/24 13:08:00.169
â€¢ [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/14/24 13:08:00.18
  I0914 13:08:00.180185 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 13:08:00.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:00.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:00.199
  STEP: create the rc @ 09/14/24 13:08:00.209
  W0914 13:08:00.217676      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0914 13:08:00.353010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:01.354433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:02.368308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:03.368472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:04.369919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:05.370877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/14/24 13:08:06.224
  STEP: wait for the rc to be deleted @ 09/14/24 13:08:06.232
  E0914 13:08:06.371261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:07.271557 20 garbage_collector.go:670] 80 pods remaining
  I0914 13:08:07.271593 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0914 13:08:07.271602 20 garbage_collector.go:678] 
  E0914 13:08:07.384512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:08.249511 20 garbage_collector.go:670] 71 pods remaining
  I0914 13:08:08.249553 20 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0914 13:08:08.249578 20 garbage_collector.go:678] 
  E0914 13:08:08.388023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:09.249491 20 garbage_collector.go:670] 60 pods remaining
  I0914 13:08:09.249531 20 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0914 13:08:09.249537 20 garbage_collector.go:678] 
  E0914 13:08:09.388956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:10.257251 20 garbage_collector.go:670] 40 pods remaining
  I0914 13:08:10.257284 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0914 13:08:10.257303 20 garbage_collector.go:678] 
  E0914 13:08:10.389010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:11.247819 20 garbage_collector.go:670] 31 pods remaining
  I0914 13:08:11.247849 20 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0914 13:08:11.247856 20 garbage_collector.go:678] 
  E0914 13:08:11.389164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:12.243398 20 garbage_collector.go:670] 20 pods remaining
  I0914 13:08:12.243425 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0914 13:08:12.243430 20 garbage_collector.go:678] 
  E0914 13:08:12.389255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/14/24 13:08:13.258
  W0914 13:08:13.264193      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:08:13.264239 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:08:13.264400 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-541" for this suite. @ 09/14/24 13:08:13.27
â€¢ [13.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/14/24 13:08:13.282
  I0914 13:08:13.282565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 13:08:13.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:13.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:13.306
  STEP: Counting existing ResourceQuota @ 09/14/24 13:08:13.31
  E0914 13:08:13.389917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:14.390911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:15.391428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:16.391583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:17.392300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/14/24 13:08:18.314
  STEP: Ensuring resource quota status is calculated @ 09/14/24 13:08:18.322
  E0914 13:08:18.393237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:19.393344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/14/24 13:08:20.327
  STEP: Ensuring resource quota status captures replication controller creation @ 09/14/24 13:08:20.34
  E0914 13:08:20.394014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:21.394225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/14/24 13:08:22.345
  STEP: Ensuring resource quota status released usage @ 09/14/24 13:08:22.352
  E0914 13:08:22.394412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:23.394591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:24.358482 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1675" for this suite. @ 09/14/24 13:08:24.362
â€¢ [11.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/14/24 13:08:24.373
  I0914 13:08:24.373899 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context @ 09/14/24 13:08:24.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:24.393
  E0914 13:08:24.394667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:24.396
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/14/24 13:08:24.399
  E0914 13:08:25.394926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:26.395123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:27.395222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:28.395366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:08:28.427
  I0914 13:08:28.432293 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod security-context-07b2c5ae-90d4-4223-b26a-6417339ef16a container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:08:28.442
  I0914 13:08:28.463802 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-942" for this suite. @ 09/14/24 13:08:28.469
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/14/24 13:08:28.479
  I0914 13:08:28.479495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:08:28.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:28.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:28.501
  STEP: Setting up server cert @ 09/14/24 13:08:28.537
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:08:28.795
  STEP: Deploying the webhook pod @ 09/14/24 13:08:28.809
  STEP: Wait for the deployment to be ready @ 09/14/24 13:08:28.824
  I0914 13:08:28.842699 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:08:29.395423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:30.395629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:08:30.857
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:08:30.869
  E0914 13:08:31.396429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:08:31.869927 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/14/24 13:08:31.955
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/24 13:08:31.988
  STEP: Deleting the collection of validation webhooks @ 09/14/24 13:08:32.013
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/24 13:08:32.079
  I0914 13:08:32.139751 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2492" for this suite. @ 09/14/24 13:08:32.143
  STEP: Destroying namespace "webhook-markers-8901" for this suite. @ 09/14/24 13:08:32.152
â€¢ [3.681 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/14/24 13:08:32.161
  I0914 13:08:32.161128 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subpath @ 09/14/24 13:08:32.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:32.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:32.18
  STEP: Setting up data @ 09/14/24 13:08:32.184
  STEP: Creating pod pod-subpath-test-downwardapi-tlzx @ 09/14/24 13:08:32.194
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/24 13:08:32.194
  E0914 13:08:32.396528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:33.397284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:34.397843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:35.398050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:36.398813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:37.398907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:38.399896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:39.400142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:40.400241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:41.401204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:42.401739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:43.401823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:44.402369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:45.403340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:46.403469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:47.403701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:48.404198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:49.404304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:50.404391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:51.404454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:52.404751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:53.404775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:08:54.275
  I0914 13:08:54.280307 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-subpath-test-downwardapi-tlzx container test-container-subpath-downwardapi-tlzx: <nil>
  STEP: delete the pod @ 09/14/24 13:08:54.289
  STEP: Deleting pod pod-subpath-test-downwardapi-tlzx @ 09/14/24 13:08:54.308
  I0914 13:08:54.308450 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-tlzx" in namespace "subpath-8220"
  I0914 13:08:54.313057 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8220" for this suite. @ 09/14/24 13:08:54.317
â€¢ [22.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/14/24 13:08:54.326
  I0914 13:08:54.326411 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename init-container @ 09/14/24 13:08:54.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:08:54.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:08:54.344
  STEP: creating the pod @ 09/14/24 13:08:54.347
  I0914 13:08:54.347650 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0914 13:08:54.405004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:55.405991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:56.406202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:57.407244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:58.407351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:08:59.407674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:00.407941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:01.408150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:02.408269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:03.408325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:04.409103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:05.409934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:06.410089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:07.410289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:08.410365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:09.410754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:10.411036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:11.411252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:12.411391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:13.411502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:14.411631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:15.411796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:16.412128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:17.412170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:18.412306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:19.412400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:20.412476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:21.413198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:22.414049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:23.414285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:24.414678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:25.414795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:26.414913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:27.415175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:28.415395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:29.415779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:30.415898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:31.416106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:32.416195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:33.416315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:34.416424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:35.416510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:36.416613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:37.416715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:38.417231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:39.417485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:39.932366 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-814857af-6d85-4184-a939-02961f65e63c", GenerateName:"", Namespace:"init-container-5423", SelfLink:"", UID:"230c1072-d7a9-4559-a7b1-eb77ef9d5114", ResourceVersion:"31707", Generation:0, CreationTimestamp:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"347641479"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be6660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 14, 13, 9, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004be6690), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jdm4n", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000c53ac0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jdm4n", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jdm4n", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jdm4n", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004ca1158), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-8-243", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0053db000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ca1200)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ca1220)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004ca1228), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004ca122c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00539da70), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 14, 13, 8, 55, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.8.243", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.8.243"}}, PodIP:"192.168.254.101", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.254.101"}}, StartTime:time.Date(2024, time.September, 14, 13, 8, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000248150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002481c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://022f2c77afd4069fd2dcb1b47497303c9240f62b1ca6de334730cf17b7b6d9a4", Started:(*bool)(0xc004ca12da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jdm4n", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00539da90)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c53b60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ca12ed), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jdm4n", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00539daa0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c53b40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ca12af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-jdm4n", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00539da80)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0914 13:09:39.932519 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5423" for this suite. @ 09/14/24 13:09:39.938
â€¢ [45.621 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/14/24 13:09:39.947
  I0914 13:09:39.947254 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:09:39.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:39.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:39.965
  STEP: Creating projection with secret that has name secret-emptykey-test-b275b767-a25e-44d0-8376-24686ca6823a @ 09/14/24 13:09:39.969
  I0914 13:09:39.971132 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5749" for this suite. @ 09/14/24 13:09:39.975
â€¢ [0.038 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/14/24 13:09:39.984
  I0914 13:09:39.984856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:09:39.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:40.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:40.005
  STEP: creating service in namespace services-7637 @ 09/14/24 13:09:40.008
  STEP: creating service affinity-nodeport-transition in namespace services-7637 @ 09/14/24 13:09:40.008
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7637 @ 09/14/24 13:09:40.027
  I0914 13:09:40.038574      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7637, replica count: 3
  E0914 13:09:40.418505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:41.419203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:42.419313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:43.090133      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 13:09:43.104572 20 resource.go:361] Creating new exec pod
  E0914 13:09:43.424981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:44.425180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:45.425238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:46.131078 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0914 13:09:46.224320 20 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0914 13:09:46.224367 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:46.224444 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.202 80'
  I0914 13:09:46.317291 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.202 80\nConnection to 10.152.183.202 80 port [tcp/http] succeeded!\n"
  I0914 13:09:46.317332 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:46.317416 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.255 32478'
  I0914 13:09:46.410404 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.33.255 32478\n+ echo hostName\nConnection to 172.31.33.255 32478 port [tcp/*] succeeded!\n"
  I0914 13:09:46.410450 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:46.410521 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.243 32478'
  E0914 13:09:46.425902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:46.501680 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.8.243 32478\n+ echo hostName\nConnection to 172.31.8.243 32478 port [tcp/*] succeeded!\n"
  I0914 13:09:46.501736 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:46.515263 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.255:32478/ ; done'
  I0914 13:09:46.670953 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n"
  I0914 13:09:46.671006 20 builder.go:147] stdout: "\naffinity-nodeport-transition-knv65\naffinity-nodeport-transition-knv65\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-hs8vs\naffinity-nodeport-transition-knv65\naffinity-nodeport-transition-hs8vs\naffinity-nodeport-transition-hs8vs\naffinity-nodeport-transition-knv65\naffinity-nodeport-transition-hs8vs\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-knv65\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-hs8vs\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv"
  I0914 13:09:46.671022 20 service.go:242] Received response from host: affinity-nodeport-transition-knv65
  I0914 13:09:46.671029 20 service.go:242] Received response from host: affinity-nodeport-transition-knv65
  I0914 13:09:46.671034 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.671039 20 service.go:242] Received response from host: affinity-nodeport-transition-hs8vs
  I0914 13:09:46.671044 20 service.go:242] Received response from host: affinity-nodeport-transition-knv65
  I0914 13:09:46.671049 20 service.go:242] Received response from host: affinity-nodeport-transition-hs8vs
  I0914 13:09:46.671054 20 service.go:242] Received response from host: affinity-nodeport-transition-hs8vs
  I0914 13:09:46.671059 20 service.go:242] Received response from host: affinity-nodeport-transition-knv65
  I0914 13:09:46.671064 20 service.go:242] Received response from host: affinity-nodeport-transition-hs8vs
  I0914 13:09:46.671069 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.671074 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.671079 20 service.go:242] Received response from host: affinity-nodeport-transition-knv65
  I0914 13:09:46.671084 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.671088 20 service.go:242] Received response from host: affinity-nodeport-transition-hs8vs
  I0914 13:09:46.671093 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.671098 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.683487 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-7637 exec execpod-affinitysq8j9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.255:32478/ ; done'
  I0914 13:09:46.827402 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.255:32478/\n"
  I0914 13:09:46.827448 20 builder.go:147] stdout: "\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv\naffinity-nodeport-transition-xzjvv"
  I0914 13:09:46.827462 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827471 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827478 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827594 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827602 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827607 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827614 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827620 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827626 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827631 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827637 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827644 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827650 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827663 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827669 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827674 20 service.go:242] Received response from host: affinity-nodeport-transition-xzjvv
  I0914 13:09:46.827811 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7637, will wait for the garbage collector to delete the pods @ 09/14/24 13:09:46.848
  I0914 13:09:46.911803 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.637257ms
  I0914 13:09:47.012176 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.358453ms
  E0914 13:09:47.426280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:48.427398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:49.427619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:50.045766 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7637" for this suite. @ 09/14/24 13:09:50.049
â€¢ [10.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/14/24 13:09:50.057
  I0914 13:09:50.057642 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename cronjob @ 09/14/24 13:09:50.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:50.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:50.077
  STEP: Creating a cronjob @ 09/14/24 13:09:50.08
  STEP: creating @ 09/14/24 13:09:50.08
  STEP: getting @ 09/14/24 13:09:50.087
  STEP: listing @ 09/14/24 13:09:50.091
  STEP: watching @ 09/14/24 13:09:50.096
  I0914 13:09:50.096186 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/14/24 13:09:50.097
  STEP: cluster-wide watching @ 09/14/24 13:09:50.101
  I0914 13:09:50.101638 20 cronjob.go:382] starting watch
  STEP: patching @ 09/14/24 13:09:50.103
  STEP: updating @ 09/14/24 13:09:50.11
  I0914 13:09:50.120538 20 cronjob.go:406] waiting for watch events with expected annotations
  I0914 13:09:50.120572 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/14/24 13:09:50.12
  STEP: updating /status @ 09/14/24 13:09:50.128
  STEP: get /status @ 09/14/24 13:09:50.136
  STEP: deleting @ 09/14/24 13:09:50.141
  STEP: deleting a collection @ 09/14/24 13:09:50.159
  I0914 13:09:50.175352 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2835" for this suite. @ 09/14/24 13:09:50.18
â€¢ [0.133 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/14/24 13:09:50.19
  I0914 13:09:50.190657 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename init-container @ 09/14/24 13:09:50.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:50.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:50.215
  STEP: creating the pod @ 09/14/24 13:09:50.219
  I0914 13:09:50.219097 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0914 13:09:50.428515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:51.429506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:52.429653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:53.429690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:09:54.132771 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-752" for this suite. @ 09/14/24 13:09:54.139
â€¢ [3.959 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/14/24 13:09:54.15
  I0914 13:09:54.150239 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:09:54.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:54.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:54.168
  STEP: Creating secret with name secret-test-e4c40b4a-40db-473f-b559-e24eaef0063e @ 09/14/24 13:09:54.172
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:09:54.178
  E0914 13:09:54.430458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:55.430659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:56.430933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:57.431148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:09:58.206
  I0914 13:09:58.211426 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-99ae4076-8e7d-4f70-9ed2-a834b99c68bc container secret-env-test: <nil>
  STEP: delete the pod @ 09/14/24 13:09:58.218
  I0914 13:09:58.240774 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6758" for this suite. @ 09/14/24 13:09:58.246
â€¢ [4.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/14/24 13:09:58.254
  I0914 13:09:58.254476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/24 13:09:58.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:09:58.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:09:58.28
  I0914 13:09:58.300111 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0914 13:09:58.431258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:09:59.431347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:00.432050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:01.432215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:02.432795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:03.432854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:04.433703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:05.433766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:06.434178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:07.434244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:08.434644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:09.434751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:10.435151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:11.435386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:12.435927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:13.436133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:14.436918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:15.437293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:16.437996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:17.438218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:18.438788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:19.439042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:20.439678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:21.440043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:22.441128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:23.441281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:24.441732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:25.441867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:26.442852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:27.443046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:28.443709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:29.444064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:30.444890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:31.445041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:32.445522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:33.446257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:34.446694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:35.446740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:36.447545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:37.447724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:38.447836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:39.447898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:40.448643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:41.449574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:42.450015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:43.450121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:44.450807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:45.451208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:46.451636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:47.451753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:48.452517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:49.453202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:50.453596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:51.453779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:52.453936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:53.454236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:54.454726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:55.454915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:56.455397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:57.456374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:10:58.306152 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/14/24 13:10:58.31
  I0914 13:10:58.310557 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/14/24 13:10:58.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:10:58.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:10:58.33
  STEP: Finding an available node @ 09/14/24 13:10:58.338
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/24 13:10:58.338
  E0914 13:10:58.456642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:10:59.456723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/24 13:11:00.366
  I0914 13:11:00.382571 20 preemption.go:585] found a healthy node: ip-172-31-8-243
  E0914 13:11:00.457182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:01.457294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:02.457958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:03.459044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:04.459772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:05.460615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:06.460359 20 preemption.go:708] pods created so far: [1 1 1]
  I0914 13:11:06.460388 20 preemption.go:709] length of pods created so far: 3
  E0914 13:11:06.460616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:07.461503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:08.462269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:08.473174 20 preemption.go:726] pods created so far: [2 2 1]
  E0914 13:11:09.462987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:10.463195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:11.463277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:12.463405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:13.463504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:14.463923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:15.464149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:15.553172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6403" for this suite. @ 09/14/24 13:11:15.558
  I0914 13:11:15.567231 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3135" for this suite. @ 09/14/24 13:11:15.572
â€¢ [77.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/14/24 13:11:15.582
  I0914 13:11:15.582228 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:11:15.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:15.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:15.602
  STEP: Setting up server cert @ 09/14/24 13:11:15.627
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:11:15.96
  STEP: Deploying the webhook pod @ 09/14/24 13:11:15.969
  STEP: Wait for the deployment to be ready @ 09/14/24 13:11:15.987
  I0914 13:11:15.998931 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:11:16.464467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:17.465282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:11:18.014
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:11:18.033
  E0914 13:11:18.465902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:19.033674 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 13:11:19.043177 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:11:19.466141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2257-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/24 13:11:19.556
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/14/24 13:11:19.572
  E0914 13:11:20.466332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:21.466416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:22.179811 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5608" for this suite. @ 09/14/24 13:11:22.184
  STEP: Destroying namespace "webhook-markers-6998" for this suite. @ 09/14/24 13:11:22.191
â€¢ [6.617 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/14/24 13:11:22.199
  I0914 13:11:22.199734 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:11:22.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:22.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:22.22
  STEP: Setting up server cert @ 09/14/24 13:11:22.244
  E0914 13:11:22.466525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:11:22.558
  STEP: Deploying the webhook pod @ 09/14/24 13:11:22.565
  STEP: Wait for the deployment to be ready @ 09/14/24 13:11:22.581
  I0914 13:11:22.599447 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:11:23.467307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:24.467516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:11:24.614
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:11:24.627
  E0914 13:11:25.468510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:25.627803 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/14/24 13:11:25.637
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/14/24 13:11:25.652
  I0914 13:11:25.652663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:11:25.715016 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8519" for this suite. @ 09/14/24 13:11:25.719
  STEP: Destroying namespace "webhook-markers-1010" for this suite. @ 09/14/24 13:11:25.727
â€¢ [3.535 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/14/24 13:11:25.734
  I0914 13:11:25.734906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 13:11:25.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:25.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:25.756
  STEP: create the deployment @ 09/14/24 13:11:25.759
  W0914 13:11:25.766540      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/14/24 13:11:25.766
  STEP: delete the deployment @ 09/14/24 13:11:26.276
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/14/24 13:11:26.286
  E0914 13:11:26.469191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/14/24 13:11:26.81
  W0914 13:11:26.816932      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:11:26.816960 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:11:26.817131 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3675" for this suite. @ 09/14/24 13:11:26.821
â€¢ [1.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/14/24 13:11:26.83
  I0914 13:11:26.830405 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:11:26.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:26.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:26.85
  STEP: creating service in namespace services-1012 @ 09/14/24 13:11:26.853
  STEP: creating service affinity-clusterip-transition in namespace services-1012 @ 09/14/24 13:11:26.854
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1012 @ 09/14/24 13:11:26.864
  I0914 13:11:26.872150      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-1012, replica count: 3
  E0914 13:11:27.469496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:28.470181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:29.471049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:29.922890      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 13:11:29.933537 20 resource.go:361] Creating new exec pod
  E0914 13:11:30.471174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:31.471337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:32.471465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:32.955205 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1012 exec execpod-affinityns5l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0914 13:11:33.051284 20 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0914 13:11:33.051325 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:11:33.051511 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1012 exec execpod-affinityns5l9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0914 13:11:33.141972 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.145 80\n+ echo hostName\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I0914 13:11:33.142028 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:11:33.154628 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1012 exec execpod-affinityns5l9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.145:80/ ; done'
  I0914 13:11:33.311855 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n"
  I0914 13:11:33.311902 20 builder.go:147] stdout: "\naffinity-clusterip-transition-jk92g\naffinity-clusterip-transition-4qkgj\naffinity-clusterip-transition-4qkgj\naffinity-clusterip-transition-4qkgj\naffinity-clusterip-transition-4qkgj\naffinity-clusterip-transition-jk92g\naffinity-clusterip-transition-jk92g\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-4qkgj\naffinity-clusterip-transition-jk92g\naffinity-clusterip-transition-jk92g\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-jk92g"
  I0914 13:11:33.311915 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.311923 20 service.go:242] Received response from host: affinity-clusterip-transition-4qkgj
  I0914 13:11:33.311929 20 service.go:242] Received response from host: affinity-clusterip-transition-4qkgj
  I0914 13:11:33.311938 20 service.go:242] Received response from host: affinity-clusterip-transition-4qkgj
  I0914 13:11:33.311944 20 service.go:242] Received response from host: affinity-clusterip-transition-4qkgj
  I0914 13:11:33.311963 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.311969 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.311973 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.312008 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.312014 20 service.go:242] Received response from host: affinity-clusterip-transition-4qkgj
  I0914 13:11:33.312019 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.312024 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.312030 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.312036 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.312042 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.312047 20 service.go:242] Received response from host: affinity-clusterip-transition-jk92g
  I0914 13:11:33.323899 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1012 exec execpod-affinityns5l9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.145:80/ ; done'
  I0914 13:11:33.466474 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n"
  I0914 13:11:33.466522 20 builder.go:147] stdout: "\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt\naffinity-clusterip-transition-b5qlt"
  I0914 13:11:33.466535 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466543 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466550 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466556 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466563 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466568 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466573 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466579 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466585 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466709 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466716 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466730 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466737 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466764 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466776 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466784 20 service.go:242] Received response from host: affinity-clusterip-transition-b5qlt
  I0914 13:11:33.466898 20 service.go:4061] Cleaning up the exec pod
  E0914 13:11:33.471623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1012, will wait for the garbage collector to delete the pods @ 09/14/24 13:11:33.483
  I0914 13:11:33.548247 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.609948ms
  I0914 13:11:33.648638 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.387141ms
  E0914 13:11:34.472401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:35.472878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:36.473217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:36.571737 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1012" for this suite. @ 09/14/24 13:11:36.576
â€¢ [9.754 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/14/24 13:11:36.584
  I0914 13:11:36.584718 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:11:36.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:36.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:36.606
  STEP: Setting up server cert @ 09/14/24 13:11:36.633
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:11:36.854
  STEP: Deploying the webhook pod @ 09/14/24 13:11:36.86
  STEP: Wait for the deployment to be ready @ 09/14/24 13:11:36.876
  I0914 13:11:36.889393 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:11:37.474084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:38.474291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:11:38.904
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:11:38.918
  E0914 13:11:39.474762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:11:39.918199 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/24 13:11:39.927
  I0914 13:11:39.973702 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8177" for this suite. @ 09/14/24 13:11:39.98
  STEP: Destroying namespace "webhook-markers-9517" for this suite. @ 09/14/24 13:11:39.99
â€¢ [3.413 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/14/24 13:11:39.997
  I0914 13:11:39.997687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/14/24 13:11:39.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:11:40.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:11:40.016
  I0914 13:11:40.020080 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0914 13:11:40.474868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:41.474981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:42.475049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:43.475208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:44.475261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:45.475452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:46.476190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:47.476260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:48.476378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:49.476462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:50.476555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:51.477620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:52.477728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:53.477806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:54.477871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:55.478452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:56.478890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:57.478962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:58.479612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:11:59.479999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:00.480802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:01.480879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:02.481002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:03.481075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:04.481191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:05.481279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:06.482116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:07.482344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:08.483232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:09.483559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:10.483856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:11.484084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:12.484662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:13.485201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:14.485932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:15.486121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:16.486852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:17.486997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:18.488035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:19.488220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:20.489005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:21.489104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:22.489641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:23.489830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:24.490474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:25.490571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:26.490655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:27.490748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:28.490839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:29.491129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:30.492174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:31.492265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:32.493205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:33.493604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:34.494049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:35.494200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:36.495043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:37.495236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:38.495926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:39.496125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:12:40.021056 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 13:12:40.026234 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/14/24 13:12:40.026
  I0914 13:12:40.249709 20 taints.go:463] Pod1 is running on ip-172-31-8-243. Tainting Node
  E0914 13:12:40.496743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:41.496849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:12:42.475927 20 taints.go:471] Pod2 is running on ip-172-31-8-243. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/14/24 13:12:42.475
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/24 13:12:42.487
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/14/24 13:12:42.494
  E0914 13:12:42.497292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:43.497479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:44.497577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:45.497783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:46.497846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:47.498835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:12:48.281733 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0914 13:12:48.498947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:49.499045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:50.499132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:51.499212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:52.499683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:53.499765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:54.500105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:55.500123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:56.500174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:57.501201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:58.502280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:12:59.502255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:00.502595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:01.502880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:02.503119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:03.503303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:04.503666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:05.503875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:06.504082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:07.504185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:13:08.318509 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/24 13:13:08.334
  I0914 13:13:08.339104 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9897" for this suite. @ 09/14/24 13:13:08.343
â€¢ [88.360 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/14/24 13:13:08.357
  I0914 13:13:08.357565 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sysctl @ 09/14/24 13:13:08.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:13:08.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:13:08.391
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/14/24 13:13:08.397
  STEP: Watching for error events or started pod @ 09/14/24 13:13:08.411
  E0914 13:13:08.504661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:09.505247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/14/24 13:13:10.418
  E0914 13:13:10.505336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:11.505448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/14/24 13:13:12.433
  STEP: Getting logs from the pod @ 09/14/24 13:13:12.433
  STEP: Checking that the sysctl is actually updated @ 09/14/24 13:13:12.449
  I0914 13:13:12.449699 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7494" for this suite. @ 09/14/24 13:13:12.454
â€¢ [4.107 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/14/24 13:13:12.464
  I0914 13:13:12.464410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename cronjob @ 09/14/24 13:13:12.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:13:12.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:13:12.484
  STEP: Creating a cronjob @ 09/14/24 13:13:12.488
  STEP: Ensuring more than one job is running at a time @ 09/14/24 13:13:12.493
  E0914 13:13:12.505684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:13.505975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:14.506073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:15.506249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:16.506947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:17.507142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:18.507749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:19.508117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:20.509006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:21.509259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:22.509490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:23.509689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:24.509665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:25.509865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:26.510445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:27.510674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:28.510840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:29.511197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:30.511441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:31.511712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:32.512251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:33.513226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:34.513475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:35.513600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:36.514593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:37.514757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:38.515098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:39.515234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:40.515278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:41.515405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:42.515756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:43.515937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:44.516924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:45.517033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:46.517433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:47.517557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:48.517786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:49.518090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:50.518365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:51.518539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:52.518772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:53.518825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:54.519509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:55.519617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:56.520154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:57.520285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:58.520598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:13:59.521208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:00.521492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:01.521614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:02.522626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:03.522865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:04.523185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:05.523694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:06.523788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:07.523976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:08.524614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:09.525209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:10.525823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:11.526028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:12.526359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:13.526571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:14.526966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:15.527092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:16.528101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:17.528194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:18.529042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:19.529788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:20.530674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:21.530789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:22.531554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:23.531734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:24.532717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:25.532810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:26.532939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:27.533128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:28.533696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:29.534016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:30.534294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:31.534541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:32.535260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:33.535428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:34.535650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:35.535825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:36.536064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:37.536256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:38.537229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:39.537524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:40.538366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:41.538476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:42.539205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:43.539391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:44.540108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:45.540200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:46.540967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:47.541129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:48.541569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:49.541961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:50.542944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:51.543124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:52.544199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:53.544260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:54.544650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:55.545208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:56.545395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:57.545570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:58.546514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:14:59.546654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/14/24 13:15:00.498
  STEP: Removing cronjob @ 09/14/24 13:15:00.502
  I0914 13:15:00.509760 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5662" for this suite. @ 09/14/24 13:15:00.514
â€¢ [108.059 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/14/24 13:15:00.523
  I0914 13:15:00.523378 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 13:15:00.523
  E0914 13:15:00.546668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:00.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:00.567
  I0914 13:15:00.585058 20 service_accounts.go:618] created pod
  E0914 13:15:01.546871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:02.547040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:03.547122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:04.547305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:15:04.604
  E0914 13:15:05.547603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:06.547790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:07.548091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:08.548156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:09.548432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:10.549418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:11.549747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:12.550369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:13.550461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:14.550767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:15.551586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:16.551674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:17.551923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:18.552126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:19.553179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:20.553360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:21.553785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:22.553911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:23.554315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:24.554628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:25.554830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:26.555008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:27.555190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:28.555390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:29.555763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:30.556014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:31.556187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:32.556242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:33.557247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:34.557568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:34.604926 20 service_accounts.go:624] polling logs
  I0914 13:15:34.619177 20 service_accounts.go:634] Pod logs: 
  I0914 13:15:01.130559       1 log.go:245] OK: Got token
  I0914 13:15:01.130685       1 log.go:245] validating with in-cluster discovery
  I0914 13:15:01.130886       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0914 13:15:01.131060       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3188:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002587c0), NotBefore:(*jwt.NumericDate)(0xc0002588b0), IssuedAt:(*jwt.NumericDate)(0xc0002587d0), ID:"079d566d-086d-42d1-861f-e9621c13b886"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3188", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b3d324cb-8868-4b66-826e-87ce8323f21d"}}}
  I0914 13:15:01.137387       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0914 13:15:01.140725       1 log.go:245] OK: Validated signature on JWT
  I0914 13:15:01.140848       1 log.go:245] OK: Got valid claims from token!
  I0914 13:15:01.140883       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3188:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001c55a8), NotBefore:(*jwt.NumericDate)(0xc0001c55d0), IssuedAt:(*jwt.NumericDate)(0xc0001c55b0), ID:"079d566d-086d-42d1-861f-e9621c13b886"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3188", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b3d324cb-8868-4b66-826e-87ce8323f21d"}}}

  I0914 13:15:34.619518 20 service_accounts.go:638] completed pod
  I0914 13:15:34.627807 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3188" for this suite. @ 09/14/24 13:15:34.633
â€¢ [34.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/14/24 13:15:34.641
  I0914 13:15:34.641635 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 13:15:34.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:34.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:34.662
  I0914 13:15:34.695249 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0914 13:15:34.700872 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0914 13:15:34.707524 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:34.707549 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:34.711482 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:15:34.711506 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:15:35.558481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:35.707026 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:35.707065 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:35.711794 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:15:35.711813 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:15:36.559410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:36.708137 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:36.708168 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:36.712816 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:15:36.712832 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0914 13:15:36.712846 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0914 13:15:36.725913 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E0914 13:15:37.559490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:38.559602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:38.741048 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0914 13:15:38.752137 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0914 13:15:38.752165 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0914 13:15:38.759379 20 daemon_set.go:1193] Wrong image for pod: daemon-set-s8dq7. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0914 13:15:38.759398 20 daemon_set.go:1198] Pod daemon-set-s8dq7 is not available
  I0914 13:15:38.763462 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:38.763499 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0914 13:15:39.560141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:39.766190 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:39.766228 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0914 13:15:40.561196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:40.757939 20 daemon_set.go:1198] Pod daemon-set-9mm7b is not available
  I0914 13:15:40.762847 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:15:40.762874 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 13:15:40.771
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9264, will wait for the garbage collector to delete the pods @ 09/14/24 13:15:40.771
  I0914 13:15:40.835259 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.007825ms
  I0914 13:15:40.935430 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.167942ms
  E0914 13:15:41.562278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:42.562312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:42.640634 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:15:42.640673 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:15:42.645450 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33728"},"items":null}

  I0914 13:15:42.650485 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33728"},"items":null}

  I0914 13:15:42.667030 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9264" for this suite. @ 09/14/24 13:15:42.672
â€¢ [8.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/14/24 13:15:42.681
  I0914 13:15:42.681533 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 13:15:42.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:42.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:42.706
  STEP: creating the pod @ 09/14/24 13:15:42.709
  STEP: submitting the pod to kubernetes @ 09/14/24 13:15:42.71
  E0914 13:15:43.562518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:44.562629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/14/24 13:15:44.737
  STEP: updating the pod @ 09/14/24 13:15:44.742
  I0914 13:15:45.257067 20 pod_client.go:173] Successfully updated pod "pod-update-6b3a78e7-45b2-495f-a4ad-c1f23d3d2dd5"
  STEP: verifying the updated pod is in kubernetes @ 09/14/24 13:15:45.261
  I0914 13:15:45.266862 20 pods.go:391] Pod update OK
  I0914 13:15:45.266956 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4261" for this suite. @ 09/14/24 13:15:45.27
â€¢ [2.598 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/14/24 13:15:45.279
  I0914 13:15:45.279297 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/24 13:15:45.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:45.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:45.299
  I0914 13:15:45.303326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:15:45.563089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:46.563201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:47.563662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:48.564366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:49.564832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:50.565387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:51.562263 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 13:15:51.566298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-6954" for this suite. @ 09/14/24 13:15:51.567
â€¢ [6.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/14/24 13:15:51.58
  I0914 13:15:51.580110 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-pred @ 09/14/24 13:15:51.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:51.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:51.597
  I0914 13:15:51.601687 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:15:51.609948 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 13:15:51.613495 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-33-255 before test
  I0914 13:15:51.618898 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kjgv8 from ingress-nginx-kubernetes-worker started at 2024-09-14 12:10:30 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.618911 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:15:51.618918 20 predicates.go:957] calico-node-tq8px from kube-system started at 2024-09-14 12:15:30 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.618973 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:15:51.619041 20 predicates.go:957] sonobuoy-e2e-job-7d38388d155d451e from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:15:51.619047 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0914 13:15:51.619075 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:15:51.619126 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-shbkb from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:15:51.619137 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:15:51.619142 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:15:51.619147 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-235 before test
  I0914 13:15:51.625126 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-pt48j from ingress-nginx-kubernetes-worker started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625140 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:15:51.625147 20 predicates.go:957] calico-node-44nhq from kube-system started at 2024-09-14 12:15:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625152 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:15:51.625169 20 predicates.go:957] coredns-5b4857d7c8-rxhfh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625173 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0914 13:15:51.625277 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7f8zh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625284 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0914 13:15:51.625291 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wh6sp from kube-system started at 2024-09-14 12:09:09 +0000 UTC (2 container statuses recorded)
  I0914 13:15:51.625313 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0914 13:15:51.625377 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0914 13:15:51.625387 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2ghwq from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625392 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0914 13:15:51.625398 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-n8bk4 from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.625403 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0914 13:15:51.625409 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-75c6n from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:15:51.625414 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:15:51.625419 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:15:51.625425 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-243 before test
  I0914 13:15:51.631074 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5hhfl from ingress-nginx-kubernetes-worker started at 2024-09-14 13:13:08 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.631087 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:15:51.631094 20 predicates.go:957] calico-node-qxqsq from kube-system started at 2024-09-14 12:14:28 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.631099 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:15:51.631105 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-14 12:19:02 +0000 UTC (1 container statuses recorded)
  I0914 13:15:51.631109 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:15:51.631114 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-zcj27 from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:15:51.631119 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:15:51.631124 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-33-255 @ 09/14/24 13:15:51.647
  STEP: verifying the node has the label node ip-172-31-65-235 @ 09/14/24 13:15:51.66
  STEP: verifying the node has the label node ip-172-31-8-243 @ 09/14/24 13:15:51.672
  I0914 13:15:51.684458 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-5hhfl requesting resource cpu=0m on Node ip-172-31-8-243
  I0914 13:15:51.684574 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-kjgv8 requesting resource cpu=0m on Node ip-172-31-33-255
  I0914 13:15:51.684626 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-pt48j requesting resource cpu=0m on Node ip-172-31-65-235
  I0914 13:15:51.684656 20 predicates.go:372] Pod calico-node-44nhq requesting resource cpu=250m on Node ip-172-31-65-235
  I0914 13:15:51.684699 20 predicates.go:372] Pod calico-node-qxqsq requesting resource cpu=250m on Node ip-172-31-8-243
  I0914 13:15:51.684732 20 predicates.go:372] Pod calico-node-tq8px requesting resource cpu=250m on Node ip-172-31-33-255
  I0914 13:15:51.684761 20 predicates.go:372] Pod coredns-5b4857d7c8-rxhfh requesting resource cpu=100m on Node ip-172-31-65-235
  I0914 13:15:51.684808 20 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-7f8zh requesting resource cpu=0m on Node ip-172-31-65-235
  I0914 13:15:51.684834 20 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-wh6sp requesting resource cpu=5m on Node ip-172-31-65-235
  I0914 13:15:51.684880 20 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-2ghwq requesting resource cpu=0m on Node ip-172-31-65-235
  I0914 13:15:51.684908 20 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-n8bk4 requesting resource cpu=0m on Node ip-172-31-65-235
  I0914 13:15:51.684952 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-8-243
  I0914 13:15:51.684981 20 predicates.go:372] Pod sonobuoy-e2e-job-7d38388d155d451e requesting resource cpu=0m on Node ip-172-31-33-255
  I0914 13:15:51.685022 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-75c6n requesting resource cpu=0m on Node ip-172-31-65-235
  I0914 13:15:51.685054 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-shbkb requesting resource cpu=0m on Node ip-172-31-33-255
  I0914 13:15:51.685084 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-zcj27 requesting resource cpu=0m on Node ip-172-31-8-243
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/14/24 13:15:51.685
  I0914 13:15:51.685160 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-33-255
  I0914 13:15:51.695512 20 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-65-235
  I0914 13:15:51.701575 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-8-243
  E0914 13:15:52.566609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:53.566848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/14/24 13:15:53.736
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-803181f0-e0dd-4476-9c19-33cae609377d.17f51eaaf186389f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9063/filler-pod-803181f0-e0dd-4476-9c19-33cae609377d to ip-172-31-65-235] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-803181f0-e0dd-4476-9c19-33cae609377d.17f51eab102415dc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-803181f0-e0dd-4476-9c19-33cae609377d.17f51eab1163c5f8], Reason = [Created], Message = [Created container filler-pod-803181f0-e0dd-4476-9c19-33cae609377d] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-803181f0-e0dd-4476-9c19-33cae609377d.17f51eab145045d9], Reason = [Started], Message = [Started container filler-pod-803181f0-e0dd-4476-9c19-33cae609377d] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e905000-3b07-4101-b310-41ad3261fc17.17f51eaaf108977d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9063/filler-pod-8e905000-3b07-4101-b310-41ad3261fc17 to ip-172-31-33-255] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e905000-3b07-4101-b310-41ad3261fc17.17f51eab0d3b3ad8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e905000-3b07-4101-b310-41ad3261fc17.17f51eab0debc01f], Reason = [Created], Message = [Created container filler-pod-8e905000-3b07-4101-b310-41ad3261fc17] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8e905000-3b07-4101-b310-41ad3261fc17.17f51eab10678676], Reason = [Started], Message = [Started container filler-pod-8e905000-3b07-4101-b310-41ad3261fc17] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a.17f51eaaf2098e5f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9063/filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a to ip-172-31-8-243] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a.17f51eab20767942], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a.17f51eab21884f16], Reason = [Created], Message = [Created container filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a.17f51eab244a12bc], Reason = [Started], Message = [Started container filler-pod-be4dcd52-df50-4292-94a4-f29c5cf5fd3a] @ 09/14/24 13:15:53.741
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f51eab6aedf8df], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 09/14/24 13:15:53.754
  E0914 13:15:54.566996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-33-255 @ 09/14/24 13:15:54.756
  STEP: verifying the node doesn't have the label node @ 09/14/24 13:15:54.77
  STEP: removing the label node off the node ip-172-31-65-235 @ 09/14/24 13:15:54.774
  STEP: verifying the node doesn't have the label node @ 09/14/24 13:15:54.791
  STEP: removing the label node off the node ip-172-31-8-243 @ 09/14/24 13:15:54.797
  STEP: verifying the node doesn't have the label node @ 09/14/24 13:15:54.811
  I0914 13:15:54.815221 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9063" for this suite. @ 09/14/24 13:15:54.823
â€¢ [3.251 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/14/24 13:15:54.831
  I0914 13:15:54.831581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:15:54.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:54.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:54.85
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/24 13:15:54.854
  I0914 13:15:54.854332 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-691 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0914 13:15:54.903404 20 builder.go:146] stderr: ""
  I0914 13:15:54.903435 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/14/24 13:15:54.903
  I0914 13:15:54.908054 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-691 delete pods e2e-test-httpd-pod'
  E0914 13:15:55.568058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:56.568136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:15:56.604829 20 builder.go:146] stderr: ""
  I0914 13:15:56.604864 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0914 13:15:56.604976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-691" for this suite. @ 09/14/24 13:15:56.609
â€¢ [1.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/14/24 13:15:56.617
  I0914 13:15:56.617460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 13:15:56.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:15:56.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:15:56.635
  STEP: Creating a test headless service @ 09/14/24 13:15:56.639
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9747 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9747;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9747 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9747;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9747.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9747.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9747.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9747.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9747.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9747.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9747.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9747.svc;check="$$(dig +notcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_udp@PTR;check="$$(dig +tcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_tcp@PTR;sleep 1; done
   @ 09/14/24 13:15:56.66
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9747 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9747;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9747 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9747;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9747.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9747.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9747.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9747.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9747.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9747.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9747.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9747.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9747.svc;check="$$(dig +notcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_udp@PTR;check="$$(dig +tcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_tcp@PTR;sleep 1; done
   @ 09/14/24 13:15:56.66
  STEP: creating a pod to probe DNS @ 09/14/24 13:15:56.66
  STEP: submitting the pod to kubernetes @ 09/14/24 13:15:56.66
  E0914 13:15:57.568262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:15:58.568307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:15:58.69
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:15:58.695
  I0914 13:15:58.701478 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.706848 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.711933 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9747 from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.716943 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9747 from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.722065 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.727369 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.731999 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.737407 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.761719 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.766606 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.771494 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9747 from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.776909 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9747 from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.782209 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.787137 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.792674 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.797680 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9747.svc from pod dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae: the server could not find the requested resource (get pods dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae)
  I0914 13:15:58.816889 20 dns_common.go:489] Lookups using dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9747 wheezy_tcp@dns-test-service.dns-9747 wheezy_udp@dns-test-service.dns-9747.svc wheezy_tcp@dns-test-service.dns-9747.svc wheezy_udp@_http._tcp.dns-test-service.dns-9747.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9747.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9747 jessie_tcp@dns-test-service.dns-9747 jessie_udp@dns-test-service.dns-9747.svc jessie_tcp@dns-test-service.dns-9747.svc jessie_udp@_http._tcp.dns-test-service.dns-9747.svc jessie_tcp@_http._tcp.dns-test-service.dns-9747.svc]

  I0914 13:15:58.826106 20 dns_common.go:495] Pod client logs for webserver: 
  I0914 13:15:58.833731 20 dns_common.go:495] Pod client logs for querier: 
  I0914 13:15:58.841148 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E0914 13:15:59.568612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:00.568659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:01.568704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:02.568825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:03.569730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:16:03.815416 20 dns_common.go:527] DNS probes using dns-9747/dns-test-7820d3c2-f7f8-4b58-a012-7b9806f6e3ae succeeded

  STEP: deleting the pod @ 09/14/24 13:16:03.815
  STEP: deleting the test service @ 09/14/24 13:16:03.845
  STEP: deleting the test headless service @ 09/14/24 13:16:03.87
  I0914 13:16:03.883311 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9747" for this suite. @ 09/14/24 13:16:03.888
â€¢ [7.284 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/14/24 13:16:03.901
  I0914 13:16:03.901675 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/24 13:16:03.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:16:03.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:16:03.921
  I0914 13:16:03.941719 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0914 13:16:04.570257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:05.570052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:06.570519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:07.570752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:08.570850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:09.571010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:10.571856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:11.572072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:12.572188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:13.572259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:14.573149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:15.573213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:16.573351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:17.573450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:18.573566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:19.573668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:20.573755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:21.573926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:22.574129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:23.574422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:24.575336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:25.575429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:26.576391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:27.576442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:28.577228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:29.577302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:30.578166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:31.578326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:32.578549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:33.578783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:34.579552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:35.579795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:36.579922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:37.580116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:38.580232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:39.580303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:40.580422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:41.580500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:42.580612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:43.580691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:44.580767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:45.581177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:46.582020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:47.582279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:48.582408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:49.582677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:50.584060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:51.584124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:52.584207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:53.585204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:54.586001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:55.586219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:56.587367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:57.587616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:58.588124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:16:59.588214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:00.588534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:01.588574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:02.589188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:03.589735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:03.948402 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/14/24 13:17:03.953
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/14/24 13:17:03.963
  I0914 13:17:03.977075 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/14/24 13:17:03.977
  E0914 13:17:04.589877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:05.589949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/14/24 13:17:05.99
  I0914 13:17:05.998387 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/14/24 13:17:05.998
  E0914 13:17:06.590044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:07.590241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/14/24 13:17:08.012
  I0914 13:17:08.017602 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0914 13:17:08.533765 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I0914 13:17:08.575140 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5884" for this suite. @ 09/14/24 13:17:08.579
â€¢ [64.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/14/24 13:17:08.59
  I0914 13:17:08.590049 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:17:08.59
  E0914 13:17:08.590699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:17:08.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:17:08.606
  STEP: Creating the pod @ 09/14/24 13:17:08.61
  E0914 13:17:09.590844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:10.592538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:11.171966 20 pod_client.go:173] Successfully updated pod "labelsupdate55b65204-fcc0-4c32-a72b-f77e4ccf6f32"
  E0914 13:17:11.593244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:12.593390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:13.190151 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1590" for this suite. @ 09/14/24 13:17:13.195
â€¢ [4.614 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/14/24 13:17:13.204
  I0914 13:17:13.204305 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 13:17:13.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:17:13.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:17:13.224
  I0914 13:17:13.228068 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:17:13.594264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:14.595223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:15.595447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0914 13:17:15.763464      20 warnings.go:70] unknown field "alpha"
  W0914 13:17:15.763484      20 warnings.go:70] unknown field "beta"
  W0914 13:17:15.763487      20 warnings.go:70] unknown field "delta"
  W0914 13:17:15.763490      20 warnings.go:70] unknown field "epsilon"
  W0914 13:17:15.763493      20 warnings.go:70] unknown field "gamma"
  I0914 13:17:16.318541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-508" for this suite. @ 09/14/24 13:17:16.323
â€¢ [3.126 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/14/24 13:17:16.33
  I0914 13:17:16.330863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 13:17:16.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:17:16.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:17:16.354
  STEP: Creating service test in namespace statefulset-2113 @ 09/14/24 13:17:16.358
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/14/24 13:17:16.363
  STEP: Creating stateful set ss in namespace statefulset-2113 @ 09/14/24 13:17:16.37
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2113 @ 09/14/24 13:17:16.377
  I0914 13:17:16.382483 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0914 13:17:16.595477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:17.595950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:18.596148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:19.596332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:20.596403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:21.597328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:22.597455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:23.597545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:24.597611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:25.597729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:26.383517 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/14/24 13:17:26.383
  I0914 13:17:26.388085 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:17:26.492438 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:17:26.492475 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:17:26.492484 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:17:26.498064 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0914 13:17:26.598252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:27.598821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:28.598957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:29.599755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:30.599861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:31.600017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:32.600125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:33.600239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:34.600305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:35.601182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:36.498848 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:17:36.498890 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:17:36.522116 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999843s
  E0914 13:17:36.601286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:37.531027 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.993449446s
  E0914 13:17:37.601385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:38.536497 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.984607988s
  E0914 13:17:38.601649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:39.542021 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.979188881s
  E0914 13:17:39.602184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:40.548226 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.9733289s
  E0914 13:17:40.602385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:41.555645 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.966545208s
  E0914 13:17:41.602748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:42.560947 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.959779998s
  E0914 13:17:42.603217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:43.566537 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.954729278s
  E0914 13:17:43.603763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:44.571482 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.949124782s
  E0914 13:17:44.604647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:45.577243 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 944.142833ms
  E0914 13:17:45.605402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2113 @ 09/14/24 13:17:46.577
  I0914 13:17:46.583071 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0914 13:17:46.606449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:46.673835 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:17:46.673875 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:17:46.673884 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:17:46.679409 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E0914 13:17:47.606627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:48.606839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:49.606931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:50.607909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:51.608085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:52.608244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:53.608878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:54.608966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:55.609072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:56.609129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:17:56.679638 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:17:56.679671 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:17:56.679677 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/14/24 13:17:56.679
  STEP: Scale down will halt with unhealthy stateful pod @ 09/14/24 13:17:56.679
  I0914 13:17:56.689685 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:17:56.778430 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:17:56.778471 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:17:56.778479 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:17:56.778517 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:17:56.879751 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:17:56.879790 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:17:56.879801 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:17:56.879851 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:17:56.982173 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:17:56.982212 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:17:56.982221 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:17:56.982229 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:17:56.988047 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0914 13:17:57.609273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:58.610275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:17:59.610367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:00.612273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:01.612305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:02.612434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:03.612908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:04.613328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:05.613429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:06.613509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:06.994373 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:18:06.994405 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:18:06.994413 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:18:07.012293 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999798s
  E0914 13:18:07.613608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:08.019429 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994195898s
  E0914 13:18:08.614218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:09.025804 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.987808501s
  E0914 13:18:09.614378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:10.031722 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.981448755s
  E0914 13:18:10.615628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:11.038343 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.975316308s
  E0914 13:18:11.615737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:12.045049 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.96806687s
  E0914 13:18:12.616750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:13.051151 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.962175337s
  E0914 13:18:13.616813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:14.057207 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.956071962s
  E0914 13:18:14.617897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:15.062955 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.949905355s
  E0914 13:18:15.618628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:16.068029 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 944.190799ms
  E0914 13:18:16.619621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2113 @ 09/14/24 13:18:17.069
  I0914 13:18:17.075130 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:18:17.162023 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:18:17.162060 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:18:17.162069 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:18:17.162113 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:18:17.248319 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:18:17.248359 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:18:17.248368 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:18:17.248414 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-2113 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:18:17.335421 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:18:17.335458 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:18:17.335468 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:18:17.335476 20 rest.go:150] Scaling statefulset ss to 0
  E0914 13:18:17.619703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:18.620500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:19.620970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:20.622208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:21.623115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:22.623305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:23.623930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:24.624125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:25.625178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:26.625392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/14/24 13:18:27.345
  I0914 13:18:27.346079 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2113
  I0914 13:18:27.351152 20 rest.go:150] Scaling statefulset ss to 0
  I0914 13:18:27.360526 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 13:18:27.364343 20 rest.go:88] Deleting statefulset ss
  I0914 13:18:27.381622 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2113" for this suite. @ 09/14/24 13:18:27.386
â€¢ [71.064 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/14/24 13:18:27.394
  I0914 13:18:27.394474 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:18:27.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:27.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:27.415
  I0914 13:18:27.419171 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:18:27.625978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:28.626706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/14/24 13:18:28.691
  I0914 13:18:28.691997 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 create -f -'
  E0914 13:18:29.627629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:30.628152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:30.758522 20 builder.go:146] stderr: ""
  I0914 13:18:30.758560 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4826-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0914 13:18:30.758610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 delete e2e-test-crd-publish-openapi-4826-crds test-foo'
  I0914 13:18:30.822237 20 builder.go:146] stderr: ""
  I0914 13:18:30.822303 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4826-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0914 13:18:30.822349 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 apply -f -'
  I0914 13:18:30.877453 20 builder.go:146] stderr: ""
  I0914 13:18:30.877490 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4826-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0914 13:18:30.877532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 delete e2e-test-crd-publish-openapi-4826-crds test-foo'
  I0914 13:18:30.926042 20 builder.go:146] stderr: ""
  I0914 13:18:30.926084 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4826-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/14/24 13:18:30.926
  I0914 13:18:30.926158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 create -f -'
  I0914 13:18:30.968785 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/14/24 13:18:30.968
  I0914 13:18:30.968894 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 create -f -'
  I0914 13:18:31.009639 20 builder.go:135] rc: 1
  I0914 13:18:31.009711 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 apply -f -'
  I0914 13:18:31.058619 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/14/24 13:18:31.058
  I0914 13:18:31.058715 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 create -f -'
  I0914 13:18:31.099886 20 builder.go:135] rc: 1
  I0914 13:18:31.099952 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 --namespace=crd-publish-openapi-6566 apply -f -'
  I0914 13:18:31.151041 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/14/24 13:18:31.151
  I0914 13:18:31.151143 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 explain e2e-test-crd-publish-openapi-4826-crds'
  I0914 13:18:31.189787 20 builder.go:146] stderr: ""
  I0914 13:18:31.189844 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4826-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/14/24 13:18:31.19
  I0914 13:18:31.190110 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 explain e2e-test-crd-publish-openapi-4826-crds.metadata'
  I0914 13:18:31.229699 20 builder.go:146] stderr: ""
  I0914 13:18:31.229819 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4826-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0914 13:18:31.230054 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 explain e2e-test-crd-publish-openapi-4826-crds.spec'
  I0914 13:18:31.269371 20 builder.go:146] stderr: ""
  I0914 13:18:31.269422 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4826-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0914 13:18:31.269525 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 explain e2e-test-crd-publish-openapi-4826-crds.spec.bars'
  I0914 13:18:31.308377 20 builder.go:146] stderr: ""
  I0914 13:18:31.308440 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4826-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/14/24 13:18:31.308
  I0914 13:18:31.308669 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-6566 explain e2e-test-crd-publish-openapi-4826-crds.spec.bars2'
  I0914 13:18:31.346926 20 builder.go:135] rc: 1
  E0914 13:18:31.628250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:32.628432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:32.648490 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6566" for this suite. @ 09/14/24 13:18:32.656
â€¢ [5.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/14/24 13:18:32.665
  I0914 13:18:32.665591 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:18:32.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:32.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:32.683
  STEP: Creating Pod @ 09/14/24 13:18:32.688
  E0914 13:18:33.628990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:34.629079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/14/24 13:18:34.712
  I0914 13:18:34.712356 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8662 PodName:pod-sharedvolume-29659fad-9bee-4054-a446-fd5442c0ae1d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:34.712374 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:18:34.712868 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:18:34.712940 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8662/pods/pod-sharedvolume-29659fad-9bee-4054-a446-fd5442c0ae1d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0914 13:18:34.759800 20 exec_util.go:111] Exec stderr: ""
  I0914 13:18:34.760040 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8662" for this suite. @ 09/14/24 13:18:34.765
â€¢ [2.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/14/24 13:18:34.774
  I0914 13:18:34.774936 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:18:34.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:34.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:34.795
  STEP: Creating a pod to test downward api env vars @ 09/14/24 13:18:34.798
  E0914 13:18:35.629555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:36.630165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:37.630324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:38.630923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:18:38.826
  I0914 13:18:38.830964 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downward-api-aa113643-265d-491f-bf44-20257eae6c52 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 13:18:38.852
  I0914 13:18:38.873182 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5750" for this suite. @ 09/14/24 13:18:38.877
â€¢ [4.110 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/14/24 13:18:38.885
  I0914 13:18:38.885140 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:18:38.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:38.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:38.903
  I0914 13:18:38.906890 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-656 version'
  I0914 13:18:38.941942 20 builder.go:146] stderr: ""
  I0914 13:18:38.941967 20 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I0914 13:18:38.942204 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-656" for this suite. @ 09/14/24 13:18:38.947
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/14/24 13:18:38.956
  I0914 13:18:38.956141 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:18:38.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:38.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:38.975
  STEP: creating Agnhost RC @ 09/14/24 13:18:38.978
  I0914 13:18:38.978959 20 kubectl.go:1537] namespace kubectl-693
  I0914 13:18:38.979037 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-693 create -f -'
  I0914 13:18:39.063572 20 builder.go:146] stderr: ""
  I0914 13:18:39.063616 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/24 13:18:39.063
  E0914 13:18:39.631732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:40.068632 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 13:18:40.068667 20 framework.go:733] Found 1 / 1
  I0914 13:18:40.068681 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0914 13:18:40.072808 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0914 13:18:40.072826 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 13:18:40.072832 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-693 
  I0914 13:18:40.072926 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-693 logs agnhost-primary-mx8gs agnhost-primary'
  I0914 13:18:40.127109 20 builder.go:146] stderr: ""
  I0914 13:18:40.127140 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/14/24 13:18:40.127
  I0914 13:18:40.127269 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-693 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0914 13:18:40.186468 20 builder.go:146] stderr: ""
  I0914 13:18:40.186704 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0914 13:18:40.197189 20 utils.go:1203] Service rm2 in namespace kubectl-693 found.
  E0914 13:18:40.636202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:41.637245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/14/24 13:18:42.207
  I0914 13:18:42.207292 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-693 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0914 13:18:42.266667 20 builder.go:146] stderr: ""
  I0914 13:18:42.266731 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0914 13:18:42.273980 20 utils.go:1203] Service rm3 in namespace kubectl-693 found.
  E0914 13:18:42.637450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:43.637792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:44.284367 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-693" for this suite. @ 09/14/24 13:18:44.289
â€¢ [5.342 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/14/24 13:18:44.297
  I0914 13:18:44.297813 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/14/24 13:18:44.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:44.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:44.317
  STEP: Creating two CSIDrivers @ 09/14/24 13:18:44.32
  STEP: Getting "inline-driver-f635903b-6f41-4656-aabc-2a7cce025ba9" & "inline-driver-28ba5b0c-c9a5-4c33-b515-f881f68b0ec8" @ 09/14/24 13:18:44.342
  STEP: Patching the CSIDriver "inline-driver-28ba5b0c-c9a5-4c33-b515-f881f68b0ec8" @ 09/14/24 13:18:44.351
  STEP: Updating the CSIDriver "inline-driver-28ba5b0c-c9a5-4c33-b515-f881f68b0ec8" @ 09/14/24 13:18:44.357
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7608" @ 09/14/24 13:18:44.366
  STEP: Deleting CSIDriver "inline-driver-f635903b-6f41-4656-aabc-2a7cce025ba9" @ 09/14/24 13:18:44.37
  STEP: Confirm deletion of CSIDriver "inline-driver-f635903b-6f41-4656-aabc-2a7cce025ba9" @ 09/14/24 13:18:44.378
  STEP: Deleting CSIDriver "inline-driver-28ba5b0c-c9a5-4c33-b515-f881f68b0ec8" via DeleteCollection @ 09/14/24 13:18:44.382
  STEP: Confirm deletion of CSIDriver "inline-driver-28ba5b0c-c9a5-4c33-b515-f881f68b0ec8" @ 09/14/24 13:18:44.393
  I0914 13:18:44.396993 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7608" for this suite. @ 09/14/24 13:18:44.401
â€¢ [0.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/14/24 13:18:44.41
  I0914 13:18:44.410816 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 13:18:44.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:44.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:44.428
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/24 13:18:44.455
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 13:18:44.461
  I0914 13:18:44.465646 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:44.465683 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:44.470534 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:18:44.470554 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:18:44.637859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:45.466769 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:45.466812 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:45.471741 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:18:45.471757 20 fixtures.go:130] Node ip-172-31-8-243 is running 0 daemon pod, expected 1
  E0914 13:18:45.637980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:46.467407 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:46.467441 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:46.472131 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:18:46.472151 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/14/24 13:18:46.476
  STEP: DeleteCollection of the DaemonSets @ 09/14/24 13:18:46.48
  STEP: Verify that ReplicaSets have been deleted @ 09/14/24 13:18:46.49
  I0914 13:18:46.512864 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34991"},"items":null}

  I0914 13:18:46.517911 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34992"},"items":[{"metadata":{"name":"daemon-set-2bsm4","generateName":"daemon-set-","namespace":"daemonsets-7838","uid":"2697682c-ecf2-447f-9fe3-90044548af29","resourceVersion":"34989","creationTimestamp":"2024-09-14T13:18:44Z","deletionTimestamp":"2024-09-14T13:19:16Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"598fb3d2-1b78-41da-bae0-ba84a366b844","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"598fb3d2-1b78-41da-bae0-ba84a366b844\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.108.235\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kprdb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kprdb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-65-235","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-65-235"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"}],"hostIP":"172.31.65.235","hostIPs":[{"ip":"172.31.65.235"}],"podIP":"192.168.108.235","podIPs":[{"ip":"192.168.108.235"}],"startTime":"2024-09-14T13:18:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-14T13:18:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://dd2f66c1b59011482a203bf226180798a43761078cd03ba1807541276febcfda","started":true,"volumeMounts":[{"name":"kube-api-access-kprdb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cgt89","generateName":"daemon-set-","namespace":"daemonsets-7838","uid":"75e0f912-e5c4-4d55-abe9-470b77006fa5","resourceVersion":"34991","creationTimestamp":"2024-09-14T13:18:44Z","deletionTimestamp":"2024-09-14T13:19:16Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"598fb3d2-1b78-41da-bae0-ba84a366b844","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"598fb3d2-1b78-41da-bae0-ba84a366b844\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.17.163\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xm747","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xm747","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-33-255","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-33-255"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"}],"hostIP":"172.31.33.255","hostIPs":[{"ip":"172.31.33.255"}],"podIP":"192.168.17.163","podIPs":[{"ip":"192.168.17.163"}],"startTime":"2024-09-14T13:18:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-14T13:18:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://849fa3a0adde7cb68d0e691167f1a6ae932234c468340a18b79de4d6761d3153","started":true,"volumeMounts":[{"name":"kube-api-access-xm747","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cmkkc","generateName":"daemon-set-","namespace":"daemonsets-7838","uid":"d58a922d-cd6f-45f4-ac25-b28b35efaa4f","resourceVersion":"34990","creationTimestamp":"2024-09-14T13:18:44Z","deletionTimestamp":"2024-09-14T13:19:16Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"598fb3d2-1b78-41da-bae0-ba84a366b844","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"598fb3d2-1b78-41da-bae0-ba84a366b844\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-14T13:18:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.254.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-n6ccg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-n6ccg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-243","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-243"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-14T13:18:44Z"}],"hostIP":"172.31.8.243","hostIPs":[{"ip":"172.31.8.243"}],"podIP":"192.168.254.88","podIPs":[{"ip":"192.168.254.88"}],"startTime":"2024-09-14T13:18:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-14T13:18:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1e8f05f3291d61bd3522eb5a663436f03790986626f389e8dc466781ded96dd5","started":true,"volumeMounts":[{"name":"kube-api-access-n6ccg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0914 13:18:46.534439 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7838" for this suite. @ 09/14/24 13:18:46.538
â€¢ [2.137 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/14/24 13:18:46.547
  I0914 13:18:46.547771 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 13:18:46.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:46.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:46.565
  I0914 13:18:46.590724 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 13:18:46.597
  I0914 13:18:46.611056 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:46.611151 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:46.614775 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:18:46.614794 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:18:46.638918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:47.603409 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:47.603442 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:47.608226 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:18:47.608245 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:18:47.639391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:48.604522 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:48.604559 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:48.608876 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:18:48.608893 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/14/24 13:18:48.627
  E0914 13:18:48.640021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Check that daemon pods images are updated. @ 09/14/24 13:18:48.649
  I0914 13:18:48.655664 20 daemon_set.go:1193] Wrong image for pod: daemon-set-2h4d7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:18:48.655682 20 daemon_set.go:1193] Wrong image for pod: daemon-set-kp495. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:18:48.659606 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:48.659631 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0914 13:18:49.640146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:49.653795 20 daemon_set.go:1193] Wrong image for pod: daemon-set-2h4d7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:18:49.653825 20 daemon_set.go:1193] Wrong image for pod: daemon-set-kp495. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:18:49.653832 20 daemon_set.go:1198] Pod daemon-set-xdsq7 is not available
  I0914 13:18:49.658815 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:49.658860 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0914 13:18:50.640596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:50.656255 20 daemon_set.go:1193] Wrong image for pod: daemon-set-2h4d7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:18:50.656461 20 daemon_set.go:1198] Pod daemon-set-x6qrd is not available
  I0914 13:18:50.664152 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:50.664270 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0914 13:18:51.640666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:51.654981 20 daemon_set.go:1198] Pod daemon-set-bks7l is not available
  I0914 13:18:51.658965 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:51.659017 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/14/24 13:18:51.659
  I0914 13:18:51.663464 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:51.663489 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:51.667292 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:18:51.667305 20 fixtures.go:130] Node ip-172-31-65-235 is running 0 daemon pod, expected 1
  E0914 13:18:52.640761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:52.665818 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:52.665856 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:18:52.670262 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:18:52.670284 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 13:18:52.691
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5892, will wait for the garbage collector to delete the pods @ 09/14/24 13:18:52.691
  I0914 13:18:52.755082 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.170933ms
  I0914 13:18:52.855315 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.228089ms
  E0914 13:18:53.641132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:54.361478 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:18:54.361514 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:18:54.365610 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35232"},"items":null}

  I0914 13:18:54.370195 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35232"},"items":null}

  I0914 13:18:54.386510 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5892" for this suite. @ 09/14/24 13:18:54.391
â€¢ [7.853 seconds]
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/14/24 13:18:54.4
  I0914 13:18:54.400409 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 13:18:54.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:54.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:54.42
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/14/24 13:18:54.424
  E0914 13:18:54.641225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:55.641352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/14/24 13:18:56.453
  STEP: Then the orphan pod is adopted @ 09/14/24 13:18:56.459
  E0914 13:18:56.641729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/14/24 13:18:57.469
  I0914 13:18:57.473786 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/14/24 13:18:57.486
  E0914 13:18:57.642278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:18:58.496290 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-571" for this suite. @ 09/14/24 13:18:58.5
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/14/24 13:18:58.509
  I0914 13:18:58.509440 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 13:18:58.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:18:58.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:18:58.53
  I0914 13:18:58.534136 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I0914 13:18:58.541142 20 deployment.go:1200] Waiting for observed generation 1
  E0914 13:18:58.643171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:18:59.643851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:00.552684 20 deployment.go:1205] Waiting for all required pods to come up
  I0914 13:19:00.558187 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/14/24 13:19:00.558
  I0914 13:19:00.558276 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0914 13:19:00.566465 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0914 13:19:00.576195 20 deployment.go:313] Updating deployment webserver-deployment
  I0914 13:19:00.576224 20 deployment.go:1224] Waiting for observed generation 2
  E0914 13:19:00.644703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:01.644782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:02.590164 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0914 13:19:02.595352 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0914 13:19:02.600028 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0914 13:19:02.612661 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0914 13:19:02.612694 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0914 13:19:02.616474 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0914 13:19:02.624661 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0914 13:19:02.624685 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0914 13:19:02.637040 20 deployment.go:313] Updating deployment webserver-deployment
  I0914 13:19:02.637069 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  E0914 13:19:02.645660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:02.648105 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0914 13:19:02.654294 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0914 13:19:02.685265 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "656199d9-4e44-462b-b2f1-b27b8ca74b32",
      ResourceVersion: (string) (len=5) "35599",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:19:02.697176 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
      ResourceVersion: (string) (len=5) "35596",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "656199d9-4e44-462b-b2f1-b27b8ca74b32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 36 31 39 39  64 39 2d 34 65 34 34 2d  |\"656199d9-4e44-|
              00000120  34 36 32 62 2d 62 32 66  31 2d 62 32 37 62 38 63  |462b-b2f1-b27b8c|
              00000130  61 37 34 62 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a74b32\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:19:02.699596 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0914 13:19:02.700273 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
      ResourceVersion: (string) (len=5) "35593",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "656199d9-4e44-462b-b2f1-b27b8ca74b32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 36 31 39 39  64 39 2d 34 65 34 34 2d  |\"656199d9-4e44-|
              00000120  34 36 32 62 2d 62 32 66  31 2d 62 32 37 62 38 63  |462b-b2f1-b27b8c|
              00000130  61 37 34 62 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a74b32\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:19:02.719828 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2785t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2785t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57ab947a-89e5-488a-bb10-2d1f0bbaa98b",
      ResourceVersion: (string) (len=5) "35482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  38 2e 32 33 34 5c 22 7d  |2.168.108.234\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2h6th",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2h6th",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-65-235",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.65.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.65.235"
        }
      },
      PodIP: (string) (len=15) "192.168.108.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.108.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1e8006d6aa5cd8639bbc8a3aad005aeef384b6680353ea6293edb6e9a210403a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2h6th",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.721765 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4vvps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4vvps",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "678e2692-721a-48a7-b261-d84e456fd90d",
      ResourceVersion: (string) (len=5) "35625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dflg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dflg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.722826 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7kj99" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7kj99",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bbdf92f-eb2b-480c-846f-3812670a4dbe",
      ResourceVersion: (string) (len=5) "35473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  2e 31 35 30 5c 22 7d 22  |2.168.17.150\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rf9h5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rf9h5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f08bedb31b5e2ab731b01e6eda23224a3c4376c6bda6b895f84e0375e36f6a4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rf9h5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.724294 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-85n5t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-85n5t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37894e04-c143-438c-b1fe-937d9df5951a",
      ResourceVersion: (string) (len=5) "35612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mfs8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mfs8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.725343 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8bk2w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8bk2w",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a7c5be2-9e0e-4ca8-95cd-070c8ab08767",
      ResourceVersion: (string) (len=5) "35470",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  2e 31 34 38 5c 22 7d 22  |2.168.17.148\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9kqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9kqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d7da736a2d971d2842e5af579c9b017cee0777cb9f49b4e7c1ede720bb0c9df6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h9kqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.726936 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f52qm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f52qm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7713992d-15de-428e-a898-24e1e261259e",
      ResourceVersion: (string) (len=5) "35476",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  38 2e 32 30 39 5c 22 7d  |2.168.108.209\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l82qm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l82qm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-65-235",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.65.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.65.235"
        }
      },
      PodIP: (string) (len=15) "192.168.108.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.108.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c70ab0c828f1a0e2126da665ab1ae3da897ee5bf564819e2b652309f2ccea399",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l82qm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.731315 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-knx2q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-knx2q",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f58fcb5d-a2d8-492f-b3c7-3634f61f61e4",
      ResourceVersion: (string) (len=5) "35456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 31 32 30 5c 22 7d  |2.168.254.120\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4r82h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4r82h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=15) "192.168.254.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.254.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bfe286c38d3a7f25ed497d1eb184ebeed291af789a7ec2eac922cc5dd7ece9ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4r82h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.733730 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kxvwg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kxvwg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c055a355-1958-4cdf-ab06-affc8efd9a94",
      ResourceVersion: (string) (len=5) "35464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 39 36 5c 22 7d 22  |2.168.254.96\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nwcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nwcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=14) "192.168.254.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.254.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cef00d7b115f445556f7719894c74f2149cc84dde06a86ed4697400703caafe2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8nwcl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.736042 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kxznt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kxznt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b6d06e8-a310-4c79-8f32-8a792a845bd2",
      ResourceVersion: (string) (len=5) "35615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rgzw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rgzw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.738810 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-nmx5f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-nmx5f",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a586853-ed85-40c3-b7f8-a752b23f2e45",
      ResourceVersion: (string) (len=5) "35614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7npxg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7npxg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.739684 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pjrjk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pjrjk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "676fa572-4015-403e-bc86-34425c532178",
      ResourceVersion: (string) (len=5) "35610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9c67",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9c67",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.740710 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pknfb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pknfb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf93ceb4-ad0b-4a2f-92d7-881200d11fe4",
      ResourceVersion: (string) (len=5) "35628",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7b8b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7b8b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.741733 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qzptm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qzptm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e36a315-77b9-491b-8d69-15bd51a47de7",
      ResourceVersion: (string) (len=5) "35597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sfcbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sfcbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.743110 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-r57zs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-r57zs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7373a6ac-917c-41a5-8372-b49241146271",
      ResourceVersion: (string) (len=5) "35631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxz7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxz7p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gxz7p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.746694 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-r9pm7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-r9pm7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23f05cf9-1a4a-4cd8-9bc6-8577e061cd4a",
      ResourceVersion: (string) (len=5) "35627",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nnkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nnkv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.747923 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rcdd5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rcdd5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecc6d450-ce24-440c-b014-8c43fa52bc2a",
      ResourceVersion: (string) (len=5) "35467",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  2e 31 33 39 5c 22 7d 22  |2.168.17.139\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jpwd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jpwd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3bca50afe9d2cc66b5aa145e2d98a565a38288e5fc557b8f28b42d2c270a91e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8jpwd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.750844 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-vdl2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vdl2b",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6a01049-ab5e-4fcc-9ff2-45fe37aca735",
      ResourceVersion: (string) (len=5) "35626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zgxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zgxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.751513 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-x2cx4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-x2cx4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d02d8db-a2b7-421f-b8a9-23695423ebc9",
      ResourceVersion: (string) (len=5) "35608",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wmjrv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wmjrv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.752275 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-z9q9t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-z9q9t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34c00b62-b76d-49b9-9e40-f81d16673c88",
      ResourceVersion: (string) (len=5) "35624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96cp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96cp7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.753116 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zz9wp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zz9wp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "431a0701-6dde-4263-95ae-294cde32f9cf",
      ResourceVersion: (string) (len=5) "35479",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "802326e8-0402-41e0-859f-e776669dd6c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  32 33 32 36 65 38 2d 30  |d\":\"802326e8-0|
              00000090  34 30 32 2d 34 31 65 30  2d 38 35 39 66 2d 65 37  |402-41e0-859f-e7|
              000000a0  37 36 36 36 39 64 64 36  63 38 5c 22 7d 22 3a 7b  |76669dd6c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  38 2e 32 32 32 5c 22 7d  |2.168.108.222\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6qvdl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6qvdl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-65-235",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.65.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.65.235"
        }
      },
      PodIP: (string) (len=15) "192.168.108.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.108.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861916739,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0f21c39a1917901327b5862b58f7b0156b7b1ac7a1ffe027de67e968086669eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6qvdl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.754211 20 deployment.go:67] Pod "webserver-deployment-786f49d774-2pskv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2pskv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c370e0c4-8940-40ee-a64b-b66f90dfdfc9",
      ResourceVersion: (string) (len=5) "35618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rrcxs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rrcxs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.754882 20 deployment.go:67] Pod "webserver-deployment-786f49d774-98fnc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-98fnc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ce78d79-2dbe-4ce5-bc89-d32ee52206c1",
      ResourceVersion: (string) (len=5) "35613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72n92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72n92",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.756803 20 deployment.go:67] Pod "webserver-deployment-786f49d774-b75fj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-b75fj",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a88a315f-6643-431c-8a9a-ea38b4b414d4",
      ResourceVersion: (string) (len=5) "35621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stb9t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stb9t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.761953 20 deployment.go:67] Pod "webserver-deployment-786f49d774-b8drr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-b8drr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5e9c5a1-9596-462a-a4fa-0b46d33452f4",
      ResourceVersion: (string) (len=5) "35580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 34 2e 37  30 5c 22 7d 22 3a 7b 22  |68.254.70\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnnlz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnnlz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=14) "192.168.254.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.254.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dnnlz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.768167 20 deployment.go:67] Pod "webserver-deployment-786f49d774-hlcpd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hlcpd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faa2d6dc-5ab4-40da-bb17-706adfcac32f",
      ResourceVersion: (string) (len=5) "35622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-829tx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-829tx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.787722 20 deployment.go:67] Pod "webserver-deployment-786f49d774-hlx4d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hlx4d",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9ca02ff-124e-486f-8652-acb2316a1043",
      ResourceVersion: (string) (len=5) "35565",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 38 2e 32  33 31 5c 22 7d 22 3a 7b  |68.108.231\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxxlc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxxlc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-65-235",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.65.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.65.235"
        }
      },
      PodIP: (string) (len=15) "192.168.108.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.108.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hxxlc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.791184 20 deployment.go:67] Pod "webserver-deployment-786f49d774-jtqlq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-jtqlq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9919c48e-f914-4270-b1cc-6b5fd53f4544",
      ResourceVersion: (string) (len=5) "35617",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4twf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4twf7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.793181 20 deployment.go:67] Pod "webserver-deployment-786f49d774-mfbjp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mfbjp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "992559b6-4e0b-4a3c-9d8b-c2fb91ca8827",
      ResourceVersion: (string) (len=5) "35619",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pm6nj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pm6nj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.794329 20 deployment.go:67] Pod "webserver-deployment-786f49d774-pf6kh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pf6kh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5067c5c4-cbed-46a3-a257-87f4587ac30d",
      ResourceVersion: (string) (len=5) "35590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 37 2e 31 34  39 5c 22 7d 22 3a 7b 22  |68.17.149\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rc2rc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rc2rc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rc2rc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.799863 20 deployment.go:67] Pod "webserver-deployment-786f49d774-vznmt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vznmt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a349fe0-37ab-415c-a336-655011a342c4",
      ResourceVersion: (string) (len=5) "35630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vj76g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vj76g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.801587 20 deployment.go:67] Pod "webserver-deployment-786f49d774-wtb5q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-wtb5q",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9de06180-fec0-4705-8ef9-899af5a260e1",
      ResourceVersion: (string) (len=5) "35587",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 37 2e 31 34  37 5c 22 7d 22 3a 7b 22  |68.17.147\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg765",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg765",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bg765",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.802660 20 deployment.go:67] Pod "webserver-deployment-786f49d774-x7jtc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-x7jtc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8333c57-a2f4-494c-8046-1def73ed1e52",
      ResourceVersion: (string) (len=5) "35607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brjx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brjx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-65-235",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.803417 20 deployment.go:67] Pod "webserver-deployment-786f49d774-xtfzs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xtfzs",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2469",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f50749d7-d581-4a87-b6a0-c2671d74a668",
      ResourceVersion: (string) (len=5) "35583",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9bdf15ae-d31a-4431-bf79-912ba8cf8444",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  64 66 31 35 61 65 2d 64  |d\":\"9bdf15ae-d|
              00000090  33 31 61 2d 34 34 33 31  2d 62 66 37 39 2d 39 31  |31a-4431-bf79-91|
              000000a0  32 62 61 38 63 66 38 34  34 34 5c 22 7d 22 3a 7b  |2ba8cf8444\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 34 2e 31  31 32 5c 22 7d 22 3a 7b  |68.254.112\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ddhdq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ddhdq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861916740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=15) "192.168.254.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.254.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861916740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ddhdq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:19:02.806770 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2469" for this suite. @ 09/14/24 13:19:02.812
â€¢ [4.337 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/14/24 13:19:02.846
  I0914 13:19:02.846884 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:19:02.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:02.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:02.895
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/14/24 13:19:02.899
  I0914 13:19:02.900285 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:19:03.645939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:04.646678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:05.646887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:06.647223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:07.648130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/14/24 13:19:07.941
  I0914 13:19:07.941743 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:19:08.648536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:09.172272 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:19:09.649069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:10.649828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:11.650258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:12.650624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:13.650673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:14.212208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4727" for this suite. @ 09/14/24 13:19:14.22
â€¢ [11.381 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/14/24 13:19:14.228
  I0914 13:19:14.228361 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 13:19:14.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:14.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:14.251
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/14/24 13:19:14.254
  E0914 13:19:14.651247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:15.651411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/14/24 13:19:16.277
  STEP: Then the orphan pod is adopted @ 09/14/24 13:19:16.283
  E0914 13:19:16.652068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:17.292090 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1771" for this suite. @ 09/14/24 13:19:17.297
â€¢ [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/14/24 13:19:17.306
  I0914 13:19:17.306698 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename ingressclass @ 09/14/24 13:19:17.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:17.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:17.33
  STEP: getting /apis @ 09/14/24 13:19:17.333
  STEP: getting /apis/networking.k8s.io @ 09/14/24 13:19:17.336
  STEP: getting /apis/networking.k8s.iov1 @ 09/14/24 13:19:17.337
  STEP: creating @ 09/14/24 13:19:17.338
  STEP: getting @ 09/14/24 13:19:17.373
  STEP: listing @ 09/14/24 13:19:17.377
  STEP: watching @ 09/14/24 13:19:17.381
  I0914 13:19:17.381385 20 ingressclass.go:348] starting watch
  STEP: patching @ 09/14/24 13:19:17.382
  STEP: updating @ 09/14/24 13:19:17.394
  I0914 13:19:17.402388 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0914 13:19:17.402418 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/14/24 13:19:17.402
  STEP: deleting a collection @ 09/14/24 13:19:17.422
  I0914 13:19:17.447670 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9956" for this suite. @ 09/14/24 13:19:17.451
â€¢ [0.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/14/24 13:19:17.459
  I0914 13:19:17.459473 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/24 13:19:17.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:17.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:17.495
  I0914 13:19:17.497962 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:19:17.652377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:18.522796 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3283" for this suite. @ 09/14/24 13:19:18.527
â€¢ [1.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/14/24 13:19:18.536
  I0914 13:19:18.536371 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:19:18.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:18.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:18.56
  STEP: Setting up server cert @ 09/14/24 13:19:18.586
  E0914 13:19:18.652876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:19:18.777
  STEP: Deploying the webhook pod @ 09/14/24 13:19:18.788
  STEP: Wait for the deployment to be ready @ 09/14/24 13:19:18.802
  I0914 13:19:18.812882 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:19:19.653594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:20.653853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:19:20.827
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:19:20.842
  E0914 13:19:21.653941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:21.843280 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/14/24 13:19:21.927
  STEP: Creating a configMap that should be mutated @ 09/14/24 13:19:21.938
  STEP: Deleting the collection of validation webhooks @ 09/14/24 13:19:21.966
  STEP: Creating a configMap that should not be mutated @ 09/14/24 13:19:22.03
  I0914 13:19:22.085792 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1202" for this suite. @ 09/14/24 13:19:22.09
  STEP: Destroying namespace "webhook-markers-1380" for this suite. @ 09/14/24 13:19:22.1
â€¢ [3.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/14/24 13:19:22.11
  I0914 13:19:22.110062 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename events @ 09/14/24 13:19:22.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:22.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:22.13
  STEP: Create set of events @ 09/14/24 13:19:22.133
  STEP: get a list of Events with a label in the current namespace @ 09/14/24 13:19:22.151
  STEP: delete a list of events @ 09/14/24 13:19:22.155
  I0914 13:19:22.155848 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/14/24 13:19:22.183
  I0914 13:19:22.186731 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9779" for this suite. @ 09/14/24 13:19:22.19
â€¢ [0.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/14/24 13:19:22.198
  I0914 13:19:22.198379 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename certificates @ 09/14/24 13:19:22.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:22.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:22.22
  STEP: getting /apis @ 09/14/24 13:19:22.352
  STEP: getting /apis/certificates.k8s.io @ 09/14/24 13:19:22.355
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/14/24 13:19:22.357
  STEP: creating @ 09/14/24 13:19:22.358
  STEP: getting @ 09/14/24 13:19:22.379
  STEP: listing @ 09/14/24 13:19:22.382
  STEP: watching @ 09/14/24 13:19:22.386
  I0914 13:19:22.386234 20 certificates.go:316] starting watch
  STEP: patching @ 09/14/24 13:19:22.387
  STEP: updating @ 09/14/24 13:19:22.393
  I0914 13:19:22.399879 20 certificates.go:332] waiting for watch events with expected annotations
  I0914 13:19:22.399922 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/14/24 13:19:22.399
  STEP: patching /approval @ 09/14/24 13:19:22.403
  STEP: updating /approval @ 09/14/24 13:19:22.413
  STEP: getting /status @ 09/14/24 13:19:22.419
  STEP: patching /status @ 09/14/24 13:19:22.425
  STEP: updating /status @ 09/14/24 13:19:22.434
  STEP: deleting @ 09/14/24 13:19:22.441
  STEP: deleting a collection @ 09/14/24 13:19:22.458
  I0914 13:19:22.477354 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5102" for this suite. @ 09/14/24 13:19:22.481
â€¢ [0.291 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/14/24 13:19:22.49
  I0914 13:19:22.490098 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 13:19:22.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:19:22.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:19:22.556
  STEP: Creating service test in namespace statefulset-6976 @ 09/14/24 13:19:22.559
  STEP: Creating a new StatefulSet @ 09/14/24 13:19:22.566
  I0914 13:19:22.581324 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0914 13:19:22.654612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:23.655066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:24.655215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:25.655482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:26.655705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:27.655877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:28.655895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:29.656135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:30.657222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:31.657602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:32.580326 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:19:32.580407 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:19:32.580558 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:19:32.594632 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-6976 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0914 13:19:32.658091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:19:32.690536 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:19:32.690574 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:19:32.690583 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0914 13:19:33.658999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:34.659695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:35.660117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:36.661154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:37.662130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:38.662505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:39.662664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:40.664167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:41.664455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:42.665018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/14/24 13:19:42.7
  I0914 13:19:42.711198 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/14/24 13:19:42.711
  E0914 13:19:43.665436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:44.666528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:45.666649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:46.666815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:47.667072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:48.667499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:49.667605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:50.667823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:51.667935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:52.668921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/14/24 13:19:52.724
  I0914 13:19:52.728872 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-6976 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:19:52.825606 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:19:52.825646 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:19:52.825658 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0914 13:19:53.668981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:54.669137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:55.669265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:56.671027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:57.671156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:58.672058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:19:59.672162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:00.672675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:01.672750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:02.673223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/14/24 13:20:02.846
  I0914 13:20:02.846691 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-6976 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:20:02.946277 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:20:02.946320 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:20:02.946330 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0914 13:20:03.674011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:04.674122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:05.674361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:06.674512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:07.674654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:08.675097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:09.675314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:10.675406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:11.675493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:12.675684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:20:12.967237 20 statefulset.go:2507] Updating stateful set ss2
  E0914 13:20:13.675899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:14.676156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:15.677230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:16.677328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:17.677459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:18.677846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:19.677900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:20.677988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:21.678081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:22.678375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/14/24 13:20:22.978
  I0914 13:20:22.982610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-6976 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:20:23.074558 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:20:23.074598 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:20:23.074607 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0914 13:20:23.678641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:24.678725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:25.678799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:26.678879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:27.678996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:28.679973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:29.680119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:30.681172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:31.681409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:32.681588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:20:33.094808 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6976
  I0914 13:20:33.099407 20 rest.go:150] Scaling statefulset ss2 to 0
  E0914 13:20:33.681993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:34.682196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:35.682289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:36.682467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:37.682734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:38.683052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:39.683166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:40.683236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:41.683445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:42.683658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:20:43.118556 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 13:20:43.123768 20 rest.go:88] Deleting statefulset ss2
  I0914 13:20:43.139195 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6976" for this suite. @ 09/14/24 13:20:43.144
â€¢ [80.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/14/24 13:20:43.152
  I0914 13:20:43.152459 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-webhook @ 09/14/24 13:20:43.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:20:43.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:20:43.176
  STEP: Setting up server cert @ 09/14/24 13:20:43.178
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/14/24 13:20:43.296
  STEP: Deploying the custom resource conversion webhook pod @ 09/14/24 13:20:43.308
  STEP: Wait for the deployment to be ready @ 09/14/24 13:20:43.322
  I0914 13:20:43.332904 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0914 13:20:43.684509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:44.684595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:20:45.346
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:20:45.36
  E0914 13:20:45.685091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:20:46.360975 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0914 13:20:46.371186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:20:46.686114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:47.686676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:48.687366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/14/24 13:20:48.922
  STEP: v2 custom resource should be converted @ 09/14/24 13:20:48.927
  I0914 13:20:49.498939 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4841" for this suite. @ 09/14/24 13:20:49.503
â€¢ [6.358 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/14/24 13:20:49.511
  I0914 13:20:49.511119 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption @ 09/14/24 13:20:49.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:20:49.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:20:49.533
  STEP: Creating a kubernetes client @ 09/14/24 13:20:49.535
  I0914 13:20:49.536034 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption-2 @ 09/14/24 13:20:49.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:20:49.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:20:49.555
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:20:49.564
  E0914 13:20:49.688061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:50.688117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:20:51.576
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:20:51.587
  STEP: listing a collection of PDBs across all namespaces @ 09/14/24 13:20:51.593
  STEP: listing a collection of PDBs in namespace disruption-990 @ 09/14/24 13:20:51.597
  STEP: deleting a collection of PDBs @ 09/14/24 13:20:51.601
  STEP: Waiting for the PDB collection to be deleted @ 09/14/24 13:20:51.616
  I0914 13:20:51.620680 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6534" for this suite. @ 09/14/24 13:20:51.625
  I0914 13:20:51.634117 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-990" for this suite. @ 09/14/24 13:20:51.637
â€¢ [2.134 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/14/24 13:20:51.645
  I0914 13:20:51.645199 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:20:51.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:20:51.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:20:51.667
  STEP: Creating secret with name secret-test-3c5d4539-9e77-4945-ba95-d3d67d8b5f75 @ 09/14/24 13:20:51.67
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:20:51.678
  E0914 13:20:51.688375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:52.689206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:53.689879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:54.690505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:55.690593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:20:55.706
  I0914 13:20:55.710189 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-e1943142-98d6-4091-84c8-38b6f33ebd55 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 13:20:55.726
  I0914 13:20:55.742451 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9937" for this suite. @ 09/14/24 13:20:55.747
â€¢ [4.110 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/14/24 13:20:55.755
  I0914 13:20:55.755384 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:20:55.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:20:55.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:20:55.776
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9464 @ 09/14/24 13:20:55.779
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/14/24 13:20:55.791
  STEP: creating service externalsvc in namespace services-9464 @ 09/14/24 13:20:55.791
  STEP: creating replication controller externalsvc in namespace services-9464 @ 09/14/24 13:20:55.807
  I0914 13:20:55.815106      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9464, replica count: 2
  E0914 13:20:56.690750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:57.690832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:20:58.690867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:20:58.866280      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/14/24 13:20:58.87
  I0914 13:20:58.887838 20 resource.go:361] Creating new exec pod
  E0914 13:20:59.691550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:00.691808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:00.909728 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-9464 exec execpodkkvcp -- /bin/sh -x -c nslookup clusterip-service.services-9464.svc.cluster.local'
  I0914 13:21:01.016284 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-9464.svc.cluster.local\n"
  I0914 13:21:01.016326 20 builder.go:147] stdout: "Server:\t\t10.152.183.20\nAddress:\t10.152.183.20#53\n\nclusterip-service.services-9464.svc.cluster.local\tcanonical name = externalsvc.services-9464.svc.cluster.local.\nName:\texternalsvc.services-9464.svc.cluster.local\nAddress: 10.152.183.213\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9464, will wait for the garbage collector to delete the pods @ 09/14/24 13:21:01.016
  I0914 13:21:01.079783 20 resources.go:139] Deleting ReplicationController externalsvc took: 8.263538ms
  I0914 13:21:01.180568 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.779133ms
  E0914 13:21:01.692624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:02.692897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:03.693367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:04.402938 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0914 13:21:04.415568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9464" for this suite. @ 09/14/24 13:21:04.424
â€¢ [8.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/14/24 13:21:04.431
  I0914 13:21:04.431798 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:21:04.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:04.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:04.457
  STEP: creating secret secrets-6886/secret-test-5fc28479-3208-419d-9497-36d7fe12d321 @ 09/14/24 13:21:04.459
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:21:04.465
  E0914 13:21:04.694290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:05.694509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:06.483
  I0914 13:21:06.486591 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-configmaps-a59d7ed5-7c31-4860-9c60-d52d74458a0f container env-test: <nil>
  STEP: delete the pod @ 09/14/24 13:21:06.499
  I0914 13:21:06.519567 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6886" for this suite. @ 09/14/24 13:21:06.523
â€¢ [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/14/24 13:21:06.53
  I0914 13:21:06.530964 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 13:21:06.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:06.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:06.556
  STEP: creating a Namespace @ 09/14/24 13:21:06.558
  STEP: patching the Namespace @ 09/14/24 13:21:06.576
  STEP: get the Namespace and ensuring it has the label @ 09/14/24 13:21:06.582
  I0914 13:21:06.586195 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3605" for this suite. @ 09/14/24 13:21:06.59
  STEP: Destroying namespace "nspatchtest-f172fe81-884f-43bc-acd1-d6cf2ea962c1-7238" for this suite. @ 09/14/24 13:21:06.599
â€¢ [0.075 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/14/24 13:21:06.606
  I0914 13:21:06.606406 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 13:21:06.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:06.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:06.632
  STEP: Updating Namespace "namespaces-6557" @ 09/14/24 13:21:06.635
  I0914 13:21:06.647097 20 namespace.go:389] Namespace "namespaces-6557" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"31e4654d-6d80-4ffd-996c-32e409590e0d", "kubernetes.io/metadata.name":"namespaces-6557", "namespaces-6557":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0914 13:21:06.647248 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6557" for this suite. @ 09/14/24 13:21:06.651
â€¢ [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/14/24 13:21:06.659
  I0914 13:21:06.659927 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption @ 09/14/24 13:21:06.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:06.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:06.683
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:21:06.691
  E0914 13:21:06.695237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:07.695492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:08.696071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/14/24 13:21:08.697
  STEP: Waiting for all pods to be running @ 09/14/24 13:21:08.709
  I0914 13:21:08.716291 20 disruption.go:691] running pods: 0 < 1
  E0914 13:21:09.696172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:10.696260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/14/24 13:21:10.714
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:21:10.728
  STEP: Patching PodDisruptionBudget status @ 09/14/24 13:21:10.737
  STEP: Waiting for the pdb to be processed @ 09/14/24 13:21:10.747
  I0914 13:21:10.753287 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8222" for this suite. @ 09/14/24 13:21:10.757
â€¢ [4.105 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/14/24 13:21:10.764
  I0914 13:21:10.764922 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:21:10.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:10.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:10.787
  I0914 13:21:10.794305 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7749" for this suite. @ 09/14/24 13:21:10.798
â€¢ [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/14/24 13:21:10.808
  I0914 13:21:10.808279 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename discovery @ 09/14/24 13:21:10.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:10.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:10.83
  STEP: Setting up server cert @ 09/14/24 13:21:10.834
  I0914 13:21:10.974228 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0914 13:21:10.975499 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0914 13:21:10.975519 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0914 13:21:10.975567 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0914 13:21:10.975576 20 discovery.go:139] Checking APIGroup: apps
  I0914 13:21:10.976706 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0914 13:21:10.976716 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0914 13:21:10.976722 20 discovery.go:154] apps/v1 matches apps/v1
  I0914 13:21:10.976740 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0914 13:21:10.977892 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0914 13:21:10.977901 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0914 13:21:10.977908 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0914 13:21:10.977913 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0914 13:21:10.979038 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0914 13:21:10.979047 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0914 13:21:10.979060 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0914 13:21:10.979066 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0914 13:21:10.980106 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0914 13:21:10.980127 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0914 13:21:10.980132 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0914 13:21:10.980215 20 discovery.go:139] Checking APIGroup: autoscaling
  I0914 13:21:10.981282 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0914 13:21:10.981300 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0914 13:21:10.981304 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0914 13:21:10.981307 20 discovery.go:139] Checking APIGroup: batch
  I0914 13:21:10.982335 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0914 13:21:10.982343 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0914 13:21:10.982349 20 discovery.go:154] batch/v1 matches batch/v1
  I0914 13:21:10.982355 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0914 13:21:10.983406 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0914 13:21:10.983415 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0914 13:21:10.983420 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0914 13:21:10.983426 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0914 13:21:10.984456 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0914 13:21:10.984477 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0914 13:21:10.984483 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0914 13:21:10.984524 20 discovery.go:139] Checking APIGroup: policy
  I0914 13:21:10.985619 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0914 13:21:10.985631 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0914 13:21:10.985636 20 discovery.go:154] policy/v1 matches policy/v1
  I0914 13:21:10.985650 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0914 13:21:10.986737 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0914 13:21:10.986745 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0914 13:21:10.986764 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0914 13:21:10.986769 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0914 13:21:10.987802 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0914 13:21:10.987831 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0914 13:21:10.987836 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0914 13:21:10.987843 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0914 13:21:10.988899 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0914 13:21:10.988909 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0914 13:21:10.988929 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0914 13:21:10.988935 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0914 13:21:10.990053 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0914 13:21:10.990072 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0914 13:21:10.990077 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0914 13:21:10.990111 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0914 13:21:10.991192 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0914 13:21:10.991208 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0914 13:21:10.991212 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0914 13:21:10.991215 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0914 13:21:10.992225 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0914 13:21:10.992246 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0914 13:21:10.992251 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0914 13:21:10.992285 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0914 13:21:10.993326 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0914 13:21:10.993348 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0914 13:21:10.993353 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0914 13:21:10.993389 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0914 13:21:10.994492 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0914 13:21:10.994501 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0914 13:21:10.994506 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0914 13:21:10.994512 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0914 13:21:10.995579 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0914 13:21:10.995589 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0914 13:21:10.995595 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0914 13:21:10.995600 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0914 13:21:10.996632 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0914 13:21:10.996695 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0914 13:21:10.996727 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0914 13:21:10.996878 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4338" for this suite. @ 09/14/24 13:21:11.002
â€¢ [0.204 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/14/24 13:21:11.012
  I0914 13:21:11.012013 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-pred @ 09/14/24 13:21:11.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:11.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:11.037
  I0914 13:21:11.040478 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:21:11.047972 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 13:21:11.051790 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-33-255 before test
  I0914 13:21:11.057255 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kjgv8 from ingress-nginx-kubernetes-worker started at 2024-09-14 12:10:30 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.057269 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:21:11.057275 20 predicates.go:957] calico-node-tq8px from kube-system started at 2024-09-14 12:15:30 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.057281 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:21:11.057286 20 predicates.go:957] sonobuoy-e2e-job-7d38388d155d451e from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:21:11.057291 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0914 13:21:11.057295 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:21:11.057311 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-shbkb from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:21:11.057315 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:21:11.057326 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:21:11.057332 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-235 before test
  I0914 13:21:11.063124 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-pt48j from ingress-nginx-kubernetes-worker started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063137 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:21:11.063143 20 predicates.go:957] calico-node-44nhq from kube-system started at 2024-09-14 12:15:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063149 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:21:11.063155 20 predicates.go:957] coredns-5b4857d7c8-rxhfh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063159 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0914 13:21:11.063213 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7f8zh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063228 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0914 13:21:11.063234 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wh6sp from kube-system started at 2024-09-14 12:09:09 +0000 UTC (2 container statuses recorded)
  I0914 13:21:11.063265 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0914 13:21:11.063276 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0914 13:21:11.063281 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2ghwq from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063287 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0914 13:21:11.063293 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-n8bk4 from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.063297 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0914 13:21:11.063303 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-75c6n from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:21:11.063308 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:21:11.063313 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:21:11.063318 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-243 before test
  I0914 13:21:11.069407 20 predicates.go:957] pod-0 from disruption-8222 started at 2024-09-14 13:21:08 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.069424 20 predicates.go:959] 	Container donothing ready: true, restart count 0
  I0914 13:21:11.069431 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5hhfl from ingress-nginx-kubernetes-worker started at 2024-09-14 13:13:08 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.069456 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:21:11.069462 20 predicates.go:957] calico-node-qxqsq from kube-system started at 2024-09-14 12:14:28 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.069467 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:21:11.069473 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-14 12:19:02 +0000 UTC (1 container statuses recorded)
  I0914 13:21:11.069478 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:21:11.069484 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-zcj27 from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:21:11.069489 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:21:11.069503 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/14/24 13:21:11.069
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f51ef54e1156d7], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 09/14/24 13:21:11.098
  E0914 13:21:11.697190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:12.098994 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9030" for this suite. @ 09/14/24 13:21:12.104
â€¢ [1.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/14/24 13:21:12.112
  I0914 13:21:12.112090 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/24 13:21:12.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:12.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:12.133
  STEP: getting /apis @ 09/14/24 13:21:12.142
  STEP: getting /apis/admissionregistration.k8s.io @ 09/14/24 13:21:12.146
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/14/24 13:21:12.147
  STEP: creating @ 09/14/24 13:21:12.148
  STEP: getting @ 09/14/24 13:21:12.166
  STEP: listing @ 09/14/24 13:21:12.17
  STEP: watching @ 09/14/24 13:21:12.173
  I0914 13:21:12.173676 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/14/24 13:21:12.174
  STEP: updating @ 09/14/24 13:21:12.18
  I0914 13:21:12.214949 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 09/14/24 13:21:12.215
  STEP: patching /status @ 09/14/24 13:21:12.218
  STEP: updating /status @ 09/14/24 13:21:12.229
  STEP: deleting @ 09/14/24 13:21:12.24
  STEP: deleting a collection @ 09/14/24 13:21:12.258
  I0914 13:21:12.281100 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2648" for this suite. @ 09/14/24 13:21:12.284
â€¢ [0.181 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/14/24 13:21:12.293
  I0914 13:21:12.293099 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename apf @ 09/14/24 13:21:12.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:12.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:12.317
  STEP: getting /apis @ 09/14/24 13:21:12.32
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/14/24 13:21:12.323
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/14/24 13:21:12.324
  STEP: creating @ 09/14/24 13:21:12.325
  STEP: getting @ 09/14/24 13:21:12.345
  STEP: listing @ 09/14/24 13:21:12.349
  STEP: watching @ 09/14/24 13:21:12.353
  I0914 13:21:12.353875 20 flowcontrol.go:394] starting watch
  STEP: patching @ 09/14/24 13:21:12.355
  STEP: updating @ 09/14/24 13:21:12.361
  I0914 13:21:12.371392 20 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/14/24 13:21:12.371
  STEP: patching /status @ 09/14/24 13:21:12.376
  STEP: updating /status @ 09/14/24 13:21:12.381
  STEP: deleting @ 09/14/24 13:21:12.42
  STEP: deleting a collection @ 09/14/24 13:21:12.436
  I0914 13:21:12.460567 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6032" for this suite. @ 09/14/24 13:21:12.465
â€¢ [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/14/24 13:21:12.472
  I0914 13:21:12.472971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename containers @ 09/14/24 13:21:12.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:12.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:12.494
  STEP: Creating a pod to test override arguments @ 09/14/24 13:21:12.497
  E0914 13:21:12.697279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:13.698101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:14.517
  I0914 13:21:14.521974 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod client-containers-059fdb39-0ddb-4281-a258-5c546566e151 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:21:14.53
  I0914 13:21:14.547241 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-379" for this suite. @ 09/14/24 13:21:14.551
â€¢ [2.088 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/14/24 13:21:14.561
  I0914 13:21:14.561439 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename endpointslice @ 09/14/24 13:21:14.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:14.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:14.59
  E0914 13:21:14.698289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:15.698534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:16.649134 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1413" for this suite. @ 09/14/24 13:21:16.654
â€¢ [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/14/24 13:21:16.663
  I0914 13:21:16.663385 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename endpointslice @ 09/14/24 13:21:16.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:16.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:16.686
  E0914 13:21:16.698845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:17.699872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:18.700925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/14/24 13:21:18.764
  STEP: referencing matching pods with named port @ 09/14/24 13:21:18.773
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/14/24 13:21:18.781
  STEP: recreating EndpointSlices after they've been deleted @ 09/14/24 13:21:18.79
  I0914 13:21:18.818304 20 endpointslice.go:938] EndpointSlice for Service endpointslice-7562/example-named-port not found
  E0914 13:21:19.701095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:20.701170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:20.823070 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7562" for this suite. @ 09/14/24 13:21:20.827
â€¢ [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/14/24 13:21:20.843
  I0914 13:21:20.843800 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:21:20.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:20.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:20.868
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:21:20.87
  E0914 13:21:21.701290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:22.701489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:23.701963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:24.702053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:24.897
  I0914 13:21:24.902230 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-58419030-7721-4c5c-9a43-b35007084aef container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:21:24.909
  I0914 13:21:24.926075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9562" for this suite. @ 09/14/24 13:21:24.93
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/14/24 13:21:24.938
  I0914 13:21:24.938896 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:21:24.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:24.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:24.96
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:21:24.963
  E0914 13:21:25.702996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:26.703143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:27.703279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:28.704136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:28.99
  I0914 13:21:28.995236 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-512d4096-31fd-4d0c-8071-68bb52a9b387 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:21:29.004
  I0914 13:21:29.020671 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3812" for this suite. @ 09/14/24 13:21:29.025
â€¢ [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/14/24 13:21:29.033
  I0914 13:21:29.033151 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename hostport @ 09/14/24 13:21:29.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:29.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:29.059
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/14/24 13:21:29.067
  E0914 13:21:29.704221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:30.704323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.65.235 on the node which pod1 resides and expect scheduled @ 09/14/24 13:21:31.093
  E0914 13:21:31.705204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:32.705316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:33.705539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:34.705669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:35.705940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:36.706124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:37.706274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:38.707016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:39.707083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:40.707166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:41.707303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:42.707842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.65.235 but use UDP protocol on the node which pod2 resides @ 09/14/24 13:21:43.14
  E0914 13:21:43.707901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:44.708176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:45.709213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:46.709303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/14/24 13:21:47.176
  I0914 13:21:47.176494 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.65.235 http://127.0.0.1:54323/hostname] Namespace:hostport-96 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:21:47.176513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:21:47.176904 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:21:47.176940 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-96/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.65.235+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.235, port: 54323 @ 09/14/24 13:21:47.236
  I0914 13:21:47.236302 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.65.235:54323/hostname] Namespace:hostport-96 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:21:47.236319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:21:47.236802 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:21:47.236873 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-96/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.65.235%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.235, port: 54323 UDP @ 09/14/24 13:21:47.3
  I0914 13:21:47.300321 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.65.235 54323] Namespace:hostport-96 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:21:47.300337 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:21:47.300789 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:21:47.300832 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-96/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.65.235+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0914 13:21:47.709384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:48.709730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:49.709833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:50.709926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:51.709995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:52.358750 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-96" for this suite. @ 09/14/24 13:21:52.365
â€¢ [23.340 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/14/24 13:21:52.373
  I0914 13:21:52.373799 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:21:52.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:52.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:52.398
  STEP: Creating configMap with name projected-configmap-test-volume-a59e3d4a-1644-4f9d-935c-e1d0ef774bf9 @ 09/14/24 13:21:52.401
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:21:52.407
  E0914 13:21:52.710099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:53.710924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:54.429
  I0914 13:21:54.434974 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-configmaps-92b62201-e4c6-4322-ad8c-802e6a9c043e container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:21:54.442
  I0914 13:21:54.463759 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4035" for this suite. @ 09/14/24 13:21:54.468
â€¢ [2.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/14/24 13:21:54.476
  I0914 13:21:54.476842 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:21:54.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:54.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:54.5
  STEP: Creating configMap with name configmap-test-volume-map-21edd95d-9438-47bc-87bf-be57a609bdcf @ 09/14/24 13:21:54.502
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:21:54.509
  E0914 13:21:54.711280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:55.711395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:21:56.532
  I0914 13:21:56.536210 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-71b066aa-17d8-4e52-8431-bef74ba4e1e9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:21:56.544
  I0914 13:21:56.566086 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-154" for this suite. @ 09/14/24 13:21:56.569
â€¢ [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/14/24 13:21:56.577
  I0914 13:21:56.577695 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context-test @ 09/14/24 13:21:56.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:56.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:56.606
  E0914 13:21:56.711508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:57.712506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:21:58.628665 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7007" for this suite. @ 09/14/24 13:21:58.633
â€¢ [2.063 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/14/24 13:21:58.64
  I0914 13:21:58.640410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:21:58.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:21:58.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:21:58.67
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/14/24 13:21:58.673
  E0914 13:21:58.712853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:21:59.713121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:00.713519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:01.713681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:22:02.704
  I0914 13:22:02.709678 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-72d68d8b-e629-44ac-b267-8ded7e5059cf container test-container: <nil>
  E0914 13:22:02.713784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/14/24 13:22:02.717
  I0914 13:22:02.736829 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1003" for this suite. @ 09/14/24 13:22:02.74
â€¢ [4.111 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/14/24 13:22:02.751
  I0914 13:22:02.751183 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:22:02.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:22:02.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:22:02.776
  STEP: Setting up server cert @ 09/14/24 13:22:02.805
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:22:03.251
  STEP: Deploying the webhook pod @ 09/14/24 13:22:03.26
  STEP: Wait for the deployment to be ready @ 09/14/24 13:22:03.275
  I0914 13:22:03.284015 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:22:03.714608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:04.714919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:22:05.298
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:22:05.309
  E0914 13:22:05.715279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:22:06.310002 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/14/24 13:22:06.32
  STEP: create a pod that should be updated by the webhook @ 09/14/24 13:22:06.333
  I0914 13:22:06.404787 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7969" for this suite. @ 09/14/24 13:22:06.409
  STEP: Destroying namespace "webhook-markers-9768" for this suite. @ 09/14/24 13:22:06.417
â€¢ [3.673 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/14/24 13:22:06.424
  I0914 13:22:06.424216 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 13:22:06.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:22:06.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:22:06.444
  STEP: Counting existing ResourceQuota @ 09/14/24 13:22:06.447
  E0914 13:22:06.715549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:07.716321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:08.716701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:09.717264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:10.718126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/14/24 13:22:11.452
  STEP: Ensuring resource quota status is calculated @ 09/14/24 13:22:11.457
  E0914 13:22:11.718156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:12.718263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/14/24 13:22:13.463
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/14/24 13:22:13.48
  E0914 13:22:13.718402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:14.718528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/14/24 13:22:15.487
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/14/24 13:22:15.489
  STEP: Ensuring a pod cannot update its resource requirements @ 09/14/24 13:22:15.491
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/14/24 13:22:15.496
  E0914 13:22:15.719252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:16.719348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/14/24 13:22:17.503
  STEP: Ensuring resource quota status released the pod usage @ 09/14/24 13:22:17.516
  E0914 13:22:17.719814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:18.719870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:22:19.521636 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6398" for this suite. @ 09/14/24 13:22:19.527
â€¢ [13.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/14/24 13:22:19.535
  I0914 13:22:19.535284 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:22:19.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:22:19.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:22:19.558
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:22:19.561
  E0914 13:22:19.720341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:20.720418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:22:21.581
  I0914 13:22:21.585656 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-9f93d022-7e6a-42ec-ac63-c98875866160 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:22:21.593
  I0914 13:22:21.611046 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2432" for this suite. @ 09/14/24 13:22:21.616
â€¢ [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/14/24 13:22:21.626
  I0914 13:22:21.626833 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/24 13:22:21.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:22:21.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:22:21.651
  STEP: Performing setup for networking test in namespace pod-network-test-9179 @ 09/14/24 13:22:21.654
  STEP: creating a selector @ 09/14/24 13:22:21.654
  STEP: Creating the service pods in kubernetes @ 09/14/24 13:22:21.654
  I0914 13:22:21.654809 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0914 13:22:21.721209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:22.721329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:23.722384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:24.722512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:25.722876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:26.723088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:27.723640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:28.724275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:29.725032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:30.725190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:31.725255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:32.725401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:33.726066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:34.726274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:35.726396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:36.726477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:37.726591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:38.726927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:39.727133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:40.727233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:41.727394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:42.727490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:43.727952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/14/24 13:22:43.787
  E0914 13:22:44.728143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:45.728247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:22:45.813736 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 13:22:45.813767 20 networking.go:42] Breadth first check of 192.168.17.143 on host 172.31.33.255...
  I0914 13:22:45.818631 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.98:9080/dial?request=hostname&protocol=http&host=192.168.17.143&port=8083&tries=1'] Namespace:pod-network-test-9179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:22:45.818652 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:22:45.819060 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:22:45.819112 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.98%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.17.143%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 13:22:45.871414 20 utils.go:356] Waiting for responses: map[]
  I0914 13:22:45.871443 20 utils.go:360] reached 192.168.17.143 after 0/1 tries
  I0914 13:22:45.871452 20 networking.go:42] Breadth first check of 192.168.108.216 on host 172.31.65.235...
  I0914 13:22:45.876308 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.98:9080/dial?request=hostname&protocol=http&host=192.168.108.216&port=8083&tries=1'] Namespace:pod-network-test-9179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:22:45.876329 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:22:45.876722 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:22:45.876772 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.98%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.108.216%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 13:22:45.930505 20 utils.go:356] Waiting for responses: map[]
  I0914 13:22:45.930540 20 utils.go:360] reached 192.168.108.216 after 0/1 tries
  I0914 13:22:45.930553 20 networking.go:42] Breadth first check of 192.168.254.114 on host 172.31.8.243...
  I0914 13:22:45.935846 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.254.98:9080/dial?request=hostname&protocol=http&host=192.168.254.114&port=8083&tries=1'] Namespace:pod-network-test-9179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:22:45.935865 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 13:22:45.936295 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 13:22:45.936359 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.254.98%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.254.114%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0914 13:22:45.985376 20 utils.go:356] Waiting for responses: map[]
  I0914 13:22:45.985426 20 utils.go:360] reached 192.168.254.114 after 0/1 tries
  I0914 13:22:45.985447 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0914 13:22:45.985599 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9179" for this suite. @ 09/14/24 13:22:45.99
â€¢ [24.373 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/14/24 13:22:45.999
  I0914 13:22:45.999704 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:22:46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:22:46.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:22:46.025
  STEP: Creating configMap with name configmap-test-upd-7ac75515-dddd-459b-97b3-e8f718eeab65 @ 09/14/24 13:22:46.032
  STEP: Creating the pod @ 09/14/24 13:22:46.036
  E0914 13:22:46.728354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:47.728446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-7ac75515-dddd-459b-97b3-e8f718eeab65 @ 09/14/24 13:22:48.073
  STEP: waiting to observe update in volume @ 09/14/24 13:22:48.08
  E0914 13:22:48.729130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:49.729309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:50.729676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:51.729788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:52.730683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:53.731050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:54.731221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:55.731446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:56.731674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:57.731779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:58.732092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:22:59.732144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:00.732213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:01.732254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:02.733034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:03.733378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:04.733456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:05.733578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:06.734494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:07.734627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:08.735073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:09.735263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:10.736312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:11.736401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:12.737237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:13.738059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:14.738166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:15.738247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:16.739265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:17.739484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:18.739950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:19.740147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:20.741222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:21.741504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:22.742339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:23.742424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:24.742550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:25.742648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:26.742745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:27.742834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:28.743305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:29.743389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:30.743476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:31.743565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:32.744283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:33.744936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:34.745407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:35.745813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:36.745924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:37.746088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:38.746953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:39.747120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:40.747950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:41.748160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:42.748649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:43.748957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:44.749063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:45.749152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:46.750106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:47.750304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:48.750938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:49.751142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:50.751617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:51.751818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:52.752890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:53.752913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:54.753714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:55.754098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:56.754293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:57.754482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:58.755523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:23:59.755631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:00.756396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:01.756514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:02.757203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:03.757555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:04.758640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:05.758740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:06.759124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:07.759205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:08.760176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:09.761235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:10.761897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:11.762123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:12.763157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:13.763448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:14.520646 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6766" for this suite. @ 09/14/24 13:24:14.526
â€¢ [88.536 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/14/24 13:24:14.535
  I0914 13:24:14.535752 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:24:14.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:24:14.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:24:14.56
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1803 @ 09/14/24 13:24:14.563
  STEP: changing the ExternalName service to type=NodePort @ 09/14/24 13:24:14.567
  STEP: creating replication controller externalname-service in namespace services-1803 @ 09/14/24 13:24:14.588
  I0914 13:24:14.599297      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1803, replica count: 2
  E0914 13:24:14.764533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:15.765552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:16.766228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:17.650232      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 13:24:17.650264 20 resource.go:361] Creating new exec pod
  E0914 13:24:17.766356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:18.766960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:19.767714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:20.675812 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0914 13:24:20.768268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:20.772547 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0914 13:24:20.772582 20 builder.go:147] stdout: "externalname-service-4jjzm"
  I0914 13:24:20.772750 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.198 80'
  I0914 13:24:20.862824 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.198 80\nConnection to 10.152.183.198 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 13:24:20.862864 20 builder.go:147] stdout: ""
  E0914 13:24:21.768594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:21.772802 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.198 80'
  I0914 13:24:21.862614 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.198 80\nConnection to 10.152.183.198 80 port [tcp/http] succeeded!\n"
  I0914 13:24:21.862654 20 builder.go:147] stdout: ""
  E0914 13:24:22.769664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:24:22.772871 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.198 80'
  I0914 13:24:22.868144 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.198 80\nConnection to 10.152.183.198 80 port [tcp/http] succeeded!\n"
  I0914 13:24:22.868182 20 builder.go:147] stdout: "externalname-service-tgtnm"
  I0914 13:24:22.868256 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.243 30596'
  I0914 13:24:22.961440 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.243 30596\nConnection to 172.31.8.243 30596 port [tcp/*] succeeded!\n"
  I0914 13:24:22.961484 20 builder.go:147] stdout: "externalname-service-4jjzm"
  I0914 13:24:22.961551 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-1803 exec execpodpk4mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.235 30596'
  I0914 13:24:23.057457 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.65.235 30596\n+ echo hostName\nConnection to 172.31.65.235 30596 port [tcp/*] succeeded!\n"
  I0914 13:24:23.057496 20 builder.go:147] stdout: "externalname-service-tgtnm"
  I0914 13:24:23.057571 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0914 13:24:23.081927 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1803" for this suite. @ 09/14/24 13:24:23.085
â€¢ [8.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/14/24 13:24:23.094
  I0914 13:24:23.094296 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 13:24:23.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:24:23.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:24:23.118
  I0914 13:24:23.121895 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I0914 13:24:23.139669 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0914 13:24:23.770498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:24.770583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/14/24 13:24:25.156
  STEP: updating a scale subresource @ 09/14/24 13:24:25.16
  STEP: verifying the deployment Spec.Replicas was modified @ 09/14/24 13:24:25.167
  STEP: Patch a scale subresource @ 09/14/24 13:24:25.174
  I0914 13:24:25.206995 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "840930ba-f0ce-4a46-9d3d-918b0251e852",
      ResourceVersion: (string) (len=5) "38589",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:24:25.215176 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a0ef65e-ff95-49ae-a6fd-9a9d93d21da8",
      ResourceVersion: (string) (len=5) "38596",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "840930ba-f0ce-4a46-9d3d-918b0251e852",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 34 30 39 33 30  62 61 2d 66 30 63 65 2d  |\"840930ba-f0ce-|
              00000120  34 61 34 36 2d 39 64 33  64 2d 39 31 38 62 30 32  |4a46-9d3d-918b02|
              00000130  35 31 65 38 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |51e852\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:24:25.220854 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-2vwr4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-2vwr4",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f8f0ab9-e80a-413c-8120-b2ebf3d1e344",
      ResourceVersion: (string) (len=5) "38584",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "7a0ef65e-ff95-49ae-a6fd-9a9d93d21da8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 61  30 65 66 36 35 65 2d 66  |d\":\"7a0ef65e-f|
              00000090  66 39 35 2d 34 39 61 65  2d 61 36 66 64 2d 39 61  |f95-49ae-a6fd-9a|
              000000a0  39 64 39 33 64 32 31 64  61 38 5c 22 7d 22 3a 7b  |9d93d21da8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 31 32 34 5c 22 7d  |2.168.254.124\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vgfzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vgfzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=15) "192.168.254.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.254.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861917063,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8fbbf2ea76762268d733a0c9275936a87915007fe17b07130ab31fbf796edcdb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vgfzp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:24:25.225478 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-r89sf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-r89sf",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd2f9307-bb9f-4f57-9478-25ad88b5e3be",
      ResourceVersion: (string) (len=5) "38599",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "7a0ef65e-ff95-49ae-a6fd-9a9d93d21da8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 61  30 65 66 36 35 65 2d 66  |d\":\"7a0ef65e-f|
              00000090  66 39 35 2d 34 39 61 65  2d 61 36 66 64 2d 39 61  |f95-49ae-a6fd-9a|
              000000a0  39 64 39 33 64 32 31 64  61 38 5c 22 7d 22 3a 7b  |9d93d21da8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbch5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbch5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861917065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861917065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cbch5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:24:25.226454 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1488" for this suite. @ 09/14/24 13:24:25.231
â€¢ [2.149 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/14/24 13:24:25.243
  I0914 13:24:25.243937 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/24 13:24:25.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:24:25.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:24:25.276
  I0914 13:24:25.295045 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0914 13:24:25.771189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:26.771379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:27.771569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:28.771716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:29.771851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:30.772162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:31.772783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:32.773239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:33.773845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:34.774049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:35.774243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:36.774480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:37.774639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:38.774993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:39.775185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:40.775269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:41.775908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:42.776122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:43.776252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:44.776332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:45.776449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:46.777231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:47.777340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:48.777962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:49.778073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:50.778144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:51.778266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:52.778475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:53.778543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:54.778790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:55.778880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:56.779651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:57.779737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:58.779903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:24:59.780036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:00.780133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:01.781181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:02.781215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:03.781541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:04.782307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:05.782499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:06.782698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:07.782899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:08.783210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:09.783591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:10.783703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:11.783778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:12.784011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:13.784852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:14.784956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:15.785237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:16.785429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:17.785594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:18.785924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:19.786069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:20.786284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:21.786722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:22.786873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:23.787328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:24.787461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:25:25.301203 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/14/24 13:25:25.305
  I0914 13:25:25.305392 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/14/24 13:25:25.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:25.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:25.328
  I0914 13:25:25.348091 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0914 13:25:25.352844 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0914 13:25:25.432705 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-807" for this suite. @ 09/14/24 13:25:25.436
  I0914 13:25:25.444708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-552" for this suite. @ 09/14/24 13:25:25.449
â€¢ [60.213 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/14/24 13:25:25.456
  I0914 13:25:25.456904 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:25:25.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:25.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:25.484
  STEP: Creating configMap with name configmap-test-volume-map-e248ea4f-6730-44b2-b051-57f78224da46 @ 09/14/24 13:25:25.487
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:25:25.493
  E0914 13:25:25.787599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:26.787687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:27.788429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:28.788750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:25:29.52
  I0914 13:25:29.525537 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-2a6fe3f5-e7b0-4ace-a5ea-7824705bae64 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:25:29.534
  I0914 13:25:29.551113 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6433" for this suite. @ 09/14/24 13:25:29.555
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/14/24 13:25:29.564
  I0914 13:25:29.564142 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:25:29.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:29.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:29.585
  STEP: starting the proxy server @ 09/14/24 13:25:29.588
  I0914 13:25:29.588864 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-9960 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/14/24 13:25:29.62
  I0914 13:25:29.626490 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0914 13:25:29.627559 20 kubectl.go:2229] kubectl proxy stderr: W0914 13:25:29.620063     571 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0914 13:25:29.627559 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:44689

  STEP: Destroying namespace "kubectl-9960" for this suite. @ 09/14/24 13:25:29.631
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/14/24 13:25:29.641
  I0914 13:25:29.641301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 13:25:29.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:29.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:29.664
  I0914 13:25:29.666722 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:25:29.789087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:30.789980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:31.790188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0914 13:25:32.203592      20 warnings.go:70] unknown field "alpha"
  W0914 13:25:32.203609      20 warnings.go:70] unknown field "beta"
  W0914 13:25:32.203613      20 warnings.go:70] unknown field "delta"
  W0914 13:25:32.203615      20 warnings.go:70] unknown field "epsilon"
  W0914 13:25:32.203618      20 warnings.go:70] unknown field "gamma"
  I0914 13:25:32.756754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5180" for this suite. @ 09/14/24 13:25:32.762
â€¢ [3.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/14/24 13:25:32.772
  I0914 13:25:32.772274 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 13:25:32.772
  E0914 13:25:32.790527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:32.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:32.799
  I0914 13:25:32.801966 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:25:33.790743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:34.790849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0914 13:25:35.339635      20 warnings.go:70] unknown field "alpha"
  W0914 13:25:35.339654      20 warnings.go:70] unknown field "beta"
  W0914 13:25:35.339657      20 warnings.go:70] unknown field "delta"
  W0914 13:25:35.339660      20 warnings.go:70] unknown field "epsilon"
  W0914 13:25:35.339664      20 warnings.go:70] unknown field "gamma"
  E0914 13:25:35.791767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:25:35.892566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-895" for this suite. @ 09/14/24 13:25:35.896
â€¢ [3.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/14/24 13:25:35.905
  I0914 13:25:35.905603 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:25:35.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:35.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:35.928
  STEP: Creating configMap with name configmap-test-upd-d249f77c-eafb-47df-82ad-1926989f424d @ 09/14/24 13:25:35.935
  STEP: Creating the pod @ 09/14/24 13:25:35.94
  E0914 13:25:36.792213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:37.792257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/14/24 13:25:37.959
  STEP: Waiting for pod with binary data @ 09/14/24 13:25:37.967
  I0914 13:25:37.974236 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2888" for this suite. @ 09/14/24 13:25:37.978
â€¢ [2.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/14/24 13:25:37.986
  I0914 13:25:37.986636 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 13:25:37.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:38.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:38.009
  I0914 13:25:38.011759 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-d458379a-ea59-4222-aae6-af75e5d0b3af
  I0914 13:25:38.021161 20 resource.go:87] Pod name my-hostname-basic-d458379a-ea59-4222-aae6-af75e5d0b3af: Found 0 pods out of 1
  E0914 13:25:38.795043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:39.795207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:40.795326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:41.795540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:42.795698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:25:43.027946 20 resource.go:87] Pod name my-hostname-basic-d458379a-ea59-4222-aae6-af75e5d0b3af: Found 1 pods out of 1
  I0914 13:25:43.027998 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-d458379a-ea59-4222-aae6-af75e5d0b3af" is running
  I0914 13:25:43.032308 20 replica_set.go:220] Pod "my-hostname-basic-d458379a-ea59-4222-aae6-af75e5d0b3af-p4bkc" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:25:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:25:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:25:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:25:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:25:38 +0000 UTC Reason: Message:}])
  I0914 13:25:43.032330 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/14/24 13:25:43.032
  I0914 13:25:43.047125 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-619" for this suite. @ 09/14/24 13:25:43.053
â€¢ [5.074 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/14/24 13:25:43.06
  I0914 13:25:43.060411 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename lease-test @ 09/14/24 13:25:43.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:43.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:43.084
  I0914 13:25:43.154317 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5551" for this suite. @ 09/14/24 13:25:43.158
â€¢ [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/14/24 13:25:43.165
  I0914 13:25:43.165184 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:25:43.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:43.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:43.19
  STEP: Creating secret with name secret-test-cb7c658b-6360-4b1e-af4e-c0bbe2ed1929 @ 09/14/24 13:25:43.193
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:25:43.197
  E0914 13:25:43.796621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:44.796734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:45.796826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:46.796931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:25:47.228
  I0914 13:25:47.232558 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-secrets-51663bf8-ef7d-4515-a63b-7369e02a4a71 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 13:25:47.241
  I0914 13:25:47.263642 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1922" for this suite. @ 09/14/24 13:25:47.268
â€¢ [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/14/24 13:25:47.278
  I0914 13:25:47.278076 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-watch @ 09/14/24 13:25:47.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:25:47.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:25:47.3
  I0914 13:25:47.303632 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:25:47.797142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:48.797235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:49.797313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/14/24 13:25:49.843
  I0914 13:25:49.849297 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:25:49Z]] name:name1 resourceVersion:39112 uid:72197d69-247a-41be-8ac7-8e093f1bb40c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:25:50.797350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:51.797729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:52.798057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:53.798411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:54.798513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:55.799287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:56.800050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:57.800123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:58.800493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:25:59.801178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/14/24 13:25:59.849
  I0914 13:25:59.857678 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:25:59Z]] name:name2 resourceVersion:39147 uid:8ea2119f-0ad1-4b2a-af1d-46c50ba698a4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:26:00.801671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:01.801949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:02.802233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:03.802657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:04.802863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:05.803123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:06.803353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:07.803515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:08.803925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:09.804117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/14/24 13:26:09.858
  I0914 13:26:09.865389 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:26:09Z]] name:name1 resourceVersion:39168 uid:72197d69-247a-41be-8ac7-8e093f1bb40c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:26:10.804242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:11.805263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:12.805449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:13.805922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:14.806104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:15.806313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:16.806521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:17.806728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:18.806960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:19.807070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/14/24 13:26:19.866
  I0914 13:26:19.874751 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:26:19Z]] name:name2 resourceVersion:39188 uid:8ea2119f-0ad1-4b2a-af1d-46c50ba698a4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:26:20.807834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:21.808118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:22.808249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:23.809025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:24.809577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:25.809670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:26.810496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:27.810611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:28.811033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:29.811269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/14/24 13:26:29.875
  I0914 13:26:29.885312 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:26:09Z]] name:name1 resourceVersion:39209 uid:72197d69-247a-41be-8ac7-8e093f1bb40c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:26:30.811437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:31.812203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:32.812388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:33.813195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:34.813399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:35.813480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:36.813599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:37.813756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:38.814101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:39.814194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/14/24 13:26:39.885
  I0914 13:26:39.896298 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-14T13:25:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-14T13:26:19Z]] name:name2 resourceVersion:39229 uid:8ea2119f-0ad1-4b2a-af1d-46c50ba698a4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0914 13:26:40.814370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:41.814460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:42.814572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:43.815185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:44.815338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:45.815620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:46.815717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:47.815831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:48.816196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:49.816297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:26:50.411501 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9166" for this suite. @ 09/14/24 13:26:50.417
â€¢ [63.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/14/24 13:26:50.426
  I0914 13:26:50.426697 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename init-container @ 09/14/24 13:26:50.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:26:50.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:26:50.456
  STEP: creating the pod @ 09/14/24 13:26:50.458
  I0914 13:26:50.458594 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0914 13:26:50.817006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:51.817668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:52.817981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:26:53.763725 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5811" for this suite. @ 09/14/24 13:26:53.768
â€¢ [3.350 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/14/24 13:26:53.777
  I0914 13:26:53.777080 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 13:26:53.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:26:53.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:26:53.8
  STEP: Creating service test in namespace statefulset-8824 @ 09/14/24 13:26:53.802
  STEP: Creating stateful set ss in namespace statefulset-8824 @ 09/14/24 13:26:53.809
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8824 @ 09/14/24 13:26:53.817
  E0914 13:26:53.818799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:26:53.823322 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0914 13:26:54.819497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:55.819585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:56.819817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:57.819878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:58.820208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:26:59.820523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:00.820398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:01.820478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:02.821190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:03.821678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:03.824640 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/14/24 13:27:03.824
  I0914 13:27:03.829891 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:27:03.920991 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:27:03.921028 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:27:03.921037 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:27:03.926365 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0914 13:27:04.822282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:05.822484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:06.822618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:07.822703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:08.823049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:09.823169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:10.823409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:11.823625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:12.823841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:13.824187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:13.927371 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:27:13.927412 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:27:13.945210 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0914 13:27:13.945255 20 resource.go:175] ss-0  ip-172-31-33-255  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:53 +0000 UTC  }]
  I0914 13:27:13.945261 20 resource.go:178] 
  I0914 13:27:13.945267 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E0914 13:27:14.824216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:14.951167 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996476951s
  E0914 13:27:15.824317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:15.957978 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990248865s
  E0914 13:27:16.824409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:16.964426 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983163205s
  E0914 13:27:17.825239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:17.970918 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.976316407s
  E0914 13:27:18.825998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:18.977061 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.970546771s
  E0914 13:27:19.826141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:19.982293 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.964435325s
  E0914 13:27:20.826193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:20.987848 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.95941238s
  E0914 13:27:21.826638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:21.994077 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.953798442s
  E0914 13:27:22.826921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:22.999964 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 947.554684ms
  E0914 13:27:23.827893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8824 @ 09/14/24 13:27:24
  I0914 13:27:24.006804 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:27:24.105821 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:27:24.105858 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:27:24.105868 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:27:24.105908 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:27:24.205301 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0914 13:27:24.205359 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:27:24.205368 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:27:24.205412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:27:24.303435 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0914 13:27:24.303470 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:27:24.303479 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:27:24.308123 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:27:24.308141 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:27:24.308147 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/14/24 13:27:24.308
  I0914 13:27:24.313045 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:27:24.405635 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:27:24.405672 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:27:24.405681 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:27:24.405721 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:27:24.495273 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:27:24.495314 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:27:24.495322 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:27:24.495369 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=statefulset-8824 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:27:24.585972 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:27:24.586014 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:27:24.586024 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:27:24.586031 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:27:24.590119 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0914 13:27:24.828586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:25.829289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:26.829468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:27.829558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:28.829900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:29.830274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:30.830366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:31.830629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:32.830873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:33.831431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:34.596440 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:27:34.596472 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:27:34.596478 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:27:34.611289 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0914 13:27:34.611408 20 resource.go:175] ss-0  ip-172-31-33-255  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:26:53 +0000 UTC  }]
  I0914 13:27:34.611438 20 resource.go:175] ss-1  ip-172-31-8-243   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC  }]
  I0914 13:27:34.611490 20 resource.go:175] ss-2  ip-172-31-65-235  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC  }]
  I0914 13:27:34.611495 20 resource.go:178] 
  I0914 13:27:34.611507 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E0914 13:27:34.832139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:35.617625 20 resource.go:168] POD   NODE             PHASE      GRACE  CONDITIONS
  I0914 13:27:35.617685 20 resource.go:175] ss-1  ip-172-31-8-243  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:25 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-14 13:27:13 +0000 UTC  }]
  I0914 13:27:35.617691 20 resource.go:178] 
  I0914 13:27:35.617697 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  E0914 13:27:35.832956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:36.623490 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.988906384s
  E0914 13:27:36.833875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:37.629108 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.983103734s
  E0914 13:27:37.834510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:38.634063 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.977350404s
  E0914 13:27:38.835454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:39.639510 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.972530702s
  E0914 13:27:39.835872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:40.647305 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.965834441s
  E0914 13:27:40.836703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:41.653534 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.959184439s
  E0914 13:27:41.836835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:42.659161 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.953168285s
  E0914 13:27:42.837517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:43.665387 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 947.229813ms
  E0914 13:27:43.838149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8824 @ 09/14/24 13:27:44.666
  I0914 13:27:44.672881 20 rest.go:150] Scaling statefulset ss to 0
  I0914 13:27:44.681551 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 13:27:44.686700 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8824
  I0914 13:27:44.690902 20 rest.go:150] Scaling statefulset ss to 0
  I0914 13:27:44.701055 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 13:27:44.705883 20 rest.go:88] Deleting statefulset ss
  I0914 13:27:44.724183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8824" for this suite. @ 09/14/24 13:27:44.729
â€¢ [50.962 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/14/24 13:27:44.739
  I0914 13:27:44.739501 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:27:44.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:44.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:44.764
  I0914 13:27:44.768323 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:27:44.838988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:45.839177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/24 13:27:45.974
  I0914 13:27:45.974547 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 create -f -'
  I0914 13:27:46.052907 20 builder.go:146] stderr: ""
  I0914 13:27:46.052947 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4262-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0914 13:27:46.053091 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 delete e2e-test-crd-publish-openapi-4262-crds test-cr'
  I0914 13:27:46.102725 20 builder.go:146] stderr: ""
  I0914 13:27:46.102771 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4262-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0914 13:27:46.102855 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 apply -f -'
  I0914 13:27:46.156840 20 builder.go:146] stderr: ""
  I0914 13:27:46.156909 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4262-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0914 13:27:46.156951 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-3697 --namespace=crd-publish-openapi-3697 delete e2e-test-crd-publish-openapi-4262-crds test-cr'
  I0914 13:27:46.215209 20 builder.go:146] stderr: ""
  I0914 13:27:46.215247 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4262-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/14/24 13:27:46.215
  I0914 13:27:46.215329 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-3697 explain e2e-test-crd-publish-openapi-4262-crds'
  I0914 13:27:46.254564 20 builder.go:146] stderr: ""
  I0914 13:27:46.254612 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4262-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0914 13:27:46.839666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:47.535229 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3697" for this suite. @ 09/14/24 13:27:47.542
â€¢ [2.814 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/14/24 13:27:47.553
  I0914 13:27:47.553627 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:27:47.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:47.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:47.577
  STEP: Creating a pod to test downward api env vars @ 09/14/24 13:27:47.58
  E0914 13:27:47.840065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:48.841032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:49.841711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:50.841840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:27:51.603
  I0914 13:27:51.608778 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downward-api-3d19c0a6-e081-49be-beb7-41a33dd8c6e4 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 13:27:51.624
  I0914 13:27:51.641735 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9950" for this suite. @ 09/14/24 13:27:51.646
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/14/24 13:27:51.654
  I0914 13:27:51.654282 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 13:27:51.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:51.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:51.679
  STEP: creating pod @ 09/14/24 13:27:51.682
  E0914 13:27:51.842214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:52.842518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:27:53.714714 20 pods.go:83] Pod pod-hostip-eb2072c0-5725-4447-b6f8-cc91cdbbde51 has hostIP: 172.31.8.243
  I0914 13:27:53.714857 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7014" for this suite. @ 09/14/24 13:27:53.718
â€¢ [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/14/24 13:27:53.726
  I0914 13:27:53.726109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename secrets @ 09/14/24 13:27:53.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:53.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:53.751
  STEP: creating a secret @ 09/14/24 13:27:53.754
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/14/24 13:27:53.759
  STEP: patching the secret @ 09/14/24 13:27:53.763
  STEP: deleting the secret using a LabelSelector @ 09/14/24 13:27:53.773
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/14/24 13:27:53.783
  I0914 13:27:53.786804 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2298" for this suite. @ 09/14/24 13:27:53.791
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/14/24 13:27:53.798
  I0914 13:27:53.798857 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:27:53.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:53.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:53.82
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:27:53.823
  E0914 13:27:53.842635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:54.842950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:55.843206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:56.843357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:57.843580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:27:57.855
  I0914 13:27:57.858942 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-645ee407-d5f1-4aee-9c64-50260a8801f9 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:27:57.877
  I0914 13:27:57.901051 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5792" for this suite. @ 09/14/24 13:27:57.904
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/14/24 13:27:57.913
  I0914 13:27:57.913018 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:27:57.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:27:57.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:27:57.936
  STEP: Creating projection with secret that has name projected-secret-test-9cb703a7-d985-4ac0-b952-cd4d0b8840c0 @ 09/14/24 13:27:57.938
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:27:57.943
  E0914 13:27:58.844564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:27:59.845318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:00.845804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:01.846007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:28:01.971
  I0914 13:28:01.976128 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-projected-secrets-2967f582-ab36-42b1-ac4b-156fdaa1b18b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 13:28:01.985
  I0914 13:28:02.003821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1818" for this suite. @ 09/14/24 13:28:02.009
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/14/24 13:28:02.017
  I0914 13:28:02.017193 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:28:02.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:28:02.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:28:02.037
  STEP: Creating configMap with name cm-test-opt-del-70d0d675-908f-40ee-b1a4-8165ffbf0ac1 @ 09/14/24 13:28:02.044
  STEP: Creating configMap with name cm-test-opt-upd-db93d8b6-7df3-4f7b-9115-97aa33065e71 @ 09/14/24 13:28:02.048
  STEP: Creating the pod @ 09/14/24 13:28:02.053
  E0914 13:28:02.846253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:03.846440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-70d0d675-908f-40ee-b1a4-8165ffbf0ac1 @ 09/14/24 13:28:04.099
  STEP: Updating configmap cm-test-opt-upd-db93d8b6-7df3-4f7b-9115-97aa33065e71 @ 09/14/24 13:28:04.107
  STEP: Creating configMap with name cm-test-opt-create-151569c8-efb1-4001-b57e-c7fb08451490 @ 09/14/24 13:28:04.113
  STEP: waiting to observe update in volume @ 09/14/24 13:28:04.118
  E0914 13:28:04.846443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:05.846578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:06.846678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:07.846943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:08.847011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:09.847256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:10.848318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:11.848403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:12.848725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:13.849089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:14.849194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:15.849401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:16.850171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:17.850650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:18.850896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:19.851087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:20.852123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:21.852235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:22.852801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:23.853072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:24.853236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:25.853454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:26.853584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:27.853659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:28.854640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:29.854755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:30.854894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:31.854974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:32.855737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:33.856042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:34.856157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:35.856240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:36.857119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:37.857289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:38.858082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:39.858172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:40.858368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:41.858535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:42.859067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:43.859301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:44.859396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:45.859489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:46.860416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:47.860786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:48.861214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:49.861428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:50.862265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:51.862521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:52.862711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:53.863186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:54.864242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:55.864325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:56.864409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:57.865265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:58.865400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:28:59.865512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:00.865641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:01.865896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:02.866007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:03.866057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:04.866709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:05.866910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:06.866998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:07.867277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:08.867509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:09.867763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:10.868083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:11.868272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:12.868918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:13.869014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:14.869123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:15.869358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:16.870057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:17.870866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:18.870962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:19.871103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:20.518447 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6628" for this suite. @ 09/14/24 13:29:20.523
â€¢ [78.515 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/14/24 13:29:20.532
  I0914 13:29:20.532275 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 13:29:20.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:20.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:20.554
  STEP: Creating service test in namespace statefulset-2361 @ 09/14/24 13:29:20.557
  STEP: Creating statefulset ss in namespace statefulset-2361 @ 09/14/24 13:29:20.567
  I0914 13:29:20.579574 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0914 13:29:20.872134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:21.872205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:22.873256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:23.874072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:24.874205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:25.874405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:26.874665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:27.874836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:28.875086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:29.875314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:30.581489 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/14/24 13:29:30.591
  STEP: Getting /status @ 09/14/24 13:29:30.6
  I0914 13:29:30.605046 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/14/24 13:29:30.605
  I0914 13:29:30.625549 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/14/24 13:29:30.625
  I0914 13:29:30.628543 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0914 13:29:30.628573 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-2361 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:29:30.628584 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/14/24 13:29:30.628
  I0914 13:29:30.628605 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 13:29:30.637678 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/14/24 13:29:30.637
  I0914 13:29:30.639848 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0914 13:29:30.639929 20 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-2361 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:29:30.640051 20 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0914 13:29:30.640117 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2361
  I0914 13:29:30.646045 20 rest.go:150] Scaling statefulset ss to 0
  E0914 13:29:30.875678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:31.876546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:32.877230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:33.877353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:34.877622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:35.877703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:36.877815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:37.877907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:38.878627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:39.878676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:40.665561 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0914 13:29:40.671730 20 rest.go:88] Deleting statefulset ss
  I0914 13:29:40.688629 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2361" for this suite. @ 09/14/24 13:29:40.692
â€¢ [20.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/14/24 13:29:40.699
  I0914 13:29:40.699760 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/24 13:29:40.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:40.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:40.722
  E0914 13:29:40.879719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:41.879794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:42.879980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:43.880002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:44.742483 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2411" for this suite. @ 09/14/24 13:29:44.747
â€¢ [4.056 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/14/24 13:29:44.755
  I0914 13:29:44.755442 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:29:44.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:44.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:44.777
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/14/24 13:29:44.783
  E0914 13:29:44.880374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:45.880458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:46.881397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:47.881660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:29:48.808
  I0914 13:29:48.812765 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-befac2a6-b9b8-4a65-8bd4-1b0e4aeae3dc container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:29:48.821
  I0914 13:29:48.842735 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8704" for this suite. @ 09/14/24 13:29:48.846
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/14/24 13:29:48.855
  I0914 13:29:48.855702 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:29:48.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:48.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:48.878
  E0914 13:29:48.882089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/14/24 13:29:48.908
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:29:49.064
  STEP: Deploying the webhook pod @ 09/14/24 13:29:49.076
  STEP: Wait for the deployment to be ready @ 09/14/24 13:29:49.089
  I0914 13:29:49.100874 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:29:49.882311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:50.882487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:29:51.115
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:29:51.129
  E0914 13:29:51.882626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:52.129836 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/14/24 13:29:52.138
  STEP: create a configmap that should be updated by the webhook @ 09/14/24 13:29:52.151
  I0914 13:29:52.211601 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5065" for this suite. @ 09/14/24 13:29:52.216
  STEP: Destroying namespace "webhook-markers-6123" for this suite. @ 09/14/24 13:29:52.224
â€¢ [3.376 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/14/24 13:29:52.232
  I0914 13:29:52.232195 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 13:29:52.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:52.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:52.255
  E0914 13:29:52.883616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:53.883705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:54.275958 20 delete.go:62] Deleting pod "var-expansion-12a7759a-50a6-4118-a163-a305876d5925" in namespace "var-expansion-9405"
  I0914 13:29:54.286848 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-12a7759a-50a6-4118-a163-a305876d5925" to be fully deleted
  E0914 13:29:54.884144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:55.884241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:56.295891 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9405" for this suite. @ 09/14/24 13:29:56.301
â€¢ [4.078 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/14/24 13:29:56.31
  I0914 13:29:56.310153 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/24 13:29:56.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:56.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:56.334
  E0914 13:29:56.885237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:57.885336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:29:58.369573 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3830" for this suite. @ 09/14/24 13:29:58.373
â€¢ [2.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/14/24 13:29:58.382
  I0914 13:29:58.382426 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:29:58.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:29:58.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:29:58.405
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:29:58.408
  E0914 13:29:58.886294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:29:59.886530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:30:00.43
  I0914 13:30:00.435073 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-c6e0af2a-b8c7-474d-80bc-06fe4d4325c3 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:30:00.447
  I0914 13:30:00.464170 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4959" for this suite. @ 09/14/24 13:30:00.468
â€¢ [2.095 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/14/24 13:30:00.478
  I0914 13:30:00.478075 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename proxy @ 09/14/24 13:30:00.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:00.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:00.502
  I0914 13:30:00.504788 20 proxy.go:387] Creating pod...
  E0914 13:30:00.887338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:01.887604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:02.524338 20 proxy.go:411] Creating service...
  I0914 13:30:02.536515 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=DELETE
  I0914 13:30:02.544766 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:30:02.544799 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=OPTIONS
  I0914 13:30:02.550370 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:30:02.550398 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=PATCH
  I0914 13:30:02.555092 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:30:02.555122 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=POST
  I0914 13:30:02.559586 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:30:02.559606 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=PUT
  I0914 13:30:02.564383 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:30:02.564402 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=DELETE
  I0914 13:30:02.571457 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:30:02.571635 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0914 13:30:02.581189 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:30:02.581559 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=PATCH
  I0914 13:30:02.588672 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:30:02.588699 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=POST
  I0914 13:30:02.596537 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:30:02.596660 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=PUT
  I0914 13:30:02.606376 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:30:02.606400 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=GET
  I0914 13:30:02.611033 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0914 13:30:02.611053 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=GET
  I0914 13:30:02.616721 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0914 13:30:02.616741 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/pods/agnhost/proxy?method=HEAD
  I0914 13:30:02.620839 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0914 13:30:02.620860 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2523/services/e2e-proxy-test-service/proxy?method=HEAD
  I0914 13:30:02.628013 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0914 13:30:02.628153 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2523" for this suite. @ 09/14/24 13:30:02.632
â€¢ [2.162 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/14/24 13:30:02.64
  I0914 13:30:02.640596 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:30:02.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:02.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:02.666
  STEP: creating service multiprotocol-test in namespace services-6395 @ 09/14/24 13:30:02.669
  STEP: creating pod pod1 in namespace services-6395 @ 09/14/24 13:30:02.682
  STEP: Creating pod pod1 in namespace services-6395 @ 09/14/24 13:30:02.682
  E0914 13:30:02.888138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:03.889029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6395 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/14/24 13:30:04.708
  I0914 13:30:04.723175 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-6395 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/14/24 13:30:04.723
  I0914 13:30:04.723224 20 resource.go:361] Creating new exec pod
  E0914 13:30:04.889657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:05.889732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:06.739467 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  I0914 13:30:06.829746 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 13:30:06.829789 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:30:06.829866 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.121 80'
  E0914 13:30:06.890294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:07.890378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:08.891261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:09.892166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:10.892454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:10.922450 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [udp/*] succeeded!\n"
  I0914 13:30:10.922482 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/14/24 13:30:10.922
  I0914 13:30:10.933623 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  I0914 13:30:11.020698 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 13:30:11.020738 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:30:11.020829 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.121 80'
  E0914 13:30:11.893260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:12.893347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:13.893908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:14.894106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:15.114589 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.121 80\n+ echo hostName\nConnection to 10.152.183.121 80 port [udp/*] succeeded!\n"
  I0914 13:30:15.114633 20 builder.go:147] stdout: ""
  I0914 13:30:15.114688 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.121 80'
  E0914 13:30:15.894278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:16.894393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:17.894960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:18.895127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:19.206867 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.121 80\n+ echo hostName\nConnection to 10.152.183.121 80 port [udp/*] succeeded!\n"
  I0914 13:30:19.206917 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/14/24 13:30:19.206
  I0914 13:30:19.221298 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.121 80'
  E0914 13:30:19.895320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:20.895430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:21.896015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:22.896228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:23.334204 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [udp/*] succeeded!\n"
  I0914 13:30:23.334241 20 builder.go:147] stdout: "pod1"
  I0914 13:30:23.334336 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  E0914 13:30:23.896296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:24.896427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:25.426280 20 builder.go:135] rc: 1
  I0914 13:30:25.426345 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.121 80
  + echo hostName
  nc: connect to 10.152.183.121 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:30:25.426406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  E0914 13:30:25.897268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:26.897357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:27.526838 20 builder.go:135] rc: 1
  I0914 13:30:27.526899 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.121 80
  + echo hostName
  nc: connect to 10.152.183.121 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:30:27.526987 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  E0914 13:30:27.897507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:28.897690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:30:29.622249 20 builder.go:135] rc: 1
  I0914 13:30:29.622303 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-6395 exec execpodr7xx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.121 80
  + echo hostName
  nc: connect to 10.152.183.121 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:30:29.622587 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6395" for this suite. @ 09/14/24 13:30:29.628
â€¢ [26.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/14/24 13:30:29.637
  I0914 13:30:29.637144 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 13:30:29.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:29.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:29.662
  STEP: Create a pod @ 09/14/24 13:30:29.666
  E0914 13:30:29.898184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:30.898244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/14/24 13:30:31.685
  I0914 13:30:31.693863 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0914 13:30:31.693962 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2421" for this suite. @ 09/14/24 13:30:31.698
â€¢ [2.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/14/24 13:30:31.706
  I0914 13:30:31.706703 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:30:31.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:31.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:31.729
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/14/24 13:30:31.732
  E0914 13:30:31.898636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:32.898742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:33.899301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:34.900151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:30:35.762
  I0914 13:30:35.766214 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-3f665ca7-9a79-4385-b349-b22a67c15f26 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:30:35.773
  I0914 13:30:35.793319 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8136" for this suite. @ 09/14/24 13:30:35.797
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/14/24 13:30:35.804
  I0914 13:30:35.804620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subpath @ 09/14/24 13:30:35.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:35.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:35.824
  STEP: Setting up data @ 09/14/24 13:30:35.826
  STEP: Creating pod pod-subpath-test-configmap-qtkt @ 09/14/24 13:30:35.837
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/24 13:30:35.837
  E0914 13:30:35.900990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:36.901238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:37.901569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:38.902013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:39.902382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:40.902501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:41.903213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:42.903319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:43.903793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:44.904049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:45.904557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:46.905603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:47.905764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:48.906019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:49.906299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:50.906540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:51.906668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:52.906839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:53.907394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:54.907673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:55.908366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:56.909370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:57.909981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:58.910084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:30:59.910181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:30:59.922
  I0914 13:30:59.926790 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-subpath-test-configmap-qtkt container test-container-subpath-configmap-qtkt: <nil>
  STEP: delete the pod @ 09/14/24 13:30:59.934
  STEP: Deleting pod pod-subpath-test-configmap-qtkt @ 09/14/24 13:30:59.955
  I0914 13:30:59.955064 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-qtkt" in namespace "subpath-5398"
  I0914 13:30:59.959199 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5398" for this suite. @ 09/14/24 13:30:59.963
â€¢ [24.167 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/14/24 13:30:59.972
  I0914 13:30:59.972300 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename containers @ 09/14/24 13:30:59.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:30:59.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:30:59.995
  E0914 13:31:00.910283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:01.910492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:31:02.026712 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-47" for this suite. @ 09/14/24 13:31:02.03
â€¢ [2.069 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/14/24 13:31:02.04
  I0914 13:31:02.040925 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename sched-pred @ 09/14/24 13:31:02.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:31:02.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:31:02.066
  I0914 13:31:02.069363 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:31:02.077750 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I0914 13:31:02.082129 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-33-255 before test
  I0914 13:31:02.087753 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kjgv8 from ingress-nginx-kubernetes-worker started at 2024-09-14 12:10:30 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.087767 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:31:02.087774 20 predicates.go:957] calico-node-tq8px from kube-system started at 2024-09-14 12:15:30 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.087780 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:31:02.087786 20 predicates.go:957] sonobuoy-e2e-job-7d38388d155d451e from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:31:02.087792 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0914 13:31:02.087798 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:31:02.087804 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-shbkb from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:31:02.087809 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:31:02.087814 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:31:02.087820 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-235 before test
  I0914 13:31:02.094443 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-pt48j from ingress-nginx-kubernetes-worker started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094458 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:31:02.094465 20 predicates.go:957] calico-node-44nhq from kube-system started at 2024-09-14 12:15:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094470 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:31:02.094475 20 predicates.go:957] coredns-5b4857d7c8-rxhfh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094479 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0914 13:31:02.094484 20 predicates.go:957] kube-state-metrics-5d7bdccd49-7f8zh from kube-system started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094489 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0914 13:31:02.094494 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wh6sp from kube-system started at 2024-09-14 12:09:09 +0000 UTC (2 container statuses recorded)
  I0914 13:31:02.094498 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0914 13:31:02.094503 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0914 13:31:02.094507 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2ghwq from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094512 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0914 13:31:02.094529 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-n8bk4 from kubernetes-dashboard started at 2024-09-14 12:09:09 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.094533 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0914 13:31:02.094538 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-75c6n from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:31:02.094543 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:31:02.094547 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0914 13:31:02.094552 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-243 before test
  I0914 13:31:02.100242 20 predicates.go:957] client-containers-96310365-ad24-4857-8cd7-0365c303dc35 from containers-47 started at 2024-09-14 13:31:00 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.100259 20 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0914 13:31:02.100266 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5hhfl from ingress-nginx-kubernetes-worker started at 2024-09-14 13:13:08 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.100283 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0914 13:31:02.100289 20 predicates.go:957] calico-node-qxqsq from kube-system started at 2024-09-14 12:14:28 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.100293 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0914 13:31:02.100405 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-14 12:19:02 +0000 UTC (1 container statuses recorded)
  I0914 13:31:02.100443 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:31:02.100483 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-029455a081d14cb3-zcj27 from sonobuoy started at 2024-09-14 12:19:03 +0000 UTC (2 container statuses recorded)
  I0914 13:31:02.100513 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:31:02.100518 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/24 13:31:02.1
  E0914 13:31:02.911475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:03.911599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/24 13:31:04.132
  STEP: Trying to apply a random label on the found node. @ 09/14/24 13:31:04.149
  STEP: verifying the node has the label kubernetes.io/e2e-2fbfeb4a-59a8-41b2-9563-0a4cd2303df8 95 @ 09/14/24 13:31:04.159
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/14/24 13:31:04.163
  E0914 13:31:04.912134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:05.912253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.33.255 on the node which pod4 resides and expect not scheduled @ 09/14/24 13:31:06.183
  E0914 13:31:06.912357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:07.913277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:08.914159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:09.914280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:10.914373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:11.914570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:12.915335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:13.916113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:14.916185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:15.916285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:16.917235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:17.917308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:18.917418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:19.917613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:20.917685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:21.917856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:22.918829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:23.918881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:24.918995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:25.919088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:26.919182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:27.919250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:28.920289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:29.920375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:30.920481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:31.921492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:32.921592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:33.921867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:34.922614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:35.922723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:36.922849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:37.922937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:38.922990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:39.923205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:40.924151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:41.924172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:42.924284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:43.925195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:44.926286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:45.926450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:46.926522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:47.926852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:48.927255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:49.927440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:50.928339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:51.929328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:52.929805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:53.930056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:54.930158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:55.930411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:56.930574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:57.930811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:58.931062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:31:59.931238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:00.931857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:01.932118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:02.932970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:03.933203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:04.933950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:05.934137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:06.935122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:07.935292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:08.936008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:09.936268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:10.937037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:11.937396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:12.937723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:13.937839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:14.937962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:15.938835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:16.939194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:17.939922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:18.940951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:19.941074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:20.941822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:21.942098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:22.942210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:23.942552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:24.942666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:25.942776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:26.942953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:27.943153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:28.943324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:29.943504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:30.944002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:31.944127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:32.944788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:33.945092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:34.946037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:35.946257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:36.947248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:37.947346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:38.948323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:39.949147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:40.949246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:41.949357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:42.950173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:43.950478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:44.951465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:45.951656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:46.952692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:47.952741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:48.953247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:49.953426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:50.953530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:51.953931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:52.954025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:53.954968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:54.955518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:55.955717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:56.956585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:57.957168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:58.957825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:32:59.958767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:00.959812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:01.959960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:02.961004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:03.961063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:04.961692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:05.961961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:06.962508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:07.962655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:08.963376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:09.963592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:10.964177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:11.964231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:12.964600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:13.964700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:14.964870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:15.965279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:16.965610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:17.965823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:18.965913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:19.966117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:20.966243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:21.966509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:22.966702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:23.966804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:24.967713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:25.968797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:26.969663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:27.969862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:28.970534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:29.970697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:30.971173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:31.971408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:32.971638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:33.971969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:34.972129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:35.972574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:36.972676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:37.973220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:38.973880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:39.974125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:40.974555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:41.974738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:42.975350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:43.976224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:44.976471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:45.977233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:46.978079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:47.978362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:48.979142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:49.979186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:50.979228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:51.979766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:52.980702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:53.980997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:54.981104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:55.981278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:56.981681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:57.981827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:58.982019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:33:59.982353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:00.982975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:01.983093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:02.983625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:03.984159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:04.984432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:05.984530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:06.985062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:07.985393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:08.985499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:09.985700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:10.986754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:11.986959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:12.987095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:13.987363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:14.987457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:15.987734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:16.987863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:17.988055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:18.988087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:19.988149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:20.988651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:21.989528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:22.989950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:23.990207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:24.990972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:25.991167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:26.991947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:27.992122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:28.992705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:29.992819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:30.993304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:31.993507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:32.994178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:33.994456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:34.995150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:35.995868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:36.996602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:37.996705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:38.996874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:39.997132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:40.997971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:41.998290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:42.999035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:43.999154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:45.000117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:46.000207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:47.000700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:48.000965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:49.001019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:50.001207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:51.001924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:52.002039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:53.002333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:54.003248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:55.003960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:56.004249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:57.004327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:58.004431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:34:59.005150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:00.005323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:01.006253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:02.006338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:03.006770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:04.006993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:05.007501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:06.007787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:07.008580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:08.009179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:09.009551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:10.009658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:11.009843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:12.010021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:13.010449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:14.010786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:15.011445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:16.011633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:17.011674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:18.011859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:19.011918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:20.012229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:21.012515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:22.013201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:23.013437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:24.013770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:25.013801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:26.013983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:27.014487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:28.014654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:29.014722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:30.014885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:31.015734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:32.016777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:33.017656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:34.017946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:35.018640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:36.018768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:37.019422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:38.020286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:39.020956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:40.021181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:41.021431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:42.021563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:43.021702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:44.022238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:45.022454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:46.022712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:47.022992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:48.023279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:49.024094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:50.024279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:51.025222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:52.025434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:53.025606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:54.025717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:55.025903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:56.026171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:57.026350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:58.026696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:35:59.026968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:00.027384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:01.027511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:02.027739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:03.027872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:04.028121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:05.028459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:06.029607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2fbfeb4a-59a8-41b2-9563-0a4cd2303df8 off the node ip-172-31-33-255 @ 09/14/24 13:36:06.192
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2fbfeb4a-59a8-41b2-9563-0a4cd2303df8 @ 09/14/24 13:36:06.206
  I0914 13:36:06.212325 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2167" for this suite. @ 09/14/24 13:36:06.216
â€¢ [304.184 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/14/24 13:36:06.225
  I0914 13:36:06.225630 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename watch @ 09/14/24 13:36:06.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:06.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:06.249
  STEP: creating a new configmap @ 09/14/24 13:36:06.252
  STEP: modifying the configmap once @ 09/14/24 13:36:06.258
  STEP: modifying the configmap a second time @ 09/14/24 13:36:06.266
  STEP: deleting the configmap @ 09/14/24 13:36:06.275
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/14/24 13:36:06.282
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/14/24 13:36:06.284
  I0914 13:36:06.284288 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8722  c846d8fc-ef5f-4270-9f6b-c41838083263 41421 0 2024-09-14 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:06.284422 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8722  c846d8fc-ef5f-4270-9f6b-c41838083263 41422 0 2024-09-14 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:06.284524 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8722" for this suite. @ 09/14/24 13:36:06.288
â€¢ [0.077 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/14/24 13:36:06.302
  I0914 13:36:06.302506 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:36:06.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:06.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:06.325
  STEP: Creating projection with secret that has name projected-secret-test-map-9aa768ee-dfda-40ee-80f0-f28f6e906e89 @ 09/14/24 13:36:06.329
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:36:06.333
  E0914 13:36:07.029739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:08.030134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:09.031114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:10.031272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:36:10.36
  I0914 13:36:10.365667 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-secrets-d2eb3b2a-4e1e-4bcf-9e30-cb84c6eef08e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 13:36:10.382
  I0914 13:36:10.399929 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-486" for this suite. @ 09/14/24 13:36:10.404
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/14/24 13:36:10.412
  I0914 13:36:10.412688 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:36:10.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:10.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:10.435
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/14/24 13:36:10.437
  E0914 13:36:11.032043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:12.032283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:13.032316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:14.032424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:36:14.464
  I0914 13:36:14.469159 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-f0aae9ae-f5f5-4af1-8b8a-18893f8222f5 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:36:14.476
  I0914 13:36:14.493167 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2512" for this suite. @ 09/14/24 13:36:14.499
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/14/24 13:36:14.507
  I0914 13:36:14.507010 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/24 13:36:14.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:14.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:14.525
  I0914 13:36:14.536114 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9350" for this suite. @ 09/14/24 13:36:14.54
â€¢ [0.041 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/14/24 13:36:14.547
  I0914 13:36:14.547772 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename watch @ 09/14/24 13:36:14.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:14.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:14.568
  STEP: creating a watch on configmaps with a certain label @ 09/14/24 13:36:14.571
  STEP: creating a new configmap @ 09/14/24 13:36:14.573
  STEP: modifying the configmap once @ 09/14/24 13:36:14.577
  STEP: changing the label value of the configmap @ 09/14/24 13:36:14.588
  STEP: Expecting to observe a delete notification for the watched object @ 09/14/24 13:36:14.597
  I0914 13:36:14.597238 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41530 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:14.597437 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41531 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:14.597528 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41532 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/14/24 13:36:14.597
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/14/24 13:36:14.606
  E0914 13:36:15.033118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:16.033188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:17.033295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:18.033418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:19.034316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:20.034580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:21.034699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:22.034823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:23.035011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:24.035320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/14/24 13:36:24.607
  STEP: modifying the configmap a third time @ 09/14/24 13:36:24.62
  STEP: deleting the configmap @ 09/14/24 13:36:24.629
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/14/24 13:36:24.636
  I0914 13:36:24.636979 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41583 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:24.637131 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41584 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:24.637225 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3393  9de31ed6-2c51-4e0f-abb4-de98e4cf7d28 41585 0 2024-09-14 13:36:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-14 13:36:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:36:24.637383 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3393" for this suite. @ 09/14/24 13:36:24.641
â€¢ [10.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/14/24 13:36:24.648
  I0914 13:36:24.648810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename ingress @ 09/14/24 13:36:24.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:24.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:24.673
  STEP: getting /apis @ 09/14/24 13:36:24.676
  STEP: getting /apis/networking.k8s.io @ 09/14/24 13:36:24.679
  STEP: getting /apis/networking.k8s.iov1 @ 09/14/24 13:36:24.68
  STEP: creating @ 09/14/24 13:36:24.681
  STEP: getting @ 09/14/24 13:36:24.7
  STEP: listing @ 09/14/24 13:36:24.704
  STEP: watching @ 09/14/24 13:36:24.712
  I0914 13:36:24.712776 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/14/24 13:36:24.714
  STEP: cluster-wide watching @ 09/14/24 13:36:24.726
  I0914 13:36:24.726306 20 ingress.go:198] starting watch
  STEP: patching @ 09/14/24 13:36:24.732
  STEP: updating @ 09/14/24 13:36:24.74
  I0914 13:36:24.752195 20 ingress.go:221] waiting for watch events with expected annotations
  I0914 13:36:24.752410 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/14/24 13:36:24.752
  STEP: updating /status @ 09/14/24 13:36:24.758
  STEP: get /status @ 09/14/24 13:36:24.777
  STEP: deleting @ 09/14/24 13:36:24.781
  STEP: deleting a collection @ 09/14/24 13:36:24.799
  I0914 13:36:24.818645 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4077" for this suite. @ 09/14/24 13:36:24.823
â€¢ [0.182 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/14/24 13:36:24.83
  I0914 13:36:24.831007 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename proxy @ 09/14/24 13:36:24.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:24.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:24.859
  I0914 13:36:24.862344 20 proxy.go:293] Creating pod...
  E0914 13:36:25.035367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:26.035459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:26.881519 20 proxy.go:317] Creating service...
  I0914 13:36:26.897914 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/DELETE
  I0914 13:36:26.909473 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:36:26.909503 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/GET
  I0914 13:36:26.913769 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0914 13:36:26.913818 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/HEAD
  I0914 13:36:26.919445 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0914 13:36:26.919464 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/OPTIONS
  I0914 13:36:26.924334 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:36:26.924359 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/PATCH
  I0914 13:36:26.928485 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:36:26.928566 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/POST
  I0914 13:36:26.934259 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:36:26.934287 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/pods/agnhost/proxy/some/path/with/PUT
  I0914 13:36:26.939463 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:36:26.939568 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/DELETE
  I0914 13:36:26.945187 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:36:26.945260 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/GET
  I0914 13:36:26.952772 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0914 13:36:26.952794 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/HEAD
  I0914 13:36:26.960490 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0914 13:36:26.960535 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/OPTIONS
  I0914 13:36:26.966699 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:36:26.966733 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/PATCH
  I0914 13:36:26.976857 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:36:26.976892 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/POST
  I0914 13:36:26.987435 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:36:26.987470 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3993/services/test-service/proxy/some/path/with/PUT
  I0914 13:36:26.994027 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:36:26.994227 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3993" for this suite. @ 09/14/24 13:36:26.999
â€¢ [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/14/24 13:36:27.008
  I0914 13:36:27.008197 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename daemonsets @ 09/14/24 13:36:27.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:27.032
  E0914 13:36:27.035497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:27.035
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/14/24 13:36:27.062
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/24 13:36:27.068
  I0914 13:36:27.074493 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:27.074527 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:27.078259 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:36:27.078270 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:36:28.036156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:28.076502 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:28.076552 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:28.080884 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 13:36:28.080913 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:36:29.036197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:29.074588 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:29.074624 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:29.079020 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:36:29.079037 20 fixtures.go:130] Node ip-172-31-33-255 is running 0 daemon pod, expected 1
  E0914 13:36:30.036319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:30.073240 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:30.073286 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:30.078895 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:36:30.078918 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/14/24 13:36:30.082
  I0914 13:36:30.100823 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-2-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:30.100850 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-23-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0914 13:36:30.107130 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:36:30.107148 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/14/24 13:36:30.107
  E0914 13:36:31.036430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/24 13:36:31.117
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4201, will wait for the garbage collector to delete the pods @ 09/14/24 13:36:31.117
  I0914 13:36:31.181044 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.30354ms
  I0914 13:36:31.281319 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.268285ms
  E0914 13:36:32.036943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:33.037870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:33.085911 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:36:33.085941 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:36:33.089126 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41806"},"items":null}

  I0914 13:36:33.093570 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41806"},"items":null}

  I0914 13:36:33.109661 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4201" for this suite. @ 09/14/24 13:36:33.114
â€¢ [6.115 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/14/24 13:36:33.123
  I0914 13:36:33.123122 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:36:33.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:33.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:33.145
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/14/24 13:36:33.148
  I0914 13:36:33.148884 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:36:34.038585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:34.380138 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:36:35.038926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:36.038988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:37.039596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:38.040605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:39.041223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:39.320102 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9683" for this suite. @ 09/14/24 13:36:39.327
â€¢ [6.213 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/14/24 13:36:39.336
  I0914 13:36:39.336519 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:36:39.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:39.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:39.356
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:36:39.359
  E0914 13:36:40.041340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:41.041402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:42.041504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:43.041605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:36:43.387
  I0914 13:36:43.391997 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-9308e0f3-c387-4ce1-a96d-a06f29554ca8 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:36:43.405
  I0914 13:36:43.434245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5194" for this suite. @ 09/14/24 13:36:43.439
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/14/24 13:36:43.449
  I0914 13:36:43.449499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:36:43.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:43.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:43.474
  STEP: creating service nodeport-test with type=NodePort in namespace services-5509 @ 09/14/24 13:36:43.478
  STEP: creating replication controller nodeport-test in namespace services-5509 @ 09/14/24 13:36:43.494
  I0914 13:36:43.506666      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5509, replica count: 2
  E0914 13:36:44.041692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:45.042254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:46.042449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:46.558158      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 13:36:46.558196 20 resource.go:361] Creating new exec pod
  E0914 13:36:47.042609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:48.042729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:49.042974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:49.580811 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0914 13:36:49.675473 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0914 13:36:49.675511 20 builder.go:147] stdout: "nodeport-test-n5vr4"
  I0914 13:36:49.675652 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
  I0914 13:36:49.760303 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.63 80\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 13:36:49.760342 20 builder.go:147] stdout: ""
  E0914 13:36:50.043899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:50.675662 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
  I0914 13:36:50.768781 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.63 80\n+ echo hostName\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n"
  I0914 13:36:50.768820 20 builder.go:147] stdout: ""
  E0914 13:36:51.044149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:51.675693 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
  I0914 13:36:51.778583 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.63 80\n+ echo hostName\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n"
  I0914 13:36:51.778627 20 builder.go:147] stdout: "nodeport-test-n5vr4"
  I0914 13:36:51.778718 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.235 30737'
  I0914 13:36:51.867452 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.65.235 30737\n+ echo hostName\nConnection to 172.31.65.235 30737 port [tcp/*] succeeded!\n"
  I0914 13:36:51.867491 20 builder.go:147] stdout: ""
  E0914 13:36:52.044829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:52.779743 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.235 30737'
  I0914 13:36:52.879026 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.235 30737\nConnection to 172.31.65.235 30737 port [tcp/*] succeeded!\n"
  I0914 13:36:52.879081 20 builder.go:147] stdout: "nodeport-test-jhzt4"
  I0914 13:36:52.879159 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-5509 exec execpodj9thr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.255 30737'
  I0914 13:36:52.979416 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.33.255 30737\n+ echo hostName\nConnection to 172.31.33.255 30737 port [tcp/*] succeeded!\n"
  I0914 13:36:52.979458 20 builder.go:147] stdout: "nodeport-test-n5vr4"
  I0914 13:36:52.979665 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5509" for this suite. @ 09/14/24 13:36:52.984
â€¢ [9.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/14/24 13:36:52.992
  I0914 13:36:52.992301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 13:36:52.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:53.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:53.013
  STEP: Create set of pods @ 09/14/24 13:36:53.016
  I0914 13:36:53.025220 20 pods.go:871] created test-pod-1
  I0914 13:36:53.035455 20 pods.go:871] created test-pod-2
  I0914 13:36:53.045186 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/14/24 13:36:53.045
  E0914 13:36:53.045197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:54.045317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:55.045569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/14/24 13:36:55.091
  I0914 13:36:55.096663 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0914 13:36:56.046234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:36:56.097208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-452" for this suite. @ 09/14/24 13:36:56.102
â€¢ [3.121 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/14/24 13:36:56.113
  I0914 13:36:56.113829 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-runtime @ 09/14/24 13:36:56.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:56.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:56.132
  STEP: create the container @ 09/14/24 13:36:56.136
  W0914 13:36:56.145164      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/14/24 13:36:56.145
  E0914 13:36:57.046467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:58.046674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:36:59.047304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/14/24 13:36:59.17
  STEP: the container should be terminated @ 09/14/24 13:36:59.174
  STEP: the termination message should be set @ 09/14/24 13:36:59.174
  I0914 13:36:59.174655 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/14/24 13:36:59.174
  I0914 13:36:59.199914 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5828" for this suite. @ 09/14/24 13:36:59.204
â€¢ [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/14/24 13:36:59.212
  I0914 13:36:59.212634 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 13:36:59.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:59.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:59.232
  STEP: Creating a ResourceQuota @ 09/14/24 13:36:59.235
  STEP: Getting a ResourceQuota @ 09/14/24 13:36:59.24
  STEP: Updating a ResourceQuota @ 09/14/24 13:36:59.246
  STEP: Verifying a ResourceQuota was modified @ 09/14/24 13:36:59.252
  STEP: Deleting a ResourceQuota @ 09/14/24 13:36:59.257
  STEP: Verifying the deleted ResourceQuota @ 09/14/24 13:36:59.265
  I0914 13:36:59.269298 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2684" for this suite. @ 09/14/24 13:36:59.273
â€¢ [0.068 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/14/24 13:36:59.28
  I0914 13:36:59.280872 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 13:36:59.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:59.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:59.298
  STEP: apply creating a deployment @ 09/14/24 13:36:59.302
  I0914 13:36:59.318817 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8439" for this suite. @ 09/14/24 13:36:59.323
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/14/24 13:36:59.331
  I0914 13:36:59.331813 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename cronjob @ 09/14/24 13:36:59.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:36:59.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:36:59.349
  STEP: Creating a suspended cronjob @ 09/14/24 13:36:59.352
  STEP: Ensuring no jobs are scheduled @ 09/14/24 13:36:59.357
  E0914 13:37:00.047375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:01.047613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:02.047708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:03.047816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:04.048760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:05.048838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:06.049412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:07.049891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:08.050617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:09.050901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:10.051602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:11.051698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:12.052115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:13.052225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:14.053236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:15.053349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:16.053433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:17.053618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:18.054156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:19.054381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:20.054544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:21.054661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:22.055394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:23.055596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:24.056532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:25.057243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:26.057403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:27.057562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:28.057681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:29.057785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:30.058683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:31.058977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:32.059259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:33.059364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:34.059639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:35.059913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:36.060028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:37.060123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:38.060216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:39.061190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:40.061962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:41.062213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:42.062942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:43.063143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:44.063275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:45.063478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:46.063804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:47.064116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:48.065035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:49.065214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:50.065898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:51.066049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:52.067188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:53.067367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:54.067565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:55.067849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:56.068040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:57.068246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:58.068934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:37:59.069110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:00.069198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:01.069303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:02.069398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:03.070190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:04.071165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:05.071354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:06.071442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:07.071721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:08.072107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:09.072228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:10.072326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:11.073250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:12.073351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:13.073564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:14.073723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:15.073932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:16.074393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:17.074587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:18.074882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:19.075183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:20.075855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:21.076077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:22.077028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:23.077158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:24.077796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:25.078017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:26.078143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:27.078238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:28.079204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:29.079272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:30.079325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:31.079520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:32.079606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:33.080502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:34.081191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:35.081286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:36.081397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:37.081484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:38.081576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:39.081681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:40.081807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:41.082012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:42.082731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:43.083006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:44.083463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:45.083648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:46.084447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:47.085258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:48.085615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:49.086004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:50.086139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:51.086340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:52.086418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:53.086575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:54.087489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:55.087661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:56.088278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:57.088442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:58.089318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:38:59.089661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:00.089757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:01.089996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:02.090399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:03.090581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:04.090721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:05.090938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:06.091470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:07.091623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:08.092665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:09.092762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:10.093285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:11.093561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:12.094377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:13.094514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:14.094695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:15.095030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:16.096166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:17.096247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:18.097131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:19.097379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:20.097613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:21.097810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:22.098444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:23.098551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:24.099016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:25.099113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:26.099144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:27.099336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:28.099974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:29.100143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:30.100872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:31.101242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:32.101767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:33.101936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:34.102436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:35.102681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:36.103713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:37.103937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:38.104839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:39.105072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:40.105144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:41.105245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:42.105365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:43.105562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:44.106101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:45.106279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:46.106497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:47.106700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:48.106728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:49.107053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:50.107811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:51.108080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:52.108131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:53.108368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:54.108481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:55.109197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:56.109633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:57.109810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:58.110391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:39:59.110665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:00.111487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:01.111604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:02.111978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:03.112114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:04.112487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:05.113190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:06.113768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:07.114025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:08.114967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:09.115070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:10.115544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:11.115795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:12.115894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:13.116154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:14.117129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:15.117238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:16.117370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:17.117481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:18.117832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:19.118146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:20.119001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:21.119724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:22.119760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:23.119950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:24.120533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:25.120632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:26.121578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:27.121830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:28.122873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:29.123297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:30.124271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:31.125186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:32.126101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:33.126350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:34.127058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:35.127223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:36.128211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:37.129190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:38.129743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:39.129830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:40.130567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:41.130998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:42.131153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:43.131340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:44.131424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:45.131616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:46.131965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:47.132180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:48.132935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:49.132970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:50.133408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:51.133618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:52.134374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:53.134575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:54.135566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:55.135674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:56.136295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:57.136440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:58.136962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:40:59.137198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:00.137342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:01.137539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:02.137708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:03.137947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:04.138174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:05.138341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:06.139087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:07.139338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:08.139668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:09.139775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:10.140333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:11.141385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:12.142188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:13.142375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:14.142387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:15.142559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:16.143082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:17.143872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:18.144016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:19.145139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:20.145339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:21.145434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:22.145629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:23.146001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:24.146256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:25.146593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:26.146746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:27.146941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:28.147174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:29.147295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:30.147441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:31.147569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:32.147792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:33.148599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:34.148681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:35.148777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:36.148844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:37.148960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:38.149055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:39.149886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:40.150298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:41.150410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:42.150687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:43.150813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:44.151066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:45.151226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:46.151374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:47.151599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:48.151726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:49.151821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:50.152053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:51.152155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:52.152180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:53.152663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:54.152781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:55.152877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:56.153724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:57.153865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:58.153970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:41:59.154404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/14/24 13:41:59.358
  STEP: Removing cronjob @ 09/14/24 13:41:59.364
  I0914 13:41:59.373693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4156" for this suite. @ 09/14/24 13:41:59.378
â€¢ [300.055 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/14/24 13:41:59.386
  I0914 13:41:59.386806 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:41:59.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:41:59.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:41:59.407
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-120d8b15-4de1-4249-8509-98bd8d9ea464 @ 09/14/24 13:41:59.414
  STEP: Creating the pod @ 09/14/24 13:41:59.419
  E0914 13:42:00.154547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:01.154870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-120d8b15-4de1-4249-8509-98bd8d9ea464 @ 09/14/24 13:42:01.465
  STEP: waiting to observe update in volume @ 09/14/24 13:42:01.472
  E0914 13:42:02.155846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:03.155962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:04.156186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:05.156312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:06.156390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:07.157233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:08.158216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:09.158394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:10.159322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:11.159421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:12.159550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:13.159668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:14.159790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:15.159881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:16.160123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:17.160236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:18.161157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:19.161256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:20.161357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:21.161470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:22.161583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:23.161788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:24.162779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:25.162884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:26.163808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:27.164064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:28.164186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:29.164182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:30.165118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:31.165198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:32.165821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:33.166040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:34.166166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:35.166368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:36.166474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:37.166586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:38.166715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:39.167046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:40.167333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:41.167323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:42.168031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:43.168196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:44.169021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:45.169110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:46.169319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:47.169417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:48.169538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:49.169748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:50.169846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:51.170044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:52.170938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:53.171059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:54.171733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:55.171871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:56.171932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:57.172198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:58.172278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:42:59.173260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:00.173414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:01.173550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:02.174504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:03.174595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:04.175202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:05.175410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:05.814604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3389" for this suite. @ 09/14/24 13:43:05.819
â€¢ [66.441 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/14/24 13:43:05.828
  I0914 13:43:05.828518 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:43:05.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:05.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:05.849
  STEP: Setting up server cert @ 09/14/24 13:43:05.875
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:43:06.153
  STEP: Deploying the webhook pod @ 09/14/24 13:43:06.164
  E0914 13:43:06.176260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/14/24 13:43:06.177
  I0914 13:43:06.192651 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:43:07.176418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:08.176529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:43:08.208
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:43:08.221
  E0914 13:43:09.176903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:09.222214 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/14/24 13:43:09.233
  STEP: create a pod that should be denied by the webhook @ 09/14/24 13:43:09.248
  STEP: create a pod that causes the webhook to hang @ 09/14/24 13:43:09.256
  E0914 13:43:10.177946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:11.177942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:12.178114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:13.178160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:14.178213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:15.178297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:16.178376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:17.178593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:18.179197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:19.179443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/14/24 13:43:19.265
  STEP: create a configmap that should be admitted by the webhook @ 09/14/24 13:43:19.273
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/14/24 13:43:19.284
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/14/24 13:43:19.294
  STEP: create a namespace that bypass the webhook @ 09/14/24 13:43:19.301
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/14/24 13:43:19.316
  I0914 13:43:19.383791 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8401" for this suite. @ 09/14/24 13:43:19.389
  STEP: Destroying namespace "webhook-markers-199" for this suite. @ 09/14/24 13:43:19.396
  STEP: Destroying namespace "exempted-namespace-9797" for this suite. @ 09/14/24 13:43:19.404
â€¢ [13.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/14/24 13:43:19.412
  I0914 13:43:19.412604 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:43:19.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:19.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:19.43
  STEP: Setting up server cert @ 09/14/24 13:43:19.453
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:43:19.644
  STEP: Deploying the webhook pod @ 09/14/24 13:43:19.65
  STEP: Wait for the deployment to be ready @ 09/14/24 13:43:19.665
  I0914 13:43:19.680871 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:43:20.179632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:21.179637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:43:21.695
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:43:21.707
  E0914 13:43:22.180179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:22.708879 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/14/24 13:43:22.719
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/24 13:43:22.733
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/14/24 13:43:22.739
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/24 13:43:22.752
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/14/24 13:43:22.765
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/24 13:43:22.772
  I0914 13:43:22.829174 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-904" for this suite. @ 09/14/24 13:43:22.833
  STEP: Destroying namespace "webhook-markers-5440" for this suite. @ 09/14/24 13:43:22.843
â€¢ [3.440 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/14/24 13:43:22.852
  I0914 13:43:22.852696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:43:22.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:22.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:22.871
  I0914 13:43:22.874516 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:43:23.180708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/24 13:43:24.098
  I0914 13:43:24.099042 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 create -f -'
  I0914 13:43:24.163515 20 builder.go:146] stderr: ""
  I0914 13:43:24.163549 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2927-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0914 13:43:24.163585 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-2927-crds test-cr'
  E0914 13:43:24.181076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:24.212936 20 builder.go:146] stderr: ""
  I0914 13:43:24.212984 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2927-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0914 13:43:24.213031 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 apply -f -'
  I0914 13:43:24.278830 20 builder.go:146] stderr: ""
  I0914 13:43:24.278863 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2927-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0914 13:43:24.278940 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7069 --namespace=crd-publish-openapi-7069 delete e2e-test-crd-publish-openapi-2927-crds test-cr'
  I0914 13:43:24.328744 20 builder.go:146] stderr: ""
  I0914 13:43:24.328776 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2927-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/14/24 13:43:24.328
  I0914 13:43:24.328934 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7069 explain e2e-test-crd-publish-openapi-2927-crds'
  I0914 13:43:24.368886 20 builder.go:146] stderr: ""
  I0914 13:43:24.368939 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2927-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0914 13:43:25.181145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:25.569108 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7069" for this suite. @ 09/14/24 13:43:25.578
â€¢ [2.737 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/14/24 13:43:25.589
  I0914 13:43:25.589964 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 13:43:25.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:25.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:25.608
  STEP: Creating a test headless service @ 09/14/24 13:43:25.612
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-470.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-470.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/14/24 13:43:25.617
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-470.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-470.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/14/24 13:43:25.617
  STEP: creating a pod to probe DNS @ 09/14/24 13:43:25.617
  STEP: submitting the pod to kubernetes @ 09/14/24 13:43:25.617
  E0914 13:43:26.181862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:27.181956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:43:27.642
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:43:27.646
  I0914 13:43:27.670681 20 dns_common.go:527] DNS probes using dns-470/dns-test-027d0327-9455-46f5-8add-ffa52f90f9f9 succeeded

  STEP: deleting the pod @ 09/14/24 13:43:27.67
  STEP: deleting the test headless service @ 09/14/24 13:43:27.69
  I0914 13:43:27.713496 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-470" for this suite. @ 09/14/24 13:43:27.719
â€¢ [2.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/14/24 13:43:27.73
  I0914 13:43:27.730741 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 13:43:27.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:27.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:27.763
  STEP: Creating a ResourceQuota with best effort scope @ 09/14/24 13:43:27.767
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/24 13:43:27.779
  E0914 13:43:28.182577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:29.182875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/14/24 13:43:29.786
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/24 13:43:29.792
  E0914 13:43:30.183752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:31.184148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/14/24 13:43:31.797
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/14/24 13:43:31.815
  E0914 13:43:32.184237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:33.184341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/14/24 13:43:33.821
  E0914 13:43:34.185220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:35.185337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/14/24 13:43:35.827
  STEP: Ensuring resource quota status released the pod usage @ 09/14/24 13:43:35.847
  E0914 13:43:36.186054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:37.186204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/14/24 13:43:37.853
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/14/24 13:43:37.864
  E0914 13:43:38.186354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:39.186499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/14/24 13:43:39.869
  E0914 13:43:40.187471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:41.187765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/14/24 13:43:41.876
  STEP: Ensuring resource quota status released the pod usage @ 09/14/24 13:43:41.898
  E0914 13:43:42.188643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:43.188718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:43:43.904664 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7578" for this suite. @ 09/14/24 13:43:43.909
â€¢ [16.188 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/14/24 13:43:43.918
  I0914 13:43:43.918824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 13:43:43.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:43.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:43.939
  STEP: Creating a pod to test substitution in container's args @ 09/14/24 13:43:43.942
  E0914 13:43:44.189269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:45.190044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:46.190587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:47.190732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:43:47.968
  I0914 13:43:47.973159 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod var-expansion-9453a69c-f72f-4a6e-956f-0f72f9048178 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 13:43:47.981
  I0914 13:43:48.004325 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5569" for this suite. @ 09/14/24 13:43:48.009
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/14/24 13:43:48.017
  I0914 13:43:48.017776 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 13:43:48.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:43:48.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:43:48.035
  E0914 13:43:48.190968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:49.191647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:50.192636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:51.193438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:52.193927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:53.194456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:54.194539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:55.195350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:56.195527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:57.196255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:58.196354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:43:59.197006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:00.197850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:01.198759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:02.199793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:03.199820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:04.200465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:05.201472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:06.201838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:07.202130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:08.202577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:09.203507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:10.204160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:11.204282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:12.204491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:13.204510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:14.205213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:15.205326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:16.205425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:17.205519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:18.205609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:19.205822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:20.206073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:21.206175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:22.206370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:23.207349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:24.208294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:25.208715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:26.208912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:27.209774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:28.209866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:29.210255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:30.210351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:31.210446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:32.210582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:33.210744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:34.210944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:35.211059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:36.211164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:37.211270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:38.211352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:39.212371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:40.212464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:41.212569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:42.212671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:43.212764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:44.213252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:45.213353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:46.213464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:47.213563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:44:48.101872 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7248" for this suite. @ 09/14/24 13:44:48.106
â€¢ [60.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/14/24 13:44:48.116
  I0914 13:44:48.116271 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:44:48.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:44:48.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:44:48.147
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/14/24 13:44:48.152
  E0914 13:44:48.213649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:49.214064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:50.214554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:51.214778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:44:52.184
  I0914 13:44:52.189242 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-c4d0c40c-7ba7-42bc-8ec6-2d0fc2221943 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:44:52.198
  E0914 13:44:52.215247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:44:52.221313 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2949" for this suite. @ 09/14/24 13:44:52.226
â€¢ [4.118 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/14/24 13:44:52.234
  I0914 13:44:52.234773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename cronjob @ 09/14/24 13:44:52.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:44:52.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:44:52.255
  STEP: Creating a ReplaceConcurrent cronjob @ 09/14/24 13:44:52.258
  STEP: Ensuring a job is scheduled @ 09/14/24 13:44:52.266
  E0914 13:44:53.215399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:54.216444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:55.216541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:56.216644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:57.216742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:58.216831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:44:59.216943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:00.217297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/14/24 13:45:00.272
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/14/24 13:45:00.276
  STEP: Ensuring the job is replaced with a new one @ 09/14/24 13:45:00.281
  E0914 13:45:01.218274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:02.218364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:03.218556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:04.218704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:05.219550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:06.219693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:07.220456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:08.220531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:09.220645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:10.220749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:11.221281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:12.221373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:13.221482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:14.221584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:15.221792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:16.221902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:17.222050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:18.222239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:19.222389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:20.222545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:21.222770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:22.222939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:23.223710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:24.224060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:25.224224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:26.224322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:27.224423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:28.224705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:29.225407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:30.225527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:31.226264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:32.226478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:33.227589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:34.227915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:35.228065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:36.228129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:37.228512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:38.228601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:39.229578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:40.229745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:41.229831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:42.229932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:43.230114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:44.230388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:45.231124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:46.231325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:47.231639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:48.231839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:49.231870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:50.232374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:51.233261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:52.233526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:53.233608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:54.233893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:55.234723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:56.234947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:57.235186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:58.235487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:45:59.236399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:00.236502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/14/24 13:46:00.286
  I0914 13:46:00.295459 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4080" for this suite. @ 09/14/24 13:46:00.3
â€¢ [68.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/14/24 13:46:00.309
  I0914 13:46:00.309238 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/24 13:46:00.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:46:00.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:46:00.339
  STEP: getting /apis @ 09/14/24 13:46:00.342
  STEP: getting /apis/node.k8s.io @ 09/14/24 13:46:00.346
  STEP: getting /apis/node.k8s.io/v1 @ 09/14/24 13:46:00.347
  STEP: creating @ 09/14/24 13:46:00.348
  STEP: watching @ 09/14/24 13:46:00.369
  I0914 13:46:00.369655 20 runtimeclass.go:275] starting watch
  STEP: getting @ 09/14/24 13:46:00.377
  STEP: listing @ 09/14/24 13:46:00.38
  STEP: patching @ 09/14/24 13:46:00.385
  STEP: updating @ 09/14/24 13:46:00.392
  I0914 13:46:00.398501 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/14/24 13:46:00.398
  STEP: deleting a collection @ 09/14/24 13:46:00.414
  I0914 13:46:00.434609 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8955" for this suite. @ 09/14/24 13:46:00.439
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/14/24 13:46:00.447
  I0914 13:46:00.447892 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 13:46:00.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:46:00.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:46:00.468
  STEP: Creating the pod @ 09/14/24 13:46:00.471
  E0914 13:46:01.236628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:02.237117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:03.027181 20 pod_client.go:173] Successfully updated pod "annotationupdatec35dfded-5442-4554-9c43-fcef261bbdd3"
  E0914 13:46:03.237424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:04.237594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:05.046658 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2310" for this suite. @ 09/14/24 13:46:05.051
â€¢ [4.613 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/14/24 13:46:05.06
  I0914 13:46:05.060878 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/24 13:46:05.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:46:05.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:46:05.08
  E0914 13:46:05.237783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:06.237881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:07.127072 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9815" for this suite. @ 09/14/24 13:46:07.131
â€¢ [2.087 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/14/24 13:46:07.147
  I0914 13:46:07.147401 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 13:46:07.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:46:07.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:46:07.166
  STEP: Creating pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359 @ 09/14/24 13:46:07.169
  E0914 13:46:07.238739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:08.238978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 13:46:09.189
  I0914 13:46:09.193633 20 container_probe.go:1749] Initial restart count of pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 is 0
  I0914 13:46:09.198476 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:09.239690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:10.239786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:11.204602 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:11.240760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:12.241185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:13.210531 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:13.241697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:14.241757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:15.216792 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:15.241897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:16.242004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:17.223051 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:17.242232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:18.242312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:19.229459 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:19.242504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:20.243100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:21.235116 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:21.243137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:22.243374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:23.241375 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:23.243457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:24.243618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:25.243717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:25.246912 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:26.243947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:27.244146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:27.253524 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:28.244253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:29.245223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:29.260680 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:30.245344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:31.245431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:31.266852 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:32.246076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:33.246206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:33.273282 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:34.246408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:35.246604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:35.279802 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:36.246821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:37.246941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:37.286010 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:38.247018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:39.247119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:39.292788 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:40.247532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:41.247851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:41.298315 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:42.249824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:43.249939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:43.304720 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:44.250248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:45.250349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:45.310693 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:46.250724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:47.250933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:47.316888 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:48.251487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:49.251600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:49.323555 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:50.252198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:51.252292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:51.330153 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:52.253089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:53.253305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:53.336154 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:54.254314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:55.254499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:55.342913 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:56.254878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:57.255017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:57.349046 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:46:58.255207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:46:59.255300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:46:59.354795 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:00.255758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:01.256011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:01.360896 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:02.256270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:03.256305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:03.367313 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:04.257354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:05.257448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:05.373830 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:06.257557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:07.258358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:07.380653 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:08.259397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:09.260375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:09.387192 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:10.261086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:11.261269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:11.393272 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:12.262276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:13.262491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:13.399808 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:14.262630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:15.262772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:15.405391 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:16.263483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:17.263656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:17.412082 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:18.264018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:19.264203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:19.418438 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:20.265271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:21.265374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:21.424605 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:22.265484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:23.265699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:23.430644 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:24.266673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:25.266780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:25.437420 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:26.266891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:27.267046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:27.444050 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:28.267391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:29.267617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:29.451360 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:30.268123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:31.268210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:31.457642 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:32.268245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:33.268417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:33.463578 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:34.269193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:35.269364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:35.469406 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:36.269518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:37.269706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:37.475806 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:38.270726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:39.271497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:39.481786 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:40.271661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:41.272633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:41.487935 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:42.273252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:43.273429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:43.494880 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:44.273838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:45.274053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:45.501128 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:46.275046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:47.275159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:47.508440 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:48.275301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:49.275543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:49.514753 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:50.275596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:51.275794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:51.520440 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:52.276375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:53.277307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:53.526888 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:54.277846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:55.278045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:55.533861 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:56.278641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:57.278734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:57.539933 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:47:58.279579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:47:59.279852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:47:59.545635 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:00.280107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:01.280217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:01.552203 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:02.281034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:03.281212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:03.558618 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:04.281505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:05.281682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:05.565201 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:06.282544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:07.282719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:07.571517 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:08.283334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:09.283452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:09.579925 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:10.283699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:11.283893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:11.585126 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:12.283966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:13.284125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:13.590949 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:14.284240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:15.285241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:15.598173 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:16.285931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:17.286138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:17.604173 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:18.287014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:19.287388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:19.610528 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:20.288381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:21.288549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:21.616319 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:22.288727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:23.288809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:23.622334 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:24.288927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:25.288992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:25.627811 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:26.290480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:27.290604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:27.633118 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:28.290965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:29.291059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:29.638977 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:30.291699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:31.291860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:31.645312 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:32.292054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:33.292264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:33.652156 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:34.292361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:35.292457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:35.658310 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:36.292971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:37.293216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:37.663953 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:38.293305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:39.293430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:39.669962 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:40.293510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:41.293627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:41.675513 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:42.293712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:43.293949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:43.682519 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:44.294318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:45.294543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:45.689052 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:46.295346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:47.295553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:47.695927 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:48.295622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:49.295884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:49.701398 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:50.295976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:51.296120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:51.707370 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:52.297024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:53.297137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:53.713647 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:54.297230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:55.297473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:55.719881 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:56.297527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:57.297693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:57.726011 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:48:58.298729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:48:59.299756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:48:59.731851 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:00.300162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:01.301179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:01.738302 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:02.301983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:03.302411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:03.744762 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:04.302518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:05.302666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:05.750828 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:06.303523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:07.303671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:07.757485 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:08.304128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:09.304231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:09.764032 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:10.304285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:11.305228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:11.770638 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:12.305265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:13.305544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:13.776998 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:14.305598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:15.305785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:15.782476 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:16.306073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:17.306308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:17.788273 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:18.307080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:19.307382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:19.794651 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:20.308396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:21.308507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:21.800344 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:22.308871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:23.308969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:23.806188 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:24.309760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:25.309842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:25.812831 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:26.310401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:27.310606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:27.818344 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:28.310864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:29.311384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:29.823826 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:30.311409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:31.311560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:31.829942 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:32.312524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:33.312617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:33.836648 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:34.313175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:35.313275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:35.842994 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:36.313548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:37.313727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:37.849504 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:38.313977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:39.314265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:39.855789 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:40.314455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:41.314709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:41.862060 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:42.315678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:43.315796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:43.868424 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:44.315888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:45.316095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:45.874149 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:46.316762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:47.316861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:47.880788 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:48.317617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:49.317706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:49.887442 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:50.317938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:51.318044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:51.894327 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:52.318921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:53.319019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:53.900753 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:54.319124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:55.319283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:55.907242 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:56.319371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:57.319599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:57.912911 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:49:58.320381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:49:59.320474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:49:59.918073 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:50:00.321180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:01.321406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:01.925528 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:50:02.322052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:03.322163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:03.931287 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:50:04.322747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:05.322886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:05.937174 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:50:06.323719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:07.323905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:07.943724 20 container_probe.go:1759] Get pod busybox-1e3bc827-8bd9-467f-87d5-771cbe6fa237 in namespace container-probe-7359
  E0914 13:50:08.324110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:09.325205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/14/24 13:50:09.944
  I0914 13:50:09.962614 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7359" for this suite. @ 09/14/24 13:50:09.968
â€¢ [242.829 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/14/24 13:50:09.976
  I0914 13:50:09.976915 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename security-context-test @ 09/14/24 13:50:09.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:09.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:09.999
  E0914 13:50:10.325713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:11.325814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:12.325976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:13.326112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:14.047839 20 security_context.go:538] Got logs for pod "busybox-privileged-false-bd0d5504-d6da-460c-9ef0-bb582e9dcf2a": "ip: RTNETLINK answers: Operation not permitted\n"
  I0914 13:50:14.047960 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7971" for this suite. @ 09/14/24 13:50:14.053
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/14/24 13:50:14.062
  I0914 13:50:14.062249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename pods @ 09/14/24 13:50:14.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:14.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:14.081
  I0914 13:50:14.085197 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: creating the pod @ 09/14/24 13:50:14.085
  STEP: submitting the pod to kubernetes @ 09/14/24 13:50:14.085
  E0914 13:50:14.326941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:15.327043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:16.161702 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6722" for this suite. @ 09/14/24 13:50:16.166
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/14/24 13:50:16.179
  I0914 13:50:16.179321 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 13:50:16.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:16.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:16.198
  E0914 13:50:16.327955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:17.328227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:18.222367 20 delete.go:62] Deleting pod "var-expansion-1e11b4d1-65a1-497c-ae27-4ecc7dca712b" in namespace "var-expansion-6050"
  I0914 13:50:18.232457 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-1e11b4d1-65a1-497c-ae27-4ecc7dca712b" to be fully deleted
  E0914 13:50:18.329096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:19.329168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:20.242831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6050" for this suite. @ 09/14/24 13:50:20.248
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/14/24 13:50:20.257
  I0914 13:50:20.257152 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:50:20.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:20.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:20.276
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:50:20.279
  E0914 13:50:20.329724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:21.329878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:50:22.302
  I0914 13:50:22.306664 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod downwardapi-volume-ac7af267-6018-4d2c-9c7b-9f758de575c9 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:50:22.319
  E0914 13:50:22.330652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:22.339974 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7434" for this suite. @ 09/14/24 13:50:22.344
â€¢ [2.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/14/24 13:50:22.352
  I0914 13:50:22.352136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:50:22.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:22.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:22.372
  STEP: Setting up server cert @ 09/14/24 13:50:22.396
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:50:22.587
  STEP: Deploying the webhook pod @ 09/14/24 13:50:22.598
  STEP: Wait for the deployment to be ready @ 09/14/24 13:50:22.613
  I0914 13:50:22.622553 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0914 13:50:23.330771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:24.331178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:50:24.638
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:50:24.652
  E0914 13:50:25.331318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:25.652812 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/14/24 13:50:25.662
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/14/24 13:50:25.681
  STEP: Creating a configMap that should not be mutated @ 09/14/24 13:50:25.689
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/14/24 13:50:25.703
  STEP: Creating a configMap that should be mutated @ 09/14/24 13:50:25.711
  I0914 13:50:25.785295 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8109" for this suite. @ 09/14/24 13:50:25.789
  STEP: Destroying namespace "webhook-markers-8827" for this suite. @ 09/14/24 13:50:25.799
â€¢ [3.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/14/24 13:50:25.807
  I0914 13:50:25.807923 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 13:50:25.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:25.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:25.824
  STEP: creating service multi-endpoint-test in namespace services-4969 @ 09/14/24 13:50:25.873
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4969 to expose endpoints map[] @ 09/14/24 13:50:25.886
  I0914 13:50:25.890931 20 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0914 13:50:26.331419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:26.902868 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4969 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4969 @ 09/14/24 13:50:26.903
  E0914 13:50:27.331577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:28.331840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4969 to expose endpoints map[pod1:[100]] @ 09/14/24 13:50:28.93
  I0914 13:50:28.947348 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4969 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4969 @ 09/14/24 13:50:28.947
  E0914 13:50:29.332572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:30.332667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4969 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/14/24 13:50:30.97
  I0914 13:50:30.999832 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4969 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/14/24 13:50:30.999
  I0914 13:50:30.999886 20 resource.go:361] Creating new exec pod
  E0914 13:50:31.332769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:32.333224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:33.333439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:34.016135 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4969 exec execpodc42t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0914 13:50:34.115319 20 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0914 13:50:34.115359 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:50:34.115444 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4969 exec execpodc42t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  I0914 13:50:34.197976 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.30 80\n+ echo hostName\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  I0914 13:50:34.198022 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:50:34.198101 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4969 exec execpodc42t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0914 13:50:34.285959 20 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0914 13:50:34.286006 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:50:34.286074 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4969 exec execpodc42t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 81'
  E0914 13:50:34.333566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:50:34.376986 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.30 81\nConnection to 10.152.183.30 81 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0914 13:50:34.377025 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4969 @ 09/14/24 13:50:34.377
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4969 to expose endpoints map[pod2:[101]] @ 09/14/24 13:50:34.4
  I0914 13:50:34.416122 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4969 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4969 @ 09/14/24 13:50:34.416
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4969 to expose endpoints map[] @ 09/14/24 13:50:34.437
  I0914 13:50:34.448187 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4969 exposes endpoints map[]
  I0914 13:50:34.466799 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4969" for this suite. @ 09/14/24 13:50:34.471
â€¢ [8.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/14/24 13:50:34.48
  I0914 13:50:34.480710 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename subpath @ 09/14/24 13:50:34.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:34.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:34.553
  STEP: Setting up data @ 09/14/24 13:50:34.556
  STEP: Creating pod pod-subpath-test-configmap-v6h6 @ 09/14/24 13:50:34.567
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/24 13:50:34.567
  E0914 13:50:35.333593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:36.333683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:37.333882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:38.333997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:39.334934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:40.335044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:41.335150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:42.335254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:43.335325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:44.335562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:45.335733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:46.335884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:47.336037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:48.336199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:49.336302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:50.336406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:51.337224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:52.337314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:53.337925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:54.338089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:55.338195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:56.338389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:57.338482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:50:58.338575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:50:58.657
  I0914 13:50:58.662315 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-subpath-test-configmap-v6h6 container test-container-subpath-configmap-v6h6: <nil>
  STEP: delete the pod @ 09/14/24 13:50:58.67
  STEP: Deleting pod pod-subpath-test-configmap-v6h6 @ 09/14/24 13:50:58.692
  I0914 13:50:58.692299 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-v6h6" in namespace "subpath-4917"
  I0914 13:50:58.696598 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4917" for this suite. @ 09/14/24 13:50:58.701
â€¢ [24.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/14/24 13:50:58.711
  I0914 13:50:58.711440 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename gc @ 09/14/24 13:50:58.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:58.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:58.732
  STEP: create the deployment @ 09/14/24 13:50:58.736
  W0914 13:50:58.742465      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/14/24 13:50:58.742
  STEP: delete the deployment @ 09/14/24 13:50:58.751
  STEP: wait for all rs to be garbage collected @ 09/14/24 13:50:58.762
  STEP: expected 0 rs, got 1 rs @ 09/14/24 13:50:58.775
  STEP: expected 0 pods, got 2 pods @ 09/14/24 13:50:58.782
  STEP: Gathering metrics @ 09/14/24 13:50:59.275
  W0914 13:50:59.282123      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:50:59.282150 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:50:59.282320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3240" for this suite. @ 09/14/24 13:50:59.286
â€¢ [0.585 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/14/24 13:50:59.296
  I0914 13:50:59.296632 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/24 13:50:59.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:50:59.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:50:59.315
  I0914 13:50:59.318768 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:50:59.339330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:00.340218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/24 13:51:00.611
  I0914 13:51:00.611781 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7912 --namespace=crd-publish-openapi-7912 create -f -'
  E0914 13:51:01.341006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:02.341075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:02.720074 20 builder.go:146] stderr: ""
  I0914 13:51:02.720121 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-421-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0914 13:51:02.720165 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7912 --namespace=crd-publish-openapi-7912 delete e2e-test-crd-publish-openapi-421-crds test-cr'
  I0914 13:51:02.796288 20 builder.go:146] stderr: ""
  I0914 13:51:02.796335 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-421-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0914 13:51:02.796378 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7912 --namespace=crd-publish-openapi-7912 apply -f -'
  I0914 13:51:02.884736 20 builder.go:146] stderr: ""
  I0914 13:51:02.884789 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-421-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0914 13:51:02.884833 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7912 --namespace=crd-publish-openapi-7912 delete e2e-test-crd-publish-openapi-421-crds test-cr'
  I0914 13:51:02.961715 20 builder.go:146] stderr: ""
  I0914 13:51:02.961762 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-421-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/14/24 13:51:02.961
  I0914 13:51:02.961840 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=crd-publish-openapi-7912 explain e2e-test-crd-publish-openapi-421-crds'
  I0914 13:51:03.028428 20 builder.go:146] stderr: ""
  I0914 13:51:03.028486 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-421-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0914 13:51:03.341809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:04.314500 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7912" for this suite. @ 09/14/24 13:51:04.323
â€¢ [5.036 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/14/24 13:51:04.332
  I0914 13:51:04.332807 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/24 13:51:04.333
  E0914 13:51:04.342461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:04.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:04.351
  I0914 13:51:04.355266 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:51:05.343438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:06.343525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:07.343948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:07.439192 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4950" for this suite. @ 09/14/24 13:51:07.445
â€¢ [3.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/14/24 13:51:07.455
  I0914 13:51:07.455019 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 13:51:07.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:07.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:07.473
  STEP: creating a replication controller @ 09/14/24 13:51:07.476
  I0914 13:51:07.476468 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 create -f -'
  I0914 13:51:07.557893 20 builder.go:146] stderr: ""
  I0914 13:51:07.557938 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/24 13:51:07.557
  I0914 13:51:07.558012 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:51:07.605955 20 builder.go:146] stderr: ""
  I0914 13:51:07.605989 20 builder.go:147] stdout: "update-demo-nautilus-8plq8 update-demo-nautilus-ghm2x "
  I0914 13:51:07.606025 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:51:07.646156 20 builder.go:146] stderr: ""
  I0914 13:51:07.646190 20 builder.go:147] stdout: ""
  I0914 13:51:07.646204 20 kubectl.go:2502] update-demo-nautilus-8plq8 is created but not running
  E0914 13:51:08.344998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:09.345599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:10.345676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:11.345882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:12.346047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:12.646587 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:51:12.690767 20 builder.go:146] stderr: ""
  I0914 13:51:12.690824 20 builder.go:147] stdout: "update-demo-nautilus-8plq8 update-demo-nautilus-ghm2x "
  I0914 13:51:12.690915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:51:12.738623 20 builder.go:146] stderr: ""
  I0914 13:51:12.738663 20 builder.go:147] stdout: "true"
  I0914 13:51:12.738704 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:51:12.779393 20 builder.go:146] stderr: ""
  I0914 13:51:12.779428 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:51:12.779440 20 kubectl.go:2393] validating pod update-demo-nautilus-8plq8
  I0914 13:51:12.786280 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:51:12.786319 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:51:12.786400 20 kubectl.go:2520] update-demo-nautilus-8plq8 is verified up and running
  I0914 13:51:12.786468 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-ghm2x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:51:12.829003 20 builder.go:146] stderr: ""
  I0914 13:51:12.829047 20 builder.go:147] stdout: "true"
  I0914 13:51:12.829084 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-ghm2x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:51:12.870827 20 builder.go:146] stderr: ""
  I0914 13:51:12.870868 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:51:12.870878 20 kubectl.go:2393] validating pod update-demo-nautilus-ghm2x
  I0914 13:51:12.877971 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:51:12.878016 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:51:12.878027 20 kubectl.go:2520] update-demo-nautilus-ghm2x is verified up and running
  STEP: scaling down the replication controller @ 09/14/24 13:51:12.878
  I0914 13:51:12.878875 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0914 13:51:12.878965 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0914 13:51:13.346766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:13.941794 20 builder.go:146] stderr: ""
  I0914 13:51:13.941829 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/24 13:51:13.941
  I0914 13:51:13.942017 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:51:13.986455 20 builder.go:146] stderr: ""
  I0914 13:51:13.986498 20 builder.go:147] stdout: "update-demo-nautilus-8plq8 update-demo-nautilus-ghm2x "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/14/24 13:51:13.986
  E0914 13:51:14.346912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:15.347065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:16.347297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:17.347532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:18.347752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:18.986660 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:51:19.030234 20 builder.go:146] stderr: ""
  I0914 13:51:19.030271 20 builder.go:147] stdout: "update-demo-nautilus-8plq8 "
  I0914 13:51:19.030312 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:51:19.072080 20 builder.go:146] stderr: ""
  I0914 13:51:19.072116 20 builder.go:147] stdout: "true"
  I0914 13:51:19.072161 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:51:19.114645 20 builder.go:146] stderr: ""
  I0914 13:51:19.114682 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:51:19.114693 20 kubectl.go:2393] validating pod update-demo-nautilus-8plq8
  I0914 13:51:19.121187 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:51:19.121253 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:51:19.121263 20 kubectl.go:2520] update-demo-nautilus-8plq8 is verified up and running
  STEP: scaling up the replication controller @ 09/14/24 13:51:19.121
  I0914 13:51:19.122040 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0914 13:51:19.122087 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0914 13:51:19.348656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:20.185967 20 builder.go:146] stderr: ""
  I0914 13:51:20.186018 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/24 13:51:20.186
  I0914 13:51:20.186124 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:51:20.232169 20 builder.go:146] stderr: ""
  I0914 13:51:20.232210 20 builder.go:147] stdout: "update-demo-nautilus-8plq8 update-demo-nautilus-c7gts "
  I0914 13:51:20.232252 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:51:20.273174 20 builder.go:146] stderr: ""
  I0914 13:51:20.273209 20 builder.go:147] stdout: "true"
  I0914 13:51:20.273245 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-8plq8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:51:20.315172 20 builder.go:146] stderr: ""
  I0914 13:51:20.315221 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:51:20.315232 20 kubectl.go:2393] validating pod update-demo-nautilus-8plq8
  I0914 13:51:20.321467 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:51:20.321528 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:51:20.321541 20 kubectl.go:2520] update-demo-nautilus-8plq8 is verified up and running
  I0914 13:51:20.321616 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-c7gts -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0914 13:51:20.348921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:20.362767 20 builder.go:146] stderr: ""
  I0914 13:51:20.362793 20 builder.go:147] stdout: "true"
  I0914 13:51:20.362828 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods update-demo-nautilus-c7gts -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:51:20.403066 20 builder.go:146] stderr: ""
  I0914 13:51:20.403099 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:51:20.403109 20 kubectl.go:2393] validating pod update-demo-nautilus-c7gts
  I0914 13:51:20.410214 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:51:20.410254 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:51:20.410279 20 kubectl.go:2520] update-demo-nautilus-c7gts is verified up and running
  STEP: using delete to clean up resources @ 09/14/24 13:51:20.41
  I0914 13:51:20.410367 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 delete --grace-period=0 --force -f -'
  I0914 13:51:20.458623 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 13:51:20.458657 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0914 13:51:20.458698 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get rc,svc -l name=update-demo --no-headers'
  I0914 13:51:20.517685 20 builder.go:146] stderr: "No resources found in kubectl-7011 namespace.\n"
  I0914 13:51:20.517729 20 builder.go:147] stdout: ""
  I0914 13:51:20.517768 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-7011 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 13:51:20.573412 20 builder.go:146] stderr: ""
  I0914 13:51:20.573455 20 builder.go:147] stdout: ""
  I0914 13:51:20.573576 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7011" for this suite. @ 09/14/24 13:51:20.578
â€¢ [13.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/14/24 13:51:20.587
  I0914 13:51:20.587091 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename webhook @ 09/14/24 13:51:20.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:20.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:20.628
  STEP: Setting up server cert @ 09/14/24 13:51:20.667
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/24 13:51:21.031
  STEP: Deploying the webhook pod @ 09/14/24 13:51:21.041
  STEP: Wait for the deployment to be ready @ 09/14/24 13:51:21.056
  I0914 13:51:21.071975 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:51:21.349207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:22.349771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/24 13:51:23.088
  STEP: Verifying the service has paired with the endpoint @ 09/14/24 13:51:23.103
  E0914 13:51:23.350424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:24.104053 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 13:51:24.114507 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 13:51:24.351432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2315-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/24 13:51:24.628
  STEP: Creating a custom resource while v1 is storage version @ 09/14/24 13:51:24.644
  E0914 13:51:25.352295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:26.353310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/14/24 13:51:26.67
  STEP: Patching the custom resource while v2 is storage version @ 09/14/24 13:51:26.684
  I0914 13:51:27.295001 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1080" for this suite. @ 09/14/24 13:51:27.3
  STEP: Destroying namespace "webhook-markers-773" for this suite. @ 09/14/24 13:51:27.309
â€¢ [6.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/14/24 13:51:27.318
  I0914 13:51:27.318659 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:51:27.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:27.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:27.337
  STEP: Creating projection with secret that has name projected-secret-test-b4a73799-f755-47de-ae0b-06a2398d5a49 @ 09/14/24 13:51:27.345
  STEP: Creating a pod to test consume secrets @ 09/14/24 13:51:27.352
  E0914 13:51:27.353583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:28.353880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:29.354089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:51:29.377
  I0914 13:51:29.382982 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-secrets-f41be77e-d450-4929-87e3-4d5542a620cf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/24 13:51:29.391
  I0914 13:51:29.415284 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3396" for this suite. @ 09/14/24 13:51:29.42
â€¢ [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/14/24 13:51:29.428
  I0914 13:51:29.428856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename statefulset @ 09/14/24 13:51:29.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:29.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:29.45
  STEP: Creating service test in namespace statefulset-3484 @ 09/14/24 13:51:29.454
  I0914 13:51:29.471866 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0914 13:51:30.354872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:31.354992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:32.355177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:33.355419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:34.356032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:35.356155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:36.356203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:37.357238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:38.357401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:39.357771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:39.473515 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/14/24 13:51:39.483
  I0914 13:51:39.503919 20 wait.go:40] Found 1 stateful pods, waiting for 2
  E0914 13:51:40.358660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:41.358755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:42.359739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:43.359802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:44.360183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:45.360203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:46.360307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:47.360417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:48.361191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:49.361441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:49.506038 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:51:49.506066 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/14/24 13:51:49.515
  STEP: Delete all of the StatefulSets @ 09/14/24 13:51:49.519
  STEP: Verify that StatefulSets have been deleted @ 09/14/24 13:51:49.53
  I0914 13:51:49.534470 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3484
  I0914 13:51:49.551820 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3484" for this suite. @ 09/14/24 13:51:49.556
â€¢ [20.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/14/24 13:51:49.566
  I0914 13:51:49.566952 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 13:51:49.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:51:49.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:51:49.588
  I0914 13:51:49.600549 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0914 13:51:50.362520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:51.362742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:52.362933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:53.363205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:54.363469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:54.605211 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 13:51:54.605
  I0914 13:51:54.605297 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0914 13:51:55.363601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:56.363824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:56.611456 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0914 13:51:56.622573 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0914 13:51:57.363933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:51:58.364156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:51:58.633699 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0914 13:51:58.643121 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0914 13:51:58.652244 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0914 13:51:58.665202 20 deployment.go:313] Updating deployment test-rollover-deployment
  I0914 13:51:58.665298 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0914 13:51:59.364242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:00.364355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:00.676694 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0914 13:52:00.686181 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0914 13:52:00.694637 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0914 13:52:00.694685 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:52:01.365229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:02.365411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:02.705786 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0914 13:52:02.705844 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:52:03.365444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:04.365524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:04.704982 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0914 13:52:04.705038 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:52:05.365712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:06.365823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:06.705545 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0914 13:52:06.705598 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:52:07.366333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:08.366562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:08.706293 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0914 13:52:08.706348 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 14, 13, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 14, 13, 51, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:52:09.366951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:10.367266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:10.705211 20 deployment.go:94] 
  I0914 13:52:10.705247 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I0914 13:52:10.719224 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3763",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ff2b999-7109-4265-966d-148bb8a86842",
      ResourceVersion: (string) (len=5) "45482",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918716,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:52:10.724954 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3763",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61d8bb7b-a853-4018-94be-6a38e52ddf58",
      ResourceVersion: (string) (len=5) "45472",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "3ff2b999-7109-4265-966d-148bb8a86842",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 66 66 32 62 39  39 39 2d 37 31 30 39 2d  |\"3ff2b999-7109-|
              00000120  34 32 36 35 2d 39 36 36  64 2d 31 34 38 62 62 38  |4265-966d-148bb8|
              00000130  61 38 36 38 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a86842\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:52:10.726034 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0914 13:52:10.726288 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3763",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d71828ec-a0b6-48cb-87f2-59c792b6c873",
      ResourceVersion: (string) (len=5) "45481",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918709,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "3ff2b999-7109-4265-966d-148bb8a86842",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  33 66 66 32 62 39 39 39  2d 37 31 30 39 2d 34 32  |3ff2b999-7109-42|
              000000c0  36 35 2d 39 36 36 64 2d  31 34 38 62 62 38 61 38  |65-966d-148bb8a8|
              000000d0  36 38 34 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |6842\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:52:10.726978 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3763",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89f6b78d-6f2a-4b78-9d0d-af14c172a323",
      ResourceVersion: (string) (len=5) "45435",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918716,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "3ff2b999-7109-4265-966d-148bb8a86842",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 66 66 32 62 39  39 39 2d 37 31 30 39 2d  |\"3ff2b999-7109-|
              00000120  34 32 36 35 2d 39 36 36  64 2d 31 34 38 62 62 38  |4265-966d-148bb8|
              00000130  61 38 36 38 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a86842\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:52:10.732375 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-p2k99" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-p2k99",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-3763",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "795dd942-43e8-4c51-a7c6-cbc5e2962c5d",
      ResourceVersion: (string) (len=5) "45450",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "61d8bb7b-a853-4018-94be-6a38e52ddf58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  64 38 62 62 37 62 2d 61  |d\":\"61d8bb7b-a|
              00000090  38 35 33 2d 34 30 31 38  2d 39 34 62 65 2d 36 61  |853-4018-94be-6a|
              000000a0  33 38 65 35 32 64 64 66  35 38 5c 22 7d 22 3a 7b  |38e52ddf58\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  2e 31 34 36 5c 22 7d 22  |2.168.17.146\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-95x7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-95x7t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-255",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.255",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.255"
        }
      },
      PodIP: (string) (len=14) "192.168.17.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.17.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861918719,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://f75ecb3ec7a994a78364b976d87596b6ea52234af7bdf0e79fb6791611b106d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-95x7t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:52:10.733818 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3763" for this suite. @ 09/14/24 13:52:10.739
â€¢ [21.181 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/14/24 13:52:10.747
  I0914 13:52:10.747818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 13:52:10.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:10.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:10.768
  I0914 13:52:10.771848 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  W0914 13:52:10.772378      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00577ecc0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0914 13:52:11.367403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:12.367520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0914 13:52:13.316310      20 warnings.go:70] unknown field "alpha"
  W0914 13:52:13.316329      20 warnings.go:70] unknown field "beta"
  W0914 13:52:13.316332      20 warnings.go:70] unknown field "delta"
  W0914 13:52:13.316335      20 warnings.go:70] unknown field "epsilon"
  W0914 13:52:13.316338      20 warnings.go:70] unknown field "gamma"
  E0914 13:52:13.368071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:13.876944 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5274" for this suite. @ 09/14/24 13:52:13.881
â€¢ [3.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/14/24 13:52:13.89
  I0914 13:52:13.890036 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:52:13.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:13.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:13.909
  STEP: Creating configMap with name configmap-test-volume-91314fc6-a71d-4e67-bb6c-b744394bbf65 @ 09/14/24 13:52:13.913
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:52:13.917
  E0914 13:52:14.368153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:15.368247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:16.368995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:17.369080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:52:17.945
  I0914 13:52:17.950126 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-configmaps-828e790d-4f28-4aa7-ae67-567ab5476c1a container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:52:17.96
  I0914 13:52:17.981708 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6265" for this suite. @ 09/14/24 13:52:17.987
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/14/24 13:52:17.995
  I0914 13:52:17.995874 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:52:17.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:18.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:18.015
  STEP: Creating a pod to test downward API volume plugin @ 09/14/24 13:52:18.018
  E0914 13:52:18.370033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:19.370150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:20.370777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:21.370866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:52:22.046
  I0914 13:52:22.050806 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downwardapi-volume-6d069d85-e219-48ed-bab5-498afd34e4e9 container client-container: <nil>
  STEP: delete the pod @ 09/14/24 13:52:22.058
  I0914 13:52:22.081515 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6722" for this suite. @ 09/14/24 13:52:22.086
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/14/24 13:52:22.096
  I0914 13:52:22.096296 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replication-controller @ 09/14/24 13:52:22.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:22.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:22.115
  STEP: Creating replication controller my-hostname-basic-9f62cd7f-b3f2-4cc0-8170-344b2e1971e1 @ 09/14/24 13:52:22.12
  I0914 13:52:22.131016 20 resource.go:87] Pod name my-hostname-basic-9f62cd7f-b3f2-4cc0-8170-344b2e1971e1: Found 0 pods out of 1
  E0914 13:52:22.371410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:23.371742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:24.372107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:25.372190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:26.372311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:27.135768 20 resource.go:87] Pod name my-hostname-basic-9f62cd7f-b3f2-4cc0-8170-344b2e1971e1: Found 1 pods out of 1
  I0914 13:52:27.135800 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-9f62cd7f-b3f2-4cc0-8170-344b2e1971e1" are running
  I0914 13:52:27.139630 20 rc.go:523] Pod "my-hostname-basic-9f62cd7f-b3f2-4cc0-8170-344b2e1971e1-9fffm" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:52:23 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:52:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:52:23 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:52:23 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-14 13:52:22 +0000 UTC Reason: Message:}])
  I0914 13:52:27.139652 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/14/24 13:52:27.139
  I0914 13:52:27.154429 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6973" for this suite. @ 09/14/24 13:52:27.158
â€¢ [5.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/14/24 13:52:27.166
  I0914 13:52:27.166413 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 13:52:27.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:27.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:27.185
  STEP: Creating configMap with name projected-configmap-test-volume-map-c53e8304-c524-4f5b-9ed0-b003ee24fbdb @ 09/14/24 13:52:27.189
  STEP: Creating a pod to test consume configMaps @ 09/14/24 13:52:27.194
  E0914 13:52:27.372953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:28.373059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:29.373220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:30.373329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:52:31.226
  I0914 13:52:31.232001 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-projected-configmaps-e9d68b76-ffaa-442c-9a4a-fd30606c9f3d container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 13:52:31.241
  I0914 13:52:31.261899 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2088" for this suite. @ 09/14/24 13:52:31.266
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/14/24 13:52:31.275
  I0914 13:52:31.275824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename deployment @ 09/14/24 13:52:31.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:31.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:31.295
  I0914 13:52:31.311871 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0914 13:52:31.374105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:32.374245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:33.374494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:34.374565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:35.374726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:36.317013 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 13:52:36.317
  I0914 13:52:36.317082 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/14/24 13:52:36.328
  I0914 13:52:36.344941 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9036",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d186b83-a383-4342-8346-0276d8edf11e",
      ResourceVersion: (string) (len=5) "45753",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918756,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:52:36.357587 20 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9036",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01ed2e4f-214a-4f70-bc57-18ecff03a177",
      ResourceVersion: (string) (len=5) "45755",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918756,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "6d186b83-a383-4342-8346-0276d8edf11e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 64 31 38 36 62  38 33 2d 61 33 38 33 2d  |\"6d186b83-a383-|
              00000120  34 33 34 32 2d 38 33 34  36 2d 30 32 37 36 64 38  |4342-8346-0276d8|
              00000130  65 64 66 31 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |edf11e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:52:36.358554 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0914 13:52:36.358807 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9036",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc061eff-0d9a-496a-ac8a-bb420e3f2593",
      ResourceVersion: (string) (len=5) "45754",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "6d186b83-a383-4342-8346-0276d8edf11e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 64 31 38 36 62 38  |"uid\":\"6d186b8|
              00000040  33 2d 61 33 38 33 2d 34  33 34 32 2d 38 33 34 36  |3-a383-4342-8346|
              00000050  2d 30 32 37 36 64 38 65  64 66 31 31 65 5c 22 7d  |-0276d8edf11e\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:52:36.368312 20 deployment.go:67] Pod "test-cleanup-controller-7bqw8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7bqw8",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9036",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a22619ef-5112-49c8-a426-0b1e5fee21a0",
      ResourceVersion: (string) (len=5) "45731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "dc061eff-0d9a-496a-ac8a-bb420e3f2593",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 63 30 36 31 65 66 66  |uid\":\"dc061eff|
              00000080  2d 30 64 39 61 2d 34 39  36 61 2d 61 63 38 61 2d  |-0d9a-496a-ac8a-|
              00000090  62 62 34 32 30 65 33 66  32 35 39 33 5c 22 7d 22  |bb420e3f2593\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  34 2e 38 39 5c 22 7d 22  |2.168.254.89\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfgks",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfgks",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.8.243"
        }
      },
      PodIP: (string) (len=14) "192.168.254.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.254.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861918751,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa5ed90f21540e7e8b1af966586d3f4449b8bebb93161e7bdd2246d397d7769d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hfgks",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:52:36.369873 20 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-sfmnw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-sfmnw",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-9036",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "246ee765-45b5-4fa8-bb3f-0b1bdf1c7b42",
      ResourceVersion: (string) (len=5) "45761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861918756,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "01ed2e4f-214a-4f70-bc57-18ecff03a177",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  65 64 32 65 34 66 2d 32  |d\":\"01ed2e4f-2|
              00000090  31 34 61 2d 34 66 37 30  2d 62 63 35 37 2d 31 38  |14a-4f70-bc57-18|
              000000a0  65 63 66 66 30 33 61 31  37 37 5c 22 7d 22 3a 7b  |ecff03a177\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gwxpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gwxpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861918756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0914 13:52:36.370698 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 13:52:36.375249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-9036" for this suite. @ 09/14/24 13:52:36.377
â€¢ [5.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/14/24 13:52:36.387
  I0914 13:52:36.387069 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 13:52:36.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:36.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:36.406
  STEP: Creating pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679 @ 09/14/24 13:52:36.409
  E0914 13:52:37.375559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:38.375702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 13:52:38.434
  I0914 13:52:38.439967 20 container_probe.go:1749] Initial restart count of pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d is 0
  I0914 13:52:38.444229 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:39.376207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:40.377237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:40.449699 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:41.377662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:42.377889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:42.455735 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:43.378540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:44.378642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:44.461952 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:45.378752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:46.378920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:46.467509 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:47.378953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:48.379773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:48.473422 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:49.380137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:50.380207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:50.480382 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:51.381226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:52.381445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:52.486238 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:53.381545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:54.381658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:54.493612 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:55.382520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:56.382768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:56.499467 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  E0914 13:52:57.383391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:52:58.383717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:52:58.505971 20 container_probe.go:1759] Get pod liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d in namespace container-probe-8679
  I0914 13:52:58.506009 20 container_probe.go:1763] Restart count of pod container-probe-8679/liveness-015dc5a5-8759-4ca9-9ed2-ae130585af8d is now 1 (20.065924954s elapsed)
  STEP: deleting the pod @ 09/14/24 13:52:58.506
  I0914 13:52:58.524394 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8679" for this suite. @ 09/14/24 13:52:58.528
â€¢ [22.151 seconds]
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/14/24 13:52:58.537
  I0914 13:52:58.538023 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename job @ 09/14/24 13:52:58.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:52:58.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:52:58.557
  STEP: Creating Indexed job @ 09/14/24 13:52:58.56
  STEP: Ensuring job reaches completions @ 09/14/24 13:52:58.565
  E0914 13:52:59.384119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:00.385198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:01.385282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:02.385410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:03.385559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:04.385832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:05.385739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:06.385987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/14/24 13:53:06.576
  I0914 13:53:06.582321 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8838" for this suite. @ 09/14/24 13:53:06.587
â€¢ [8.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/14/24 13:53:06.596
  I0914 13:53:06.596089 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename configmap @ 09/14/24 13:53:06.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:53:06.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:53:06.616
  STEP: creating a ConfigMap @ 09/14/24 13:53:06.619
  STEP: fetching the ConfigMap @ 09/14/24 13:53:06.624
  STEP: patching the ConfigMap @ 09/14/24 13:53:06.628
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/14/24 13:53:06.633
  STEP: deleting the ConfigMap by collection with a label selector @ 09/14/24 13:53:06.637
  STEP: listing all ConfigMaps in test namespace @ 09/14/24 13:53:06.647
  I0914 13:53:06.651642 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4015" for this suite. @ 09/14/24 13:53:06.655
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/14/24 13:53:06.665
  I0914 13:53:06.665200 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename dns @ 09/14/24 13:53:06.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:53:06.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:53:06.686
  STEP: Creating a test externalName service @ 09/14/24 13:53:06.69
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:06.697
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:06.697
  STEP: creating a pod to probe DNS @ 09/14/24 13:53:06.697
  STEP: submitting the pod to kubernetes @ 09/14/24 13:53:06.697
  E0914 13:53:07.386964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:08.387056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:53:08.721
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:53:08.726
  I0914 13:53:08.737939 20 dns_common.go:552] DNS probes using dns-test-236fffdf-54ab-437b-a182-0a936c1df601 succeeded

  STEP: changing the externalName to bar.example.com @ 09/14/24 13:53:08.737
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:08.748
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:08.748
  STEP: creating a second pod to probe DNS @ 09/14/24 13:53:08.748
  STEP: submitting the pod to kubernetes @ 09/14/24 13:53:08.748
  E0914 13:53:09.387816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:10.388116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:11.388128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:12.389172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:13.389930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:14.390063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:53:14.777
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:53:14.782
  I0914 13:53:14.795099 20 dns_common.go:552] DNS probes using dns-test-3b651354-15f1-451c-8660-e6e9e5394db2 succeeded

  STEP: changing the service to type=ClusterIP @ 09/14/24 13:53:14.795
  W0914 13:53:14.811425      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:14.811
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8481.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8481.svc.cluster.local; sleep 1; done
   @ 09/14/24 13:53:14.811
  STEP: creating a third pod to probe DNS @ 09/14/24 13:53:14.811
  STEP: submitting the pod to kubernetes @ 09/14/24 13:53:14.816
  E0914 13:53:15.390174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:16.390269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/14/24 13:53:16.837
  STEP: looking for the results for each expected name from probers @ 09/14/24 13:53:16.841
  I0914 13:53:16.853551 20 dns_common.go:552] DNS probes using dns-test-f7909ee7-5845-4260-a92d-34a93215baa8 succeeded

  STEP: deleting the pod @ 09/14/24 13:53:16.853
  STEP: deleting the pod @ 09/14/24 13:53:16.871
  STEP: deleting the pod @ 09/14/24 13:53:16.89
  STEP: deleting the test externalName service @ 09/14/24 13:53:16.906
  I0914 13:53:16.927173 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8481" for this suite. @ 09/14/24 13:53:16.934
â€¢ [10.278 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/14/24 13:53:16.943
  I0914 13:53:16.943286 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 13:53:16.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:53:16.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:53:16.96
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/14/24 13:53:16.964
  E0914 13:53:17.390829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:18.391080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:19.391621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:20.391720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 13:53:20.993
  I0914 13:53:20.999222 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod pod-d2a7bc3a-1518-4e14-b4a7-cf8d8a62f916 container test-container: <nil>
  STEP: delete the pod @ 09/14/24 13:53:21.007
  I0914 13:53:21.030118 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6844" for this suite. @ 09/14/24 13:53:21.035
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/14/24 13:53:21.043
  I0914 13:53:21.043583 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 13:53:21.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:53:21.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:53:21.061
  STEP: Counting existing ResourceQuota @ 09/14/24 13:53:21.064
  E0914 13:53:21.392385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:22.392663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:23.393270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:24.394213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:25.394413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/14/24 13:53:26.069
  STEP: Ensuring resource quota status is calculated @ 09/14/24 13:53:26.075
  E0914 13:53:26.395300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:27.395409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/14/24 13:53:28.081
  STEP: Ensuring resource quota status captures replicaset creation @ 09/14/24 13:53:28.095
  E0914 13:53:28.396437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:29.396550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/14/24 13:53:30.101
  STEP: Ensuring resource quota status released usage @ 09/14/24 13:53:30.11
  E0914 13:53:30.397617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:31.397836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:53:32.116354 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6682" for this suite. @ 09/14/24 13:53:32.121
â€¢ [11.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/14/24 13:53:32.132
  I0914 13:53:32.132364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename chunking @ 09/14/24 13:53:32.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 13:53:32.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 13:53:32.154
  STEP: creating a large number of resources @ 09/14/24 13:53:32.157
  E0914 13:53:32.398371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:33.399101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:34.399372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:35.400353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:36.401032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:37.401273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:38.401877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:39.402366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:40.402407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:41.402479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:42.403268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:43.403643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:44.404043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:45.404124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:46.405168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:47.405429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:48.406335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:49.406561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/14/24 13:53:49.841
  I0914 13:53:49.887739 20 chunking.go:163] Retrieved 40/40 results with rv 46703 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 09/14/24 13:53:49.887
  E0914 13:53:50.407380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:51.407612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:52.407758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:53.407855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:54.408148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:55.408236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:56.409200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:57.409332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:58.409457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:53:59.409523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:00.410416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:01.410522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:02.410625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:03.410721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:04.411078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:05.411253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:06.411495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:07.411583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:08.411659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:09.411952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:54:09.894939 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:54:10.412521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:11.412338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:12.413198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:13.413392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:14.414316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:15.414448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:16.414645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:17.414824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:18.415021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:19.415420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:20.415634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:21.415852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:22.416061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:23.416224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:24.417239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:25.417338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:26.417554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:27.418500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:28.418590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:29.419091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:54:29.894963 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:54:30.419258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:31.419434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:32.420102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:33.420277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:34.421180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:35.421275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:36.421466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:37.421556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:38.421723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:39.422014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:40.422304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:41.422434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:42.422636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:43.422816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:44.423102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:45.423290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:46.423480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:47.423676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:48.423872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:49.424116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:54:49.895312 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:54:50.424883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:51.424975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:52.425434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:53.425889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:54.426007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:55.426102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:56.426280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:57.426537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:58.426722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:54:59.427025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:00.427217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:01.427460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:02.427652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:03.427810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:04.428111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:05.428260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:06.428793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:07.429662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:08.429746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:09.430008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:55:09.894992 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:55:10.430338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:11.430615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:12.430780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:13.430948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:14.431416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:15.431529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:16.431771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:17.431957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:18.432430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:19.433176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:20.433779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:21.434323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:22.434673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:23.434858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:24.435126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:25.435335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:26.435446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:27.435590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:28.435798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:29.436114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:55:29.894672 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:55:30.436224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:31.436603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:32.436699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:33.437201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:34.437495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:35.437594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:36.437747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:37.437954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:38.438080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:39.438172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:40.438357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:41.438455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:42.439239      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:43.439302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:44.440091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:45.440187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:46.441180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:47.441366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:48.441570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:49.441880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:55:49.894716 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:55:50.442191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:51.442388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:52.442617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:53.442822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:54.443125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:55.443219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:56.443418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:57.443623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:58.443814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:55:59.444128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:00.444229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:01.445187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:02.445370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:03.445566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:04.445870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:05.445972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:06.446184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:07.446381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:08.446566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:09.446871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:56:09.894463 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:56:10.446994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:11.447179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:12.447431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:13.447633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:14.447792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:15.448026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:16.448121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:17.449182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:18.449369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:19.449646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:20.450338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:21.450531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:22.450627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:23.450814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:24.451127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:25.451391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:26.451574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:27.451920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:28.452129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:29.452292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:56:29.894144 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:56:30.453291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:31.453474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:32.453663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:33.453859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:34.454167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:35.454379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:36.455407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:37.455514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:38.455725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:39.456062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:40.456248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:41.457260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:42.457431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:43.457669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:44.458638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:45.458724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:46.459769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:47.459862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:48.460150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:49.461214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:56:49.894338 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:56:50.461912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:51.462019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:52.462201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:53.462468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:54.462763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:55.462958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:56.463045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:57.463237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:58.463410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:56:59.463523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:00.463739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:01.463957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:02.464133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:03.464199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:04.464427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:05.464426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:06.464427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:07.465382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:08.465541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:09.465826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:57:09.894126 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:57:10.466696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:11.466901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:12.467069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:13.467272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:14.467479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:15.467703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:16.467863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:17.468282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:18.469191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:19.469464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:20.469559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:21.469659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:22.469844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:23.470000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:24.470559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:25.470759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:26.470919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:27.471559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:28.471671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:29.472025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:57:29.895353 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:57:30.472980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:31.473161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:32.473354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:33.473517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:34.473823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:35.474073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:36.474343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:37.474453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:38.474622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:39.474743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:40.474878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:41.475128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:42.475305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:43.475489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:44.475770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:45.475954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:46.476149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:47.476174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:48.476305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:49.476431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:57:49.894776 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:57:50.477219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:51.477393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:52.477568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:53.477690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:54.478014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:55.478210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:56.478270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:57.478466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:58.479104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:57:59.479202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:00.479318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:01.479717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:02.479810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:03.479956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:04.480112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:05.480255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:06.481176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:07.481279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:08.481443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:09.481744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:58:09.894104 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:58:10.481805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:11.481986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:12.482176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:13.482344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:14.482594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:15.482782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:16.482943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:17.483910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:18.484159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:19.485219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:20.485379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:21.485496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:22.485683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:23.485856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:24.486150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:25.486387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:26.486501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:27.486677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:28.486890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:29.487196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:58:29.894627 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:58:30.487261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:31.487452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:32.487626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:33.487796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:34.488109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:35.488208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:36.489182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:37.489291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:38.489835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:39.490200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:40.490358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:41.490544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:42.490731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:43.490902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:44.491440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:45.491529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:46.491689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:47.491888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:48.492085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:49.492174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:58:49.895480 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:58:50.493095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:51.493291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:52.493494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:53.493663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:54.493954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:55.494190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:56.494986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:57.495135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:58.495339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:58:59.495448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:00.495649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:01.495864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:02.496069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:03.496157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:04.496452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:05.496432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:06.496495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:07.497233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:08.497393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:09.497498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:59:09.894574 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:59:10.498099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:11.499074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:12.499168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:13.499348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:14.499444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:15.500195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:16.500302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:17.501185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:18.501362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:19.501625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:20.501921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:21.502180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:22.502431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:23.502649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:24.502946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:25.503126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:26.503330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:27.503522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:28.503718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:29.504020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:59:29.894955 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:59:30.504129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:31.504373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:32.505207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:33.505384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:34.505647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:35.505840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:36.506037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:37.506231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:38.506440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:39.506768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:40.507021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:41.507286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:42.507498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:43.507766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:44.508079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:45.508127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:46.508385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:47.508981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:48.509082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:49.509373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 13:59:49.893792 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 13:59:50.510369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:51.510465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:52.510640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:53.511072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:54.511355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:55.511556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:56.511754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:57.512100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:58.512204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 13:59:59.512303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:00.513220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:01.513376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:02.513566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:03.513761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:04.514075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:05.514303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:06.514501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:07.514626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:08.514830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:09.515148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:00:09.894672 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:00:10.515260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:11.515450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:12.515651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:13.515855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:14.516154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:15.517211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:16.517413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:17.517588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:18.517775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:19.518733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:20.518815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:21.519768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:22.519869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:23.520070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:24.520127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:25.520197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:26.521181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:27.521282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:28.521459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:29.521772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:00:29.894566 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:00:30.522139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:31.522433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:32.522615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:33.522792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:34.523109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:35.523314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:36.523516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:37.523715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:38.523909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:39.524122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:40.524200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:41.525215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:42.525410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:43.525587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:44.525892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:45.526091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:46.526213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:47.526449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:48.526706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:49.527020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:00:49.894914 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:00:50.527125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:51.527327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:52.527528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:53.527696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:54.528014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:55.528122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:56.528334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:57.528441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:58.529186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:00:59.529318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:00.529756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:01.529857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:02.530152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:03.530304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:04.530570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:05.530586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:06.530658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:07.530826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:08.531040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:09.531222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:01:09.897697 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:01:10.531329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:11.531525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:12.531686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:13.531882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:14.532134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:15.532217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:16.533185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:17.533289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:18.533446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:19.533772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:20.533960      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:21.534149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:22.534336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:23.534578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:24.534845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:25.535025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:26.535205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:27.535370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:28.535552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:29.536410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:01:29.894087 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:01:30.537200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:31.537390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:32.537655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:33.537795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:34.538212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:35.538237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:36.538324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:37.538421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:38.539388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:39.539483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:40.539579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:41.539771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:42.539948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:43.540150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:44.541171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:45.541279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:46.541551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:47.541722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:48.541912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:49.542014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:01:49.895074 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:01:50.542115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:51.542325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:52.542415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:53.542597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:54.542705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:55.542869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:56.543061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:57.543243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:58.543353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:01:59.543618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:00.543728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:01.543918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:02.544141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:03.544241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:04.544285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:05.545197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:06.545473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:07.545569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:08.545733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:09.546644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:02:09.893289 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:02:10.546957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:11.547071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:12.547187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:13.547427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:14.547666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:15.547864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:16.548177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:17.548132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:18.548274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:19.548490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:20.548587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:21.548877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:22.548956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:23.549047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:24.549791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:25.549888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:26.550090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:27.550329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:28.550607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:29.550914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:02:29.894545 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:02:30.551127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:31.551307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:32.551556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:33.551672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:34.551783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:35.551954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:36.552109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:37.552208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:38.552303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:39.553200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:40.553294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:41.553404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:42.553589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:43.553795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:44.554087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:45.554240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:46.554429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:47.554621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:48.554736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:49.555056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:02:49.896169 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY3MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0914 14:02:50.555196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:51.555316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:52.555500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:53.555688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:54.556024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:55.556127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:56.556230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:57.557272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:58.557450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:02:59.557839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:00.557953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:01.558044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:02.558128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:03.558232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:04.558512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:05.558517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:06.558625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:07.558702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:08.558873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:09.558964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:09.894106 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0914 14:03:09.894141 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/14/24 14:03:09.894
  STEP: retrieving all remaining pages @ 09/14/24 14:03:09.899
  I0914 14:03:09.904181 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0914 14:03:09.908718 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0914 14:03:09.913909 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0914 14:03:09.918577 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0914 14:03:09.923269 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0914 14:03:09.928184 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0914 14:03:09.933258 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc3NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0914 14:03:09.937676 20 chunking.go:221] Retrieved 40/40 results with rv 47767 and continue 
  I0914 14:03:09.937862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9320" for this suite. @ 09/14/24 14:03:09.942
â€¢ [577.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/14/24 14:03:09.951
  I0914 14:03:09.951139 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 14:03:09.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:03:09.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:03:09.98
  I0914 14:03:09.998442 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0914 14:03:10.559119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:11.559213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:12.559311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:13.559505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:14.559593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:15.003643 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 14:03:15.003
  STEP: Scaling up "test-rs" replicaset @ 09/14/24 14:03:15.003
  I0914 14:03:15.016224 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/14/24 14:03:15.016
  I0914 14:03:15.025478 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1523 with ReadyReplicas 1, AvailableReplicas 1
  I0914 14:03:15.043017 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1523 with ReadyReplicas 1, AvailableReplicas 1
  I0914 14:03:15.069097 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1523 with ReadyReplicas 1, AvailableReplicas 1
  I0914 14:03:15.076181 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1523 with ReadyReplicas 1, AvailableReplicas 1
  E0914 14:03:15.559710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:15.700550 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1523 with ReadyReplicas 2, AvailableReplicas 2
  I0914 14:03:16.204018 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1523 with ReadyReplicas 3 found true
  I0914 14:03:16.204196 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1523" for this suite. @ 09/14/24 14:03:16.209
â€¢ [6.265 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/14/24 14:03:16.216
  I0914 14:03:16.216618 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename var-expansion @ 09/14/24 14:03:16.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:03:16.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:03:16.237
  STEP: Creating a pod to test substitution in container's command @ 09/14/24 14:03:16.24
  E0914 14:03:16.560733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:17.560822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:18.561524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:19.561669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 14:03:20.264
  I0914 14:03:20.268551 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod var-expansion-c7364796-47fb-40c7-b2d9-dea22527668b container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 14:03:20.285
  I0914 14:03:20.306929 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6661" for this suite. @ 09/14/24 14:03:20.311
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/14/24 14:03:20.319
  I0914 14:03:20.319494 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-probe @ 09/14/24 14:03:20.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:03:20.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:03:20.339
  STEP: Creating pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029 @ 09/14/24 14:03:20.342
  E0914 14:03:20.561802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:21.562004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/24 14:03:22.362
  I0914 14:03:22.366175 20 container_probe.go:1749] Initial restart count of pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 is 0
  I0914 14:03:22.370301 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:22.562661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:23.562755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:24.376284 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:24.563635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:25.563879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:26.381773 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:26.563966      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:27.564148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:28.386969 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:28.564316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:29.565223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:30.393199 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:30.565336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:31.565437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:32.399076 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:32.566511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:33.566722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:34.405405 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:34.567739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:35.567954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:36.410951 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:36.568237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:37.569178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:38.416671 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:38.569894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:39.569985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:40.423197 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:40.570454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:41.570672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:42.428623 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:42.570895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:43.571049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:44.435332 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:44.571552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:45.571763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:46.441302 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:46.572580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:47.573216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:48.447324 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:48.573639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:49.573734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:50.453184 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:50.574386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:51.574612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:52.458301 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:52.575550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:53.575792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:54.463738 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:54.576011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:55.576241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:56.469169 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:56.576321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:57.576398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:03:58.473930 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:03:58.577161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:03:59.577495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:00.480902 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:00.578254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:01.579226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:02.486506 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:02.579698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:03.579890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:04.492945 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:04.580134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:05.580234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:06.498529 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:06.580775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:07.581212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:08.504288 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:08.581448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:09.581771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:10.509805 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  E0914 14:04:10.581894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:11.582110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:12.515464 20 container_probe.go:1759] Get pod busybox-4168f705-9b79-44e6-88e4-308749c10aa4 in namespace container-probe-8029
  I0914 14:04:12.515506 20 container_probe.go:1763] Restart count of pod container-probe-8029/busybox-4168f705-9b79-44e6-88e4-308749c10aa4 is now 1 (50.149305913s elapsed)
  STEP: deleting the pod @ 09/14/24 14:04:12.515
  I0914 14:04:12.528955 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8029" for this suite. @ 09/14/24 14:04:12.534
â€¢ [52.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/14/24 14:04:12.542
  I0914 14:04:12.542491 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename namespaces @ 09/14/24 14:04:12.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:12.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:12.562
  STEP: Read namespace status @ 09/14/24 14:04:12.565
  I0914 14:04:12.569691 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/14/24 14:04:12.569
  I0914 14:04:12.575411 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/14/24 14:04:12.575
  E0914 14:04:12.582499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:12.586331 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0914 14:04:12.586505 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1266" for this suite. @ 09/14/24 14:04:12.591
â€¢ [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/14/24 14:04:12.601
  I0914 14:04:12.601307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 14:04:12.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:12.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:12.623
  STEP: create deployment with httpd image @ 09/14/24 14:04:12.626
  I0914 14:04:12.626920 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-667 create -f -'
  I0914 14:04:12.695052 20 builder.go:146] stderr: ""
  I0914 14:04:12.695088 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/14/24 14:04:12.695
  I0914 14:04:12.695165 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-667 diff -f -'
  E0914 14:04:13.582859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:14.582955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:15.583096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:16.583264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:16.994999 20 builder.go:135] rc: 1
  I0914 14:04:16.995122 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-667 delete -f -'
  I0914 14:04:17.043277 20 builder.go:146] stderr: ""
  I0914 14:04:17.043313 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0914 14:04:17.043497 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-667" for this suite. @ 09/14/24 14:04:17.048
â€¢ [4.457 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/14/24 14:04:17.058
  I0914 14:04:17.058777 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/14/24 14:04:17.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:17.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:17.082
  E0914 14:04:17.583409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:18.583593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/14/24 14:04:19.124
  STEP: Cleaning up the configmap @ 09/14/24 14:04:19.133
  STEP: Cleaning up the pod @ 09/14/24 14:04:19.14
  I0914 14:04:19.158817 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5486" for this suite. @ 09/14/24 14:04:19.163
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/14/24 14:04:19.172
  I0914 14:04:19.172388 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 14:04:19.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:19.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:19.191
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4836 @ 09/14/24 14:04:19.195
  STEP: changing the ExternalName service to type=ClusterIP @ 09/14/24 14:04:19.2
  STEP: creating replication controller externalname-service in namespace services-4836 @ 09/14/24 14:04:19.218
  I0914 14:04:19.228661      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4836, replica count: 2
  E0914 14:04:19.584427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:20.584828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:21.584957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:22.279516      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0914 14:04:22.279548 20 resource.go:361] Creating new exec pod
  E0914 14:04:22.585591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:23.585806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:24.585906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:25.301195 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4836 exec execpod962jl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0914 14:04:25.395776 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0914 14:04:25.395814 20 builder.go:147] stdout: "externalname-service-4k2nb"
  I0914 14:04:25.395976 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4836 exec execpod962jl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  I0914 14:04:25.490419 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.67 80\n+ echo hostName\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n"
  I0914 14:04:25.490463 20 builder.go:147] stdout: ""
  E0914 14:04:25.586688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:04:26.396090 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-4836 exec execpod962jl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  I0914 14:04:26.485357 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.67 80\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 14:04:26.485401 20 builder.go:147] stdout: "externalname-service-9jzln"
  I0914 14:04:26.485506 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0914 14:04:26.508683 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4836" for this suite. @ 09/14/24 14:04:26.513
â€¢ [7.349 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/14/24 14:04:26.521
  I0914 14:04:26.521860 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/24 14:04:26.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:26.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:26.54
  STEP: Creating a pod to test service account token:  @ 09/14/24 14:04:26.544
  E0914 14:04:26.587347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:27.587408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:28.588386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:29.588479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 14:04:30.57
  I0914 14:04:30.575393 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod test-pod-f8ea41d5-8181-4a5e-80c6-5670f9adfb08 container agnhost-container: <nil>
  E0914 14:04:30.588538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/14/24 14:04:30.595
  I0914 14:04:30.617034 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6242" for this suite. @ 09/14/24 14:04:30.623
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/14/24 14:04:30.635
  I0914 14:04:30.635268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 14:04:30.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:04:30.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:04:30.663
  STEP: Creating secret with name s-test-opt-del-34a24f35-b157-4350-be5f-006bce55b928 @ 09/14/24 14:04:30.677
  STEP: Creating secret with name s-test-opt-upd-b7616880-7202-481c-baac-85037baadf46 @ 09/14/24 14:04:30.682
  STEP: Creating the pod @ 09/14/24 14:04:30.687
  E0914 14:04:31.588639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:32.589173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-34a24f35-b157-4350-be5f-006bce55b928 @ 09/14/24 14:04:32.737
  STEP: Updating secret s-test-opt-upd-b7616880-7202-481c-baac-85037baadf46 @ 09/14/24 14:04:32.745
  STEP: Creating secret with name s-test-opt-create-d98dfd3f-bfce-475c-bea9-cac1bdb01952 @ 09/14/24 14:04:32.751
  STEP: waiting to observe update in volume @ 09/14/24 14:04:32.756
  E0914 14:04:33.589302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:34.589439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:35.590317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:36.590444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:37.590538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:38.590636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:39.590736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:40.590900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:41.591059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:42.591181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:43.591311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:44.591497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:45.591669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:46.591910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:47.592986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:48.593079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:49.593175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:50.593381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:51.593676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:52.593785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:53.594380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:54.594559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:55.594688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:56.594795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:57.595065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:58.595179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:04:59.596150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:00.596223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:01.596330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:02.596444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:03.596537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:04.596999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:05.596747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:06.597208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:07.597308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:08.597543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:09.597595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:10.597687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:11.597723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:12.597808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:13.597911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:14.597977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:15.598805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:16.598913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:17.599012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:18.599105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:19.599190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:20.599628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:21.599860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:22.599955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:23.600138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:24.600211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:25.600995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:26.601134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:27.601961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:28.602737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:29.603481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:30.604324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:31.605355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:32.605476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:33.605721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:34.606003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:35.606772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:36.606882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:37.607750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:38.607863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:39.608595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:40.609500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:41.610475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:42.610669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:43.610876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:44.611061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:45.611243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:46.611424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:47.612219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:48.612797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:49.612926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:50.613806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:05:51.184798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1768" for this suite. @ 09/14/24 14:05:51.189
â€¢ [80.562 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/14/24 14:05:51.197
  I0914 14:05:51.197460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename disruption @ 09/14/24 14:05:51.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:05:51.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:05:51.217
  STEP: creating the pdb @ 09/14/24 14:05:51.22
  STEP: Waiting for the pdb to be processed @ 09/14/24 14:05:51.226
  E0914 14:05:51.614394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:52.614519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/14/24 14:05:53.231
  STEP: Waiting for the pdb to be processed @ 09/14/24 14:05:53.242
  E0914 14:05:53.615473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:54.615594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/14/24 14:05:55.247
  STEP: Waiting for the pdb to be processed @ 09/14/24 14:05:55.259
  STEP: Waiting for the pdb to be deleted @ 09/14/24 14:05:55.274
  I0914 14:05:55.278595 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4705" for this suite. @ 09/14/24 14:05:55.283
â€¢ [4.094 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/14/24 14:05:55.291
  I0914 14:05:55.291662 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename events @ 09/14/24 14:05:55.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:05:55.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:05:55.311
  STEP: creating a test event @ 09/14/24 14:05:55.314
  STEP: listing all events in all namespaces @ 09/14/24 14:05:55.32
  STEP: patching the test event @ 09/14/24 14:05:55.324
  STEP: fetching the test event @ 09/14/24 14:05:55.332
  STEP: updating the test event @ 09/14/24 14:05:55.336
  STEP: getting the test event @ 09/14/24 14:05:55.349
  STEP: deleting the test event @ 09/14/24 14:05:55.353
  STEP: listing all events in all namespaces @ 09/14/24 14:05:55.363
  I0914 14:05:55.369002 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2378" for this suite. @ 09/14/24 14:05:55.373
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/14/24 14:05:55.382
  I0914 14:05:55.382181 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename emptydir @ 09/14/24 14:05:55.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:05:55.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:05:55.402
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/14/24 14:05:55.405
  E0914 14:05:55.615613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:56.615866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:57.615917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:05:58.616362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 14:05:59.434
  I0914 14:05:59.439053 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-f05a525e-0960-4fb1-be23-f104125dc9fe container test-container: <nil>
  STEP: delete the pod @ 09/14/24 14:05:59.447
  I0914 14:05:59.467535 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5000" for this suite. @ 09/14/24 14:05:59.472
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/14/24 14:05:59.481
  I0914 14:05:59.481856 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/14/24 14:05:59.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:05:59.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:05:59.501
  STEP: creating a target pod @ 09/14/24 14:05:59.504
  E0914 14:05:59.617157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:00.625115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/14/24 14:06:01.529
  E0914 14:06:01.625666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:02.625929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/14/24 14:06:03.551
  I0914 14:06:03.551288 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-389 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 14:06:03.551306 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  I0914 14:06:03.551815 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I0914 14:06:03.551874 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-389/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0914 14:06:03.595038 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/14/24 14:06:03.603
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/14/24 14:06:03.608
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/14/24 14:06:03.623
  E0914 14:06:03.626071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:03.629852 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-389" for this suite. @ 09/14/24 14:06:03.634
â€¢ [4.165 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/14/24 14:06:03.646
  I0914 14:06:03.646824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename kubectl @ 09/14/24 14:06:03.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:03.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:03.667
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/24 14:06:03.671
  I0914 14:06:03.671902 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4279 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0914 14:06:03.723247 20 builder.go:146] stderr: ""
  I0914 14:06:03.723276 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/14/24 14:06:03.723
  I0914 14:06:03.723355 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4279 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0914 14:06:03.771830 20 builder.go:146] stderr: ""
  I0914 14:06:03.771874 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/24 14:06:03.771
  I0914 14:06:03.776209 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=kubectl-4279 delete pods e2e-test-httpd-pod'
  E0914 14:06:04.627197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:05.595406 20 builder.go:146] stderr: ""
  I0914 14:06:05.595442 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0914 14:06:05.595652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4279" for this suite. @ 09/14/24 14:06:05.6
â€¢ [1.961 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/14/24 14:06:05.607
  I0914 14:06:05.608039 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename field-validation @ 09/14/24 14:06:05.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:05.624
  E0914 14:06:05.627861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:05.628
  I0914 14:06:05.631698 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  E0914 14:06:06.628135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:07.629178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:08.629668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:08.720059 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6265" for this suite. @ 09/14/24 14:06:08.724
â€¢ [3.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/14/24 14:06:08.733
  I0914 14:06:08.733456 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename replicaset @ 09/14/24 14:06:08.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:08.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:08.752
  STEP: Create a Replicaset @ 09/14/24 14:06:08.759
  STEP: Verify that the required pods have come up. @ 09/14/24 14:06:08.765
  I0914 14:06:08.771111 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0914 14:06:09.629766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:10.631329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:11.631849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:12.632010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:13.632868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:13.776333 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/24 14:06:13.776
  STEP: Getting /status @ 09/14/24 14:06:13.776
  I0914 14:06:13.781374 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/14/24 14:06:13.781
  I0914 14:06:13.793032 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/14/24 14:06:13.793
  I0914 14:06:13.794939 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0914 14:06:13.795023 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.795087 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.795292 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.795309 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1706 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 14:06:13.795346 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/14/24 14:06:13.795
  I0914 14:06:13.795521 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 14:06:13.802904 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/14/24 14:06:13.802
  I0914 14:06:13.804863 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0914 14:06:13.805009 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.805135 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.805205 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.805283 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1706 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 14:06:13.805378 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0914 14:06:13.805395 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1706 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0914 14:06:13.805405 20 replica_set.go:729] Replicaset test-rs has a patched status
  I0914 14:06:13.805615 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1706" for this suite. @ 09/14/24 14:06:13.811
â€¢ [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/14/24 14:06:13.819
  I0914 14:06:13.819417 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename projected @ 09/14/24 14:06:13.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:13.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:13.841
  STEP: Creating configMap with name projected-configmap-test-volume-map-12593319-417c-46dc-adda-5e0928e8fa95 @ 09/14/24 14:06:13.845
  STEP: Creating a pod to test consume configMaps @ 09/14/24 14:06:13.85
  E0914 14:06:14.633524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:15.633759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:16.633942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:17.634178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 14:06:17.882
  I0914 14:06:17.888055 20 output.go:196] Trying to get logs from node ip-172-31-33-255 pod pod-projected-configmaps-96b5c962-d655-4130-89cf-992517130517 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/24 14:06:17.897
  I0914 14:06:17.917103 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5174" for this suite. @ 09/14/24 14:06:17.922
â€¢ [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/14/24 14:06:17.932
  I0914 14:06:17.932554 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename watch @ 09/14/24 14:06:17.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:17.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:17.954
  STEP: creating a watch on configmaps with label A @ 09/14/24 14:06:17.961
  STEP: creating a watch on configmaps with label B @ 09/14/24 14:06:17.963
  STEP: creating a watch on configmaps with label A or B @ 09/14/24 14:06:17.964
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/14/24 14:06:17.966
  I0914 14:06:17.972019 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49208 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:17.972124 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49208 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/14/24 14:06:17.972
  I0914 14:06:17.984183 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49209 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:17.984494 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49209 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/14/24 14:06:17.984
  I0914 14:06:17.994570 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49210 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:17.994720 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49210 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/14/24 14:06:17.994
  I0914 14:06:18.001951 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49211 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:18.001997 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1269  4a423637-ef72-4013-a4a5-0bc05d2eb6a6 49211 0 2024-09-14 14:06:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/14/24 14:06:18.002
  I0914 14:06:18.007254 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1269  6c5b9908-edb4-4a69-9a1b-78e9faf5a14e 49212 0 2024-09-14 14:06:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:18.007374 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1269  6c5b9908-edb4-4a69-9a1b-78e9faf5a14e 49212 0 2024-09-14 14:06:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0914 14:06:18.635003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:19.635207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:20.643789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:21.644207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:22.644278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:23.644583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:24.645204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:25.645385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:26.645669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:27.645867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/14/24 14:06:28.008
  I0914 14:06:28.017842 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1269  6c5b9908-edb4-4a69-9a1b-78e9faf5a14e 49260 0 2024-09-14 14:06:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 14:06:28.017890 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1269  6c5b9908-edb4-4a69-9a1b-78e9faf5a14e 49260 0 2024-09-14 14:06:18 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-14 14:06:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0914 14:06:28.646819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:29.646938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:30.651548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:31.652124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:32.653200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:33.653409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:34.653517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:35.653743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:36.653933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:37.654435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:38.018145 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1269" for this suite. @ 09/14/24 14:06:38.024
â€¢ [20.101 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/14/24 14:06:38.033
  I0914 14:06:38.033675 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename services @ 09/14/24 14:06:38.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:38.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:38.053
  STEP: creating service endpoint-test2 in namespace services-3011 @ 09/14/24 14:06:38.057
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3011 to expose endpoints map[] @ 09/14/24 14:06:38.067
  I0914 14:06:38.073674 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0914 14:06:38.654667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:39.084894 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3011 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3011 @ 09/14/24 14:06:39.084
  E0914 14:06:39.655675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:40.655808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3011 to expose endpoints map[pod1:[80]] @ 09/14/24 14:06:41.112
  I0914 14:06:41.126789 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3011 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/14/24 14:06:41.126
  I0914 14:06:41.126853 20 resource.go:361] Creating new exec pod
  E0914 14:06:41.656146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:42.656236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:43.656606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:44.145492 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0914 14:06:44.237395 20 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0914 14:06:44.237437 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:06:44.237507 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.181 80'
  I0914 14:06:44.328389 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.181 80\nConnection to 10.152.183.181 80 port [tcp/http] succeeded!\n"
  I0914 14:06:44.328442 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3011 @ 09/14/24 14:06:44.328
  E0914 14:06:44.656710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:45.657222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3011 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/14/24 14:06:46.354
  I0914 14:06:46.373202 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3011 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/14/24 14:06:46.373
  E0914 14:06:46.658261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:47.374299 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0914 14:06:47.468007 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0914 14:06:47.468046 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:06:47.468111 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.181 80'
  I0914 14:06:47.568131 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.181 80\n+ echo hostName\nConnection to 10.152.183.181 80 port [tcp/http] succeeded!\n"
  I0914 14:06:47.568169 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3011 @ 09/14/24 14:06:47.568
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3011 to expose endpoints map[pod2:[80]] @ 09/14/24 14:06:47.591
  E0914 14:06:47.658336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:48.627261 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3011 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/14/24 14:06:48.627
  E0914 14:06:48.659204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:49.628123 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0914 14:06:49.659808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:06:49.720185 20 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0914 14:06:49.720232 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:06:49.720299 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1844532372 --namespace=services-3011 exec execpod92vt6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.181 80'
  I0914 14:06:49.810243 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.181 80\nConnection to 10.152.183.181 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0914 14:06:49.810290 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3011 @ 09/14/24 14:06:49.81
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3011 to expose endpoints map[] @ 09/14/24 14:06:49.83
  I0914 14:06:49.843493 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-3011 exposes endpoints map[]
  I0914 14:06:49.862486 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3011" for this suite. @ 09/14/24 14:06:49.866
â€¢ [11.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/14/24 14:06:49.873
  I0914 14:06:49.873823 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename downward-api @ 09/14/24 14:06:49.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:49.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:49.892
  STEP: Creating a pod to test downward api env vars @ 09/14/24 14:06:49.895
  E0914 14:06:50.660140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:51.660232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/24 14:06:51.916
  I0914 14:06:51.921851 20 output.go:196] Trying to get logs from node ip-172-31-8-243 pod downward-api-1ba1367e-9eea-4d1a-9a84-68247fbfbb09 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/24 14:06:51.931
  I0914 14:06:51.952867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7821" for this suite. @ 09/14/24 14:06:51.957
â€¢ [2.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/14/24 14:06:51.965
  I0914 14:06:51.965676 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/24 14:06:51.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:06:51.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:06:51.985
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/24 14:06:51.993
  E0914 14:06:52.661250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:53.661337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/14/24 14:06:54.019
  E0914 14:06:54.661453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:55.661527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/14/24 14:06:56.043
  STEP: delete the pod with lifecycle hook @ 09/14/24 14:06:56.052
  E0914 14:06:56.661773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:57.662056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:58.662926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:06:59.663301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:07:00.078372 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9237" for this suite. @ 09/14/24 14:07:00.083
â€¢ [8.127 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/14/24 14:07:00.092
  I0914 14:07:00.092188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 14:07:00.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:07:00.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:07:00.112
  STEP: Creating a ResourceQuota @ 09/14/24 14:07:00.115
  STEP: Getting a ResourceQuota @ 09/14/24 14:07:00.12
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/14/24 14:07:00.126
  STEP: Patching the ResourceQuota @ 09/14/24 14:07:00.129
  STEP: Deleting a Collection of ResourceQuotas @ 09/14/24 14:07:00.137
  STEP: Verifying the deleted ResourceQuota @ 09/14/24 14:07:00.147
  I0914 14:07:00.151581 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5764" for this suite. @ 09/14/24 14:07:00.156
â€¢ [0.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/14/24 14:07:00.166
  I0914 14:07:00.166778 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1844532372
  STEP: Building a namespace api object, basename resourcequota @ 09/14/24 14:07:00.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/24 14:07:00.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/24 14:07:00.188
  STEP: Creating a ResourceQuota with terminating scope @ 09/14/24 14:07:00.206
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/24 14:07:00.213
  E0914 14:07:00.663741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:01.663949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/14/24 14:07:02.219
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/24 14:07:02.225
  E0914 14:07:02.664206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:03.664859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/14/24 14:07:04.232
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/14/24 14:07:04.249
  E0914 14:07:04.665226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:05.665291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/14/24 14:07:06.255
  E0914 14:07:06.665334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:07.665511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/14/24 14:07:08.261
  STEP: Ensuring resource quota status released the pod usage @ 09/14/24 14:07:08.281
  E0914 14:07:08.666056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:09.666249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/14/24 14:07:10.286
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/14/24 14:07:10.298
  E0914 14:07:10.667274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:11.667461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/14/24 14:07:12.304
  E0914 14:07:12.667695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:13.667883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/14/24 14:07:14.31
  STEP: Ensuring resource quota status released the pod usage @ 09/14/24 14:07:14.329
  E0914 14:07:14.668804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0914 14:07:15.669361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0914 14:07:16.335742 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4372" for this suite. @ 09/14/24 14:07:16.341
â€¢ [16.183 seconds]
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0914 14:07:16.349732 20 suites.go:34] Running AfterSuite actions on node 1
  I0914 14:07:16.349746 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.027 seconds]
------------------------------

Ran 404 of 6603 Specs in 6482.558 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h48m3.315360225s
Test Suite Passed
