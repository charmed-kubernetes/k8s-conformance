  I0928 12:16:58.056540      18 e2e.go:109] Starting e2e run "8b713d76-5417-4e7d-90d5-abbfd20b4f47" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1727525817 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0928 12:16:58.276502 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 12:16:58.277532 18 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0928 12:16:58.313140 18 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0928 12:16:58.317942 18 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0928 12:16:58.317982 18 e2e.go:245] e2e test version: v1.31.1
  I0928 12:16:58.319329 18 e2e.go:254] kube-apiserver version: v1.31.1
  I0928 12:16:58.319507 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 12:16:58.324083 18 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/28/24 12:16:58.526
  I0928 12:16:58.526331 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:16:58.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:16:58.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:16:58.558
  I0928 12:17:20.639424 18 container_probe.go:92] Container started at 2024-09-28 12:17:04 +0000 UTC, pod became ready at 2024-09-28 12:17:19 +0000 UTC
  I0928 12:17:20.639535 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2640" for this suite. @ 09/28/24 12:17:20.643
â€¢ [22.123 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/28/24 12:17:20.649
  I0928 12:17:20.649817 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename init-container @ 09/28/24 12:17:20.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:17:20.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:17:20.668
  STEP: creating the pod @ 09/28/24 12:17:20.671
  I0928 12:17:20.671572 18 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0928 12:18:01.394840 18 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4be94632-e0f5-4caa-a2f7-da47b71bfe80", GenerateName:"", Namespace:"init-container-3644", SelfLink:"", UID:"efc6f5b3-a3d4-47b9-8567-681486b1a00d", ResourceVersion:"4454", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"671551652"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bd43c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 12, 18, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bd4408), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wvdrc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000d2fba0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wvdrc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wvdrc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wvdrc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004db4588), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-43-233", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000152c80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004db4610)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004db4630)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004db4638), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004db463c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0016ec550), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 28, 12, 17, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.43.233", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.43.233"}}, PodIP:"192.168.38.66", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.38.66"}}, StartTime:time.Date(2024, time.September, 28, 12, 17, 20, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000433d50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000433e30)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://48c146872e41d605e9900ad0555da3f2b8ae2d573a8ea2295aed237099f107d0", Started:(*bool)(0xc004db46ea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wvdrc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0016ec570)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000d2fc00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004db46fd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wvdrc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0016ec580)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000d2fbe0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004db46b4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-wvdrc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0016ec560)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0928 12:18:01.394987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3644" for this suite. @ 09/28/24 12:18:01.4
â€¢ [40.756 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/28/24 12:18:01.405
  I0928 12:18:01.405678 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:18:01.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:18:01.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:18:01.425
  STEP: Setting up server cert @ 09/28/24 12:18:01.449
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:18:01.531
  STEP: Deploying the webhook pod @ 09/28/24 12:18:01.539
  STEP: Wait for the deployment to be ready @ 09/28/24 12:18:01.552
  I0928 12:18:01.564763 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/28/24 12:18:03.577
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:18:03.588
  I0928 12:18:04.589017 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/28/24 12:18:04.598
  STEP: create a configmap that should be updated by the webhook @ 09/28/24 12:18:04.613
  I0928 12:18:04.666636 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3054" for this suite. @ 09/28/24 12:18:04.671
  STEP: Destroying namespace "webhook-markers-4821" for this suite. @ 09/28/24 12:18:04.677
â€¢ [3.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/28/24 12:18:04.684
  I0928 12:18:04.684824 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 12:18:04.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:18:04.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:18:04.699
  STEP: Counting existing ResourceQuota @ 09/28/24 12:18:04.702
  STEP: Creating a ResourceQuota @ 09/28/24 12:18:09.705
  STEP: Ensuring resource quota status is calculated @ 09/28/24 12:18:09.712
  STEP: Creating a Service @ 09/28/24 12:18:11.715
  STEP: Creating a NodePort Service @ 09/28/24 12:18:11.731
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/28/24 12:18:11.754
  STEP: Ensuring resource quota status captures service creation @ 09/28/24 12:18:11.771
  STEP: Deleting Services @ 09/28/24 12:18:13.776
  STEP: Ensuring resource quota status released usage @ 09/28/24 12:18:13.809
  I0928 12:18:15.813664 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1548" for this suite. @ 09/28/24 12:18:15.817
â€¢ [11.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/28/24 12:18:15.824
  I0928 12:18:15.824834 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 12:18:15.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:18:15.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:18:15.842
  STEP: Creating service test in namespace statefulset-1890 @ 09/28/24 12:18:15.847
  STEP: Creating a new StatefulSet @ 09/28/24 12:18:15.852
  I0928 12:18:15.864542 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I0928 12:18:25.866622 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:18:25.866656 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:18:25.866665 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  I0928 12:18:35.867105 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:18:35.867136 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:18:35.867143 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/28/24 12:18:35.877
  I0928 12:18:35.886795 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/28/24 12:18:35.886
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/28/24 12:18:45.895
  STEP: Performing a canary update @ 09/28/24 12:18:45.895
  I0928 12:18:45.907172 18 statefulset.go:2507] Updating stateful set ss2
  I0928 12:18:45.914847 18 wait.go:74] Waiting for Pod statefulset-1890/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/28/24 12:18:55.916
  I0928 12:18:55.955493 18 wait.go:40] Found 2 stateful pods, waiting for 3
  I0928 12:19:05.953417 18 wait.go:40] Found 2 stateful pods, waiting for 3
  I0928 12:19:15.954735 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:19:15.954767 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:19:15.954774 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/28/24 12:19:15.963
  I0928 12:19:15.974283 18 statefulset.go:2507] Updating stateful set ss2
  I0928 12:19:16.116739 18 wait.go:74] Waiting for Pod statefulset-1890/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0928 12:19:25.995327 18 statefulset.go:2507] Updating stateful set ss2
  I0928 12:19:26.004040 18 wait.go:56] Waiting for StatefulSet statefulset-1890/ss2 to complete update
  I0928 12:19:26.004071 18 wait.go:63] Waiting for Pod statefulset-1890/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0928 12:19:36.003882 18 statefulset.go:138] Deleting all statefulset in ns statefulset-1890
  I0928 12:19:36.007845 18 rest.go:150] Scaling statefulset ss2 to 0
  I0928 12:19:46.024587 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 12:19:46.028716 18 rest.go:88] Deleting statefulset ss2
  I0928 12:19:46.041658 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1890" for this suite. @ 09/28/24 12:19:46.048
â€¢ [90.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/28/24 12:19:46.054
  I0928 12:19:46.054641 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubelet-test @ 09/28/24 12:19:46.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:46.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:46.071
  I0928 12:19:50.096993 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-246" for this suite. @ 09/28/24 12:19:50.101
â€¢ [4.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/28/24 12:19:50.107
  I0928 12:19:50.107803 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 12:19:50.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:50.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:50.127
  STEP: Creating secret with name secret-test-8f95f1bd-0338-4c31-a0d1-fc0bf3b627ff @ 09/28/24 12:19:50.13
  STEP: Creating a pod to test consume secrets @ 09/28/24 12:19:50.135
  STEP: Saw pod success @ 09/28/24 12:19:54.156
  I0928 12:19:54.160934 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-secrets-9083e33b-f45b-4e35-bbbf-ba9acae99ba7 container secret-env-test: <nil>
  STEP: delete the pod @ 09/28/24 12:19:54.177
  I0928 12:19:54.190839 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7016" for this suite. @ 09/28/24 12:19:54.193
â€¢ [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/28/24 12:19:54.199
  I0928 12:19:54.199509 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption @ 09/28/24 12:19:54.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:54.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:54.219
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:19:54.226
  STEP: Waiting for all pods to be running @ 09/28/24 12:19:56.255
  I0928 12:19:56.261751 18 disruption.go:691] running pods: 0 < 3
  I0928 12:19:58.264263 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5263" for this suite. @ 09/28/24 12:19:58.268
â€¢ [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/28/24 12:19:58.274
  I0928 12:19:58.274894 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/28/24 12:19:58.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:58.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:58.294
  STEP: getting /apis @ 09/28/24 12:19:58.303
  STEP: getting /apis/admissionregistration.k8s.io @ 09/28/24 12:19:58.306
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/28/24 12:19:58.308
  STEP: creating @ 09/28/24 12:19:58.309
  STEP: getting @ 09/28/24 12:19:58.323
  STEP: listing @ 09/28/24 12:19:58.326
  STEP: watching @ 09/28/24 12:19:58.329
  I0928 12:19:58.329992 18 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/28/24 12:19:58.331
  STEP: updating @ 09/28/24 12:19:58.335
  I0928 12:19:58.345230 18 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/28/24 12:19:58.345
  STEP: deleting a collection @ 09/28/24 12:19:58.356
  I0928 12:19:58.372714 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2685" for this suite. @ 09/28/24 12:19:58.376
â€¢ [0.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/28/24 12:19:58.382
  I0928 12:19:58.382774 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/28/24 12:19:58.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:58.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:58.399
  STEP: fetching the /apis discovery document @ 09/28/24 12:19:58.403
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/28/24 12:19:58.404
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/28/24 12:19:58.404
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/28/24 12:19:58.404
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/28/24 12:19:58.405
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/28/24 12:19:58.405
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/28/24 12:19:58.407
  I0928 12:19:58.407269 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8712" for this suite. @ 09/28/24 12:19:58.41
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/28/24 12:19:58.417
  I0928 12:19:58.417114 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename apf @ 09/28/24 12:19:58.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:58.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:58.436
  STEP: getting /apis @ 09/28/24 12:19:58.439
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/28/24 12:19:58.442
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/28/24 12:19:58.443
  STEP: creating @ 09/28/24 12:19:58.444
  STEP: getting @ 09/28/24 12:19:58.461
  STEP: listing @ 09/28/24 12:19:58.467
  STEP: watching @ 09/28/24 12:19:58.471
  I0928 12:19:58.471037 18 flowcontrol.go:394] starting watch
  STEP: patching @ 09/28/24 12:19:58.472
  STEP: updating @ 09/28/24 12:19:58.476
  I0928 12:19:58.483768 18 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/28/24 12:19:58.483
  STEP: patching /status @ 09/28/24 12:19:58.486
  STEP: updating /status @ 09/28/24 12:19:58.492
  STEP: deleting @ 09/28/24 12:19:58.505
  STEP: deleting a collection @ 09/28/24 12:19:58.516
  I0928 12:19:58.533677 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5111" for this suite. @ 09/28/24 12:19:58.536
â€¢ [0.126 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/28/24 12:19:58.543
  I0928 12:19:58.543437 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:19:58.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:19:58.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:19:58.561
  STEP: Setting up server cert @ 09/28/24 12:19:58.585
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:19:58.715
  STEP: Deploying the webhook pod @ 09/28/24 12:19:58.726
  STEP: Wait for the deployment to be ready @ 09/28/24 12:19:58.738
  I0928 12:19:58.754096 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/28/24 12:20:00.766
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:20:00.776
  I0928 12:20:01.776634 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/28/24 12:20:01.789
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/28/24 12:20:01.791
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/28/24 12:20:01.791
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/28/24 12:20:01.791
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/28/24 12:20:01.793
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/28/24 12:20:01.793
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/28/24 12:20:01.794
  I0928 12:20:01.846781 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9565" for this suite. @ 09/28/24 12:20:01.851
  STEP: Destroying namespace "webhook-markers-1697" for this suite. @ 09/28/24 12:20:01.862
â€¢ [3.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/28/24 12:20:01.871
  I0928 12:20:01.871134 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 12:20:01.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:01.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:01.898
  I0928 12:20:01.904055 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  W0928 12:20:04.448528      18 warnings.go:70] unknown field "alpha"
  W0928 12:20:04.448548      18 warnings.go:70] unknown field "beta"
  W0928 12:20:04.448551      18 warnings.go:70] unknown field "delta"
  W0928 12:20:04.448553      18 warnings.go:70] unknown field "epsilon"
  W0928 12:20:04.448556      18 warnings.go:70] unknown field "gamma"
  I0928 12:20:04.991599 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-471" for this suite. @ 09/28/24 12:20:04.994
â€¢ [3.129 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/28/24 12:20:05
  I0928 12:20:05.000318 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context-test @ 09/28/24 12:20:05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:05.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:05.02
  I0928 12:20:07.043482 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3946" for this suite. @ 09/28/24 12:20:07.05
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/28/24 12:20:07.055
  I0928 12:20:07.055265 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 12:20:07.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:07.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:07.072
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/28/24 12:20:07.076
  STEP: When a replication controller with a matching selector is created @ 09/28/24 12:20:09.095
  STEP: Then the orphan pod is adopted @ 09/28/24 12:20:09.1
  I0928 12:20:10.108755 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5502" for this suite. @ 09/28/24 12:20:10.113
â€¢ [3.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/28/24 12:20:10.121
  I0928 12:20:10.121216 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename containers @ 09/28/24 12:20:10.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:10.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:10.142
  STEP: Creating a pod to test override command @ 09/28/24 12:20:10.146
  STEP: Saw pod success @ 09/28/24 12:20:14.17
  I0928 12:20:14.174861 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod client-containers-a55cc9c7-1cf6-4b2b-a9cf-554a7d5f4125 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:20:14.192
  I0928 12:20:14.208081 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8338" for this suite. @ 09/28/24 12:20:14.211
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/28/24 12:20:14.217
  I0928 12:20:14.217525 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl-logs @ 09/28/24 12:20:14.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:14.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:14.237
  STEP: creating a pod @ 09/28/24 12:20:14.24
  I0928 12:20:14.240796 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0928 12:20:14.294689 18 builder.go:146] stderr: ""
  I0928 12:20:14.294766 18 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/28/24 12:20:14.294
  I0928 12:20:14.294931 18 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0928 12:20:16.304793 18 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/28/24 12:20:16.304
  I0928 12:20:16.304887 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator'
  I0928 12:20:16.359187 18 builder.go:146] stderr: ""
  I0928 12:20:16.359235 18 builder.go:147] stdout: "I0928 12:20:14.822043       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/tdqk 268\nI0928 12:20:15.022461       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/n78 535\nI0928 12:20:15.222772       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/szt 377\nI0928 12:20:15.423097       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/lk6 308\nI0928 12:20:15.622436       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/km2 309\nI0928 12:20:15.822725       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/65d 441\nI0928 12:20:16.023051       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/dhw 227\nI0928 12:20:16.222372       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gtjp 362\n"
  STEP: limiting log lines @ 09/28/24 12:20:16.359
  I0928 12:20:16.359319 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator --tail=1'
  I0928 12:20:16.407477 18 builder.go:146] stderr: ""
  I0928 12:20:16.407519 18 builder.go:147] stdout: "I0928 12:20:16.222372       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gtjp 362\n"
  I0928 12:20:16.407527 18 logs.go:180] got output "I0928 12:20:16.222372       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gtjp 362\n"
  STEP: limiting log bytes @ 09/28/24 12:20:16.407
  I0928 12:20:16.407613 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator --limit-bytes=1'
  I0928 12:20:16.456016 18 builder.go:146] stderr: ""
  I0928 12:20:16.456050 18 builder.go:147] stdout: "I"
  I0928 12:20:16.456058 18 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/28/24 12:20:16.456
  I0928 12:20:16.456135 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator --tail=1 --timestamps'
  I0928 12:20:16.503808 18 builder.go:146] stderr: ""
  I0928 12:20:16.503843 18 builder.go:147] stdout: "2024-09-28T12:20:16.422780520Z I0928 12:20:16.422701       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/c7tc 524\n"
  I0928 12:20:16.503858 18 logs.go:192] got output "2024-09-28T12:20:16.422780520Z I0928 12:20:16.422701       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/c7tc 524\n"
  STEP: restricting to a time range @ 09/28/24 12:20:16.503
  I0928 12:20:19.004650 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator --since=1s'
  I0928 12:20:19.054012 18 builder.go:146] stderr: ""
  I0928 12:20:19.054052 18 builder.go:147] stdout: "I0928 12:20:18.222436       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/pnz 584\nI0928 12:20:18.422726       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/48w 559\nI0928 12:20:18.623056       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/g4q 361\nI0928 12:20:18.822455       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/s2sg 213\nI0928 12:20:19.022751       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/k848 524\n"
  I0928 12:20:19.054092 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 logs logs-generator logs-generator --since=24h'
  I0928 12:20:19.103687 18 builder.go:146] stderr: ""
  I0928 12:20:19.103748 18 builder.go:147] stdout: "I0928 12:20:14.822043       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/tdqk 268\nI0928 12:20:15.022461       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/n78 535\nI0928 12:20:15.222772       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/szt 377\nI0928 12:20:15.423097       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/lk6 308\nI0928 12:20:15.622436       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/km2 309\nI0928 12:20:15.822725       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/65d 441\nI0928 12:20:16.023051       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/dhw 227\nI0928 12:20:16.222372       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gtjp 362\nI0928 12:20:16.422701       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/c7tc 524\nI0928 12:20:16.623022       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/5mr 227\nI0928 12:20:16.822371       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/52q 432\nI0928 12:20:17.022683       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/87z 468\nI0928 12:20:17.222979       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/c2qq 335\nI0928 12:20:17.422199       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/7nkd 544\nI0928 12:20:17.622534       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/x4v 399\nI0928 12:20:17.822855       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/6lq5 411\nI0928 12:20:18.022117       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/9fw 309\nI0928 12:20:18.222436       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/pnz 584\nI0928 12:20:18.422726       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/48w 559\nI0928 12:20:18.623056       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/g4q 361\nI0928 12:20:18.822455       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/s2sg 213\nI0928 12:20:19.022751       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/k848 524\n"
  I0928 12:20:19.103874 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-logs-2557 delete pod logs-generator'
  I0928 12:20:19.691535 18 builder.go:146] stderr: ""
  I0928 12:20:19.691589 18 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0928 12:20:19.691754 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2557" for this suite. @ 09/28/24 12:20:19.696
â€¢ [5.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/28/24 12:20:19.704
  I0928 12:20:19.704373 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 12:20:19.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:19.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:19.724
  STEP: Creating a test namespace @ 09/28/24 12:20:19.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:19.741
  STEP: Creating a service in the namespace @ 09/28/24 12:20:19.746
  STEP: Deleting the namespace @ 09/28/24 12:20:19.757
  STEP: Waiting for the namespace to be removed. @ 09/28/24 12:20:19.763
  STEP: Recreating the namespace @ 09/28/24 12:20:25.766
  STEP: Verifying there is no service in the namespace @ 09/28/24 12:20:25.782
  I0928 12:20:25.787456 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1393" for this suite. @ 09/28/24 12:20:25.79
  STEP: Destroying namespace "nsdeletetest-5995" for this suite. @ 09/28/24 12:20:25.794
  I0928 12:20:25.797509 18 framework.go:370] Namespace nsdeletetest-5995 was already deleted
  STEP: Destroying namespace "nsdeletetest-3911" for this suite. @ 09/28/24 12:20:25.797
â€¢ [6.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/28/24 12:20:25.804
  I0928 12:20:25.804747 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 12:20:25.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:25.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:25.822
  STEP: Creating a pod to test env composition @ 09/28/24 12:20:25.826
  STEP: Saw pod success @ 09/28/24 12:20:27.84
  I0928 12:20:27.844248 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod var-expansion-2a241787-716b-4c36-8e35-a299008de1b3 container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 12:20:27.85
  I0928 12:20:27.863705 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2335" for this suite. @ 09/28/24 12:20:27.867
â€¢ [2.068 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/28/24 12:20:27.872
  I0928 12:20:27.872777 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption @ 09/28/24 12:20:27.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:27.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:27.891
  STEP: Creating a kubernetes client @ 09/28/24 12:20:27.894
  I0928 12:20:27.895011 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption-2 @ 09/28/24 12:20:27.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:27.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:27.913
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:20:27.921
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:20:29.93
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:20:31.942
  STEP: listing a collection of PDBs across all namespaces @ 09/28/24 12:20:33.947
  STEP: listing a collection of PDBs in namespace disruption-3874 @ 09/28/24 12:20:33.95
  STEP: deleting a collection of PDBs @ 09/28/24 12:20:33.954
  STEP: Waiting for the PDB collection to be deleted @ 09/28/24 12:20:33.965
  I0928 12:20:33.968401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-806" for this suite. @ 09/28/24 12:20:33.971
  I0928 12:20:33.977670 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3874" for this suite. @ 09/28/24 12:20:33.981
â€¢ [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/28/24 12:20:33.988
  I0928 12:20:33.988937 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 12:20:33.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:34.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:34.005
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/28/24 12:20:34.009
  STEP: Saw pod success @ 09/28/24 12:20:36.029
  I0928 12:20:36.032795 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-f5447453-0658-4e23-9c9c-ac1c42648473 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 12:20:36.038
  I0928 12:20:36.055798 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9047" for this suite. @ 09/28/24 12:20:36.059
â€¢ [2.075 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/28/24 12:20:36.064
  I0928 12:20:36.064360 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/28/24 12:20:36.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:36.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:36.082
  STEP: create the container to handle the HTTPGet hook request. @ 09/28/24 12:20:36.092
  STEP: create the pod with lifecycle hook @ 09/28/24 12:20:38.117
  STEP: check poststart hook @ 09/28/24 12:20:40.14
  STEP: delete the pod with lifecycle hook @ 09/28/24 12:20:40.145
  I0928 12:20:42.163678 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2892" for this suite. @ 09/28/24 12:20:42.167
â€¢ [6.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/28/24 12:20:42.175
  I0928 12:20:42.175793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:20:42.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:42.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:42.195
  STEP: Creating secret with name projected-secret-test-0be30415-8044-45b5-8a14-4131713fe2e4 @ 09/28/24 12:20:42.198
  STEP: Creating a pod to test consume secrets @ 09/28/24 12:20:42.202
  STEP: Saw pod success @ 09/28/24 12:20:46.229
  I0928 12:20:46.232334 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-projected-secrets-485e190a-4f66-4519-b98e-781cdf7eff88 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 12:20:46.238
  I0928 12:20:46.253367 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9418" for this suite. @ 09/28/24 12:20:46.256
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/28/24 12:20:46.264
  I0928 12:20:46.264939 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 12:20:46.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:46.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:46.287
  STEP: creating a ConfigMap @ 09/28/24 12:20:46.29
  STEP: fetching the ConfigMap @ 09/28/24 12:20:46.296
  STEP: patching the ConfigMap @ 09/28/24 12:20:46.311
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/28/24 12:20:46.318
  STEP: deleting the ConfigMap by collection with a label selector @ 09/28/24 12:20:46.321
  STEP: listing all ConfigMaps in test namespace @ 09/28/24 12:20:46.328
  I0928 12:20:46.332123 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-224" for this suite. @ 09/28/24 12:20:46.335
â€¢ [0.077 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/28/24 12:20:46.341
  I0928 12:20:46.341530 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 12:20:46.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:46.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:46.36
  STEP: Creating a pod to test downward api env vars @ 09/28/24 12:20:46.363
  STEP: Saw pod success @ 09/28/24 12:20:50.403
  I0928 12:20:50.406388 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod downward-api-bac94c22-4499-437b-9668-dcc8b61ebdb8 container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 12:20:50.414
  I0928 12:20:50.432613 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4149" for this suite. @ 09/28/24 12:20:50.435
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/28/24 12:20:50.44
  I0928 12:20:50.440965 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-pred @ 09/28/24 12:20:50.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:20:50.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:20:50.46
  I0928 12:20:50.463542 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0928 12:20:50.471352 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 12:20:50.475008 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-43-233 before test
  I0928 12:20:50.479955 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hwx5d from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:50 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.479975 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 12:20:50.479981 18 predicates.go:957] calico-node-w4t86 from kube-system started at 2024-09-28 12:11:04 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.479987 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 12:20:50.479993 18 predicates.go:957] sonobuoy-e2e-job-3786396138ca4f60 from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 12:20:50.479997 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0928 12:20:50.480002 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 12:20:50.480007 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 12:20:50.480012 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 12:20:50.480017 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 12:20:50.480023 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-6-28 before test
  I0928 12:20:50.484992 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kpn8x from ingress-nginx-kubernetes-worker started at 2024-09-28 12:09:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.485010 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 12:20:50.485016 18 predicates.go:957] calico-node-5nq6s from kube-system started at 2024-09-28 12:10:43 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.485035 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 12:20:50.485041 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-28 12:16:46 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.485045 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0928 12:20:50.485050 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-rsrhj from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 12:20:50.485055 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 12:20:50.485060 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 12:20:50.485070 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-80 before test
  I0928 12:20:50.489252 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gxfnw from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489269 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 12:20:50.489276 18 predicates.go:957] calico-node-4k796 from kube-system started at 2024-09-28 12:10:53 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489281 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 12:20:50.489286 18 predicates.go:957] coredns-5b4857d7c8-pb4s9 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489291 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0928 12:20:50.489295 18 predicates.go:957] kube-state-metrics-5d7bdccd49-ltzpt from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489300 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0928 12:20:50.489311 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-64tv5 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (2 container statuses recorded)
  I0928 12:20:50.489316 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0928 12:20:50.489320 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0928 12:20:50.489325 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-t64jl from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489329 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0928 12:20:50.489334 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cm655 from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 12:20:50.489357 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0928 12:20:50.489363 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-n5wgl from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 12:20:50.489396 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 12:20:50.489412 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/28/24 12:20:50.489
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/28/24 12:20:52.511
  STEP: Trying to apply a random label on the found node. @ 09/28/24 12:20:52.527
  STEP: verifying the node has the label kubernetes.io/e2e-840e4401-4b64-4a39-b3a6-a1713b2acedf 95 @ 09/28/24 12:20:52.535
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/28/24 12:20:52.539
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.6.28 on the node which pod4 resides and expect not scheduled @ 09/28/24 12:20:54.556
  STEP: removing the label kubernetes.io/e2e-840e4401-4b64-4a39-b3a6-a1713b2acedf off the node ip-172-31-6-28 @ 09/28/24 12:25:54.564
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-840e4401-4b64-4a39-b3a6-a1713b2acedf @ 09/28/24 12:25:54.577
  I0928 12:25:54.580900 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2263" for this suite. @ 09/28/24 12:25:54.585
â€¢ [304.153 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/28/24 12:25:54.593
  I0928 12:25:54.593785 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 12:25:54.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:25:54.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:25:54.611
  STEP: creating secret secrets-7043/secret-test-a524d84b-134c-4816-96c4-b972ba192dda @ 09/28/24 12:25:54.614
  STEP: Creating a pod to test consume secrets @ 09/28/24 12:25:54.619
  STEP: Saw pod success @ 09/28/24 12:25:58.643
  I0928 12:25:58.647296 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-configmaps-132d6125-7715-47af-8315-998415b91539 container env-test: <nil>
  STEP: delete the pod @ 09/28/24 12:25:58.664
  I0928 12:25:58.678804 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7043" for this suite. @ 09/28/24 12:25:58.681
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/28/24 12:25:58.688
  I0928 12:25:58.688389 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subpath @ 09/28/24 12:25:58.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:25:58.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:25:58.707
  STEP: Setting up data @ 09/28/24 12:25:58.71
  STEP: Creating pod pod-subpath-test-downwardapi-l5sv @ 09/28/24 12:25:58.717
  STEP: Creating a pod to test atomic-volume-subpath @ 09/28/24 12:25:58.717
  STEP: Saw pod success @ 09/28/24 12:26:22.795
  I0928 12:26:22.798670 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-subpath-test-downwardapi-l5sv container test-container-subpath-downwardapi-l5sv: <nil>
  STEP: delete the pod @ 09/28/24 12:26:22.806
  STEP: Deleting pod pod-subpath-test-downwardapi-l5sv @ 09/28/24 12:26:22.822
  I0928 12:26:22.822374 18 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-l5sv" in namespace "subpath-2689"
  I0928 12:26:22.825922 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2689" for this suite. @ 09/28/24 12:26:22.83
â€¢ [24.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/28/24 12:26:22.837
  I0928 12:26:22.837405 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 12:26:22.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:22.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:22.858
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/28/24 12:26:22.861
  I0928 12:26:22.861166 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2360 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0928 12:26:22.908751 18 builder.go:146] stderr: ""
  I0928 12:26:22.908787 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/28/24 12:26:22.908
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/28/24 12:26:27.962
  I0928 12:26:27.962539 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2360 get pod e2e-test-httpd-pod -o json'
  I0928 12:26:28.003289 18 builder.go:146] stderr: ""
  I0928 12:26:28.003385 18 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-28T12:26:22Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2360\",\n        \"resourceVersion\": \"6823\",\n        \"uid\": \"be394388-471d-4a0c-9a47-a35855eabc96\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bvq8s\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-6-28\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-bvq8s\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-28T12:26:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-28T12:26:22Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-28T12:26:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-28T12:26:24Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-28T12:26:22Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://70136dd0b8de6465f652c46ad2bb72a8fd1e35cb6942811e46fcfabc214b0690\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-28T12:26:23Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bvq8s\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.6.28\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.6.28\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.12.86\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.12.86\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-28T12:26:22Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/28/24 12:26:28.003
  I0928 12:26:28.003471 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2360 replace -f -'
  I0928 12:26:28.099251 18 builder.go:146] stderr: ""
  I0928 12:26:28.099287 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/28/24 12:26:28.099
  I0928 12:26:28.102403 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2360 delete pods e2e-test-httpd-pod'
  I0928 12:26:30.263482 18 builder.go:146] stderr: ""
  I0928 12:26:30.263518 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0928 12:26:30.263719 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2360" for this suite. @ 09/28/24 12:26:30.266
â€¢ [7.436 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/28/24 12:26:30.273
  I0928 12:26:30.273336 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 12:26:30.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:30.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:30.293
  STEP: Creating ReplicationController "e2e-rc-s5qkv" @ 09/28/24 12:26:30.296
  I0928 12:26:30.301874 18 rc.go:792] Get Replication Controller "e2e-rc-s5qkv" to confirm replicas
  I0928 12:26:31.302831 18 rc.go:792] Get Replication Controller "e2e-rc-s5qkv" to confirm replicas
  I0928 12:26:31.307688 18 rc.go:801] Found 1 replicas for "e2e-rc-s5qkv" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-s5qkv" @ 09/28/24 12:26:31.307
  STEP: Updating a scale subresource @ 09/28/24 12:26:31.31
  STEP: Verifying replicas where modified for replication controller "e2e-rc-s5qkv" @ 09/28/24 12:26:31.318
  I0928 12:26:31.318288 18 rc.go:792] Get Replication Controller "e2e-rc-s5qkv" to confirm replicas
  I0928 12:26:32.318802 18 rc.go:792] Get Replication Controller "e2e-rc-s5qkv" to confirm replicas
  I0928 12:26:32.323306 18 rc.go:801] Found 2 replicas for "e2e-rc-s5qkv" replication controller
  I0928 12:26:32.323454 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4883" for this suite. @ 09/28/24 12:26:32.327
â€¢ [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/28/24 12:26:32.336
  I0928 12:26:32.336097 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/28/24 12:26:32.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:32.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:32.355
  STEP: Cleaning up the secret @ 09/28/24 12:26:34.398
  STEP: Cleaning up the configmap @ 09/28/24 12:26:34.407
  STEP: Cleaning up the pod @ 09/28/24 12:26:34.415
  I0928 12:26:34.455218 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6926" for this suite. @ 09/28/24 12:26:34.46
â€¢ [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/28/24 12:26:34.47
  I0928 12:26:34.470599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 12:26:34.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:34.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:34.49
  STEP: Counting existing ResourceQuota @ 09/28/24 12:26:34.493
  STEP: Creating a ResourceQuota @ 09/28/24 12:26:39.496
  STEP: Ensuring resource quota status is calculated @ 09/28/24 12:26:39.501
  STEP: Creating a ReplicaSet @ 09/28/24 12:26:41.506
  STEP: Ensuring resource quota status captures replicaset creation @ 09/28/24 12:26:41.517
  STEP: Deleting a ReplicaSet @ 09/28/24 12:26:43.522
  STEP: Ensuring resource quota status released usage @ 09/28/24 12:26:43.529
  I0928 12:26:45.533911 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3475" for this suite. @ 09/28/24 12:26:45.537
â€¢ [11.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/28/24 12:26:45.544
  I0928 12:26:45.544640 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:26:45.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:45.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:45.569
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:26:45.572
  STEP: Saw pod success @ 09/28/24 12:26:47.588
  I0928 12:26:47.592128 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-666531dc-4dc6-4223-8cb6-99b735fc8f1f container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:26:47.606
  I0928 12:26:47.622620 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7050" for this suite. @ 09/28/24 12:26:47.626
â€¢ [2.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/28/24 12:26:47.633
  I0928 12:26:47.633589 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context-test @ 09/28/24 12:26:47.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:47.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:47.655
  I0928 12:26:49.681453 18 security_context.go:538] Got logs for pod "busybox-privileged-false-778a6439-553c-4cef-82c1-7a3c0aa0bd00": "ip: RTNETLINK answers: Operation not permitted\n"
  I0928 12:26:49.681584 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7910" for this suite. @ 09/28/24 12:26:49.685
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/28/24 12:26:49.692
  I0928 12:26:49.692443 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 12:26:49.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:49.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:49.709
  STEP: creating a ReplicationController @ 09/28/24 12:26:49.716
  STEP: waiting for RC to be added @ 09/28/24 12:26:49.722
  STEP: waiting for available Replicas @ 09/28/24 12:26:49.723
  STEP: patching ReplicationController @ 09/28/24 12:26:52.323
  STEP: waiting for RC to be modified @ 09/28/24 12:26:52.33
  STEP: patching ReplicationController status @ 09/28/24 12:26:52.33
  STEP: waiting for RC to be modified @ 09/28/24 12:26:52.337
  STEP: waiting for available Replicas @ 09/28/24 12:26:52.337
  STEP: fetching ReplicationController status @ 09/28/24 12:26:52.342
  STEP: patching ReplicationController scale @ 09/28/24 12:26:52.345
  STEP: waiting for RC to be modified @ 09/28/24 12:26:52.354
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/28/24 12:26:52.354
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/28/24 12:26:54.24
  STEP: updating ReplicationController status @ 09/28/24 12:26:54.247
  STEP: waiting for RC to be modified @ 09/28/24 12:26:54.256
  STEP: listing all ReplicationControllers @ 09/28/24 12:26:54.256
  STEP: checking that ReplicationController has expected values @ 09/28/24 12:26:54.26
  STEP: deleting ReplicationControllers by collection @ 09/28/24 12:26:54.26
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/28/24 12:26:54.275
  I0928 12:26:54.336641 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0928 12:26:54.336734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2543" for this suite. @ 09/28/24 12:26:54.34
â€¢ [4.654 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/28/24 12:26:54.346
  I0928 12:26:54.346422 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/28/24 12:26:54.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:54.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:54.365
  I0928 12:26:54.368102 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:26:55.337614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:26:56.337727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:26:57.338480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:26:57.412118 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3959" for this suite. @ 09/28/24 12:26:57.415
â€¢ [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/28/24 12:26:57.423
  I0928 12:26:57.423425 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 12:26:57.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:57.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:57.442
  STEP: Starting the proxy @ 09/28/24 12:26:57.446
  I0928 12:26:57.446445 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-3764 proxy --unix-socket=/tmp/kubectl-proxy-unix2250131931/test'
  STEP: retrieving proxy /api/ output @ 09/28/24 12:26:57.475
  I0928 12:26:57.476313 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3764" for this suite. @ 09/28/24 12:26:57.48
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/28/24 12:26:57.486
  I0928 12:26:57.486604 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 12:26:57.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:26:57.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:26:57.506
  STEP: Creating secret with name s-test-opt-del-2e223ef1-1a17-4862-8abe-00d853bb5d28 @ 09/28/24 12:26:57.513
  STEP: Creating secret with name s-test-opt-upd-1600497f-7a3a-4050-9485-631093743d2e @ 09/28/24 12:26:57.518
  STEP: Creating the pod @ 09/28/24 12:26:57.522
  E0928 12:26:58.339405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:26:59.339872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-2e223ef1-1a17-4862-8abe-00d853bb5d28 @ 09/28/24 12:26:59.559
  STEP: Updating secret s-test-opt-upd-1600497f-7a3a-4050-9485-631093743d2e @ 09/28/24 12:26:59.564
  STEP: Creating secret with name s-test-opt-create-f066773c-ecc9-4b52-9a6b-1e171561cc13 @ 09/28/24 12:26:59.57
  STEP: waiting to observe update in volume @ 09/28/24 12:26:59.574
  E0928 12:27:00.339968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:01.340210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:02.341128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:03.342150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:04.342945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:05.343160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:06.343341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:07.343592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:08.343744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:09.343837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:10.343976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:11.344809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:12.345125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:13.346142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:14.346222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:15.346786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:16.346888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:17.347142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:18.347717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:19.347818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:20.348072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:21.348200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:22.349025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:23.349135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:24.349623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:25.349945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:26.350266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:27.350522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:28.351281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:29.351487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:30.351655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:31.351882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:32.351955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:33.352106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:34.352266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:35.352484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:36.352671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:37.352733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:38.353261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:39.353815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:40.353902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:41.353949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:42.354040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:43.354146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:44.354960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:45.355793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:46.356651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:47.356732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:48.357593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:49.357799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:50.357900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:51.358019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:52.358777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:53.358961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:54.359785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:55.360005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:56.361045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:57.361337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:58.361500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:27:59.361633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:00.361855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:01.362816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:02.363476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:03.363755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:04.364787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:05.365103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:06.365778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:07.366759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:08.367786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:09.367930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:10.367997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:11.368275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:12.368403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:13.369201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:14.369943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:15.370073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:15.911117 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7348" for this suite. @ 09/28/24 12:28:15.915
â€¢ [78.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/28/24 12:28:15.924
  I0928 12:28:15.924765 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 12:28:15.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:15.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:15.949
  E0928 12:28:16.370716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:17.370805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/28/24 12:28:17.985
  I0928 12:28:17.985819 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9087 pod-service-account-b0dc113c-4b8a-43c5-bacd-4093555caada -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/28/24 12:28:18.073
  I0928 12:28:18.073466 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9087 pod-service-account-b0dc113c-4b8a-43c5-bacd-4093555caada -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/28/24 12:28:18.153
  I0928 12:28:18.153701 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9087 pod-service-account-b0dc113c-4b8a-43c5-bacd-4093555caada -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0928 12:28:18.235342 18 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-9087"
  I0928 12:28:18.237413 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9087" for this suite. @ 09/28/24 12:28:18.241
â€¢ [2.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/28/24 12:28:18.248
  I0928 12:28:18.248352 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 12:28:18.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:18.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:18.266
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8178.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8178.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/28/24 12:28:18.269
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8178.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8178.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/28/24 12:28:18.269
  STEP: creating a pod to probe /etc/hosts @ 09/28/24 12:28:18.269
  STEP: submitting the pod to kubernetes @ 09/28/24 12:28:18.269
  E0928 12:28:18.371359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:19.371496      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:20.372584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:21.372704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:22.373011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:23.373063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 12:28:24.301
  STEP: looking for the results for each expected name from probers @ 09/28/24 12:28:24.304
  I0928 12:28:24.322675 18 dns_common.go:527] DNS probes using dns-8178/dns-test-7ffbd9c6-572b-489e-87c3-69482d71ac2d succeeded

  STEP: deleting the pod @ 09/28/24 12:28:24.322
  I0928 12:28:24.334102 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8178" for this suite. @ 09/28/24 12:28:24.338
â€¢ [6.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/28/24 12:28:24.343
  I0928 12:28:24.343798 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 12:28:24.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:24.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:24.363
  STEP: creating service in namespace services-5709 @ 09/28/24 12:28:24.366
  STEP: creating service affinity-nodeport in namespace services-5709 @ 09/28/24 12:28:24.366
  E0928 12:28:24.375523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-nodeport in namespace services-5709 @ 09/28/24 12:28:24.383
  I0928 12:28:24.389323      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5709, replica count: 3
  E0928 12:28:25.373953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:26.374843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:27.375709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:27.440018      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0928 12:28:28.376234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:29.376771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:30.377788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:30.441074      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 12:28:30.453071 18 resource.go:361] Creating new exec pod
  E0928 12:28:31.377875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:32.378785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:33.378875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:33.472337 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5709 exec execpod-affinitynwtjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0928 12:28:33.560660 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0928 12:28:33.560710 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 12:28:33.560872 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5709 exec execpod-affinitynwtjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.38 80'
  I0928 12:28:33.640252 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.38 80\nConnection to 10.152.183.38 80 port [tcp/http] succeeded!\n"
  I0928 12:28:33.640291 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 12:28:33.640372 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5709 exec execpod-affinitynwtjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.28 30741'
  I0928 12:28:33.716042 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.28 30741\nConnection to 172.31.6.28 30741 port [tcp/*] succeeded!\n"
  I0928 12:28:33.716085 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 12:28:33.716158 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5709 exec execpod-affinitynwtjk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 30741'
  I0928 12:28:33.794145 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.43.233 30741\nConnection to 172.31.43.233 30741 port [tcp/*] succeeded!\n"
  I0928 12:28:33.794190 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 12:28:33.794293 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5709 exec execpod-affinitynwtjk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.43.233:30741/ ; done'
  I0928 12:28:33.933670 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:30741/\n"
  I0928 12:28:33.933717 18 builder.go:147] stdout: "\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28\naffinity-nodeport-zpc28"
  I0928 12:28:33.933742 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933750 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933757 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933763 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933769 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933775 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933781 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933786 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933792 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933800 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933805 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933811 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933816 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933822 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933826 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933831 18 service.go:242] Received response from host: affinity-nodeport-zpc28
  I0928 12:28:33.933974 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5709, will wait for the garbage collector to delete the pods @ 09/28/24 12:28:33.948
  I0928 12:28:34.009100 18 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.225393ms
  I0928 12:28:34.109866 18 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.760089ms
  E0928 12:28:34.379614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:35.380000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:36.380714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:37.380959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:37.628437 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5709" for this suite. @ 09/28/24 12:28:37.631
â€¢ [13.292 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/28/24 12:28:37.636
  I0928 12:28:37.636250 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename server-version @ 09/28/24 12:28:37.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:37.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:37.654
  STEP: Request ServerVersion @ 09/28/24 12:28:37.657
  STEP: Confirm major version @ 09/28/24 12:28:37.658
  I0928 12:28:37.658582 18 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/28/24 12:28:37.658
  I0928 12:28:37.658608 18 server_version.go:58] cleanMinorVersion: 31
  I0928 12:28:37.658617 18 server_version.go:62] Minor version: 31
  I0928 12:28:37.658750 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6971" for this suite. @ 09/28/24 12:28:37.662
â€¢ [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/28/24 12:28:37.667
  I0928 12:28:37.667506 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename apf @ 09/28/24 12:28:37.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:37.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:37.684
  STEP: getting /apis @ 09/28/24 12:28:37.687
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/28/24 12:28:37.69
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/28/24 12:28:37.692
  STEP: creating @ 09/28/24 12:28:37.693
  STEP: getting @ 09/28/24 12:28:37.706
  STEP: listing @ 09/28/24 12:28:37.709
  STEP: watching @ 09/28/24 12:28:37.713
  I0928 12:28:37.713553 18 flowcontrol.go:620] starting watch
  STEP: patching @ 09/28/24 12:28:37.715
  STEP: updating @ 09/28/24 12:28:37.719
  I0928 12:28:37.728825 18 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/28/24 12:28:37.728
  STEP: patching /status @ 09/28/24 12:28:37.732
  STEP: updating /status @ 09/28/24 12:28:37.737
  STEP: deleting @ 09/28/24 12:28:37.745
  STEP: deleting a collection @ 09/28/24 12:28:37.757
  I0928 12:28:37.775117 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1894" for this suite. @ 09/28/24 12:28:37.778
â€¢ [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/28/24 12:28:37.786
  I0928 12:28:37.786208 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/28/24 12:28:37.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:37.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:37.802
  STEP: create the container to handle the HTTPGet hook request. @ 09/28/24 12:28:37.808
  E0928 12:28:38.381786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:39.382098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/28/24 12:28:39.832
  E0928 12:28:40.382946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:41.383100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/28/24 12:28:41.852
  E0928 12:28:42.383727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:43.384511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/28/24 12:28:43.874
  I0928 12:28:43.901153 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4977" for this suite. @ 09/28/24 12:28:43.906
â€¢ [6.128 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/28/24 12:28:43.914
  I0928 12:28:43.914361 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 12:28:43.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:43.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:43.935
  I0928 12:28:43.938705 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:28:44.386709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:45.385335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:46.385441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:28:47.018556 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5632" for this suite. @ 09/28/24 12:28:47.021
â€¢ [3.112 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/28/24 12:28:47.026
  I0928 12:28:47.026923 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption @ 09/28/24 12:28:47.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:28:47.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:28:47.044
  I0928 12:28:47.060038 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 12:28:47.386313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:48.387207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:49.388142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:50.388247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:51.388337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:52.389042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:53.389795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:54.390443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:55.390134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:56.390322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:57.390498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:58.391372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:28:59.391402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:00.391522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:01.392661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:02.392745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:03.392881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:04.395769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:05.394787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:06.394867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:07.395487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:08.395695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:09.395817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:10.396765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:11.397609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:12.397867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:13.397952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:14.398095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:15.398434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:16.398583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:17.399453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:18.400328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:19.401187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:20.401369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:21.402211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:22.402478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:23.402732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:24.404731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:25.405540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:26.405693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:27.406201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:28.406867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:29.407761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:30.407860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:31.408750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:32.409043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:33.409183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:34.410714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:35.411739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:36.412754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:37.413684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:38.414217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:39.414678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:40.414705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:41.415407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:42.415765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:43.416788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:44.416900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:45.417136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:46.417703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:29:47.064991 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/28/24 12:29:47.068
  I0928 12:29:47.068226 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/28/24 12:29:47.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:29:47.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:29:47.093
  I0928 12:29:47.110409 18 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0928 12:29:47.113529 18 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0928 12:29:47.173310 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8549" for this suite. @ 09/28/24 12:29:47.176
  I0928 12:29:47.182033 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8071" for this suite. @ 09/28/24 12:29:47.185
â€¢ [60.167 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/28/24 12:29:47.194
  I0928 12:29:47.194093 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 12:29:47.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:29:47.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:29:47.207
  I0928 12:29:47.212138 18 deployment.go:1645] Creating simple deployment test-new-deployment
  I0928 12:29:47.225348 18 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0928 12:29:47.418795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:48.418891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/28/24 12:29:49.243
  STEP: updating a scale subresource @ 09/28/24 12:29:49.247
  STEP: verifying the deployment Spec.Replicas was modified @ 09/28/24 12:29:49.255
  STEP: Patch a scale subresource @ 09/28/24 12:29:49.258
  I0928 12:29:49.294248 18 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52857258-018f-4d80-b36b-78a04d4f3d1b",
      ResourceVersion: (string) (len=4) "8024",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 12:29:49.303540 18 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb5c443a-6504-4764-8784-02fd13a73794",
      ResourceVersion: (string) (len=4) "8032",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "52857258-018f-4d80-b36b-78a04d4f3d1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 38 35 37 32  35 38 2d 30 31 38 66 2d  |\"52857258-018f-|
              00000120  34 64 38 30 2d 62 33 36  62 2d 37 38 61 30 34 64  |4d80-b36b-78a04d|
              00000130  34 66 33 64 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4f3d1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 12:29:49.306906 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-crk6b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-crk6b",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c9bdea4-cf05-4581-b0e5-f9a38b6e99d6",
      ResourceVersion: (string) (len=4) "8035",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cb5c443a-6504-4764-8784-02fd13a73794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  35 63 34 34 33 61 2d 36  |d\":\"cb5c443a-6|
              00000090  35 30 34 2d 34 37 36 34  2d 38 37 38 34 2d 30 32  |504-4764-8784-02|
              000000a0  66 64 31 33 61 37 33 37  39 34 5c 22 7d 22 3a 7b  |fd13a73794\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ddbtk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ddbtk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 12:29:49.307687 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-ft29w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-ft29w",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ee4389f-47c9-4ce8-8073-7a95cac08f55",
      ResourceVersion: (string) (len=4) "8033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cb5c443a-6504-4764-8784-02fd13a73794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  35 63 34 34 33 61 2d 36  |d\":\"cb5c443a-6|
              00000090  35 30 34 2d 34 37 36 34  2d 38 37 38 34 2d 30 32  |504-4764-8784-02|
              000000a0  66 64 31 33 61 37 33 37  39 34 5c 22 7d 22 3a 7b  |fd13a73794\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zl7lf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zl7lf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zl7lf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 12:29:49.309676 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-ssf8f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-ssf8f",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9421785-7ccc-4108-a1d8-720b61e893a8",
      ResourceVersion: (string) (len=4) "8017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "cb5c443a-6504-4764-8784-02fd13a73794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  35 63 34 34 33 61 2d 36  |d\":\"cb5c443a-6|
              00000090  35 30 34 2d 34 37 36 34  2d 38 37 38 34 2d 30 32  |504-4764-8784-02|
              000000a0  66 64 31 33 61 37 33 37  39 34 5c 22 7d 22 3a 7b  |fd13a73794\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 39 36 5c 22 7d 22 3a  |2.168.12.96\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kws8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kws8f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863123387,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863123387,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863123387,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aadf7fe8cf56d40c5d7b0dd90c92838a6a59c8fa185edcd5340b9f56dfbaa69c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kws8f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 12:29:49.310781 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6808" for this suite. @ 09/28/24 12:29:49.318
â€¢ [2.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/28/24 12:29:49.332
  I0928 12:29:49.332812 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 12:29:49.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:29:49.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:29:49.357
  STEP: Creating a test externalName service @ 09/28/24 12:29:49.36
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:49.365
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:49.365
  STEP: creating a pod to probe DNS @ 09/28/24 12:29:49.365
  STEP: submitting the pod to kubernetes @ 09/28/24 12:29:49.365
  E0928 12:29:49.418919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:50.419116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 12:29:51.387
  STEP: looking for the results for each expected name from probers @ 09/28/24 12:29:51.39
  I0928 12:29:51.400803 18 dns_common.go:552] DNS probes using dns-test-9f7f3fba-75dc-4267-a2ad-bf92ae4f5370 succeeded

  STEP: changing the externalName to bar.example.com @ 09/28/24 12:29:51.4
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:51.409
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:51.409
  STEP: creating a second pod to probe DNS @ 09/28/24 12:29:51.409
  STEP: submitting the pod to kubernetes @ 09/28/24 12:29:51.409
  E0928 12:29:51.419270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:52.419481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:53.419762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:54.420289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:55.420005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:56.420169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:57.420343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:58.421243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:29:59.421364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 12:29:59.438
  STEP: looking for the results for each expected name from probers @ 09/28/24 12:29:59.442
  I0928 12:29:59.451752 18 dns_common.go:552] DNS probes using dns-test-20841fa9-b268-4ec8-8032-f4c57c754f21 succeeded

  STEP: changing the service to type=ClusterIP @ 09/28/24 12:29:59.451
  W0928 12:29:59.463071      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:59.463
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1311.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1311.svc.cluster.local; sleep 1; done
   @ 09/28/24 12:29:59.463
  STEP: creating a third pod to probe DNS @ 09/28/24 12:29:59.463
  STEP: submitting the pod to kubernetes @ 09/28/24 12:29:59.467
  E0928 12:30:00.421479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:01.421684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 12:30:01.487
  STEP: looking for the results for each expected name from probers @ 09/28/24 12:30:01.491
  I0928 12:30:01.499637 18 dns_common.go:552] DNS probes using dns-test-5d15567b-73fb-4e6b-be72-3754f4b3f02d succeeded

  STEP: deleting the pod @ 09/28/24 12:30:01.499
  STEP: deleting the pod @ 09/28/24 12:30:01.509
  STEP: deleting the pod @ 09/28/24 12:30:01.519
  STEP: deleting the test externalName service @ 09/28/24 12:30:01.536
  I0928 12:30:01.553742 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1311" for this suite. @ 09/28/24 12:30:01.558
â€¢ [12.233 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/28/24 12:30:01.566
  I0928 12:30:01.566674 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename proxy @ 09/28/24 12:30:01.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:30:01.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:30:01.587
  I0928 12:30:01.590182 18 proxy.go:387] Creating pod...
  E0928 12:30:02.421856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:03.422096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:04.422287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:05.422352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:06.422643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:07.422744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:08.422838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:09.423050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:09.628404 18 proxy.go:411] Creating service...
  I0928 12:30:09.637518 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=DELETE
  I0928 12:30:09.643609 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0928 12:30:09.643639 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=OPTIONS
  I0928 12:30:09.649374 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0928 12:30:09.649396 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=PATCH
  I0928 12:30:09.653449 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0928 12:30:09.653475 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=POST
  I0928 12:30:09.657067 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0928 12:30:09.657091 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=PUT
  I0928 12:30:09.661049 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0928 12:30:09.661081 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=DELETE
  I0928 12:30:09.678644 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0928 12:30:09.678669 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0928 12:30:09.683177 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0928 12:30:09.683211 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=PATCH
  I0928 12:30:09.688470 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0928 12:30:09.688495 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=POST
  I0928 12:30:09.693328 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0928 12:30:09.693356 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=PUT
  I0928 12:30:09.700259 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0928 12:30:09.700294 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=GET
  I0928 12:30:09.703432 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0928 12:30:09.703457 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=GET
  I0928 12:30:09.708461 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0928 12:30:09.708482 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/pods/agnhost/proxy?method=HEAD
  I0928 12:30:09.710823 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0928 12:30:09.710846 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5843/services/e2e-proxy-test-service/proxy?method=HEAD
  I0928 12:30:09.716627 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0928 12:30:09.716748 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5843" for this suite. @ 09/28/24 12:30:09.72
â€¢ [8.161 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/28/24 12:30:09.727
  I0928 12:30:09.727159 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:30:09.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:30:09.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:30:09.747
  STEP: Creating pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670 @ 09/28/24 12:30:09.75
  E0928 12:30:10.423792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:11.424014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:30:11.768
  I0928 12:30:11.772071 18 container_probe.go:1749] Initial restart count of pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be is 0
  I0928 12:30:11.776141 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:12.425027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:13.425107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:13.781025 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:14.425719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:15.425814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:15.785388 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:16.425911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:17.426015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:17.791449 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:18.426215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:19.426921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:19.796462 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:20.427941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:21.428788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:21.802460 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:22.429169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:23.429195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:23.807832 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:24.429324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:25.429428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:25.812075 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:26.429724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:27.429938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:27.817470 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:28.430170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:29.430354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:29.821845 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:30.430532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:31.430725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:31.826786 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:32.431178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:33.431371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:33.832521 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:34.432078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:35.432505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:35.836950 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:36.432642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:37.432883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:37.840985 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:38.433933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:39.434022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:39.846710 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:40.434330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:41.434390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:41.852609 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:42.435346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:43.436218      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:43.858053 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:44.436343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:45.436781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:45.862611 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:46.437781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:47.437997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:47.868347 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:48.438152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:49.438364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:49.872680 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:50.439379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:51.439593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:51.877881 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:52.440619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:53.440756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:53.883735 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:54.441399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:55.441621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:55.888525 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:56.441722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:57.441852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:57.893628 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:30:58.441957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:30:59.442794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:30:59.899260 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:00.443811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:01.444810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:01.903779 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:02.444899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:03.445082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:03.908596 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:04.445320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:05.445391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:05.913987 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:06.445506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:07.445623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:07.918423 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:08.445968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:09.446833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:09.924116 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:10.447772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:11.448074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:11.928793 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:12.448183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:13.448210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:13.933771 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:14.448302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:15.448425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:15.939002 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:16.448528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:17.448686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:17.943123 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:18.448830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:19.448985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:19.947353 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:20.449961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:21.450250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:21.952941 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:22.450432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:23.450734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:23.957213 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:24.451761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:25.451866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:25.962013 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:26.452781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:27.453035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:27.967342 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:28.453144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:29.453263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:29.974241 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:30.453892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:31.454106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:31.979759 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:32.454487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:33.455300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:33.985405 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:34.455767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:35.455871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:35.990880 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:36.456403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:37.456496      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:37.996153 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:38.456726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:39.457796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:40.001490 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:40.457895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:41.458096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:42.006049 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:42.458195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:43.459252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:44.010641 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:44.459771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:45.460193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:46.016531 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:46.461083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:47.461164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:48.021678 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:48.461334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:49.461446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:50.027112 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:50.461551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:51.461817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:52.031433 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:52.461944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:53.462195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:54.035345 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:54.462951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:55.463136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:56.040993 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:56.463370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:57.463750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:31:58.046301 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:31:58.464746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:31:59.465854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:00.050250 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:00.466745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:01.466842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:02.055381 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:02.466958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:03.467167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:04.060853 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:04.467251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:05.467845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:06.065653 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:06.468752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:07.468944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:08.071905 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:08.469370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:09.469553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:10.075760 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:10.470275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:11.470462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:12.081729 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:12.471354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:13.472277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:14.086581 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:14.473034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:15.473215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:16.091956 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:16.473342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:17.473536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:18.097446 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:18.473764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:19.474772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:20.101479 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:20.474857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:21.475671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:22.106581 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:22.475766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:23.476311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:24.111929 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:24.477386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:25.477486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:26.117541 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:26.477758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:27.477859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:28.122377 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:28.478767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:29.478864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:30.126659 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:30.479008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:31.479202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:32.132964 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:32.479305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:33.479633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:34.138159 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:34.480671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:35.480860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:36.143620 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:36.481049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:37.481240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:38.147824 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:38.482329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:39.482875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:40.153740 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:40.483137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:41.483791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:42.159536 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:42.484759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:43.484861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:44.164630 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:44.485829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:45.485916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:46.170769 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:46.486086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:47.486765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:48.176901 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:48.487306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:49.487526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:50.182086 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:50.488598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:51.488991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:52.187864 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:52.489189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:53.489226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:54.193441 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:54.489945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:55.490074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:56.197852 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:56.490212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:57.490452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:32:58.203696 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:32:58.491153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:32:59.491341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:00.209428 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:00.491780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:01.491904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:02.214242 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:02.492681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:03.492815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:04.219532 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:04.493893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:05.493997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:06.224746 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:06.494100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:07.494339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:08.229131 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:08.494476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:09.494698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:10.234990 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:10.495423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:11.495622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:12.239711 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:12.496065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:13.496238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:14.245669 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:14.497018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:15.497114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:16.250418 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:16.497732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:17.497942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:18.255367 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:18.498680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:19.498787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:20.260715 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:20.499066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:21.499244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:22.265166 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:22.499414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:23.499919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:24.269942 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:24.500261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:25.500384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:26.276130 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:26.500456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:27.500791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:28.280616 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:28.500905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:29.501086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:30.285917 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:30.501403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:31.501512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:32.290452 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:32.501658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:33.501952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:34.295216 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:34.502476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:35.502666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:36.300043 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:36.503369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:37.503599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:38.306551 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:38.503696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:39.503912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:40.311233 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:40.504516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:41.504692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:42.316385 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:42.505786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:43.505885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:44.320800 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:44.505966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:45.506224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:46.325517 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:46.506792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:47.507770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:48.331181 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:48.508520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:49.508681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:50.335874 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:50.509248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:51.509336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:52.341630 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:52.509946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:53.510165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:54.347030 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:54.510413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:55.510628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:56.352195 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:56.511648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:57.511838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:33:58.358126 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:33:58.512467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:33:59.512671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:00.362447 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:00.512816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:01.512993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:02.367898 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:02.513176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:03.513226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:04.372840 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:04.513657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:05.514696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:06.378706 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:06.514919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:07.515757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:08.383672 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:08.516759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:09.516854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:10.388993 18 container_probe.go:1759] Get pod busybox-621a1817-3adc-44a4-ab24-df18d881b8be in namespace container-probe-670
  E0928 12:34:10.517178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:11.517297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/28/24 12:34:12.389
  I0928 12:34:12.403978 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-670" for this suite. @ 09/28/24 12:34:12.409
â€¢ [242.688 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/28/24 12:34:12.416
  I0928 12:34:12.416114 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/28/24 12:34:12.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:12.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:12.435
  STEP: Creating 50 configmaps @ 09/28/24 12:34:12.439
  E0928 12:34:12.517476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/28/24 12:34:12.671
  I0928 12:34:12.776628 18 resource.go:87] Pod name wrapped-volume-race-dfc39f7e-9fd1-472d-8c24-cc79d86ff25a: Found 3 pods out of 5
  E0928 12:34:13.518320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:14.518486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:15.518624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:16.518736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:17.519777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:17.784492 18 resource.go:87] Pod name wrapped-volume-race-dfc39f7e-9fd1-472d-8c24-cc79d86ff25a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/28/24 12:34:17.784
  STEP: Creating RC which spawns configmap-volume pods @ 09/28/24 12:34:17.805
  I0928 12:34:17.817968 18 resource.go:87] Pod name wrapped-volume-race-cc58ac83-1285-459b-a1e0-2c158b8c578d: Found 0 pods out of 5
  E0928 12:34:18.520932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:19.521065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:20.521288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:21.521401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:22.521500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:22.826146 18 resource.go:87] Pod name wrapped-volume-race-cc58ac83-1285-459b-a1e0-2c158b8c578d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/28/24 12:34:22.826
  STEP: Creating RC which spawns configmap-volume pods @ 09/28/24 12:34:22.848
  I0928 12:34:22.861881 18 resource.go:87] Pod name wrapped-volume-race-b10c03b6-abd1-4103-879e-7dd0f6a5214c: Found 0 pods out of 5
  E0928 12:34:23.521812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:24.522032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:25.522184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:26.522350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:27.522504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:27.870016 18 resource.go:87] Pod name wrapped-volume-race-b10c03b6-abd1-4103-879e-7dd0f6a5214c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/28/24 12:34:27.87
  STEP: deleting ReplicationController wrapped-volume-race-b10c03b6-abd1-4103-879e-7dd0f6a5214c in namespace emptydir-wrapper-3366, will wait for the garbage collector to delete the pods @ 09/28/24 12:34:27.888
  I0928 12:34:27.950255 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-b10c03b6-abd1-4103-879e-7dd0f6a5214c took: 8.123427ms
  I0928 12:34:28.050926 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-b10c03b6-abd1-4103-879e-7dd0f6a5214c pods took: 100.664938ms
  E0928 12:34:28.523346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-cc58ac83-1285-459b-a1e0-2c158b8c578d in namespace emptydir-wrapper-3366, will wait for the garbage collector to delete the pods @ 09/28/24 12:34:29.351
  I0928 12:34:29.413655 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-cc58ac83-1285-459b-a1e0-2c158b8c578d took: 7.976065ms
  I0928 12:34:29.514335 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-cc58ac83-1285-459b-a1e0-2c158b8c578d pods took: 100.673391ms
  E0928 12:34:29.523723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:30.524579      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-dfc39f7e-9fd1-472d-8c24-cc79d86ff25a in namespace emptydir-wrapper-3366, will wait for the garbage collector to delete the pods @ 09/28/24 12:34:31.115
  I0928 12:34:31.179048 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-dfc39f7e-9fd1-472d-8c24-cc79d86ff25a took: 9.068257ms
  I0928 12:34:31.279377 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-dfc39f7e-9fd1-472d-8c24-cc79d86ff25a pods took: 100.324639ms
  E0928 12:34:31.524997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/28/24 12:34:32.48
  E0928 12:34:32.525153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:32.755251 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3366" for this suite. @ 09/28/24 12:34:32.759
â€¢ [20.350 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/28/24 12:34:32.766
  I0928 12:34:32.766371 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:34:32.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:32.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:32.786
  STEP: Creating configMap with name projected-configmap-test-volume-85f9fab5-b763-49cb-aaf4-77591121f4c6 @ 09/28/24 12:34:32.789
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:34:32.793
  E0928 12:34:33.525289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:34.525401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:35.525788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:36.525871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:34:36.816
  I0928 12:34:36.819755 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-e57b123c-f6fd-4b8e-9037-6b7d860d3865 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 12:34:36.833
  I0928 12:34:36.867230 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6419" for this suite. @ 09/28/24 12:34:36.871
â€¢ [4.112 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/28/24 12:34:36.878
  I0928 12:34:36.878042 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 12:34:36.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:36.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:36.93
  STEP: creating Agnhost RC @ 09/28/24 12:34:36.933
  I0928 12:34:36.933674 18 kubectl.go:1537] namespace kubectl-8009
  I0928 12:34:36.933725 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-8009 create -f -'
  I0928 12:34:37.014724 18 builder.go:146] stderr: ""
  I0928 12:34:37.014760 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/28/24 12:34:37.014
  E0928 12:34:37.526808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:38.019997 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:34:38.020027 18 framework.go:733] Found 0 / 1
  E0928 12:34:38.527777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:39.018716 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:34:39.018751 18 framework.go:733] Found 1 / 1
  I0928 12:34:39.018765 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0928 12:34:39.022325 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:34:39.022344 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0928 12:34:39.022349 18 kubectl.go:1544] wait on agnhost-primary startup in kubectl-8009 
  I0928 12:34:39.022394 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-8009 logs agnhost-primary-cw95m agnhost-primary'
  I0928 12:34:39.075009 18 builder.go:146] stderr: ""
  I0928 12:34:39.075046 18 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/28/24 12:34:39.075
  I0928 12:34:39.075130 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-8009 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0928 12:34:39.130883 18 builder.go:146] stderr: ""
  I0928 12:34:39.130942 18 builder.go:147] stdout: "service/rm2 exposed\n"
  I0928 12:34:39.137902 18 utils.go:1203] Service rm2 in namespace kubectl-8009 found.
  E0928 12:34:39.528458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:40.528616      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/28/24 12:34:41.146
  I0928 12:34:41.146688 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-8009 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0928 12:34:41.200313 18 builder.go:146] stderr: ""
  I0928 12:34:41.200354 18 builder.go:147] stdout: "service/rm3 exposed\n"
  I0928 12:34:41.205683 18 utils.go:1203] Service rm3 in namespace kubectl-8009 found.
  E0928 12:34:41.529156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:42.529318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:43.214126 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8009" for this suite. @ 09/28/24 12:34:43.218
â€¢ [6.348 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/28/24 12:34:43.225
  I0928 12:34:43.225959 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 12:34:43.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:43.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:43.245
  STEP: creating a secret @ 09/28/24 12:34:43.248
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/28/24 12:34:43.252
  STEP: patching the secret @ 09/28/24 12:34:43.255
  STEP: deleting the secret using a LabelSelector @ 09/28/24 12:34:43.264
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/28/24 12:34:43.271
  I0928 12:34:43.273857 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-938" for this suite. @ 09/28/24 12:34:43.276
â€¢ [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/28/24 12:34:43.283
  I0928 12:34:43.283705 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 12:34:43.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:43.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:43.301
  STEP: Creating a pod to test service account token:  @ 09/28/24 12:34:43.304
  E0928 12:34:43.530030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:44.530243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:34:45.323
  I0928 12:34:45.326632 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod test-pod-62b37cd3-c202-4a20-85e4-9807695dd5ef container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:34:45.332
  I0928 12:34:45.347265 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3275" for this suite. @ 09/28/24 12:34:45.351
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/28/24 12:34:45.358
  I0928 12:34:45.358111 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 12:34:45.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:45.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:45.377
  STEP: creating all guestbook components @ 09/28/24 12:34:45.381
  I0928 12:34:45.381164 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0928 12:34:45.381227 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  I0928 12:34:45.469009 18 builder.go:146] stderr: ""
  I0928 12:34:45.469053 18 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0928 12:34:45.469324 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0928 12:34:45.469489 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  E0928 12:34:45.531105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:45.560196 18 builder.go:146] stderr: ""
  I0928 12:34:45.560241 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0928 12:34:45.560289 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0928 12:34:45.560350 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  I0928 12:34:45.640714 18 builder.go:146] stderr: ""
  I0928 12:34:45.640749 18 builder.go:147] stdout: "service/frontend created\n"
  I0928 12:34:45.640838 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0928 12:34:45.640956 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  I0928 12:34:45.708021 18 builder.go:146] stderr: ""
  I0928 12:34:45.708062 18 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0928 12:34:45.708151 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0928 12:34:45.708299 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  I0928 12:34:45.773086 18 builder.go:146] stderr: ""
  I0928 12:34:45.773129 18 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0928 12:34:45.773188 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0928 12:34:45.773277 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 create -f -'
  I0928 12:34:45.834662 18 builder.go:146] stderr: ""
  I0928 12:34:45.834710 18 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/28/24 12:34:45.834
  I0928 12:34:45.834749 18 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E0928 12:34:46.532081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:47.532934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:48.533011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:49.533166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:50.533419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:50.885683 18 kubectl.go:2276] Waiting for frontend to serve content.
  I0928 12:34:50.896811 18 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0928 12:34:50.909804 18 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/28/24 12:34:50.918
  I0928 12:34:50.918258 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:50.977680 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:50.977744 18 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/28/24 12:34:50.977
  I0928 12:34:50.978013 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:51.033826 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:51.033873 18 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/28/24 12:34:51.033
  I0928 12:34:51.034008 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:51.089359 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:51.089411 18 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/28/24 12:34:51.089
  I0928 12:34:51.089540 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:51.136639 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:51.136684 18 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/28/24 12:34:51.136
  I0928 12:34:51.136807 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:51.187255 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:51.187309 18 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/28/24 12:34:51.187
  I0928 12:34:51.187490 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5611 delete --grace-period=0 --force -f -'
  I0928 12:34:51.255389 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 12:34:51.255436 18 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0928 12:34:51.255541 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5611" for this suite. @ 09/28/24 12:34:51.259
â€¢ [5.916 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/28/24 12:34:51.275
  I0928 12:34:51.275423 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename conformance-tests @ 09/28/24 12:34:51.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:51.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:51.308
  STEP: Getting node addresses @ 09/28/24 12:34:51.315
  I0928 12:34:51.315826 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0928 12:34:51.401689 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9275" for this suite. @ 09/28/24 12:34:51.413
â€¢ [0.146 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/28/24 12:34:51.436
  I0928 12:34:51.437142 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 12:34:51.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:51.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:51.466
  I0928 12:34:51.471182 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:34:51.534511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:52.535322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/28/24 12:34:52.927
  I0928 12:34:52.927650 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-5036 --namespace=crd-publish-openapi-5036 create -f -'
  E0928 12:34:53.535555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:54.535712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:54.996683 18 builder.go:146] stderr: ""
  I0928 12:34:54.996735 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8798-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0928 12:34:54.996783 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-5036 --namespace=crd-publish-openapi-5036 delete e2e-test-crd-publish-openapi-8798-crds test-cr'
  I0928 12:34:55.046047 18 builder.go:146] stderr: ""
  I0928 12:34:55.046086 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8798-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0928 12:34:55.046125 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-5036 --namespace=crd-publish-openapi-5036 apply -f -'
  I0928 12:34:55.101808 18 builder.go:146] stderr: ""
  I0928 12:34:55.101843 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8798-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0928 12:34:55.101884 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-5036 --namespace=crd-publish-openapi-5036 delete e2e-test-crd-publish-openapi-8798-crds test-cr'
  I0928 12:34:55.149550 18 builder.go:146] stderr: ""
  I0928 12:34:55.149610 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8798-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/28/24 12:34:55.149
  I0928 12:34:55.149683 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-5036 explain e2e-test-crd-publish-openapi-8798-crds'
  I0928 12:34:55.192465 18 builder.go:146] stderr: ""
  I0928 12:34:55.192511 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8798-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0928 12:34:55.535792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:34:56.428095 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5036" for this suite. @ 09/28/24 12:34:56.435
â€¢ [5.005 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/28/24 12:34:56.441
  I0928 12:34:56.441546 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename endpointslice @ 09/28/24 12:34:56.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:34:56.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:34:56.466
  E0928 12:34:56.536752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:34:57.536827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/28/24 12:34:58.536
  E0928 12:34:58.537101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 09/28/24 12:34:58.542
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/28/24 12:34:58.549
  STEP: recreating EndpointSlices after they've been deleted @ 09/28/24 12:34:58.556
  I0928 12:34:58.576584 18 endpointslice.go:938] EndpointSlice for Service endpointslice-5280/example-named-port not found
  E0928 12:34:59.537270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:00.537476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:00.581094 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5280" for this suite. @ 09/28/24 12:35:00.584
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/28/24 12:35:00.591
  I0928 12:35:00.591691 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:35:00.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:35:00.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:35:00.621
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:35:00.624
  E0928 12:35:01.537772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:02.538159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:03.538230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:04.538490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:35:04.647
  I0928 12:35:04.651265 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-ea694551-47f7-498a-be31-87021db8ebe0 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:35:04.657
  I0928 12:35:04.673539 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7493" for this suite. @ 09/28/24 12:35:04.677
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/28/24 12:35:04.684
  I0928 12:35:04.684103 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:35:04.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:35:04.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:35:04.704
  STEP: Creating pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224 @ 09/28/24 12:35:04.707
  E0928 12:35:05.538588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:06.538712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:35:06.724
  I0928 12:35:06.727222 18 container_probe.go:1749] Initial restart count of pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 is 0
  I0928 12:35:06.730115 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:07.538735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:08.539071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:08.735042 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:09.539197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:10.539396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:10.739828 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:11.539654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:12.539762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:12.744293 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:13.539884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:14.540652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:14.748733 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:15.541728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:16.541939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:16.754601 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:17.542177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:18.542398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:18.759784 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:19.542551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:20.542690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:20.764891 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:21.542749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:22.542968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:22.771904 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:23.543090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:24.543224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:24.777654 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:25.543478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:26.544005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:26.783890 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:27.544381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:28.544729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:28.788397 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:29.544780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:30.544838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:30.794214 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:31.545754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:32.546779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:32.800924 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:33.546840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:34.547053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:34.806473 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:35.547247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:36.547451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:36.812036 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:37.547679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:38.548773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:38.816931 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:39.549749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:40.549904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:40.822280 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:41.550192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:42.550376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:42.827402 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:43.551390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:44.551648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:44.832720 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:45.552686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:46.552866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:46.838838 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:47.553664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:48.553982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:48.843651 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:49.554133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:50.554850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:50.849069 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:51.555409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:52.555684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:52.854833 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:53.556793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:54.556849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:54.860732 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  E0928 12:35:55.557590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:35:56.557783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:56.866215 18 container_probe.go:1759] Get pod busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 in namespace container-probe-6224
  I0928 12:35:56.866249 18 container_probe.go:1763] Restart count of pod container-probe-6224/busybox-0d6a40e2-1d83-4c85-9f95-e91537cde0d2 is now 1 (50.138999904s elapsed)
  STEP: deleting the pod @ 09/28/24 12:35:56.866
  I0928 12:35:56.879374 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6224" for this suite. @ 09/28/24 12:35:56.882
â€¢ [52.204 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/28/24 12:35:56.888
  I0928 12:35:56.888603 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename events @ 09/28/24 12:35:56.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:35:56.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:35:56.909
  STEP: Create set of events @ 09/28/24 12:35:56.912
  I0928 12:35:56.916659 18 core_events.go:198] created test-event-1
  I0928 12:35:56.920851 18 core_events.go:198] created test-event-2
  I0928 12:35:56.925122 18 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/28/24 12:35:56.925
  STEP: delete collection of events @ 09/28/24 12:35:56.928
  I0928 12:35:56.928589 18 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/28/24 12:35:56.947
  I0928 12:35:56.947810 18 core_events.go:230] requesting list of events to confirm quantity
  I0928 12:35:56.950872 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7566" for this suite. @ 09/28/24 12:35:56.954
â€¢ [0.072 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/28/24 12:35:56.96
  I0928 12:35:56.960506 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 12:35:56.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:35:56.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:35:56.979
  STEP: Creating simple DaemonSet "daemon-set" @ 09/28/24 12:35:57
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 12:35:57.004
  I0928 12:35:57.010592 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:57.010626 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:57.013256 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 12:35:57.013276 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:35:57.557883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:58.010624 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:58.010659 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:58.014319 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 12:35:58.014337 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:35:58.558102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:35:59.011658 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:59.011719 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:59.016251 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 12:35:59.016462 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/28/24 12:35:59.021
  I0928 12:35:59.035268 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:59.035296 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:35:59.038224 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0928 12:35:59.038240 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:35:59.558887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:36:00.037521 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:36:00.037586 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:36:00.041408 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0928 12:36:00.041438 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:36:00.558970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:36:01.037787 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:36:01.037828 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:36:01.041410 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 12:36:01.041430 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 12:36:01.045
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7404, will wait for the garbage collector to delete the pods @ 09/28/24 12:36:01.045
  I0928 12:36:01.107059 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.069837ms
  I0928 12:36:01.207954 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.868ms
  E0928 12:36:01.559855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:36:02.212923 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 12:36:02.212962 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 12:36:02.216296 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10263"},"items":null}

  I0928 12:36:02.219411 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10263"},"items":null}

  I0928 12:36:02.232186 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7404" for this suite. @ 09/28/24 12:36:02.235
â€¢ [5.283 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/28/24 12:36:02.243
  I0928 12:36:02.243627 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 12:36:02.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:36:02.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:36:02.266
  STEP: Counting existing ResourceQuota @ 09/28/24 12:36:02.27
  E0928 12:36:02.560633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:03.560921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:04.561458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:05.561649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:06.561849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/28/24 12:36:07.274
  STEP: Ensuring resource quota status is calculated @ 09/28/24 12:36:07.28
  E0928 12:36:07.562407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:08.562465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/28/24 12:36:09.286
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/28/24 12:36:09.301
  E0928 12:36:09.563411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:10.563510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/28/24 12:36:11.306
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/28/24 12:36:11.31
  STEP: Ensuring a pod cannot update its resource requirements @ 09/28/24 12:36:11.313
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/28/24 12:36:11.317
  E0928 12:36:11.564140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:12.564922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/28/24 12:36:13.323
  STEP: Ensuring resource quota status released the pod usage @ 09/28/24 12:36:13.336
  E0928 12:36:13.565775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:14.565855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:36:15.341597 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3207" for this suite. @ 09/28/24 12:36:15.345
â€¢ [13.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/28/24 12:36:15.353
  I0928 12:36:15.353044 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/28/24 12:36:15.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:36:15.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:36:15.371
  STEP: creating a policy with variables @ 09/28/24 12:36:15.378
  STEP: waiting until the marker is denied @ 09/28/24 12:36:15.4
  E0928 12:36:15.566685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/28/24 12:36:16.01
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/28/24 12:36:16.024
  I0928 12:36:16.063543 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6807" for this suite. @ 09/28/24 12:36:16.067
â€¢ [0.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/28/24 12:36:16.083
  I0928 12:36:16.083581 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption @ 09/28/24 12:36:16.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:36:16.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:36:16.106
  I0928 12:36:16.124543 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 12:36:16.566903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:17.567051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:18.567148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:19.567257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:20.567791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:21.567946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:22.568210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:23.568304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:24.568820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:25.569769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:26.570399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:27.570495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:28.571263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:29.571372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:30.571783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:31.571845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:32.572237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:33.572408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:34.572698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:35.572831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:36.573048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:37.573220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:38.573392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:39.573628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:40.574521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:41.574732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:42.575476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:43.575972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:44.576631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:45.576901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:46.577046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:47.577237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:48.577355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:49.577542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:50.577778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:51.577939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:52.578035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:53.578282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:54.578426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:55.578644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:56.579189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:57.579774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:58.580713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:36:59.580832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:00.581308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:01.581490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:02.581664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:03.581963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:04.582829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:05.583040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:06.583999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:07.584601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:08.585427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:09.585523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:10.586510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:11.586767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:12.587751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:13.587853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:14.587955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:15.588091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:16.129842 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/28/24 12:37:16.133
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/28/24 12:37:16.141
  I0928 12:37:16.152306 18 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/28/24 12:37:16.152
  E0928 12:37:16.588772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:17.588977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/28/24 12:37:18.161
  I0928 12:37:18.167083 18 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/28/24 12:37:18.167
  E0928 12:37:18.589169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:19.589377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/28/24 12:37:20.176
  I0928 12:37:20.180965 18 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0928 12:37:20.589518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:20.695542 18 pod_client.go:173] Successfully updated pod "victim-pod"
  I0928 12:37:20.728789 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7002" for this suite. @ 09/28/24 12:37:20.732
â€¢ [64.656 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/28/24 12:37:20.74
  I0928 12:37:20.740033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/28/24 12:37:20.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:37:20.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:37:20.76
  I0928 12:37:20.763666 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:37:21.590394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:22.590653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:23.591654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:23.824176 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-13" for this suite. @ 09/28/24 12:37:23.829
â€¢ [3.097 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/28/24 12:37:23.837
  I0928 12:37:23.837319 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 12:37:23.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:37:23.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:37:23.86
  STEP: Creating a job @ 09/28/24 12:37:23.863
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/28/24 12:37:23.869
  E0928 12:37:24.592259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:25.592796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/28/24 12:37:25.874
  STEP: updating /status @ 09/28/24 12:37:25.88
  STEP: get /status @ 09/28/24 12:37:25.887
  I0928 12:37:25.892376 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6604" for this suite. @ 09/28/24 12:37:25.895
â€¢ [2.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/28/24 12:37:25.903
  I0928 12:37:25.903028 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 12:37:25.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:37:25.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:37:25.922
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6151 @ 09/28/24 12:37:25.925
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/28/24 12:37:25.936
  STEP: creating service externalsvc in namespace services-6151 @ 09/28/24 12:37:25.936
  STEP: creating replication controller externalsvc in namespace services-6151 @ 09/28/24 12:37:25.948
  I0928 12:37:25.961974      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6151, replica count: 2
  E0928 12:37:26.592878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:27.592959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:28.593479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:28.967759      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/28/24 12:37:28.971
  I0928 12:37:28.985106 18 resource.go:361] Creating new exec pod
  E0928 12:37:29.593606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:30.593771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:31.004762 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6151 exec execpoddzn7d -- /bin/sh -x -c nslookup clusterip-service.services-6151.svc.cluster.local'
  I0928 12:37:31.115664 18 builder.go:146] stderr: "+ nslookup clusterip-service.services-6151.svc.cluster.local\n"
  I0928 12:37:31.115705 18 builder.go:147] stdout: "Server:\t\t10.152.183.146\nAddress:\t10.152.183.146#53\n\nclusterip-service.services-6151.svc.cluster.local\tcanonical name = externalsvc.services-6151.svc.cluster.local.\nName:\texternalsvc.services-6151.svc.cluster.local\nAddress: 10.152.183.127\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6151, will wait for the garbage collector to delete the pods @ 09/28/24 12:37:31.115
  I0928 12:37:31.177507 18 resources.go:139] Deleting ReplicationController externalsvc took: 6.824233ms
  I0928 12:37:31.278164 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.652579ms
  E0928 12:37:31.594145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:32.594539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:33.595385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:37:34.394913 18 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0928 12:37:34.404914 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6151" for this suite. @ 09/28/24 12:37:34.409
â€¢ [8.514 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/28/24 12:37:34.417
  I0928 12:37:34.420255 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:37:34.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:37:34.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:37:34.458
  STEP: Creating configMap with name projected-configmap-test-volume-a81215ec-8893-4d84-89c2-e353055bcc7d @ 09/28/24 12:37:34.462
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:37:34.469
  E0928 12:37:34.595805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:35.596785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:37:36.486
  I0928 12:37:36.489498 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-3160d07a-5c67-4fe8-acc3-63ee23936eba container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:37:36.5
  I0928 12:37:36.514464 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5498" for this suite. @ 09/28/24 12:37:36.517
â€¢ [2.106 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/28/24 12:37:36.523
  I0928 12:37:36.523051 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 12:37:36.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:37:36.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:37:36.543
  STEP: Creating configMap with name cm-test-opt-del-84437a52-47cf-403d-81ec-329e8166be81 @ 09/28/24 12:37:36.55
  STEP: Creating configMap with name cm-test-opt-upd-9661a850-7a3c-4f8d-900b-eadfa6760c84 @ 09/28/24 12:37:36.556
  STEP: Creating the pod @ 09/28/24 12:37:36.56
  E0928 12:37:36.597527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:37.597816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:38.598079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-84437a52-47cf-403d-81ec-329e8166be81 @ 09/28/24 12:37:38.603
  STEP: Updating configmap cm-test-opt-upd-9661a850-7a3c-4f8d-900b-eadfa6760c84 @ 09/28/24 12:37:38.61
  STEP: Creating configMap with name cm-test-opt-create-31d7dad4-31c8-4c51-8f37-4453d1d6a291 @ 09/28/24 12:37:38.614
  STEP: waiting to observe update in volume @ 09/28/24 12:37:38.618
  E0928 12:37:39.598776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:40.598943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:41.599802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:42.600018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:43.600184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:44.600326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:45.601072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:46.601223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:47.601340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:48.601481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:49.601665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:50.601893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:51.601994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:52.602116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:53.602965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:54.603189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:55.603759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:56.603956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:57.604131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:58.604246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:37:59.604772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:00.604966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:01.605071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:02.605342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:03.605943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:04.606039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:05.606770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:06.607780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:07.607886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:08.608038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:09.608282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:10.608462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:11.608701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:12.608893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:13.609794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:14.609988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:15.610123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:16.610318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:17.610480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:18.610638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:19.610728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:20.610847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:21.610950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:22.611162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:23.611329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:24.611464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:25.611713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:26.611936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:27.612016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:28.612212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:29.613159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:30.613249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:31.614314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:32.614441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:33.614858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:34.615040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:35.615235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:36.615786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:37.615880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:38.615968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:39.616783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:40.616879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:41.616969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:42.617079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:43.617352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:44.617875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:45.618934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:46.619208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:47.620099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:48.620265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:38:48.934603 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-456" for this suite. @ 09/28/24 12:38:48.937
â€¢ [72.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/28/24 12:38:48.943
  I0928 12:38:48.943609 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 12:38:48.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:38:48.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:38:48.967
  I0928 12:38:48.971157 18 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0928 12:38:49.621228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/28/24 12:38:49.983
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/28/24 12:38:49.989
  E0928 12:38:50.621446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/28/24 12:38:50.997
  I0928 12:38:51.008168 18 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/28/24 12:38:51.008
  E0928 12:38:51.621610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:38:52.018042 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4729" for this suite. @ 09/28/24 12:38:52.022
â€¢ [3.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/28/24 12:38:52.03
  I0928 12:38:52.030172 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:38:52.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:38:52.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:38:52.052
  STEP: Setting up server cert @ 09/28/24 12:38:52.077
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:38:52.177
  STEP: Deploying the webhook pod @ 09/28/24 12:38:52.186
  STEP: Wait for the deployment to be ready @ 09/28/24 12:38:52.199
  I0928 12:38:52.207229 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:38:52.621770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:53.621968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:38:54.218
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:38:54.228
  E0928 12:38:54.622809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:38:55.229082 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/28/24 12:38:55.236
  STEP: verifying the mutating webhook match conditions @ 09/28/24 12:38:55.246
  STEP: updating the mutating webhook match conditions @ 09/28/24 12:38:55.25
  STEP: verifying the mutating webhook match conditions @ 09/28/24 12:38:55.257
  I0928 12:38:55.301065 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8963" for this suite. @ 09/28/24 12:38:55.304
  STEP: Destroying namespace "webhook-markers-448" for this suite. @ 09/28/24 12:38:55.311
â€¢ [3.286 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/28/24 12:38:55.316
  I0928 12:38:55.316510 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:38:55.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:38:55.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:38:55.336
  STEP: Setting up server cert @ 09/28/24 12:38:55.36
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:38:55.45
  STEP: Deploying the webhook pod @ 09/28/24 12:38:55.455
  STEP: Wait for the deployment to be ready @ 09/28/24 12:38:55.467
  I0928 12:38:55.474462 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0928 12:38:55.623865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:38:56.624071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:38:57.484
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:38:57.494
  E0928 12:38:57.624947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:38:58.494828 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/28/24 12:38:58.504
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/28/24 12:38:58.518
  I0928 12:38:58.518673 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 12:38:58.563348 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4207" for this suite. @ 09/28/24 12:38:58.566
  STEP: Destroying namespace "webhook-markers-6339" for this suite. @ 09/28/24 12:38:58.571
â€¢ [3.260 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/28/24 12:38:58.576
  I0928 12:38:58.576897 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename watch @ 09/28/24 12:38:58.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:38:58.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:38:58.595
  STEP: creating a watch on configmaps with a certain label @ 09/28/24 12:38:58.599
  STEP: creating a new configmap @ 09/28/24 12:38:58.6
  STEP: modifying the configmap once @ 09/28/24 12:38:58.605
  STEP: changing the label value of the configmap @ 09/28/24 12:38:58.613
  STEP: Expecting to observe a delete notification for the watched object @ 09/28/24 12:38:58.621
  I0928 12:38:58.621349 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11402 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:38:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 12:38:58.621541 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11403 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:38:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 12:38:58.621613 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11404 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:38:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/28/24 12:38:58.621
  E0928 12:38:58.625474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/28/24 12:38:58.628
  E0928 12:38:59.625710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:00.625785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:01.625874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:02.626019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:03.626063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:04.626777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:05.627788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:06.628755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:07.628946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/28/24 12:39:08.629
  E0928 12:39:08.629451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: modifying the configmap a third time @ 09/28/24 12:39:08.638
  STEP: deleting the configmap @ 09/28/24 12:39:08.647
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/28/24 12:39:08.652
  I0928 12:39:08.653080 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11468 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:39:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 12:39:08.653178 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11469 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:39:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 12:39:08.653273 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7833  c8a21797-4d74-4910-ade2-976e13762bc5 11470 0 2024-09-28 12:38:58 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-28 12:39:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 12:39:08.653393 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7833" for this suite. @ 09/28/24 12:39:08.657
â€¢ [10.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/28/24 12:39:08.664
  I0928 12:39:08.664771 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 12:39:08.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:39:08.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:39:08.685
  STEP: Given a ReplicationController is created @ 09/28/24 12:39:08.689
  STEP: When the matched label of one of its pods change @ 09/28/24 12:39:08.693
  I0928 12:39:08.697360 18 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0928 12:39:09.630428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:10.630668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:11.630835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:12.630921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:13.631092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:39:13.702993 18 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/28/24 12:39:13.712
  E0928 12:39:14.631700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:39:14.721706 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3411" for this suite. @ 09/28/24 12:39:14.726
â€¢ [6.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/28/24 12:39:14.731
  I0928 12:39:14.731773 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 12:39:14.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:39:14.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:39:14.752
  STEP: Creating Pod @ 09/28/24 12:39:14.755
  E0928 12:39:15.631843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:16.632112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/28/24 12:39:16.772
  I0928 12:39:16.772612 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1914 PodName:pod-sharedvolume-72210c58-75b6-4f3a-994d-e62ad7185e00 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 12:39:16.772630 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 12:39:16.773010 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 12:39:16.773048 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1914/pods/pod-sharedvolume-72210c58-75b6-4f3a-994d-e62ad7185e00/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0928 12:39:16.811906 18 exec_util.go:111] Exec stderr: ""
  I0928 12:39:16.812011 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1914" for this suite. @ 09/28/24 12:39:16.816
â€¢ [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/28/24 12:39:16.825
  I0928 12:39:16.825556 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 12:39:16.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:39:16.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:39:16.847
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:39:16.85
  E0928 12:39:17.632407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:18.633384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:19.633485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:20.633685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:39:20.87
  I0928 12:39:20.874084 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-8dbf2f73-180e-4cc8-8bf3-7362325932b0 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:39:20.88
  I0928 12:39:20.895987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3370" for this suite. @ 09/28/24 12:39:20.899
â€¢ [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/28/24 12:39:20.907
  I0928 12:39:20.907140 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename lease-test @ 09/28/24 12:39:20.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:39:20.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:39:20.933
  I0928 12:39:20.992200 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3721" for this suite. @ 09/28/24 12:39:20.996
â€¢ [0.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/28/24 12:39:21.002
  I0928 12:39:21.002689 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-watch @ 09/28/24 12:39:21.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:39:21.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:39:21.023
  I0928 12:39:21.026687 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:39:21.634591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:22.634753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/28/24 12:39:23.565
  I0928 12:39:23.572267 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:23Z]] name:name1 resourceVersion:11660 uid:db43ab03-128e-47b3-8f0b-592e7b59f1ac] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:39:23.635465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:24.636028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:25.636120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:26.636245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:27.636339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:28.636545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:29.636742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:30.636919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:31.637851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:32.638119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/28/24 12:39:33.572
  I0928 12:39:33.578589 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:33Z]] name:name2 resourceVersion:11697 uid:12708217-12cd-4b81-8cd1-23b4a8867b91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:39:33.638790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:34.639178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:35.639279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:36.639872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:37.640081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:38.640340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:39.640461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:40.640668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:41.640849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:42.641010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/28/24 12:39:43.579
  I0928 12:39:43.585759 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:43Z]] name:name1 resourceVersion:11717 uid:db43ab03-128e-47b3-8f0b-592e7b59f1ac] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:39:43.641912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:44.642145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:45.642419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:46.642656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:47.642708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:48.643009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:49.643196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:50.643776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:51.644750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:52.644833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/28/24 12:39:53.586
  I0928 12:39:53.593545 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:53Z]] name:name2 resourceVersion:11737 uid:12708217-12cd-4b81-8cd1-23b4a8867b91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:39:53.645737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:54.645833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:55.646753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:56.647752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:57.647927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:58.648327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:39:59.648457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:00.648752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:01.648948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:02.649131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/28/24 12:40:03.594
  I0928 12:40:03.601910 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:43Z]] name:name1 resourceVersion:11757 uid:db43ab03-128e-47b3-8f0b-592e7b59f1ac] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:40:03.649201      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:04.649396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:05.649666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:06.649928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:07.650210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:08.650362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:09.650457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:10.650768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:11.650866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:12.651759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/28/24 12:40:13.602
  I0928 12:40:13.612080 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-28T12:39:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-28T12:39:53Z]] name:name2 resourceVersion:11777 uid:12708217-12cd-4b81-8cd1-23b4a8867b91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0928 12:40:13.652252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:14.652538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:15.652756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:16.652938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:17.653110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:18.653465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:19.653702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:20.653913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:21.654096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:22.654205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:23.654547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:40:24.127407 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5346" for this suite. @ 09/28/24 12:40:24.131
â€¢ [63.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/28/24 12:40:24.14
  I0928 12:40:24.140126 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 12:40:24.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:40:24.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:40:24.161
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:40:24.164
  E0928 12:40:24.655367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:25.655583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:26.655945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:27.656035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:40:28.184
  I0928 12:40:28.188360 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-1108351b-bfb9-46f4-8c7e-23e692e69621 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:40:28.198
  I0928 12:40:28.215675 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1494" for this suite. @ 09/28/24 12:40:28.219
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/28/24 12:40:28.227
  I0928 12:40:28.227839 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubelet-test @ 09/28/24 12:40:28.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:40:28.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:40:28.248
  E0928 12:40:28.656137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:29.656224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:40:30.275500 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3277" for this suite. @ 09/28/24 12:40:30.279
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/28/24 12:40:30.285
  I0928 12:40:30.285921 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 12:40:30.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:40:30.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:40:30.308
  I0928 12:40:30.311884 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:40:30.657219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:31.658259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:32.658361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0928 12:40:32.849767      18 warnings.go:70] unknown field "alpha"
  W0928 12:40:32.849788      18 warnings.go:70] unknown field "beta"
  W0928 12:40:32.849791      18 warnings.go:70] unknown field "delta"
  W0928 12:40:32.849795      18 warnings.go:70] unknown field "epsilon"
  W0928 12:40:32.849798      18 warnings.go:70] unknown field "gamma"
  I0928 12:40:33.396759 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8267" for this suite. @ 09/28/24 12:40:33.399
â€¢ [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/28/24 12:40:33.41
  I0928 12:40:33.410052 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 12:40:33.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:40:33.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:40:33.429
  STEP: creating a Service @ 09/28/24 12:40:33.435
  STEP: watching for the Service to be added @ 09/28/24 12:40:33.449
  I0928 12:40:33.451359 18 service.go:3445] Found Service test-service-htt5w in namespace services-6694 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32588}]
  I0928 12:40:33.451394 18 service.go:3452] Service test-service-htt5w created
  STEP: Getting /status @ 09/28/24 12:40:33.451
  I0928 12:40:33.455882 18 service.go:3463] Service test-service-htt5w has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/28/24 12:40:33.456
  STEP: watching for the Service to be patched @ 09/28/24 12:40:33.46
  I0928 12:40:33.462511 18 service.go:3486] observed Service test-service-htt5w in namespace services-6694 with annotations: map[] & LoadBalancer: {[]}
  I0928 12:40:33.462550 18 service.go:3489] Found Service test-service-htt5w in namespace services-6694 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0004a3f50 []}]}
  I0928 12:40:33.462578 18 service.go:3496] Service test-service-htt5w has service status patched
  STEP: updating the ServiceStatus @ 09/28/24 12:40:33.462
  I0928 12:40:33.471734 18 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/28/24 12:40:33.471
  I0928 12:40:33.473432 18 service.go:3527] Observed Service test-service-htt5w in namespace services-6694 with annotations: map[] & Conditions: []
  I0928 12:40:33.473459 18 service.go:3538] Observed Service test-service-htt5w in namespace services-6694 with annotations: map[patchedstatus:true] & Conditions: []
  I0928 12:40:33.473481 18 service.go:3534] Found Service test-service-htt5w in namespace services-6694 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0928 12:40:33.473490 18 service.go:3545] Service test-service-htt5w has service status updated
  STEP: patching the service @ 09/28/24 12:40:33.473
  STEP: watching for the Service to be patched @ 09/28/24 12:40:33.484
  I0928 12:40:33.485821 18 service.go:3568] observed Service test-service-htt5w in namespace services-6694 with labels: map[test-service-static:true]
  I0928 12:40:33.485917 18 service.go:3568] observed Service test-service-htt5w in namespace services-6694 with labels: map[test-service-static:true]
  I0928 12:40:33.485929 18 service.go:3568] observed Service test-service-htt5w in namespace services-6694 with labels: map[test-service-static:true]
  I0928 12:40:33.485941 18 service.go:3571] Found Service test-service-htt5w in namespace services-6694 with labels: map[test-service:patched test-service-static:true]
  I0928 12:40:33.485948 18 service.go:3578] Service test-service-htt5w patched
  STEP: deleting the service @ 09/28/24 12:40:33.485
  STEP: watching for the Service to be deleted @ 09/28/24 12:40:33.5
  I0928 12:40:33.502251 18 service.go:3602] Observed event: ADDED
  I0928 12:40:33.502272 18 service.go:3602] Observed event: MODIFIED
  I0928 12:40:33.502282 18 service.go:3602] Observed event: MODIFIED
  I0928 12:40:33.502322 18 service.go:3602] Observed event: MODIFIED
  I0928 12:40:33.502427 18 service.go:3598] Found Service test-service-htt5w in namespace services-6694 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0928 12:40:33.502439 18 service.go:3607] Service test-service-htt5w deleted
  I0928 12:40:33.502581 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6694" for this suite. @ 09/28/24 12:40:33.507
â€¢ [0.103 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/28/24 12:40:33.513
  I0928 12:40:33.513138 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:40:33.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:40:33.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:40:33.535
  STEP: Creating secret with name s-test-opt-del-395fdb02-b107-4531-b415-0cc8e2fa83c9 @ 09/28/24 12:40:33.541
  STEP: Creating secret with name s-test-opt-upd-17412396-731f-4fd2-a27e-10dd0ec278f7 @ 09/28/24 12:40:33.547
  STEP: Creating the pod @ 09/28/24 12:40:33.552
  E0928 12:40:33.659160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:34.659237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-395fdb02-b107-4531-b415-0cc8e2fa83c9 @ 09/28/24 12:40:35.602
  STEP: Updating secret s-test-opt-upd-17412396-731f-4fd2-a27e-10dd0ec278f7 @ 09/28/24 12:40:35.607
  STEP: Creating secret with name s-test-opt-create-1ddc6042-395d-4bea-93f5-74ad05221a0b @ 09/28/24 12:40:35.611
  STEP: waiting to observe update in volume @ 09/28/24 12:40:35.616
  E0928 12:40:35.659550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:36.659903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:37.660947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:38.661361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:39.661856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:40.662129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:41.662662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:42.662885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:43.663061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:44.663385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:45.664425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:46.665335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:47.666234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:48.666860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:49.666954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:50.667056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:51.667149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:52.667264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:53.667363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:54.667761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:55.667894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:56.667981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:57.668233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:58.668416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:40:59.668509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:00.668661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:01.669533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:02.669670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:03.669987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:04.670100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:05.670220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:06.671111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:07.671332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:08.671508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:09.671728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:10.672326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:11.672714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:12.673340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:13.673455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:14.674479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:15.674617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:16.675390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:17.675787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:18.676766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:19.676860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:20.677415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:21.677771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:22.677828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:23.677921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:24.678174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:25.678290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:26.678401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:27.678668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:28.678726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:29.678825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:30.679700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:31.679734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:32.680776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:33.680940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:34.681376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:35.681414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:36.681936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:37.682179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:38.682361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:39.682547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:40.682707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:41.682996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:42.683339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:43.683605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:44.684583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:45.684711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:46.684782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:47.684958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:48.685051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:49.685754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:50.686172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:51.686746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:52.687702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:53.687871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:54.688147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:55.688382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:56.688453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:57.688682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:58.688798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:41:59.689754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:00.689865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:01.690098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:02.690420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:03.690520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:04.052398 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4775" for this suite. @ 09/28/24 12:42:04.062
â€¢ [90.560 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/28/24 12:42:04.073
  I0928 12:42:04.073225 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 12:42:04.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:04.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:04.095
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/28/24 12:42:04.099
  E0928 12:42:04.691312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:05.691407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:42:06.116
  I0928 12:42:06.120785 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-138502c9-c99c-4cba-982b-58bcc2a20c48 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 12:42:06.131
  I0928 12:42:06.149327 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6238" for this suite. @ 09/28/24 12:42:06.153
â€¢ [2.088 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/28/24 12:42:06.161
  I0928 12:42:06.161168 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 12:42:06.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:06.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:06.18
  I0928 12:42:06.191962 18 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0928 12:42:06.691607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:07.692619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:08.692764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:09.693014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:10.693797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:11.196962 18 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 12:42:11.196
  I0928 12:42:11.197030 18 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0928 12:42:11.694517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:12.694821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:13.203653 18 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0928 12:42:13.213097 18 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0928 12:42:13.694848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:14.694930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:15.221906 18 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0928 12:42:15.229115 18 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0928 12:42:15.235944 18 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0928 12:42:15.244653 18 deployment.go:313] Updating deployment test-rollover-deployment
  I0928 12:42:15.244674 18 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0928 12:42:15.695070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:16.695469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:17.251729 18 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0928 12:42:17.257871 18 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0928 12:42:17.265850 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0928 12:42:17.265905 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 12:42:17.696341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:18.696483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:19.274719 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0928 12:42:19.274774 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 12:42:19.696775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:20.696861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:21.274594 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0928 12:42:21.274652 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 12:42:21.697793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:22.697889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:23.275138 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0928 12:42:23.275193 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 12:42:23.698676      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:24.698867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:25.275052 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0928 12:42:25.275108 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 12:42:25.699281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:26.699415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:27.273794 18 deployment.go:94] 
  I0928 12:42:27.273840 18 deployment.go:974] Ensure that both old replica sets have no replicas
  I0928 12:42:27.285125 18 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-202",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdb05ef8-3ff0-485c-b0cc-076b11a83969",
      ResourceVersion: (string) (len=5) "12332",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 12:42:27.289003 18 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-202",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e3d3278-f2d9-4df4-8ade-36f77532be12",
      ResourceVersion: (string) (len=5) "12322",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "cdb05ef8-3ff0-485c-b0cc-076b11a83969",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 64 62 30 35 65  66 38 2d 33 66 66 30 2d  |\"cdb05ef8-3ff0-|
              00000120  34 38 35 63 2d 62 30 63  63 2d 30 37 36 62 31 31  |485c-b0cc-076b11|
              00000130  61 38 33 39 36 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a83969\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 12:42:27.289424 18 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0928 12:42:27.289629 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-202",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24f817cc-39da-488d-8e2a-33717b3138fa",
      ResourceVersion: (string) (len=5) "12331",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "cdb05ef8-3ff0-485c-b0cc-076b11a83969",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  63 64 62 30 35 65 66 38  2d 33 66 66 30 2d 34 38  |cdb05ef8-3ff0-48|
              000000c0  35 63 2d 62 30 63 63 2d  30 37 36 62 31 31 61 38  |5c-b0cc-076b11a8|
              000000d0  33 39 36 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3969\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 12:42:27.290222 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-202",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8053724a-5e18-4f4b-b528-e4c70d83d98e",
      ResourceVersion: (string) (len=5) "12285",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "cdb05ef8-3ff0-485c-b0cc-076b11a83969",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 64 62 30 35 65  66 38 2d 33 66 66 30 2d  |\"cdb05ef8-3ff0-|
              00000120  34 38 35 63 2d 62 30 63  63 2d 30 37 36 62 31 31  |485c-b0cc-076b11|
              00000130  61 38 33 39 36 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a83969\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 12:42:27.294334 18 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-n2sd6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-n2sd6",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=14) "deployment-202",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1ca095c-3f40-47cc-b9c2-ffe4e3bd4fe3",
      ResourceVersion: (string) (len=5) "12300",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "7e3d3278-f2d9-4df4-8ade-36f77532be12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  33 64 33 32 37 38 2d 66  |d\":\"7e3d3278-f|
              00000090  32 64 39 2d 34 64 66 34  2d 38 61 64 65 2d 33 36  |2d9-4df4-8ade-36|
              000000a0  66 37 37 35 33 32 62 65  31 32 5c 22 7d 22 3a 7b  |f77532be12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 30 31 5c 22 7d 22  |2.168.38.101\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqs5k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqs5k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124135,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863124135,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://7112848f162b0339b5293f18d8f7082fa9a4a6af00696c59b851ecfef22735fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rqs5k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 12:42:27.295800 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-202" for this suite. @ 09/28/24 12:42:27.299
â€¢ [21.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/28/24 12:42:27.307
  I0928 12:42:27.307304 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 12:42:27.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:27.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:27.325
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/28/24 12:42:27.329
  I0928 12:42:27.329399 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:42:27.700030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:28.567632 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:42:28.700097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:29.700654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:30.701649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:31.701679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:32.701758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:33.566351 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6091" for this suite. @ 09/28/24 12:42:33.574
â€¢ [6.274 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/28/24 12:42:33.581
  I0928 12:42:33.581211 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 12:42:33.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:33.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:33.603
  STEP: Creating configMap with name configmap-test-volume-map-ec9c9d6b-f627-4b4a-9b4e-30facda29aa2 @ 09/28/24 12:42:33.608
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:42:33.614
  E0928 12:42:33.702015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:34.702118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:35.702674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:36.703695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:42:37.649
  I0928 12:42:37.653726 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-b5de2988-ace0-45a8-be79-c86f153ad371 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:42:37.66
  I0928 12:42:37.676241 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-781" for this suite. @ 09/28/24 12:42:37.68
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/28/24 12:42:37.688
  I0928 12:42:37.688373 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename init-container @ 09/28/24 12:42:37.688
  E0928 12:42:37.704430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:37.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:37.716
  STEP: creating the pod @ 09/28/24 12:42:37.72
  I0928 12:42:37.720273 18 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0928 12:42:38.704791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:39.704881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:40.704979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:41.705077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:42.143357 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5160" for this suite. @ 09/28/24 12:42:42.147
â€¢ [4.466 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/28/24 12:42:42.154
  I0928 12:42:42.154137 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 12:42:42.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:42.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:42.175
  STEP: creating a Deployment @ 09/28/24 12:42:42.182
  I0928 12:42:42.182990 18 deployment.go:507] Creating simple deployment test-deployment-tj7x7
  I0928 12:42:42.196821 18 deployment.go:222] deployment "test-deployment-tj7x7" doesn't have the required revision set
  E0928 12:42:42.705340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:43.705441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/28/24 12:42:44.212
  I0928 12:42:44.216346 18 deployment.go:532] Deployment test-deployment-tj7x7 has Conditions: [{Available True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tj7x7-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/28/24 12:42:44.216
  I0928 12:42:44.227030 18 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 12, 42, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 12, 42, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-tj7x7-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/28/24 12:42:44.227
  I0928 12:42:44.228948 18 deployment.go:579] Observed &Deployment event: ADDED
  I0928 12:42:44.228968 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tj7x7-f4dbbbf74"}
  I0928 12:42:44.229024 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0928 12:42:44.229037 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tj7x7-f4dbbbf74"}
  I0928 12:42:44.229045 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0928 12:42:44.229208 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0928 12:42:44.229227 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0928 12:42:44.229236 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tj7x7-f4dbbbf74" is progressing.}
  I0928 12:42:44.229298 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0928 12:42:44.229348 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0928 12:42:44.229395 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tj7x7-f4dbbbf74" has successfully progressed.}
  I0928 12:42:44.229460 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0928 12:42:44.229477 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0928 12:42:44.229486 18 deployment.go:575] Observed Deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tj7x7-f4dbbbf74" has successfully progressed.}
  I0928 12:42:44.229497 18 deployment.go:572] Found Deployment test-deployment-tj7x7 in namespace deployment-8950 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 12:42:44.229507 18 deployment.go:583] Deployment test-deployment-tj7x7 has an updated status
  STEP: patching the Statefulset Status @ 09/28/24 12:42:44.229
  I0928 12:42:44.229529 18 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0928 12:42:44.237437 18 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/28/24 12:42:44.237
  I0928 12:42:44.239195 18 deployment.go:616] Observed &Deployment event: ADDED
  I0928 12:42:44.239215 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tj7x7-f4dbbbf74"}
  I0928 12:42:44.239287 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0928 12:42:44.239371 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tj7x7-f4dbbbf74"}
  I0928 12:42:44.239408 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0928 12:42:44.239535 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0928 12:42:44.239548 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0928 12:42:44.239624 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tj7x7-f4dbbbf74" is progressing.}
  I0928 12:42:44.239712 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0928 12:42:44.239746 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0928 12:42:44.239760 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tj7x7-f4dbbbf74" has successfully progressed.}
  I0928 12:42:44.239860 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0928 12:42:44.239909 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0928 12:42:44.239920 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-28 12:42:42 +0000 UTC 2024-09-28 12:42:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tj7x7-f4dbbbf74" has successfully progressed.}
  I0928 12:42:44.239929 18 deployment.go:612] Observed deployment test-deployment-tj7x7 in namespace deployment-8950 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 12:42:44.240026 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0928 12:42:44.240045 18 deployment.go:609] Found deployment test-deployment-tj7x7 in namespace deployment-8950 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0928 12:42:44.240098 18 deployment.go:620] Deployment test-deployment-tj7x7 has a patched status
  I0928 12:42:44.243478 18 deployment.go:633] Deployment "test-deployment-tj7x7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-tj7x7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dba31803-a8cb-4336-a8a4-afbb956c71bd",
      ResourceVersion: (string) (len=5) "12526",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124162,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-tj7x7-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 12:42:44.247983 18 deployment.go:39] New ReplicaSet "test-deployment-tj7x7-f4dbbbf74" of Deployment "test-deployment-tj7x7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-tj7x7-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5d14543-7478-4365-9b3b-01a57ac2888b",
      ResourceVersion: (string) (len=5) "12517",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124162,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-tj7x7",
          UID: (types.UID) (len=36) "dba31803-a8cb-4336-a8a4-afbb956c71bd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 62 61  |k:{\"uid\":\"dba|
              00000120  33 31 38 30 33 2d 61 38  63 62 2d 34 33 33 36 2d  |31803-a8cb-4336-|
              00000130  61 38 61 34 2d 61 66 62  62 39 35 36 63 37 31 62  |a8a4-afbb956c71b|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 12:42:44.252434 18 deployment.go:67] Pod "test-deployment-tj7x7-f4dbbbf74-fgk72" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-tj7x7-f4dbbbf74-fgk72",
      GenerateName: (string) (len=32) "test-deployment-tj7x7-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-8950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6915950e-ab7c-435a-a4fe-67538882dee7",
      ResourceVersion: (string) (len=5) "12516",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124162,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-tj7x7-f4dbbbf74",
          UID: (types.UID) (len=36) "a5d14543-7478-4365-9b3b-01a57ac2888b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 35 64 31 34 35 34  33 2d 37 34 37 38 2d 34  |"a5d14543-7478-4|
              000000a0  33 36 35 2d 39 62 33 62  2d 30 31 61 35 37 61 63  |365-9b3b-01a57ac|
              000000b0  32 38 38 38 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |2888b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 31 32 37 5c 22 7d 22  |2.168.12.127\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s55bh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s55bh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863124162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=14) "192.168.12.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.12.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863124162,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863124162,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ab4c1dff9b2c39d524666c67b67142bbfc7471be9011ef3096ca5b8a79ed2bf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s55bh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 12:42:44.253423 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8950" for this suite. @ 09/28/24 12:42:44.257
â€¢ [2.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/28/24 12:42:44.263
  I0928 12:42:44.263234 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:42:44.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:42:44.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:42:44.284
  STEP: Creating pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447 @ 09/28/24 12:42:44.287
  E0928 12:42:44.705776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:45.706781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:42:46.304
  I0928 12:42:46.308708 18 container_probe.go:1749] Initial restart count of pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is 0
  I0928 12:42:46.312088 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:46.707711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:47.707745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:48.318071 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:48.708595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:49.708960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:50.323203 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:50.709721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:51.709808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:52.328197 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:52.710791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:53.711039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:54.333884 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:54.711150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:55.711290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:56.338333 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:56.711947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:57.712142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:42:58.344382 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:42:58.712755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:42:59.712825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:00.349006 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:00.713225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:01.713409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:02.353917 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:02.714399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:03.714473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:04.358366 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:04.714610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:05.714726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:06.363556 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  I0928 12:43:06.363605 18 container_probe.go:1763] Restart count of pod container-probe-447/liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is now 1 (20.054872193s elapsed)
  E0928 12:43:06.715745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:07.716749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:08.369983 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:08.717388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:09.717480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:10.374601 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:10.717757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:11.718764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:12.380514 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:12.718997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:13.719127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:14.384962 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:14.719750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:15.719926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:16.390903 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:16.720299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:17.720510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:18.396598 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:18.720772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:19.720964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:20.403187 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:20.721670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:21.721909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:22.408055 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:22.722527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:23.722645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:24.417051 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:24.723125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:25.723205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:26.422424 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  I0928 12:43:26.422453 18 container_probe.go:1763] Restart count of pod container-probe-447/liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is now 2 (40.1137196s elapsed)
  E0928 12:43:26.723867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:27.724045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:28.428410 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:28.724900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:29.725785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:30.433084 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:30.726382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:31.726500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:32.437840 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:32.727208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:33.727439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:34.442207 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:34.727657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:35.727810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:36.447192 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:36.728594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:37.728716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:38.452399 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:38.728877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:39.728974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:40.457628 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:40.729786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:41.729817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:42.463407 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:42.730778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:43.730870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:44.468712 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:44.731769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:45.731889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:46.474597 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  I0928 12:43:46.474633 18 container_probe.go:1763] Restart count of pod container-probe-447/liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is now 3 (1m0.165898507s elapsed)
  E0928 12:43:46.731953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:47.732084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:48.480204 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:48.732503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:49.732725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:50.485812 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:50.733100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:51.733312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:52.491802 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:52.734164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:53.734460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:54.497235 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:54.734493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:55.734580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:56.502662 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:56.735043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:57.735125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:43:58.507875 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:43:58.735147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:43:59.735238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:00.512816 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:00.736125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:01.736782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:02.517662 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:02.737767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:03.737868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:04.523144 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:04.738470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:05.738776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:06.528362 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  I0928 12:44:06.528410 18 container_probe.go:1763] Restart count of pod container-probe-447/liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is now 4 (1m20.21967242s elapsed)
  E0928 12:44:06.739637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:07.739699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:08.533780 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:08.740111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:09.740771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:10.539191 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:10.741575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:11.741834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:12.543983 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:12.742387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:13.742686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:14.549206 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:14.743492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:15.743789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:16.553937 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:16.744301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:17.744408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:18.559351 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:18.744500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:19.744639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:20.564134 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:20.745430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:21.746156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:22.570191 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:22.746453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:23.746597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:24.575664 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:24.746942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:25.747761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:26.582102 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:26.748391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:27.748504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:28.587128 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:28.749342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:29.749466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:30.593119 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:30.750538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:31.750846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:32.597907 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:32.751174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:33.751587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:34.603790 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:34.752095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:35.753005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:36.608629 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:36.753826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:37.753912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:38.613949 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:38.754259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:39.754432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:40.618408 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:40.754529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:41.754718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:42.623225 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:42.755460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:43.755818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:44.628003 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:44.756195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:45.756377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:46.632809 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:46.756984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:47.757074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:48.638435 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:48.757800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:49.758744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:50.643108 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:50.759290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:51.760230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:52.648996 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:52.761212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:53.761293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:54.654214 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:54.761377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:55.761596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:56.659068 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:56.762358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:57.762587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:44:58.664364 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:44:58.763594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:44:59.763796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:00.669284 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:00.764497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:01.765115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:02.674402 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:02.765852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:03.766932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:04.680135 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:04.767342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:05.767444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:06.684940 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:06.768126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:07.768764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:08.690955 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:08.769081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:09.769295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:10.696048 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:10.770226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:11.770366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:12.701605 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  E0928 12:45:12.770845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:13.771143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:14.707234 18 container_probe.go:1759] Get pod liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb in namespace container-probe-447
  I0928 12:45:14.707269 18 container_probe.go:1763] Restart count of pod container-probe-447/liveness-7bd7fbef-ab14-49ca-ba3b-1cc5222c08fb is now 5 (2m28.398536356s elapsed)
  STEP: deleting the pod @ 09/28/24 12:45:14.707
  I0928 12:45:14.721986 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-447" for this suite. @ 09/28/24 12:45:14.725
â€¢ [150.469 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/28/24 12:45:14.732
  I0928 12:45:14.732536 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 12:45:14.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:14.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:14.752
  E0928 12:45:14.771240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 09/28/24 12:45:14.773
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 12:45:14.779
  I0928 12:45:14.784029 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:14.784062 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:14.786730 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 12:45:14.786746 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:45:15.771472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:15.784659 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:15.784692 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:15.788371 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 12:45:15.788390 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 12:45:16.771721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:16.784919 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:16.784953 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 12:45:16.788585 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 12:45:16.788603 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/28/24 12:45:16.791
  STEP: DeleteCollection of the DaemonSets @ 09/28/24 12:45:16.795
  STEP: Verify that ReplicaSets have been deleted @ 09/28/24 12:45:16.803
  I0928 12:45:16.812679 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12957"},"items":null}

  I0928 12:45:16.822069 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12958"},"items":[{"metadata":{"name":"daemon-set-dmwgp","generateName":"daemon-set-","namespace":"daemonsets-2068","uid":"92fa6e0b-ccbd-4b1f-b1fe-19a4f9ce6b9d","resourceVersion":"12953","creationTimestamp":"2024-09-28T12:45:14Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"08068812-faaa-43f2-b134-c51adf10230e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"08068812-faaa-43f2-b134-c51adf10230e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.12.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qg968","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qg968","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-6-28","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-6-28"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"}],"hostIP":"172.31.6.28","hostIPs":[{"ip":"172.31.6.28"}],"podIP":"192.168.12.67","podIPs":[{"ip":"192.168.12.67"}],"startTime":"2024-09-28T12:45:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-28T12:45:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://dce598c4040dcfc34b31431f52a27fd755cbf0fe9fad65cae9938840660bfe1e","started":true,"volumeMounts":[{"name":"kube-api-access-qg968","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w8s6l","generateName":"daemon-set-","namespace":"daemonsets-2068","uid":"874449bf-2792-4192-822f-a552e01298cd","resourceVersion":"12958","creationTimestamp":"2024-09-28T12:45:14Z","deletionTimestamp":"2024-09-28T12:45:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"08068812-faaa-43f2-b134-c51adf10230e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"08068812-faaa-43f2-b134-c51adf10230e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.38.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kmdwd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kmdwd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-43-233","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-43-233"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"}],"hostIP":"172.31.43.233","hostIPs":[{"ip":"172.31.43.233"}],"podIP":"192.168.38.102","podIPs":[{"ip":"192.168.38.102"}],"startTime":"2024-09-28T12:45:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-28T12:45:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b672c818203bcf3c71951aef3dbee815cb6a871aa8feea5f90a2f7319e50cfdd","started":true,"volumeMounts":[{"name":"kube-api-access-kmdwd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xp4x2","generateName":"daemon-set-","namespace":"daemonsets-2068","uid":"f40e5f8e-22f9-42cd-b6f2-98aa680c474c","resourceVersion":"12955","creationTimestamp":"2024-09-28T12:45:14Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"08068812-faaa-43f2-b134-c51adf10230e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"08068812-faaa-43f2-b134-c51adf10230e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-28T12:45:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.107.214\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dqvj8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dqvj8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-68-80","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-68-80"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-28T12:45:14Z"}],"hostIP":"172.31.68.80","hostIPs":[{"ip":"172.31.68.80"}],"podIP":"192.168.107.214","podIPs":[{"ip":"192.168.107.214"}],"startTime":"2024-09-28T12:45:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-28T12:45:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1e84cdf72ec0ac76b218c613579c795ab2e6ce55f39e19339d27542263cdd455","started":true,"volumeMounts":[{"name":"kube-api-access-dqvj8","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0928 12:45:16.835189 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2068" for this suite. @ 09/28/24 12:45:16.838
â€¢ [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/28/24 12:45:16.844
  I0928 12:45:16.844671 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 12:45:16.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:16.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:16.866
  STEP: Creating a test headless service @ 09/28/24 12:45:16.869
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4076.svc.cluster.local;sleep 1; done
   @ 09/28/24 12:45:16.873
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4076.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4076.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4076.svc.cluster.local;sleep 1; done
   @ 09/28/24 12:45:16.873
  STEP: creating a pod to probe DNS @ 09/28/24 12:45:16.873
  STEP: submitting the pod to kubernetes @ 09/28/24 12:45:16.873
  E0928 12:45:17.771857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:18.771968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 12:45:18.893
  STEP: looking for the results for each expected name from probers @ 09/28/24 12:45:18.897
  I0928 12:45:18.901942 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.906135 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.910238 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.913878 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.917873 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.921933 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.925118 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.928886 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4076.svc.cluster.local from pod dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9: the server could not find the requested resource (get pods dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9)
  I0928 12:45:18.928914 18 dns_common.go:489] Lookups using dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4076.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4076.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4076.svc.cluster.local jessie_udp@dns-test-service-2.dns-4076.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4076.svc.cluster.local]

  I0928 12:45:18.938643 18 dns_common.go:495] Pod client logs for webserver: 
  I0928 12:45:18.944490 18 dns_common.go:495] Pod client logs for querier: 
  I0928 12:45:18.951352 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0928 12:45:19.772096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:20.772256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:21.772387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:22.772622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:23.772956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:23.932323 18 dns_common.go:527] DNS probes using dns-4076/dns-test-38bd2b2e-b173-4723-98e7-0d35230310f9 succeeded

  STEP: deleting the pod @ 09/28/24 12:45:23.932
  STEP: deleting the test headless service @ 09/28/24 12:45:23.946
  I0928 12:45:23.960818 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4076" for this suite. @ 09/28/24 12:45:23.963
â€¢ [7.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/28/24 12:45:23.971
  I0928 12:45:23.971607 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename endpointslice @ 09/28/24 12:45:23.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:23.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:23.989
  E0928 12:45:24.773837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:25.774044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:26.034181 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9565" for this suite. @ 09/28/24 12:45:26.038
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/28/24 12:45:26.045
  I0928 12:45:26.045104 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/28/24 12:45:26.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:26.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:26.067
  STEP: getting /apis @ 09/28/24 12:45:26.074
  STEP: getting /apis/admissionregistration.k8s.io @ 09/28/24 12:45:26.078
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/28/24 12:45:26.079
  STEP: creating @ 09/28/24 12:45:26.081
  STEP: getting @ 09/28/24 12:45:26.096
  STEP: listing @ 09/28/24 12:45:26.099
  STEP: watching @ 09/28/24 12:45:26.103
  I0928 12:45:26.103028 18 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/28/24 12:45:26.104
  STEP: updating @ 09/28/24 12:45:26.113
  I0928 12:45:26.143131 18 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 09/28/24 12:45:26.143
  STEP: patching /status @ 09/28/24 12:45:26.147
  STEP: updating /status @ 09/28/24 12:45:26.16
  STEP: deleting @ 09/28/24 12:45:26.17
  STEP: deleting a collection @ 09/28/24 12:45:26.182
  I0928 12:45:26.200309 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2452" for this suite. @ 09/28/24 12:45:26.204
â€¢ [0.166 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/28/24 12:45:26.211
  I0928 12:45:26.211226 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 12:45:26.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:26.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:26.232
  STEP: Creating the pod @ 09/28/24 12:45:26.235
  E0928 12:45:26.774093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:27.774186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:28.774718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:28.783194 18 pod_client.go:173] Successfully updated pod "labelsupdate40f3d514-8b73-4823-851d-f3c81e307e4f"
  E0928 12:45:29.774826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:30.774948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:30.798135 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-809" for this suite. @ 09/28/24 12:45:30.802
â€¢ [4.598 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/28/24 12:45:30.809
  I0928 12:45:30.809622 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 12:45:30.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:30.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:30.827
  STEP: Creating a pod to test downward api env vars @ 09/28/24 12:45:30.831
  E0928 12:45:31.775047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:32.775278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:33.776227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:34.776316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:45:34.851
  I0928 12:45:34.854871 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod downward-api-c89877c7-53a5-4fa4-8bc3-821c8bc6c591 container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 12:45:34.868
  I0928 12:45:34.887214 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-477" for this suite. @ 09/28/24 12:45:34.891
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/28/24 12:45:34.897
  I0928 12:45:34.897903 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-webhook @ 09/28/24 12:45:34.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:34.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:34.921
  STEP: Setting up server cert @ 09/28/24 12:45:34.924
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/28/24 12:45:35.073
  STEP: Deploying the custom resource conversion webhook pod @ 09/28/24 12:45:35.082
  STEP: Wait for the deployment to be ready @ 09/28/24 12:45:35.094
  I0928 12:45:35.101423 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0928 12:45:35.776776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:36.776868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:45:37.114
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:45:37.123
  E0928 12:45:37.777758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:38.124372 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0928 12:45:38.132752 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:45:38.778033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:39.779071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/28/24 12:45:40.687
  STEP: Create a v2 custom resource @ 09/28/24 12:45:40.704
  STEP: List CRs in v1 @ 09/28/24 12:45:40.742
  STEP: List CRs in v2 @ 09/28/24 12:45:40.75
  E0928 12:45:40.779274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:41.313177 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9881" for this suite. @ 09/28/24 12:45:41.317
â€¢ [6.428 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/28/24 12:45:41.325
  I0928 12:45:41.325869 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/28/24 12:45:41.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:41.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:41.346
  STEP: creating the policy @ 09/28/24 12:45:41.355
  STEP: waiting until the marker is denied @ 09/28/24 12:45:41.369
  E0928 12:45:41.779993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/28/24 12:45:42.278
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/28/24 12:45:42.291
  I0928 12:45:42.324329 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7546" for this suite. @ 09/28/24 12:45:42.336
â€¢ [1.028 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/28/24 12:45:42.353
  I0928 12:45:42.353846 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 12:45:42.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:42.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:42.376
  STEP: creating a ServiceAccount @ 09/28/24 12:45:42.379
  STEP: watching for the ServiceAccount to be added @ 09/28/24 12:45:42.387
  STEP: patching the ServiceAccount @ 09/28/24 12:45:42.389
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/28/24 12:45:42.395
  STEP: deleting the ServiceAccount @ 09/28/24 12:45:42.4
  I0928 12:45:42.412340 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5535" for this suite. @ 09/28/24 12:45:42.415
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/28/24 12:45:42.423
  I0928 12:45:42.423140 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:45:42.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:45:42.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:45:42.445
  STEP: Creating pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613 @ 09/28/24 12:45:42.449
  E0928 12:45:42.780631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:43.780738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:45:44.465
  I0928 12:45:44.469449 18 container_probe.go:1749] Initial restart count of pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed is 0
  I0928 12:45:44.473158 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:44.781719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:45.781875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:46.477851 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:46.782047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:47.782250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:48.483168 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:48.782510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:49.782742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:50.488441 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:50.782822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:51.782934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:52.493752 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:52.783190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:53.783474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:54.499759 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:54.784198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:55.784415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:56.505469 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:56.784924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:57.785118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:45:58.510623 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:45:58.785778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:45:59.785869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:00.515463 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:00.786786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:01.786879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:02.520218 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:02.787583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:03.787658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:04.525873 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:04.788264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:05.788377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:06.531440 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:06.788677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:07.788721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:08.536895 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:08.789368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:09.789501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:10.542668 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:10.790022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:11.790146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:12.547963 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:12.790326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:13.790518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:14.553678 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:14.791224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:15.791345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:16.558285 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:16.791529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:17.791727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:18.563930 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:18.792303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:19.792490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:20.568885 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:20.793318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:21.793444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:22.574128 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:22.793480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:23.793690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:24.579163 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:24.794431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:25.794641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:26.584206 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:26.795583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:27.795682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:28.588909 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:28.796241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:29.796753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:30.594633 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:30.797762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:31.797892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:32.600613 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:32.797995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:33.798359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:34.606192 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:34.798465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:35.798674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:36.611069 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:36.799321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:37.799422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:38.616203 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:38.799603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:39.799785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:40.620938 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:40.800313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:41.800664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:42.626863 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:42.801184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:43.801444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:44.631995 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:44.802301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:45.802452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:46.637436 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:46.802597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:47.802687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:48.641399 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:48.803746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:49.803894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:50.646426 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:50.804580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:51.804788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:52.651424 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:52.805588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:53.805688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:54.656013 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:54.806232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:55.806325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:56.661393 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:56.806635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:57.806801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:46:58.666210 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:46:58.807461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:46:59.807594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:00.671081 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:00.808398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:01.808586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:02.676662 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:02.808922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:03.809212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:04.681968 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:04.809255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:05.809547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:06.687633 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:06.809952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:07.810188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:08.692547 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:08.810796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:09.811063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:10.697459 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:10.811708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:11.811810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:12.702195 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:12.812414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:13.812678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:14.706130 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:14.813702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:15.813712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:16.711650 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:16.814783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:17.814997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:18.717127 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:18.815468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:19.815688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:20.722605 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:20.815725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:21.815831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:22.727304 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:22.816423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:23.816679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:24.732873 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:24.817017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:25.817115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:26.737514 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:26.817782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:27.817895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:28.742025 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:28.818278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:29.818518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:30.747058 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:30.819381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:31.819614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:32.753044 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:32.820310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:33.820887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:34.757659 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:34.821888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:35.822897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:36.763269 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:36.823523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:37.823738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:38.767889 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:38.824121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:39.824208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:40.772864 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:40.825005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:41.825094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:42.778021 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:42.826155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:43.826258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:44.783420 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:44.826597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:45.826742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:46.788139 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:46.827267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:47.827772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:48.793639 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:48.827831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:49.828032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:50.798017 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:50.828230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:51.828463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:52.803554 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:52.828773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:53.828911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:54.808245 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:54.829484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:55.829725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:56.813855 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:56.830124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:57.830232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:47:58.818599 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:47:58.830668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:47:59.830855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:00.824077 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:00.831265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:01.831464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:02.829056 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:02.832128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:03.832351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:04.832484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:04.833999 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:05.832673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:06.832956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:06.840457 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:07.833058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:08.833384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:08.846308 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:09.833811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:10.834027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:10.852357 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:11.834137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:12.834789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:12.857744 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:13.834875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:14.834974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:14.863116 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:15.835072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:16.835150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:16.868330 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:17.835447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:18.835514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:18.874052 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:19.835708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:20.835805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:20.879748 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:21.836719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:22.836867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:22.884601 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:23.837529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:24.837723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:24.889336 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:25.838324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:26.838584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:26.894548 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:27.838983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:28.839036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:28.899841 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:29.839832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:30.840052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:30.906811 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:31.840805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:32.840940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:32.912177 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:33.841107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:34.841344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:34.917918 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:35.841469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:36.841699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:36.922975 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:37.841799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:38.842083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:38.928138 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:39.842366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:40.842599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:40.933770 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:41.842718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:42.842922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:42.938526 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:43.843584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:44.843734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:44.943681 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:45.844358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:46.844485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:46.949518 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:47.845338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:48.845402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:48.954012 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:49.845711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:50.846785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:50.959958 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:51.846888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:52.846983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:52.965103 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:53.847101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:54.847204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:54.970344 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:55.847397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:56.847793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:56.976026 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:57.847942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:48:58.848773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:48:58.981895 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:48:59.848888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:00.849066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:00.987452 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:01.849269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:02.849420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:02.992576 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:03.849533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:04.849673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:04.998413 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:05.849717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:06.849839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:07.003923 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:07.849998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:08.850142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:09.008905 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:09.850406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:10.850644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:11.014433 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:11.850956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:12.851169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:13.020814 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:13.851311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:14.851534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:15.026619 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:15.851716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:16.851985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:17.032294 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:17.852785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:18.852931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:19.038500 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:19.853052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:20.853826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:21.043455 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:21.854030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:22.854082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:23.050111 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:23.854132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:24.854762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:25.055435 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:25.855791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:26.856779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:27.061175 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:27.857770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:28.857869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:29.066625 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:29.858127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:30.858223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:31.072152 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:31.858334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:32.858460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:33.077172 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:33.858605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:34.858747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:35.082739 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:35.858848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:36.859050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:37.087858 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:37.859672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:38.860043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:39.093327 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:39.860306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:40.860429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:41.098703 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:41.860724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:42.861029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:49:43.105278 18 container_probe.go:1759] Get pod test-webserver-44b47d83-394e-4293-a967-9b1b35ac00ed in namespace container-probe-3613
  E0928 12:49:43.861109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:44.861305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/28/24 12:49:45.105
  I0928 12:49:45.121396 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3613" for this suite. @ 09/28/24 12:49:45.125
â€¢ [242.711 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/28/24 12:49:45.134
  I0928 12:49:45.134242 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 12:49:45.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:49:45.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:49:45.162
  STEP: Create a pod @ 09/28/24 12:49:45.166
  E0928 12:49:45.861531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:46.861648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/28/24 12:49:47.19
  I0928 12:49:47.198740 18 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0928 12:49:47.198839 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4447" for this suite. @ 09/28/24 12:49:47.203
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/28/24 12:49:47.209
  I0928 12:49:47.209850 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 12:49:47.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:49:47.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:49:47.231
  STEP: create the rc @ 09/28/24 12:49:47.234
  W0928 12:49:47.239123      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0928 12:49:47.861878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:48.862529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:49.862713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:50.862835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:51.862952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/28/24 12:49:52.243
  STEP: wait for all pods to be garbage collected @ 09/28/24 12:49:52.25
  E0928 12:49:52.863048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:53.863167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:54.863268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:55.863490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:56.863732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/28/24 12:49:57.26
  W0928 12:49:57.265386      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 12:49:57.265412 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 12:49:57.265641 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4955" for this suite. @ 09/28/24 12:49:57.269
â€¢ [10.068 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/28/24 12:49:57.277
  I0928 12:49:57.277683 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/28/24 12:49:57.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:49:57.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:49:57.295
  STEP: Creating two CSIDrivers @ 09/28/24 12:49:57.299
  STEP: Getting "inline-driver-0246341a-0e87-498a-8d5f-725a74380ff9" & "inline-driver-fe6d937a-fcc6-417e-bcf2-49e0fb7bf092" @ 09/28/24 12:49:57.314
  STEP: Patching the CSIDriver "inline-driver-fe6d937a-fcc6-417e-bcf2-49e0fb7bf092" @ 09/28/24 12:49:57.32
  STEP: Updating the CSIDriver "inline-driver-fe6d937a-fcc6-417e-bcf2-49e0fb7bf092" @ 09/28/24 12:49:57.327
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1519" @ 09/28/24 12:49:57.336
  STEP: Deleting CSIDriver "inline-driver-0246341a-0e87-498a-8d5f-725a74380ff9" @ 09/28/24 12:49:57.339
  STEP: Confirm deletion of CSIDriver "inline-driver-0246341a-0e87-498a-8d5f-725a74380ff9" @ 09/28/24 12:49:57.348
  STEP: Deleting CSIDriver "inline-driver-fe6d937a-fcc6-417e-bcf2-49e0fb7bf092" via DeleteCollection @ 09/28/24 12:49:57.351
  STEP: Confirm deletion of CSIDriver "inline-driver-fe6d937a-fcc6-417e-bcf2-49e0fb7bf092" @ 09/28/24 12:49:57.358
  I0928 12:49:57.361905 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1519" for this suite. @ 09/28/24 12:49:57.365
â€¢ [0.094 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/28/24 12:49:57.372
  I0928 12:49:57.372146 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 12:49:57.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:49:57.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:49:57.394
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/28/24 12:49:57.397
  E0928 12:49:57.864601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:58.864724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:49:59.864923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:00.865020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:50:01.422
  I0928 12:50:01.425916 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-d9580a84-409a-4f3e-b796-7f16f6797f02 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 12:50:01.437
  I0928 12:50:01.455354 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8709" for this suite. @ 09/28/24 12:50:01.46
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/28/24 12:50:01.466
  I0928 12:50:01.466622 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:50:01.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:50:01.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:50:01.488
  STEP: Creating pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640 @ 09/28/24 12:50:01.491
  E0928 12:50:01.865111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:02.865206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:50:03.511
  I0928 12:50:03.515038 18 container_probe.go:1749] Initial restart count of pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 is 0
  I0928 12:50:03.518587 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:03.865800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:04.866789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:05.523021 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:05.867504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:06.867765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:07.527968 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:07.868497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:08.868619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:09.533962 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:09.869407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:10.869620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:11.538826 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:11.870243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:12.870389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:13.543633 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:13.871151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:14.871443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:15.548851 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:15.872314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:16.872662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:17.554128 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:17.872705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:18.873004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:19.559579 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:19.873966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:20.874820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:21.563920 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:21.875386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:22.876402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:23.570141 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:23.876460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:24.876755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:25.575144 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:25.877549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:26.877784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:27.580414 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:27.878807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:28.878912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:29.585393 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:29.879851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:30.880308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:31.590411 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:31.880877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:32.881062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:33.595099 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:33.881550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:34.881735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:35.600588 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:35.882749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:36.883771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:37.606317 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:37.884598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:38.884707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:39.611552 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:39.885758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:40.885868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:41.617392 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:41.886755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:42.886864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:43.623029 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:43.887435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:44.887782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:45.628616 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:45.888767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:46.888874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:47.633476 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:47.888921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:48.889240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:49.638874 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:49.889284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:50.889480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:51.644074 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:51.890523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:52.890828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:53.649162 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:53.891486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:54.891695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:55.654527 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:55.891884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:56.892746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:57.659834 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:57.893130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:50:58.893505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:50:59.664807 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:50:59.894122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:00.894221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:01.670142 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:01.894399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:02.894623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:03.675424 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:03.894697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:04.895758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:05.680466 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:05.896754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:06.896934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:07.685999 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:07.897344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:08.897646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:09.692042 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:09.898321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:10.898427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:11.697283 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:11.898644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:12.898825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:13.701129 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:13.899499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:14.899684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:15.706575 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  E0928 12:51:15.899818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:16.900001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:17.711241 18 container_probe.go:1759] Get pod test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 in namespace container-probe-2640
  I0928 12:51:17.711282 18 container_probe.go:1763] Restart count of pod container-probe-2640/test-grpc-a4a02d28-cb0d-47fa-bed8-39400c785251 is now 1 (1m14.196219211s elapsed)
  STEP: deleting the pod @ 09/28/24 12:51:17.711
  I0928 12:51:17.725067 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2640" for this suite. @ 09/28/24 12:51:17.729
â€¢ [76.270 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/28/24 12:51:17.736
  I0928 12:51:17.736765 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 12:51:17.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:51:17.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:51:17.762
  I0928 12:51:17.765529 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:51:17.900136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:18.900609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/28/24 12:51:19.06
  I0928 12:51:19.060364 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7383 --namespace=crd-publish-openapi-7383 create -f -'
  I0928 12:51:19.127002 18 builder.go:146] stderr: ""
  I0928 12:51:19.127040 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4604-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0928 12:51:19.127085 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7383 --namespace=crd-publish-openapi-7383 delete e2e-test-crd-publish-openapi-4604-crds test-cr'
  I0928 12:51:19.174701 18 builder.go:146] stderr: ""
  I0928 12:51:19.174738 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4604-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0928 12:51:19.174776 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7383 --namespace=crd-publish-openapi-7383 apply -f -'
  I0928 12:51:19.237809 18 builder.go:146] stderr: ""
  I0928 12:51:19.237844 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4604-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0928 12:51:19.237885 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7383 --namespace=crd-publish-openapi-7383 delete e2e-test-crd-publish-openapi-4604-crds test-cr'
  I0928 12:51:19.288240 18 builder.go:146] stderr: ""
  I0928 12:51:19.288281 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4604-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/28/24 12:51:19.288
  I0928 12:51:19.288431 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7383 explain e2e-test-crd-publish-openapi-4604-crds'
  I0928 12:51:19.328966 18 builder.go:146] stderr: ""
  I0928 12:51:19.329019 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4604-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0928 12:51:19.901020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:20.616657 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7383" for this suite. @ 09/28/24 12:51:20.624
â€¢ [2.894 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/28/24 12:51:20.631
  I0928 12:51:20.631531 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:51:20.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:51:20.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:51:20.65
  STEP: Setting up server cert @ 09/28/24 12:51:20.674
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:51:20.884
  STEP: Deploying the webhook pod @ 09/28/24 12:51:20.894
  E0928 12:51:20.901634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/28/24 12:51:20.907
  I0928 12:51:20.914071 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:51:21.902416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:22.902645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:51:22.925
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:51:22.934
  E0928 12:51:23.902719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:51:23.934949 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/28/24 12:51:23.941
  I0928 12:51:23.985443 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4996" for this suite. @ 09/28/24 12:51:23.988
  STEP: Destroying namespace "webhook-markers-4464" for this suite. @ 09/28/24 12:51:23.998
â€¢ [3.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/28/24 12:51:24.004
  I0928 12:51:24.004315 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename cronjob @ 09/28/24 12:51:24.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:51:24.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:51:24.023
  STEP: Creating a cronjob @ 09/28/24 12:51:24.026
  STEP: Ensuring more than one job is running at a time @ 09/28/24 12:51:24.032
  E0928 12:51:24.902985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:25.903214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:26.903406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:27.903630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:28.903807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:29.903924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:30.904051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:31.904245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:32.904727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:33.904821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:34.905651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:35.905725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:36.905791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:37.905909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:38.906001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:39.906088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:40.906774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:41.906856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:42.906980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:43.907053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:44.907643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:45.907845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:46.907939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:47.908070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:48.908920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:49.909081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:50.909308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:51.909758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:52.909912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:53.910213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:54.910320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:55.910503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:56.910692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:57.910803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:58.910908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:51:59.911191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:00.911754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:01.911857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:02.911984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:03.912279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:04.912890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:05.912995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:06.913684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:07.913806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:08.913871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:09.914010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:10.914754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:11.914861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:12.914963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:13.915056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:14.915713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:15.916751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:16.916869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:17.916969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:18.917070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:19.917159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:20.917847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:21.917942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:22.918141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:23.918238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:24.918353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:25.918485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:26.918641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:27.918724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:28.918903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:29.918999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:30.919198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:31.919788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:32.919916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:33.920301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:34.920421      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:35.920519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:36.920661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:37.920718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:38.920832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:39.920958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:40.921074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:41.921265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:42.921416      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:43.921729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:44.921931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:45.922138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:46.922271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:47.922460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:48.922594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:49.922811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:50.923226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:51.923447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:52.923791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:53.924129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:54.924734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:55.924922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:56.925718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:57.926779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:58.926875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:52:59.927131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:00.927717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:01.927972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/28/24 12:53:02.038
  STEP: Removing cronjob @ 09/28/24 12:53:02.042
  I0928 12:53:02.048548 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6583" for this suite. @ 09/28/24 12:53:02.053
â€¢ [98.055 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/28/24 12:53:02.058
  I0928 12:53:02.058986 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:53:02.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:02.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:02.078
  STEP: Creating configMap with name projected-configmap-test-volume-map-b54131f4-4f0e-4a4c-8650-e0bdc0be4139 @ 09/28/24 12:53:02.083
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:53:02.09
  E0928 12:53:02.928114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:03.928302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:53:04.107
  I0928 12:53:04.110987 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-projected-configmaps-ea3cbafb-ac8a-4b85-a550-7a551b5bf1d5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:53:04.128
  I0928 12:53:04.147814 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-756" for this suite. @ 09/28/24 12:53:04.151
â€¢ [2.098 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/28/24 12:53:04.157
  I0928 12:53:04.157485 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:53:04.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:04.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:04.176
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:53:04.18
  E0928 12:53:04.929113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:05.929231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:06.929388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:07.929476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:53:08.204
  I0928 12:53:08.208667 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod downwardapi-volume-ac125c89-3ae7-4b5a-b334-1aac7610ffcb container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:53:08.215
  I0928 12:53:08.230676 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9534" for this suite. @ 09/28/24 12:53:08.234
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/28/24 12:53:08.241
  I0928 12:53:08.241850 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:53:08.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:08.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:08.258
  STEP: Creating the pod @ 09/28/24 12:53:08.262
  E0928 12:53:08.930245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:09.930395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:53:10.805293 18 pod_client.go:173] Successfully updated pod "annotationupdatec5890fa7-ba3e-4915-ae9c-c025d6015aed"
  E0928 12:53:10.931315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:11.931451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:53:12.819792 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9814" for this suite. @ 09/28/24 12:53:12.823
â€¢ [4.589 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/28/24 12:53:12.83
  I0928 12:53:12.830842 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 12:53:12.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:12.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:12.859
  I0928 12:53:12.863310 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:53:12.931637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:13.931871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/28/24 12:53:14.166
  I0928 12:53:14.166952 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 create -f -'
  I0928 12:53:14.223201 18 builder.go:146] stderr: ""
  I0928 12:53:14.223253 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3518-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0928 12:53:14.223296 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 delete e2e-test-crd-publish-openapi-3518-crds test-cr'
  I0928 12:53:14.269488 18 builder.go:146] stderr: ""
  I0928 12:53:14.269532 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3518-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0928 12:53:14.269580 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 apply -f -'
  I0928 12:53:14.324656 18 builder.go:146] stderr: ""
  I0928 12:53:14.324691 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3518-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0928 12:53:14.324728 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 delete e2e-test-crd-publish-openapi-3518-crds test-cr'
  I0928 12:53:14.388331 18 builder.go:146] stderr: ""
  I0928 12:53:14.388378 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3518-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/28/24 12:53:14.388
  I0928 12:53:14.388453 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-7906 explain e2e-test-crd-publish-openapi-3518-crds'
  I0928 12:53:14.473262 18 builder.go:146] stderr: ""
  I0928 12:53:14.473318 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3518-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0928 12:53:14.932792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:53:15.691083 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7906" for this suite. @ 09/28/24 12:53:15.698
â€¢ [2.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/28/24 12:53:15.707
  I0928 12:53:15.707191 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 12:53:15.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:15.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:15.727
  STEP: Creating namespace "e2e-ns-nszct" @ 09/28/24 12:53:15.73
  I0928 12:53:15.745841 18 namespace.go:411] Namespace "e2e-ns-nszct-1092" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-nszct-1092" @ 09/28/24 12:53:15.745
  I0928 12:53:15.754869 18 namespace.go:434] Namespace "e2e-ns-nszct-1092" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-nszct-1092" @ 09/28/24 12:53:15.754
  I0928 12:53:15.762634 18 namespace.go:463] Namespace "e2e-ns-nszct-1092" has []v1.FinalizerName{"kubernetes"}
  I0928 12:53:15.762749 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6621" for this suite. @ 09/28/24 12:53:15.766
  STEP: Destroying namespace "e2e-ns-nszct-1092" for this suite. @ 09/28/24 12:53:15.772
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/28/24 12:53:15.779
  I0928 12:53:15.779665 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 12:53:15.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:15.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:15.794
  STEP: Creating a ResourceQuota @ 09/28/24 12:53:15.8
  STEP: Getting a ResourceQuota @ 09/28/24 12:53:15.805
  STEP: Updating a ResourceQuota @ 09/28/24 12:53:15.808
  STEP: Verifying a ResourceQuota was modified @ 09/28/24 12:53:15.813
  STEP: Deleting a ResourceQuota @ 09/28/24 12:53:15.819
  STEP: Verifying the deleted ResourceQuota @ 09/28/24 12:53:15.926
  I0928 12:53:15.930366 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0928 12:53:15.933250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-4810" for this suite. @ 09/28/24 12:53:15.933
â€¢ [0.161 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/28/24 12:53:15.941
  I0928 12:53:15.941038 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:53:15.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:15.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:15.961
  STEP: Creating configMap with name projected-configmap-test-volume-map-5d4db31e-1fdc-4bca-9f76-742181987671 @ 09/28/24 12:53:15.964
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:53:15.967
  E0928 12:53:16.933434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:17.933744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:53:17.986
  I0928 12:53:17.990863 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-e2f7ae84-b23b-4002-aec1-50a111e837d9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:53:18.006
  I0928 12:53:18.020067 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2032" for this suite. @ 09/28/24 12:53:18.023
â€¢ [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/28/24 12:53:18.032
  I0928 12:53:18.032944 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption @ 09/28/24 12:53:18.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:18.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:18.048
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:53:18.056
  E0928 12:53:18.933894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:19.934088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/28/24 12:53:20.061
  STEP: Waiting for all pods to be running @ 09/28/24 12:53:20.071
  I0928 12:53:20.079007 18 disruption.go:691] running pods: 0 < 1
  E0928 12:53:20.934331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:21.934948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/28/24 12:53:22.076
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:53:22.088
  STEP: Patching PodDisruptionBudget status @ 09/28/24 12:53:22.096
  STEP: Waiting for the pdb to be processed @ 09/28/24 12:53:22.104
  I0928 12:53:22.110331 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2799" for this suite. @ 09/28/24 12:53:22.113
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/28/24 12:53:22.12
  I0928 12:53:22.120550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:53:22.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:22.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:22.139
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 12:53:22.142
  E0928 12:53:22.935884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:23.935988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:53:24.158
  I0928 12:53:24.161307 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-f645bef5-1acd-4a32-bf92-80f14e095963 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 12:53:24.168
  I0928 12:53:24.182972 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5340" for this suite. @ 09/28/24 12:53:24.186
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/28/24 12:53:24.194
  I0928 12:53:24.194172 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 12:53:24.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:53:24.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:53:24.21
  STEP: Creating service test in namespace statefulset-3185 @ 09/28/24 12:53:24.214
  STEP: Creating a new StatefulSet @ 09/28/24 12:53:24.22
  I0928 12:53:24.231817 18 wait.go:40] Found 0 stateful pods, waiting for 3
  E0928 12:53:24.936086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:25.936779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:26.936969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:27.937096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:28.937355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:29.937837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:30.938111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:31.938209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:32.938367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:33.938864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:53:34.231254 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:53:34.231287 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:53:34.231293 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0928 12:53:34.242135 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-3185 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 12:53:34.330641 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 12:53:34.330679 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 12:53:34.330688 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0928 12:53:34.939714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:35.939931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:36.940768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:37.940964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:38.941079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:39.941288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:40.941516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:41.941659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:42.941850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:43.941963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/28/24 12:53:44.339
  I0928 12:53:44.348496 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/28/24 12:53:44.348
  E0928 12:53:44.942208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:45.942243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:46.943109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:47.943235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:48.943459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:49.943585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:50.943726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:51.943911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:52.943996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:53.944288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/28/24 12:53:54.358
  I0928 12:53:54.362617 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-3185 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 12:53:54.485545 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 12:53:54.485603 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 12:53:54.485613 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0928 12:53:54.944395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:55.944494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:56.944615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:57.944687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:58.945768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:53:59.945859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:00.945960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:01.946767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:02.946870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:03.946953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/28/24 12:54:04.501
  I0928 12:54:04.501357 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-3185 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 12:54:04.582159 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 12:54:04.582202 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 12:54:04.582212 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0928 12:54:04.947810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:05.947880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:06.948014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:07.948110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:08.948204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:09.948396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:10.948552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:11.948740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:12.948944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:13.949038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:14.602620 18 statefulset.go:2507] Updating stateful set ss2
  E0928 12:54:14.950097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:15.950307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:16.950535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:17.950747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:18.950869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:19.951019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:20.951213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:21.951390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:22.951657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:23.951987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/28/24 12:54:24.611
  I0928 12:54:24.615950 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-3185 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 12:54:24.694744 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 12:54:24.694780 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 12:54:24.694790 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0928 12:54:24.952139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:25.952314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:26.952403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:27.952635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:28.952752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:29.952851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:30.952959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:31.953160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:32.953469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:33.953723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:34.710578 18 statefulset.go:138] Deleting all statefulset in ns statefulset-3185
  I0928 12:54:34.714666 18 rest.go:150] Scaling statefulset ss2 to 0
  E0928 12:54:34.954543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:35.954699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:36.954817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:37.954910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:38.954986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:39.955072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:40.955207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:41.955779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:42.955896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:43.955964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:44.729439 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 12:54:44.733194 18 rest.go:88] Deleting statefulset ss2
  I0928 12:54:44.747185 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3185" for this suite. @ 09/28/24 12:54:44.751
â€¢ [80.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/28/24 12:54:44.758
  I0928 12:54:44.758029 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-runtime @ 09/28/24 12:54:44.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:54:44.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:54:44.776
  STEP: create the container @ 09/28/24 12:54:44.78
  W0928 12:54:44.789744      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/28/24 12:54:44.789
  E0928 12:54:44.956089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:45.956389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:46.956488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/28/24 12:54:47.806
  STEP: the container should be terminated @ 09/28/24 12:54:47.809
  STEP: the termination message should be set @ 09/28/24 12:54:47.809
  I0928 12:54:47.809617 18 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/28/24 12:54:47.809
  I0928 12:54:47.826483 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2129" for this suite. @ 09/28/24 12:54:47.83
â€¢ [3.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/28/24 12:54:47.836
  I0928 12:54:47.836189 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/28/24 12:54:47.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:54:47.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:54:47.854
  STEP: creating @ 09/28/24 12:54:47.857
  STEP: getting @ 09/28/24 12:54:47.877
  STEP: listing in namespace @ 09/28/24 12:54:47.879
  STEP: patching @ 09/28/24 12:54:47.882
  STEP: deleting @ 09/28/24 12:54:47.897
  I0928 12:54:47.907408 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0928 12:54:47.957446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "csiinlinevolumes-8347" for this suite. @ 09/28/24 12:54:48.02
â€¢ [0.191 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/28/24 12:54:48.027
  I0928 12:54:48.027590 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 12:54:48.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:54:48.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:54:48.046
  STEP: creating Agnhost RC @ 09/28/24 12:54:48.05
  I0928 12:54:48.050323 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2775 create -f -'
  I0928 12:54:48.134899 18 builder.go:146] stderr: ""
  I0928 12:54:48.134943 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/28/24 12:54:48.134
  E0928 12:54:48.957790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:49.139160 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:54:49.139187 18 framework.go:733] Found 1 / 1
  I0928 12:54:49.139201 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/28/24 12:54:49.139
  I0928 12:54:49.142934 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:54:49.142956 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0928 12:54:49.143003 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2775 patch pod agnhost-primary-svf2v -p {"metadata":{"annotations":{"x":"y"}}}'
  I0928 12:54:49.192616 18 builder.go:146] stderr: ""
  I0928 12:54:49.192654 18 builder.go:147] stdout: "pod/agnhost-primary-svf2v patched\n"
  STEP: checking annotations @ 09/28/24 12:54:49.192
  I0928 12:54:49.197299 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 12:54:49.197319 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0928 12:54:49.197402 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2775" for this suite. @ 09/28/24 12:54:49.204
â€¢ [1.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/28/24 12:54:49.211
  I0928 12:54:49.211250 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:54:49.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:54:49.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:54:49.29
  STEP: Setting up server cert @ 09/28/24 12:54:49.311
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:54:49.529
  STEP: Deploying the webhook pod @ 09/28/24 12:54:49.538
  STEP: Wait for the deployment to be ready @ 09/28/24 12:54:49.551
  I0928 12:54:49.560242 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:54:49.958694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:50.958844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:54:51.574
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:54:51.584
  E0928 12:54:51.959044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:52.585301 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0928 12:54:52.594472 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:54:52.959781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6330-crds.webhook.example.com via the AdmissionRegistration API @ 09/28/24 12:54:53.107
  STEP: Creating a custom resource while v1 is storage version @ 09/28/24 12:54:53.121
  E0928 12:54:53.960472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:54.960708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/28/24 12:54:55.136
  STEP: Patching the custom resource while v2 is storage version @ 09/28/24 12:54:55.15
  I0928 12:54:55.738953 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7058" for this suite. @ 09/28/24 12:54:55.742
  STEP: Destroying namespace "webhook-markers-1361" for this suite. @ 09/28/24 12:54:55.75
â€¢ [6.547 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/28/24 12:54:55.758
  I0928 12:54:55.758053 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:54:55.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:54:55.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:54:55.777
  STEP: Creating pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156 @ 09/28/24 12:54:55.78
  E0928 12:54:55.961187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:56.962144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 12:54:57.799
  I0928 12:54:57.803842 18 container_probe.go:1749] Initial restart count of pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 is 0
  I0928 12:54:57.807035 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:54:57.962313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:54:58.962423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:54:59.810613 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:54:59.963726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:00.963918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:01.815093 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:01.964320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:02.964419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:03.819781 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:03.964869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:04.965293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:05.823515 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:05.965782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:06.965973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:07.827835 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:07.965984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:08.966148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:09.831672 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:09.966930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:10.966986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:11.837097 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:11.967357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:12.967800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:13.841591 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:13.967858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:14.968077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:15.848865 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  E0928 12:55:15.968354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:16.968476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:55:17.854454 18 container_probe.go:1759] Get pod liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 in namespace container-probe-8156
  I0928 12:55:17.854492 18 container_probe.go:1763] Restart count of pod container-probe-8156/liveness-29629a97-0de7-4f16-aa8f-7c6967cbc992 is now 1 (20.050629148s elapsed)
  STEP: deleting the pod @ 09/28/24 12:55:17.854
  I0928 12:55:17.868448 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8156" for this suite. @ 09/28/24 12:55:17.872
â€¢ [22.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/28/24 12:55:17.879
  I0928 12:55:17.879152 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 12:55:17.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:55:17.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:55:17.895
  E0928 12:55:17.968705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:18.969296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:19.969539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:20.969768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:21.970251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:22.970638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:23.970955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:24.971852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:25.972427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:26.972610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:27.973110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:28.974061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:29.974891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:30.975011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:31.975099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:32.975204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:33.975786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:34.975875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:35.975966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:36.976063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:37.976154      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:38.976253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:39.976345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:40.976719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:41.976818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:42.977782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:43.977883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:44.978734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:45.978799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:46.978928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:47.979082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:48.979175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:49.979263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:50.979387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:51.979780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:52.979912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:53.979989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:54.980127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:55.981175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:56.981300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:57.981419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:58.981628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:55:59.981824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:00.981891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:01.982153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:02.982267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:03.982317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:04.982475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:05.982692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:06.982880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:07.983189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:08.983913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:09.984009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:10.984093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:11.984204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:12.985245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:13.985859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:14.985971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:15.986061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:16.986166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:17.919228 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1961" for this suite. @ 09/28/24 12:56:17.923
â€¢ [60.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/28/24 12:56:17.931
  I0928 12:56:17.931171 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubelet-test @ 09/28/24 12:56:17.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:17.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:17.949
  STEP: Waiting for pod completion @ 09/28/24 12:56:17.962
  E0928 12:56:17.986632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:18.987145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:19.987728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:20.988775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:21.988813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:21.989128 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7356" for this suite. @ 09/28/24 12:56:21.993
â€¢ [4.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/28/24 12:56:21.999
  I0928 12:56:21.999971 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 12:56:22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:22.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:22.019
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5259 @ 09/28/24 12:56:22.022
  STEP: changing the ExternalName service to type=NodePort @ 09/28/24 12:56:22.028
  STEP: creating replication controller externalname-service in namespace services-5259 @ 09/28/24 12:56:22.045
  I0928 12:56:22.051966      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5259, replica count: 2
  E0928 12:56:22.989462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:23.989712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:24.990136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:25.102628      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 12:56:25.102666 18 resource.go:361] Creating new exec pod
  E0928 12:56:25.990265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:26.990381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:27.990726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:28.125168 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0928 12:56:28.206746 18 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0928 12:56:28.206784 18 builder.go:147] stdout: "externalname-service-br2x9"
  I0928 12:56:28.206863 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.84 80'
  I0928 12:56:28.281810 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.84 80\nConnection to 10.152.183.84 80 port [tcp/http] succeeded!\n"
  I0928 12:56:28.281847 18 builder.go:147] stdout: ""
  E0928 12:56:28.991713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:29.206983 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.84 80'
  I0928 12:56:29.284518 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.84 80\nConnection to 10.152.183.84 80 port [tcp/http] succeeded!\n"
  I0928 12:56:29.284587 18 builder.go:147] stdout: "externalname-service-t9c7t"
  I0928 12:56:29.284706 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.6.28 31735'
  I0928 12:56:29.361078 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.6.28 31735\nConnection to 172.31.6.28 31735 port [tcp/*] succeeded!\n"
  I0928 12:56:29.361121 18 builder.go:147] stdout: "externalname-service-br2x9"
  I0928 12:56:29.361278 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 31735'
  I0928 12:56:29.440898 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.43.233 31735\nConnection to 172.31.43.233 31735 port [tcp/*] succeeded!\n"
  I0928 12:56:29.440936 18 builder.go:147] stdout: ""
  E0928 12:56:29.992681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:30.362261 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 31735'
  I0928 12:56:30.442871 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.43.233 31735\nConnection to 172.31.43.233 31735 port [tcp/*] succeeded!\n"
  I0928 12:56:30.442909 18 builder.go:147] stdout: ""
  E0928 12:56:30.993651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:31.361314 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-5259 exec execpodzmrsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 31735'
  I0928 12:56:31.446476 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.43.233 31735\nConnection to 172.31.43.233 31735 port [tcp/*] succeeded!\n"
  I0928 12:56:31.446524 18 builder.go:147] stdout: "externalname-service-br2x9"
  I0928 12:56:31.446668 18 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0928 12:56:31.473793 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5259" for this suite. @ 09/28/24 12:56:31.477
â€¢ [9.484 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/28/24 12:56:31.484
  I0928 12:56:31.484392 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/28/24 12:56:31.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:31.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:31.504
  STEP: create the container to handle the HTTPGet hook request. @ 09/28/24 12:56:31.512
  E0928 12:56:31.994249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:32.994369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/28/24 12:56:33.536
  E0928 12:56:33.995150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:34.995172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/28/24 12:56:35.557
  STEP: delete the pod with lifecycle hook @ 09/28/24 12:56:35.563
  E0928 12:56:35.995782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:36.996781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:37.576856 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4192" for this suite. @ 09/28/24 12:56:37.579
â€¢ [6.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/28/24 12:56:37.586
  I0928 12:56:37.586537 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:56:37.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:37.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:37.604
  STEP: Setting up server cert @ 09/28/24 12:56:37.626
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:56:37.781
  STEP: Deploying the webhook pod @ 09/28/24 12:56:37.787
  STEP: Wait for the deployment to be ready @ 09/28/24 12:56:37.799
  I0928 12:56:37.807243 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:56:37.997527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:38.997677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:56:39.818
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:56:39.831
  E0928 12:56:39.998142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:40.832074 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/28/24 12:56:40.841
  STEP: create a pod that should be denied by the webhook @ 09/28/24 12:56:40.854
  STEP: create a pod that causes the webhook to hang @ 09/28/24 12:56:40.862
  E0928 12:56:40.998161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:41.998245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:42.998447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:43.998733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:44.999766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:46.000034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:47.000236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:48.000360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:49.000781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:50.000974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/28/24 12:56:50.871
  STEP: create a configmap that should be admitted by the webhook @ 09/28/24 12:56:50.903
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/28/24 12:56:50.912
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/28/24 12:56:50.921
  STEP: create a namespace that bypass the webhook @ 09/28/24 12:56:50.926
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/28/24 12:56:50.94
  I0928 12:56:50.994680 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4634" for this suite. @ 09/28/24 12:56:50.998
  E0928 12:56:51.001348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-5214" for this suite. @ 09/28/24 12:56:51.003
  STEP: Destroying namespace "exempted-namespace-393" for this suite. @ 09/28/24 12:56:51.01
â€¢ [13.429 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/28/24 12:56:51.015
  I0928 12:56:51.015961 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 12:56:51.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:51.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:51.034
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4240 @ 09/28/24 12:56:51.037
  STEP: changing the ExternalName service to type=ClusterIP @ 09/28/24 12:56:51.043
  STEP: creating replication controller externalname-service in namespace services-4240 @ 09/28/24 12:56:51.058
  I0928 12:56:51.066195      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4240, replica count: 2
  E0928 12:56:52.001713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:53.001842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:54.001992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:54.117275      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 12:56:54.117312 18 resource.go:361] Creating new exec pod
  E0928 12:56:55.002234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:56.002422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:56:57.002716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:57.145145 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-4240 exec execpodv2g5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0928 12:56:57.225459 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0928 12:56:57.225496 18 builder.go:147] stdout: "externalname-service-m4n74"
  I0928 12:56:57.225593 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-4240 exec execpodv2g5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.172 80'
  I0928 12:56:57.306826 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.172 80\nConnection to 10.152.183.172 80 port [tcp/http] succeeded!\n"
  I0928 12:56:57.306867 18 builder.go:147] stdout: "externalname-service-m4n74"
  I0928 12:56:57.306952 18 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0928 12:56:57.322530 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4240" for this suite. @ 09/28/24 12:56:57.326
â€¢ [6.315 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/28/24 12:56:57.331
  I0928 12:56:57.331821 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 12:56:57.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:56:57.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:56:57.351
  STEP: creating a Deployment @ 09/28/24 12:56:57.357
  STEP: waiting for Deployment to be created @ 09/28/24 12:56:57.363
  STEP: waiting for all Replicas to be Ready @ 09/28/24 12:56:57.364
  I0928 12:56:57.366194 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.366214 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.379478 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.379504 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.390453 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.390473 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.429726 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0928 12:56:57.429761 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0928 12:56:58.002806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:58.278089 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0928 12:56:58.278121 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0928 12:56:59.003149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:56:59.121593 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/28/24 12:56:59.121
  I0928 12:56:59.131165 18 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/28/24 12:56:59.131
  I0928 12:56:59.132739 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132758 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132767 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132772 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132779 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132784 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132847 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132853 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 0
  I0928 12:56:59.132863 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:56:59.132869 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:56:59.132875 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.132881 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.132914 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.132923 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.143005 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.143032 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.167619 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.167640 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:56:59.176449 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:56:59.176471 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:56:59.186845 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:56:59.186863 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  E0928 12:57:00.003326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:57:00.266771 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:57:00.266810 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:57:00.294233 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  STEP: listing Deployments @ 09/28/24 12:57:00.294
  I0928 12:57:00.298139 18 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/28/24 12:57:00.298
  I0928 12:57:00.308042 18 deployment.go:360] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/28/24 12:57:00.308
  I0928 12:57:00.313169 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:00.319274 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:00.337691 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:00.353525 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:00.369728 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0928 12:57:01.003489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:57:01.127662 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:01.153292 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:01.188448 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0928 12:57:01.194446 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0928 12:57:02.003659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:57:02.266624 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/28/24 12:57:02.292
  STEP: fetching the DeploymentStatus @ 09/28/24 12:57:02.302
  I0928 12:57:02.308064 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:57:02.308103 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:57:02.308112 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:57:02.308326 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:57:02.308336 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 1
  I0928 12:57:02.308344 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:57:02.308409 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3
  I0928 12:57:02.308419 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:57:02.308478 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 2
  I0928 12:57:02.308486 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-9578 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/28/24 12:57:02.308
  I0928 12:57:02.317035 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317072 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317081 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317143 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317161 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317219 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317228 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317236 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317297 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317304 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317329 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317400 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.317411 18 deployment.go:475] observed event type MODIFIED
  I0928 12:57:02.320714 18 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0928 12:57:02.323724 18 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e013d7f-d212-4d08-ac2f-7c0aff9d4217",
      ResourceVersion: (string) (len=5) "16772",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c4e00792-87d3-4082-8e30-d08a7871d6f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 34 65 30  30 37 39 32 2d 38 37 64  |":\"c4e00792-87d|
              00000130  33 2d 34 30 38 32 2d 38  65 33 30 2d 64 30 38 61  |3-4082-8e30-d08a|
              00000140  37 38 37 31 64 36 66 34  5c 22 7d 22 3a 7b 7d 7d  |7871d6f4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0928 12:57:02.327503 18 deployment.go:669] pod: "test-deployment-6c86c7f765-7vpp6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-7vpp6",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "255f3d35-f5b9-4c86-8617-50576f671294",
      ResourceVersion: (string) (len=5) "16771",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "0e013d7f-d212-4d08-ac2f-7c0aff9d4217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 65 30 31 33 64 37 66  |uid\":\"0e013d7f|
              000000a0  2d 64 32 31 32 2d 34 64  30 38 2d 61 63 32 66 2d  |-d212-4d08-ac2f-|
              000000b0  37 63 30 61 66 66 39 64  34 32 31 37 5c 22 7d 22  |7c0aff9d4217\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 39 35 5c 22 7d 22 3a  |2.168.12.95\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4wfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4wfs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863125021,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8632f523df90e6bb3e359d743b33d045015302f0dc700f6f1632c0e5207eec22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s4wfs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0928 12:57:02.331003 18 deployment.go:669] pod: "test-deployment-6c86c7f765-n2d24":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-n2d24",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f01fe89-7b77-4c38-8086-74be9edb20b6",
      ResourceVersion: (string) (len=5) "16736",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "0e013d7f-d212-4d08-ac2f-7c0aff9d4217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 65 30 31 33 64 37 66  |uid\":\"0e013d7f|
              000000a0  2d 64 32 31 32 2d 34 64  30 38 2d 61 63 32 66 2d  |-d212-4d08-ac2f-|
              000000b0  37 63 30 61 66 66 39 64  34 32 31 37 5c 22 7d 22  |7c0aff9d4217\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 32 30 5c 22 7d 22  |2.168.38.120\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2cq4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2cq4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863125020,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://69a587764f2540e5919f0aaa170d3c28670278dd758e350d155527368742ced2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2cq4m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0928 12:57:02.334284 18 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c48cf23-aba8-4b3e-9b42-13e4bea9d287",
      ResourceVersion: (string) (len=5) "16782",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c4e00792-87d3-4082-8e30-d08a7871d6f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 34 65 30  30 37 39 32 2d 38 37 64  |":\"c4e00792-87d|
              00000130  33 2d 34 30 38 32 2d 38  65 33 30 2d 64 30 38 61  |3-4082-8e30-d08a|
              00000140  37 38 37 31 64 36 66 34  5c 22 7d 22 3a 7b 7d 7d  |7871d6f4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0928 12:57:02.342909 18 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-j7s2q":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-j7s2q",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c669354b-3c41-49b3-a8fc-2dfc40d1038c",
      ResourceVersion: (string) (len=5) "16784",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "6c48cf23-aba8-4b3e-9b42-13e4bea9d287",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 63 34 38 63 66 32 33  |uid\":\"6c48cf23|
              000000a0  2d 61 62 61 38 2d 34 62  33 65 2d 39 62 34 32 2d  |-aba8-4b3e-9b42-|
              000000b0  31 33 65 34 62 65 61 39  64 32 38 37 5c 22 7d 22  |13e4bea9d287\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 39 32 2e 31 36 38 2e  |"ip\":\"192.168.|
              00000290  33 38 2e 31 31 39 5c 22  7d 22 3a 7b 22 2e 22 3a  |38.119\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhhl6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhhl6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125022,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863125020,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863125022,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://31d445d07b2ce09b7aa43c06ba8bd76db631a6c4ebb73ce898ebe1c5d236faf5"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://31d445d07b2ce09b7aa43c06ba8bd76db631a6c4ebb73ce898ebe1c5d236faf5",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lhhl6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0928 12:57:02.346512 18 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-jbdxz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-jbdxz",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-9578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3e32877-b209-4787-96f5-718a9e412e3f",
      ResourceVersion: (string) (len=5) "16778",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "6c48cf23-aba8-4b3e-9b42-13e4bea9d287",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 63 34 38 63 66 32 33  |uid\":\"6c48cf23|
              000000a0  2d 61 62 61 38 2d 34 62  33 65 2d 39 62 34 32 2d  |-aba8-4b3e-9b42-|
              000000b0  31 33 65 34 62 65 61 39  64 32 38 37 5c 22 7d 22  |13e4bea9d287\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 39 33 5c 22 7d 22 3a  |2.168.12.93\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pd5xw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pd5xw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863125019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863125019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863125019,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://24a5269e250bf48479a762e2782556b2ef35c9b2cf82f5779360293df8221c4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pd5xw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0928 12:57:02.349057 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9578" for this suite. @ 09/28/24 12:57:02.352
â€¢ [5.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/28/24 12:57:02.361
  I0928 12:57:02.361768 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:57:02.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:02.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:02.383
  STEP: Setting up server cert @ 09/28/24 12:57:02.411
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:57:02.562
  STEP: Deploying the webhook pod @ 09/28/24 12:57:02.569
  STEP: Wait for the deployment to be ready @ 09/28/24 12:57:02.582
  I0928 12:57:02.591586 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:57:03.003717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:04.003791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:57:04.603
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:57:04.613
  E0928 12:57:05.004712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:57:05.613447 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/28/24 12:57:05.621
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/28/24 12:57:05.638
  STEP: Creating a configMap that should not be mutated @ 09/28/24 12:57:05.645
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/28/24 12:57:05.656
  STEP: Creating a configMap that should be mutated @ 09/28/24 12:57:05.663
  I0928 12:57:05.722000 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2281" for this suite. @ 09/28/24 12:57:05.725
  STEP: Destroying namespace "webhook-markers-6920" for this suite. @ 09/28/24 12:57:05.731
â€¢ [3.377 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/28/24 12:57:05.739
  I0928 12:57:05.739100 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 12:57:05.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:05.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:05.759
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/28/24 12:57:05.762
  E0928 12:57:06.004823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:07.004904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:08.004993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:09.005736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:57:09.782
  I0928 12:57:09.786435 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-052b6295-754f-4ac6-be90-36bd22ad371c container test-container: <nil>
  STEP: delete the pod @ 09/28/24 12:57:09.796
  I0928 12:57:09.815029 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5224" for this suite. @ 09/28/24 12:57:09.819
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/28/24 12:57:09.827
  I0928 12:57:09.827103 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename endpointslice @ 09/28/24 12:57:09.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:09.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:09.851
  I0928 12:57:09.865052 18 endpointslice.go:1045] Endpoints addresses: [172.31.71.80 172.31.94.191] , ports: [6443]
  I0928 12:57:09.865078 18 endpointslice.go:1075] EndpointSlices addresses: [172.31.71.80 172.31.94.191] , ports: [6443]
  I0928 12:57:09.865193 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4861" for this suite. @ 09/28/24 12:57:09.869
â€¢ [0.047 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/28/24 12:57:09.874
  I0928 12:57:09.874496 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 12:57:09.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:09.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:09.897
  STEP: set up a multi version CRD @ 09/28/24 12:57:09.9
  I0928 12:57:09.901113 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 12:57:10.006297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:11.007205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:12.007727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/28/24 12:57:12.998
  E0928 12:57:13.007851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the new version name is served @ 09/28/24 12:57:13.01
  STEP: check the old version name is removed @ 09/28/24 12:57:13.863
  E0928 12:57:14.007949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/28/24 12:57:14.528
  E0928 12:57:15.008281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:16.008407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:57:17.000071 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9412" for this suite. @ 09/28/24 12:57:17.007
  E0928 12:57:17.008861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [7.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/28/24 12:57:17.014
  I0928 12:57:17.014808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-runtime @ 09/28/24 12:57:17.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:17.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:17.036
  STEP: create the container @ 09/28/24 12:57:17.039
  W0928 12:57:17.049170      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/28/24 12:57:17.049
  E0928 12:57:18.009717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:19.010471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:20.010536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/28/24 12:57:20.07
  STEP: the container should be terminated @ 09/28/24 12:57:20.074
  STEP: the termination message should be set @ 09/28/24 12:57:20.074
  I0928 12:57:20.074500 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/28/24 12:57:20.074
  I0928 12:57:20.092716 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1479" for this suite. @ 09/28/24 12:57:20.096
â€¢ [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/28/24 12:57:20.102
  I0928 12:57:20.102244 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 12:57:20.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:20.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:20.125
  STEP: Creating Indexed job @ 09/28/24 12:57:20.128
  STEP: Ensuring job reaches completions @ 09/28/24 12:57:20.135
  E0928 12:57:21.010702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:22.010936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:23.011113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:24.011406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:25.011554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:26.011683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:27.011786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:28.011898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:29.012160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:30.012248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/28/24 12:57:30.144
  I0928 12:57:30.148458 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9964" for this suite. @ 09/28/24 12:57:30.151
â€¢ [10.055 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/28/24 12:57:30.157
  I0928 12:57:30.157877 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 12:57:30.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:30.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:30.182
  STEP: Creating configMap with name configmap-test-volume-map-cc4cec3c-5128-40ca-9ad8-37e0609d1d01 @ 09/28/24 12:57:30.184
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:57:30.189
  E0928 12:57:31.012404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:32.012613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:33.012745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:34.013013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:57:34.213
  I0928 12:57:34.217163 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-3c9920c9-2013-48c5-a1b5-08431277c3a9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:57:34.228
  I0928 12:57:34.254927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1838" for this suite. @ 09/28/24 12:57:34.259
â€¢ [4.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/28/24 12:57:34.266
  I0928 12:57:34.266866 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 12:57:34.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:34.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:34.296
  STEP: Creating a suspended job @ 09/28/24 12:57:34.302
  STEP: Patching the Job @ 09/28/24 12:57:34.308
  STEP: Watching for Job to be patched @ 09/28/24 12:57:34.33
  I0928 12:57:34.332730 18 job.go:1330] Event ADDED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk] and annotations: map[]
  I0928 12:57:34.332754 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk] and annotations: map[]
  I0928 12:57:34.332765 18 job.go:1333] Event MODIFIED found for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[]
  STEP: Updating the job @ 09/28/24 12:57:34.332
  STEP: Watching for Job to be updated @ 09/28/24 12:57:34.346
  I0928 12:57:34.348086 18 job.go:1333] Event MODIFIED found for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:34.348117 18 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/28/24 12:57:34.348
  I0928 12:57:34.351893 18 job.go:1233] Job: e2e-s7lzk as labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched]
  STEP: Waiting for job to complete @ 09/28/24 12:57:34.351
  E0928 12:57:35.013745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:36.013899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:37.014047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:38.014854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:39.015485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:40.015936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:41.016784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:42.017587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/28/24 12:57:42.361
  STEP: Watching for Job to be deleted @ 09/28/24 12:57:42.369
  I0928 12:57:42.371828 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:42.371863 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:42.371883 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:42.371953 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:42.372030 18 job.go:1330] Event MODIFIED observed for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  I0928 12:57:42.372041 18 job.go:1333] Event DELETED found for Job e2e-s7lzk in namespace job-1890 with labels: map[e2e-job-label:e2e-s7lzk e2e-s7lzk:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/28/24 12:57:42.372
  I0928 12:57:42.374923 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1890" for this suite. @ 09/28/24 12:57:42.38
â€¢ [8.126 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/28/24 12:57:42.392
  I0928 12:57:42.392663 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 12:57:42.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:42.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:42.412
  STEP: Creating a test namespace @ 09/28/24 12:57:42.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:42.435
  STEP: Creating a pod in the namespace @ 09/28/24 12:57:42.438
  STEP: Waiting for the pod to have running status @ 09/28/24 12:57:42.447
  E0928 12:57:43.018107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:44.018256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/28/24 12:57:44.456
  STEP: Waiting for the namespace to be removed. @ 09/28/24 12:57:44.463
  E0928 12:57:45.018983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:46.019068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:47.019601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:48.019703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:49.020747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:50.020936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:51.021840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:52.022842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:53.023868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:54.024789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:55.025543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/28/24 12:57:55.468
  STEP: Verifying there are no pods in the namespace @ 09/28/24 12:57:55.485
  I0928 12:57:55.491687 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7159" for this suite. @ 09/28/24 12:57:55.495
  STEP: Destroying namespace "nsdeletetest-9119" for this suite. @ 09/28/24 12:57:55.502
  I0928 12:57:55.506055 18 framework.go:370] Namespace nsdeletetest-9119 was already deleted
  STEP: Destroying namespace "nsdeletetest-2383" for this suite. @ 09/28/24 12:57:55.506
â€¢ [13.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/28/24 12:57:55.513
  I0928 12:57:55.513268 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 12:57:55.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:55.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:55.533
  I0928 12:57:55.536487 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  W0928 12:57:55.537036      18 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0055ac030 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0928 12:57:56.025718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:57.026218      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:57:58.026782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0928 12:57:58.073618      18 warnings.go:70] unknown field "alpha"
  W0928 12:57:58.073637      18 warnings.go:70] unknown field "beta"
  W0928 12:57:58.073640      18 warnings.go:70] unknown field "delta"
  W0928 12:57:58.073643      18 warnings.go:70] unknown field "epsilon"
  W0928 12:57:58.073645      18 warnings.go:70] unknown field "gamma"
  I0928 12:57:58.621708 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-18" for this suite. @ 09/28/24 12:57:58.625
â€¢ [3.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/28/24 12:57:58.633
  I0928 12:57:58.633074 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 12:57:58.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:57:58.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:57:58.654
  STEP: Creating a job @ 09/28/24 12:57:58.657
  STEP: Ensuring job reaches completions @ 09/28/24 12:57:58.664
  E0928 12:57:59.027534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:00.027796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:01.027910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:02.028136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:03.028249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:04.028717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:05.028822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:06.028973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:07.029884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:08.030087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:09.030227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:10.030413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:58:10.675257 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5173" for this suite. @ 09/28/24 12:58:10.679
â€¢ [12.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/28/24 12:58:10.693
  I0928 12:58:10.693191 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:58:10.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:10.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:10.715
  STEP: Setting up server cert @ 09/28/24 12:58:10.743
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:58:10.825
  STEP: Deploying the webhook pod @ 09/28/24 12:58:10.834
  STEP: Wait for the deployment to be ready @ 09/28/24 12:58:10.848
  I0928 12:58:10.859635 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:58:11.030908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:12.031112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:58:12.871
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:58:12.881
  E0928 12:58:13.031200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:58:13.882305 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/28/24 12:58:13.891
  STEP: create the configmap with a random name @ 09/28/24 12:58:13.908
  STEP: verify the configmap is mutated @ 09/28/24 12:58:13.919
  STEP: create the configmap with 'skip-me' name @ 09/28/24 12:58:13.919
  I0928 12:58:13.965433 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1948" for this suite. @ 09/28/24 12:58:13.97
  STEP: Destroying namespace "webhook-markers-7185" for this suite. @ 09/28/24 12:58:13.976
â€¢ [3.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/28/24 12:58:13.984
  I0928 12:58:13.984417 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 12:58:13.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:13.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:14.003
  STEP: Creating configMap with name configmap-test-volume-30e2ae05-5569-4c6b-b8d3-0b287adc72ec @ 09/28/24 12:58:14.006
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:58:14.01
  E0928 12:58:14.032119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:15.032782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:16.032989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:17.033211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:18.033528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:58:18.034
  I0928 12:58:18.038962 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-3f97315c-b268-4594-8835-de702b4c68dc container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 12:58:18.05
  I0928 12:58:18.067579 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1706" for this suite. @ 09/28/24 12:58:18.071
â€¢ [4.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/28/24 12:58:18.077
  I0928 12:58:18.077494 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 12:58:18.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:18.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:18.098
  STEP: Setting up server cert @ 09/28/24 12:58:18.127
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 12:58:18.572
  STEP: Deploying the webhook pod @ 09/28/24 12:58:18.578
  STEP: Wait for the deployment to be ready @ 09/28/24 12:58:18.592
  I0928 12:58:18.602530 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 12:58:19.033966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:20.034075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 12:58:20.613
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 12:58:20.623
  E0928 12:58:21.034900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:58:21.624439 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/28/24 12:58:21.632
  STEP: verifying the validating webhook match conditions @ 09/28/24 12:58:21.639
  STEP: updating the validating webhook match conditions @ 09/28/24 12:58:21.643
  STEP: verifying the validating webhook match conditions @ 09/28/24 12:58:21.651
  I0928 12:58:21.693799 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5125" for this suite. @ 09/28/24 12:58:21.696
  STEP: Destroying namespace "webhook-markers-4252" for this suite. @ 09/28/24 12:58:21.703
â€¢ [3.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/28/24 12:58:21.71
  I0928 12:58:21.710059 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 12:58:21.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:21.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:21.73
  STEP: creating the pod @ 09/28/24 12:58:21.733
  STEP: setting up watch @ 09/28/24 12:58:21.733
  STEP: submitting the pod to kubernetes @ 09/28/24 12:58:21.836
  STEP: verifying the pod is in kubernetes @ 09/28/24 12:58:21.847
  STEP: verifying pod creation was observed @ 09/28/24 12:58:21.85
  E0928 12:58:22.035645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:23.035734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/28/24 12:58:23.864
  STEP: verifying pod deletion was observed @ 09/28/24 12:58:23.872
  E0928 12:58:24.036179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:25.036249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:26.036802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 12:58:26.486206 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1288" for this suite. @ 09/28/24 12:58:26.49
â€¢ [4.789 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/28/24 12:58:26.499
  I0928 12:58:26.499219 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 12:58:26.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:26.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:26.521
  STEP: Creating configMap with name projected-configmap-test-volume-17aa767c-84af-4480-90be-17e1f7af7f16 @ 09/28/24 12:58:26.524
  STEP: Creating a pod to test consume configMaps @ 09/28/24 12:58:26.528
  E0928 12:58:27.036930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:28.037028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:29.037113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:30.037190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 12:58:30.553
  I0928 12:58:30.558198 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-042b0dd9-326b-4712-a438-df22e86572a0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 12:58:30.564
  I0928 12:58:30.580425 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4112" for this suite. @ 09/28/24 12:58:30.583
â€¢ [4.090 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/28/24 12:58:30.589
  I0928 12:58:30.589757 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename cronjob @ 09/28/24 12:58:30.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 12:58:30.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 12:58:30.611
  STEP: Creating a suspended cronjob @ 09/28/24 12:58:30.614
  STEP: Ensuring no jobs are scheduled @ 09/28/24 12:58:30.621
  E0928 12:58:31.037792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:32.037908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:33.037986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:34.038368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:35.038502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:36.039331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:37.040300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:38.040509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:39.041393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:40.041594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:41.041795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:42.041978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:43.042107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:44.042294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:45.042389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:46.042555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:47.043583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:48.043759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:49.044489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:50.044717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:51.045269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:52.045790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:53.046355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:54.046719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:55.046810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:56.047700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:57.048462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:58.048721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:58:59.049589      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:00.049785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:01.050353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:02.050480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:03.051260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:04.051389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:05.051606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:06.051721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:07.051903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:08.052030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:09.052184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:10.052471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:11.053512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:12.053691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:13.054226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:14.054396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:15.055197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:16.055285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:17.055857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:18.055890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:19.056784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:20.056931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:21.057708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:22.057933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:23.058375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:24.058460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:25.059138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:26.059262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:27.060252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:28.060908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:29.061628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:30.061777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:31.062803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:32.063061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:33.063872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:34.063964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:35.064060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:36.064381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:37.065332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:38.065642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:39.065892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:40.065984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:41.066473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:42.066608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:43.066885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:44.067100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:45.067191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:46.067390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:47.067785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:48.067841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:49.067969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:50.068084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:51.068851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:52.068954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:53.069544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:54.069728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:55.070262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:56.070412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:57.071151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:58.071859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 12:59:59.072461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:00.072924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:01.073229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:02.073452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:03.074503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:04.074734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:05.075667      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:06.075722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:07.075816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:08.075857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:09.076080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:10.076529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:11.077539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:12.078478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:13.078963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:14.079871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:15.079932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:16.080929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:17.081397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:18.081868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:19.082101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:20.082864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:21.083336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:22.083415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:23.084097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:24.084174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:25.085011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:26.085101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:27.085664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:28.085951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:29.086861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:30.087068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:31.087767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:32.087897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:33.087914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:34.088787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:35.089719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:36.089989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:37.090067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:38.091021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:39.091247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:40.091346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:41.092183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:42.092460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:43.093156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:44.093291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:45.094307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:46.094471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:47.095267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:48.095593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:49.095702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:50.095723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:51.096318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:52.096436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:53.096646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:54.096855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:55.097478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:56.097619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:57.098251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:58.099073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:00:59.099401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:00.099529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:01.099998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:02.100241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:03.100824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:04.101046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:05.101080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:06.101864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:07.102832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:08.103119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:09.103577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:10.103814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:11.103824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:12.103902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:13.104775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:14.104869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:15.105136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:16.105765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:17.106529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:18.106957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:19.107087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:20.107284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:21.107872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:22.108047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:23.108393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:24.108634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:25.109240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:26.109506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:27.109544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:28.109945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:29.110517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:30.110728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:31.111626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:32.112015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:33.112305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:34.112471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:35.112672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:36.112787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:37.112929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:38.113447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:39.114504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:40.114637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:41.115122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:42.115254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:43.115584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:44.115695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:45.115851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:46.115958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:47.116054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:48.116937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:49.117775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:50.117899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:51.118791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:52.119106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:53.120128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:54.120322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:55.120617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:56.120738      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:57.120859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:58.121950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:01:59.122039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:00.122146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:01.122369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:02.122495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:03.123020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:04.123117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:05.123212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:06.123466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:07.123606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:08.123873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:09.123966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:10.124074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:11.124355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:12.124796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:13.124849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:14.125098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:15.125232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:16.125856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:17.126367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:18.126882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:19.127072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:20.127173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:21.127758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:22.128097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:23.128688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:24.128713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:25.128901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:26.129051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:27.129276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:28.130049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:29.130250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:30.131072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:31.131364      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:32.131519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:33.131692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:34.131913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:35.132545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:36.132603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:37.132805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:38.133005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:39.133217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:40.133335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:41.133555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:42.133701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:43.133988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:44.134086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:45.134282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:46.134372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:47.134496      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:48.135489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:49.135854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:50.135965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:51.136753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:52.137760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:53.137965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:54.138042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:55.138740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:56.139759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:57.139916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:58.140502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:02:59.140679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:00.140830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:01.141086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:02.141215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:03.142174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:04.142529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:05.142779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:06.142869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:07.143084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:08.143896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:09.144095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:10.145034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:11.145124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:12.145690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:13.145947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:14.146486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:15.146841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:16.147755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:17.148752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:18.148910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:19.149096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:20.149540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:21.149814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:22.150551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:23.150993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:24.151257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:25.151451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:26.152128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:27.152272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:28.153031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:29.153761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:30.154355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/28/24 13:03:30.621
  STEP: Removing cronjob @ 09/28/24 13:03:30.626
  I0928 13:03:30.634949 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4978" for this suite. @ 09/28/24 13:03:30.638
â€¢ [300.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/28/24 13:03:30.644
  I0928 13:03:30.644937 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:03:30.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:03:30.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:03:30.67
  STEP: Setting up server cert @ 09/28/24 13:03:30.701
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:03:30.805
  STEP: Deploying the webhook pod @ 09/28/24 13:03:30.812
  STEP: Wait for the deployment to be ready @ 09/28/24 13:03:30.825
  I0928 13:03:30.832453 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:03:31.154916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:32.155782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:03:32.844
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:03:32.853
  E0928 13:03:33.155866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:33.853634 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/28/24 13:03:33.862
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/28/24 13:03:33.862
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/28/24 13:03:33.876
  E0928 13:03:34.155971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/28/24 13:03:34.888
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/28/24 13:03:34.888
  E0928 13:03:35.156428      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/28/24 13:03:35.923
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/28/24 13:03:35.923
  E0928 13:03:36.157376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:37.157487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:38.158028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:39.158097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:40.158245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/28/24 13:03:40.957
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/28/24 13:03:40.957
  E0928 13:03:41.159078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:42.159257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:43.160203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:44.160307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:45.160458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:46.038599 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6356" for this suite. @ 09/28/24 13:03:46.042
  STEP: Destroying namespace "webhook-markers-2817" for this suite. @ 09/28/24 13:03:46.047
â€¢ [15.410 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/28/24 13:03:46.055
  I0928 13:03:46.055308 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:03:46.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:03:46.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:03:46.08
  STEP: creating a Pod with a static label @ 09/28/24 13:03:46.089
  STEP: watching for Pod to be ready @ 09/28/24 13:03:46.096
  I0928 13:03:46.097858 18 pods.go:945] observed Pod pod-test in namespace pods-5300 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0928 13:03:46.104428 18 pods.go:945] observed Pod pod-test in namespace pods-5300 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  }]
  I0928 13:03:46.120414 18 pods.go:945] observed Pod pod-test in namespace pods-5300 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  }]
  E0928 13:03:46.160784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:46.955658 18 pods.go:948] Found Pod pod-test in namespace pods-5300 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:03:46 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/28/24 13:03:46.959
  STEP: getting the Pod and ensuring that it's patched @ 09/28/24 13:03:46.968
  STEP: replacing the Pod's status Ready condition to False @ 09/28/24 13:03:46.973
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/28/24 13:03:46.984
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/28/24 13:03:46.984
  STEP: watching for the Pod to be deleted @ 09/28/24 13:03:46.992
  I0928 13:03:46.994405 18 pods.go:1058] observed event type MODIFIED
  E0928 13:03:47.161771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:48.162341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:48.963795 18 pods.go:1058] observed event type MODIFIED
  I0928 13:03:49.134925 18 pods.go:1058] observed event type MODIFIED
  E0928 13:03:49.163084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:49.971732 18 pods.go:1058] observed event type MODIFIED
  I0928 13:03:49.977707 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5300" for this suite. @ 09/28/24 13:03:49.981
â€¢ [3.935 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/28/24 13:03:49.99
  I0928 13:03:49.990793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:03:49.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:03:50.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:03:50.011
  STEP: Creating the pod @ 09/28/24 13:03:50.015
  E0928 13:03:50.163639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:51.163805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:52.164673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:52.563992 18 pod_client.go:173] Successfully updated pod "labelsupdate97a55811-be87-45b7-a594-49f834598c70"
  E0928 13:03:53.165183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:54.165256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:03:54.578528 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8372" for this suite. @ 09/28/24 13:03:54.582
â€¢ [4.599 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/28/24 13:03:54.589
  I0928 13:03:54.589591 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:03:54.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:03:54.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:03:54.612
  E0928 13:03:55.165716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:56.165810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:57.166345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:58.167052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:03:59.167780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:00.167875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:01.168811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:02.169055      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:03.170067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:04.170934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:05.171050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:06.171261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:07.172149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:08.172786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:09.172888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:10.173712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:11.174012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/28/24 13:04:11.62
  E0928 13:04:12.173924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:13.174074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:14.174878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:15.175506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:16.176593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/28/24 13:04:16.625
  STEP: Ensuring resource quota status is calculated @ 09/28/24 13:04:16.631
  E0928 13:04:17.176770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:18.176869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/28/24 13:04:18.637
  STEP: Ensuring resource quota status captures configMap creation @ 09/28/24 13:04:18.65
  E0928 13:04:19.176954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:20.177037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/28/24 13:04:20.655
  STEP: Ensuring resource quota status released usage @ 09/28/24 13:04:20.666
  E0928 13:04:21.177157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:22.177936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:22.673287 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4452" for this suite. @ 09/28/24 13:04:22.677
â€¢ [28.096 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:04:22.686
  I0928 13:04:22.686134 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sysctl @ 09/28/24 13:04:22.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:22.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:22.709
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/28/24 13:04:22.712
  I0928 13:04:22.717658 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2456" for this suite. @ 09/28/24 13:04:22.721
â€¢ [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/28/24 13:04:22.727
  I0928 13:04:22.727268 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:04:22.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:22.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:22.746
  STEP: Setting up server cert @ 09/28/24 13:04:22.772
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:04:23.082
  STEP: Deploying the webhook pod @ 09/28/24 13:04:23.091
  STEP: Wait for the deployment to be ready @ 09/28/24 13:04:23.103
  I0928 13:04:23.110685 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:04:23.178863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:24.179059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:04:25.122
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:04:25.134
  E0928 13:04:25.179653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:26.134605 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0928 13:04:26.179889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/28/24 13:04:26.207
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/28/24 13:04:26.238
  STEP: Deleting the collection of validation webhooks @ 09/28/24 13:04:26.264
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/28/24 13:04:26.31
  I0928 13:04:26.354885 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6627" for this suite. @ 09/28/24 13:04:26.358
  STEP: Destroying namespace "webhook-markers-3024" for this suite. @ 09/28/24 13:04:26.366
â€¢ [3.645 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/28/24 13:04:26.372
  I0928 13:04:26.372058 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:04:26.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:26.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:26.391
  STEP: Creating configMap with name projected-configmap-test-volume-9aa605af-3aab-4a19-ab39-043d48ce8d27 @ 09/28/24 13:04:26.394
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:04:26.4
  E0928 13:04:27.180075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:28.180071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:29.180207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:30.180484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:04:30.423
  I0928 13:04:30.428271 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-cfa4bce9-6f52-4f2c-9c51-6363eab9a0d9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:04:30.435
  I0928 13:04:30.453463 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9972" for this suite. @ 09/28/24 13:04:30.458
â€¢ [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/28/24 13:04:30.467
  I0928 13:04:30.467150 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename podtemplate @ 09/28/24 13:04:30.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:30.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:30.499
  STEP: Create a pod template @ 09/28/24 13:04:30.508
  STEP: Replace a pod template @ 09/28/24 13:04:30.518
  I0928 13:04:30.540490 18 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0928 13:04:30.540598 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1688" for this suite. @ 09/28/24 13:04:30.55
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/28/24 13:04:30.566
  I0928 13:04:30.566647 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:04:30.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:30.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:30.597
  STEP: creating service in namespace services-7397 @ 09/28/24 13:04:30.603
  STEP: creating service affinity-clusterip in namespace services-7397 @ 09/28/24 13:04:30.603
  STEP: creating replication controller affinity-clusterip in namespace services-7397 @ 09/28/24 13:04:30.615
  I0928 13:04:30.628139      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7397, replica count: 3
  E0928 13:04:31.180832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:32.180970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:33.181046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:33.679665      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 13:04:33.687976 18 resource.go:361] Creating new exec pod
  E0928 13:04:34.181156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:35.181265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:36.181714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:36.704603 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7397 exec execpod-affinity5prx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0928 13:04:36.787446 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0928 13:04:36.787493 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:04:36.787584 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7397 exec execpod-affinity5prx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I0928 13:04:36.867239 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.223 80\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I0928 13:04:36.867283 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:04:36.867398 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7397 exec execpod-affinity5prx7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.223:80/ ; done'
  I0928 13:04:36.998462 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n"
  I0928 13:04:36.998518 18 builder.go:147] stdout: "\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs\naffinity-clusterip-65khs"
  I0928 13:04:36.998539 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998548 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998554 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998578 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998586 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998592 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998597 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998602 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998608 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998633 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998639 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998650 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998656 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998662 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998667 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998673 18 service.go:242] Received response from host: affinity-clusterip-65khs
  I0928 13:04:36.998756 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7397, will wait for the garbage collector to delete the pods @ 09/28/24 13:04:37.013
  I0928 13:04:37.075526 18 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.466505ms
  I0928 13:04:37.176435 18 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.901845ms
  E0928 13:04:37.182671      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:38.183214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:39.183850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:40.184399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:40.191800 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7397" for this suite. @ 09/28/24 13:04:40.195
â€¢ [9.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/28/24 13:04:40.203
  I0928 13:04:40.203467 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context-test @ 09/28/24 13:04:40.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:40.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:40.221
  E0928 13:04:41.185116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:42.185794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:42.240059 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2394" for this suite. @ 09/28/24 13:04:42.245
â€¢ [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/28/24 13:04:42.254
  I0928 13:04:42.254040 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:04:42.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:42.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:42.276
  I0928 13:04:42.279715 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: creating the pod @ 09/28/24 13:04:42.28
  STEP: submitting the pod to kubernetes @ 09/28/24 13:04:42.28
  E0928 13:04:43.185894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:44.185986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:44.352702 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8463" for this suite. @ 09/28/24 13:04:44.358
â€¢ [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/28/24 13:04:44.368
  I0928 13:04:44.368400 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:04:44.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:44.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:44.397
  E0928 13:04:45.186943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:46.187028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:46.536937 18 delete.go:62] Deleting pod "var-expansion-259b6b80-be79-4587-a3f1-683ef1953957" in namespace "var-expansion-755"
  I0928 13:04:46.544621 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-259b6b80-be79-4587-a3f1-683ef1953957" to be fully deleted
  E0928 13:04:47.188048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:48.188960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:04:48.553526 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-755" for this suite. @ 09/28/24 13:04:48.557
â€¢ [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/28/24 13:04:48.566
  I0928 13:04:48.566026 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pod-network-test @ 09/28/24 13:04:48.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:04:48.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:04:48.589
  STEP: Performing setup for networking test in namespace pod-network-test-185 @ 09/28/24 13:04:48.592
  STEP: creating a selector @ 09/28/24 13:04:48.592
  STEP: Creating the service pods in kubernetes @ 09/28/24 13:04:48.592
  I0928 13:04:48.592379 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0928 13:04:49.189773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:50.190066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:51.190263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:52.190375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:53.190480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:54.190732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:55.190811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:56.191038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:57.192021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:58.193019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:04:59.193231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:00.193404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:01.193711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:02.193886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:03.194073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:04.194188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:05.194261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:06.194460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:07.194793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:08.194957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:09.195665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:10.195744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/28/24 13:05:10.697
  E0928 13:05:11.196541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:12.196716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:05:12.716686 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0928 13:05:12.716718 18 networking.go:42] Breadth first check of 192.168.38.126 on host 172.31.43.233...
  I0928 13:05:12.720509 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.125:9080/dial?request=hostname&protocol=udp&host=192.168.38.126&port=8081&tries=1'] Namespace:pod-network-test-185 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:05:12.720532 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:05:12.720985 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:05:12.721025 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-185/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.125%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.38.126%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:05:12.761210 18 utils.go:356] Waiting for responses: map[]
  I0928 13:05:12.761257 18 utils.go:360] reached 192.168.38.126 after 0/1 tries
  I0928 13:05:12.761265 18 networking.go:42] Breadth first check of 192.168.12.123 on host 172.31.6.28...
  I0928 13:05:12.765188 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.125:9080/dial?request=hostname&protocol=udp&host=192.168.12.123&port=8081&tries=1'] Namespace:pod-network-test-185 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:05:12.765209 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:05:12.765619 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:05:12.765656 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-185/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.125%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.12.123%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:05:12.805407 18 utils.go:356] Waiting for responses: map[]
  I0928 13:05:12.805436 18 utils.go:360] reached 192.168.12.123 after 0/1 tries
  I0928 13:05:12.805445 18 networking.go:42] Breadth first check of 192.168.107.219 on host 172.31.68.80...
  I0928 13:05:12.809662 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.125:9080/dial?request=hostname&protocol=udp&host=192.168.107.219&port=8081&tries=1'] Namespace:pod-network-test-185 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:05:12.809677 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:05:12.810065 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:05:12.810103 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-185/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.125%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.107.219%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:05:12.846627 18 utils.go:356] Waiting for responses: map[]
  I0928 13:05:12.846673 18 utils.go:360] reached 192.168.107.219 after 0/1 tries
  I0928 13:05:12.846682 18 networking.go:53] Going to retry 0 out of 3 pods....
  I0928 13:05:12.846777 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-185" for this suite. @ 09/28/24 13:05:12.851
â€¢ [24.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/28/24 13:05:12.858
  I0928 13:05:12.858123 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption @ 09/28/24 13:05:12.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:05:12.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:05:12.881
  I0928 13:05:12.899421 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 13:05:13.197099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:14.197320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:15.197525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:16.197763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:17.197869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:18.198837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:19.199674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:20.199831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:21.200022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:22.200249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:23.200291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:24.200530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:25.200724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:26.200932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:27.201762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:28.202078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:29.202685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:30.202910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:31.203691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:32.203866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:33.204481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:34.205521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:35.206536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:36.206690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:37.207414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:38.207746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:39.208678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:40.208845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:41.209483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:42.209736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:43.210068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:44.210254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:45.210401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:46.210623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:47.210850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:48.211047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:49.211098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:50.211284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:51.211352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:52.212145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:53.213163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:54.213287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:55.213414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:56.213801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:57.213877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:58.214179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:05:59.214237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:00.214425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:01.215311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:02.215888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:03.216551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:04.216689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:05.217587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:06.217700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:07.218519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:08.219254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:09.219332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:10.219530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:11.220343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:12.220512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:06:12.905774 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/28/24 13:06:12.909
  I0928 13:06:12.909578 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/28/24 13:06:12.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:06:12.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:06:12.932
  STEP: Finding an available node @ 09/28/24 13:06:12.935
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/28/24 13:06:12.935
  E0928 13:06:13.220919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:14.221021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/28/24 13:06:14.953
  I0928 13:06:14.966796 18 preemption.go:585] found a healthy node: ip-172-31-6-28
  E0928 13:06:15.221661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:16.222726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:17.223771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:18.223964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:19.224076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:20.224270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:06:21.029370 18 preemption.go:708] pods created so far: [1 1 1]
  I0928 13:06:21.029401 18 preemption.go:709] length of pods created so far: 3
  E0928 13:06:21.224830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:22.224939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:06:23.039754 18 preemption.go:726] pods created so far: [2 2 1]
  E0928 13:06:23.225028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:24.225125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:25.225223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:26.225316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:27.225377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:28.226118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:29.226765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:06:30.110397 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7821" for this suite. @ 09/28/24 13:06:30.113
  I0928 13:06:30.120040 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9075" for this suite. @ 09/28/24 13:06:30.123
â€¢ [77.271 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:06:30.129
  I0928 13:06:30.129425 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:06:30.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:06:30.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:06:30.151
  STEP: Creating configMap with name configmap-test-upd-7469b5b6-2c59-469e-bee0-52054b166c2f @ 09/28/24 13:06:30.157
  STEP: Creating the pod @ 09/28/24 13:06:30.162
  E0928 13:06:30.227321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:31.227508      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-7469b5b6-2c59-469e-bee0-52054b166c2f @ 09/28/24 13:06:32.202
  STEP: waiting to observe update in volume @ 09/28/24 13:06:32.208
  E0928 13:06:32.227856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:33.227976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:34.228271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:35.228476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:36.228854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:37.229759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:38.230049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:39.230705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:40.231793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:41.232076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:42.232287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:43.233171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:44.233382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:45.233543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:46.233836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:47.234545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:48.235079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:49.235704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:50.236781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:51.237147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:52.237781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:53.237952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:54.238031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:55.238685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:56.238811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:57.238904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:58.239005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:06:59.239086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:00.239197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:01.239718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:02.240790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:03.240930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:04.241151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:05.241463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:06.241729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:07.242209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:08.243102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:09.243220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:10.243357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:11.243447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:12.243736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:13.243899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:14.244012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:15.244118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:16.244183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:17.245032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:18.246012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:19.246101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:20.246761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:21.247772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:22.247991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:23.249006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:24.249194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:25.249387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:26.249613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:27.249861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:28.250075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:29.250845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:30.250975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:31.251198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:32.251304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:33.252080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:34.252784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:35.252989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:36.253273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:37.253788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:38.254145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:39.254377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:40.254624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:41.254777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:42.254863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:43.254961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:44.255066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:45.255686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:46.255806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:47.256788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:48.256971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:49.257786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:50.257986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:51.258787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:52.259032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:07:52.571155 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9776" for this suite. @ 09/28/24 13:07:52.575
â€¢ [82.452 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/28/24 13:07:52.581
  I0928 13:07:52.581419 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:07:52.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:07:52.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:07:52.602
  STEP: Creating configMap with name configmap-test-volume-77f5fa32-885a-42c7-99a7-ebdd16c174a0 @ 09/28/24 13:07:52.605
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:07:52.609
  E0928 13:07:53.260025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:54.260782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:07:54.627
  I0928 13:07:54.630887 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-903a61a3-07d1-49db-8fef-fbee4119b156 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:07:54.641
  I0928 13:07:54.659802 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4012" for this suite. @ 09/28/24 13:07:54.664
â€¢ [2.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/28/24 13:07:54.669
  I0928 13:07:54.669130 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:07:54.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:07:54.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:07:54.691
  STEP: Setting up server cert @ 09/28/24 13:07:54.717
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:07:54.901
  STEP: Deploying the webhook pod @ 09/28/24 13:07:54.908
  STEP: Wait for the deployment to be ready @ 09/28/24 13:07:54.92
  I0928 13:07:54.930330 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0928 13:07:55.261118      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:56.262022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:07:56.944
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:07:56.953
  E0928 13:07:57.262534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:07:57.953483 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/28/24 13:07:57.961
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/28/24 13:07:57.975
  STEP: Creating a dummy validating-webhook-configuration object @ 09/28/24 13:07:57.987
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/28/24 13:07:57.997
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/28/24 13:07:58.003
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/28/24 13:07:58.012
  I0928 13:07:58.064352 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8739" for this suite. @ 09/28/24 13:07:58.068
  STEP: Destroying namespace "webhook-markers-3229" for this suite. @ 09/28/24 13:07:58.072
â€¢ [3.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/28/24 13:07:58.078
  I0928 13:07:58.078221 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:07:58.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:07:58.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:07:58.098
  STEP: creating the pod with failed condition @ 09/28/24 13:07:58.101
  E0928 13:07:58.263458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:07:59.263634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:00.263871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:01.263981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:02.264681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:03.264787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:04.265523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:05.265720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:06.265823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:07.266783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:08.267724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:09.267827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:10.268404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:11.268502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:12.268596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:13.269528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:14.269734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:15.270767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:16.271767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:17.272779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:18.273283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:19.273459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:20.274181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:21.275034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:22.275359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:23.276031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:24.276601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:25.276725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:26.276838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:27.277777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:28.278699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:29.278789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:30.279788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:31.280030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:32.280265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:33.281280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:34.281332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:35.281534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:36.281551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:37.281795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:38.282127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:39.282353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:40.283323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:41.283443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:42.283696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:43.284122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:44.284391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:45.284643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:46.285230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:47.286160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:48.286415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:49.286781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:50.287710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:51.287731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:52.288347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:53.288697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:54.289452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:55.289581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:56.290625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:57.290902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:58.291192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:08:59.291300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:00.291668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:01.291736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:02.292800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:03.293040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:04.293255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:05.293391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:06.294169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:07.294385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:08.295317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:09.295788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:10.296655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:11.296813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:12.297750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:13.298038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:14.298261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:15.298732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:16.298814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:17.298919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:18.299133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:19.299274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:20.299473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:21.299610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:22.299812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:23.300270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:24.300389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:25.300546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:26.300780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:27.301477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:28.302157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:29.302330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:30.302431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:31.302549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:32.302735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:33.303012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:34.303285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:35.303725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:36.303886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:37.304014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:38.304386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:39.304720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:40.304819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:41.304927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:42.305138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:43.306188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:44.306792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:45.307776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:46.308781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:47.309708      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:48.310083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:49.310448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:50.310807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:51.310841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:52.311093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:53.312052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:54.312144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:55.312462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:56.312532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:09:57.312756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/28/24 13:09:58.112
  E0928 13:09:58.313311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:09:58.627817 18 pod_client.go:173] Successfully updated pod "var-expansion-fba931f9-5685-43fb-a2f5-1af893bec761"
  STEP: waiting for pod running @ 09/28/24 13:09:58.627
  E0928 13:09:59.313736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:00.313870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/28/24 13:10:00.635
  I0928 13:10:00.635980 18 delete.go:62] Deleting pod "var-expansion-fba931f9-5685-43fb-a2f5-1af893bec761" in namespace "var-expansion-2077"
  I0928 13:10:00.644214 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-fba931f9-5685-43fb-a2f5-1af893bec761" to be fully deleted
  E0928 13:10:01.313972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:02.314177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:03.314782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:04.315704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:05.315807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:06.315892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:07.316035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:08.316057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:09.316124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:10.316221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:11.316471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:12.316798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:13.317249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:14.317349      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:15.317788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:16.317991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:17.318091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:18.318134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:19.318295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:20.318394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:21.318511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:22.318727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:23.318835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:24.319061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:25.319178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:26.319284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:27.319372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:28.320222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:29.320384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:30.320614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:31.320785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:32.321081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:32.732980 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2077" for this suite. @ 09/28/24 13:10:32.736
â€¢ [154.667 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/28/24 13:10:32.745
  I0928 13:10:32.745585 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename volumeattachment @ 09/28/24 13:10:32.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:32.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:32.769
  STEP: Create VolumeAttachment "va-e2e-sxtrg" on node "ip-172-31-6-28" @ 09/28/24 13:10:32.776
  STEP: Get VolumeAttachment "va-e2e-sxtrg" on node "ip-172-31-6-28" @ 09/28/24 13:10:32.781
  STEP: Patch VolumeAttachment "va-e2e-sxtrg" on node "ip-172-31-6-28" @ 09/28/24 13:10:32.785
  STEP: List VolumeAttachments with "va-e2e-sxtrg=patched" label @ 09/28/24 13:10:32.791
  STEP: Delete VolumeAttachment "va-e2e-sxtrg" on node "ip-172-31-6-28" @ 09/28/24 13:10:32.793
  STEP: Confirm deletion of VolumeAttachment "va-e2e-sxtrg" on node "ip-172-31-6-28" @ 09/28/24 13:10:32.799
  STEP: Create VolumeAttachment "va-e2e-vggvh" on node "ip-172-31-94-191" @ 09/28/24 13:10:32.806
  STEP: Update the VolumeAttachment "va-e2e-vggvh" on node "ip-172-31-94-191" with label "va-e2e=updated" @ 09/28/24 13:10:32.811
  STEP: Create VolumeAttachment "va-e2e-l62px" on node "ip-172-31-71-80" @ 09/28/24 13:10:32.822
  STEP: Update the VolumeAttachment "va-e2e-l62px" on node "ip-172-31-71-80" with label "va-e2e=updated" @ 09/28/24 13:10:32.829
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/28/24 13:10:32.836
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/28/24 13:10:32.851
  I0928 13:10:32.854421 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3738" for this suite. @ 09/28/24 13:10:32.857
â€¢ [0.120 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/28/24 13:10:32.865
  I0928 13:10:32.865447 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sysctl @ 09/28/24 13:10:32.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:32.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:32.886
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/28/24 13:10:32.889
  STEP: Watching for error events or started pod @ 09/28/24 13:10:32.898
  E0928 13:10:33.322145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:34.322243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/28/24 13:10:34.903
  STEP: Checking that the pod succeeded @ 09/28/24 13:10:34.911
  STEP: Getting logs from the pod @ 09/28/24 13:10:34.911
  STEP: Checking that the sysctl is actually updated @ 09/28/24 13:10:34.925
  I0928 13:10:34.925438 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-416" for this suite. @ 09/28/24 13:10:34.929
â€¢ [2.072 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/28/24 13:10:34.937
  I0928 13:10:34.937220 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:10:34.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:34.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:34.957
  STEP: Setting up server cert @ 09/28/24 13:10:34.983
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:10:35.249
  STEP: Deploying the webhook pod @ 09/28/24 13:10:35.26
  STEP: Wait for the deployment to be ready @ 09/28/24 13:10:35.273
  I0928 13:10:35.280837 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0928 13:10:35.323023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:36.323128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:10:37.293
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:10:37.303
  E0928 13:10:37.323426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:38.304151 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/28/24 13:10:38.313
  E0928 13:10:38.324378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a pod @ 09/28/24 13:10:38.326
  E0928 13:10:39.324762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:40.324862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/28/24 13:10:40.342
  I0928 13:10:40.342884 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=webhook-9850 attach --namespace=webhook-9850 to-be-attached-pod -i -c=container1'
  I0928 13:10:40.400991 18 builder.go:135] rc: 1
  I0928 13:10:40.444324 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9850" for this suite. @ 09/28/24 13:10:40.449
  STEP: Destroying namespace "webhook-markers-7336" for this suite. @ 09/28/24 13:10:40.455
â€¢ [5.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/28/24 13:10:40.461
  I0928 13:10:40.461831 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename containers @ 09/28/24 13:10:40.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:40.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:40.479
  E0928 13:10:41.324950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:42.325042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:42.510004 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4057" for this suite. @ 09/28/24 13:10:42.513
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/28/24 13:10:42.521
  I0928 13:10:42.521435 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 13:10:42.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:42.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:42.543
  I0928 13:10:42.566717 18 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/28/24 13:10:42.572
  I0928 13:10:42.575239 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:42.575261 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/28/24 13:10:42.575
  I0928 13:10:42.591758 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:42.591790 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:10:43.325802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:43.594292 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0928 13:10:43.594322 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/28/24 13:10:43.597
  I0928 13:10:43.619469 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:43.619631 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/28/24 13:10:43.619
  I0928 13:10:43.635530 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:43.635571 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:10:44.326824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:44.636790 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:44.636823 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:10:45.327029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:45.635919 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0928 13:10:45.635998 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 13:10:45.645
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7051, will wait for the garbage collector to delete the pods @ 09/28/24 13:10:45.645
  I0928 13:10:45.705316 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.545827ms
  I0928 13:10:45.805409 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.087789ms
  E0928 13:10:46.327767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:47.327949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:47.410504 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:10:47.410541 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 13:10:47.413858 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20836"},"items":null}

  I0928 13:10:47.416964 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20836"},"items":null}

  I0928 13:10:47.437300 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7051" for this suite. @ 09/28/24 13:10:47.441
â€¢ [4.926 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/28/24 13:10:47.447
  I0928 13:10:47.447153 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:10:47.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:47.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:47.467
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:10:47.472
  E0928 13:10:48.328032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:49.328157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:50.328725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:51.328993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:10:51.496
  I0928 13:10:51.500726 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-13b53327-1f6b-4eb8-9726-b79ae6a30753 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:10:51.506
  I0928 13:10:51.521723 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6001" for this suite. @ 09/28/24 13:10:51.525
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/28/24 13:10:51.531
  I0928 13:10:51.531881 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:10:51.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:10:51.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:10:51.553
  STEP: creating service nodeport-test with type=NodePort in namespace services-7994 @ 09/28/24 13:10:51.557
  STEP: creating replication controller nodeport-test in namespace services-7994 @ 09/28/24 13:10:51.57
  I0928 13:10:51.578913      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-7994, replica count: 2
  E0928 13:10:52.329432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:53.330518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:54.330652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:54.630203      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 13:10:54.630243 18 resource.go:361] Creating new exec pod
  E0928 13:10:55.331717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:56.331923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:10:57.332111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:57.654792 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0928 13:10:57.737585 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0928 13:10:57.737771 18 builder.go:147] stdout: ""
  E0928 13:10:58.332204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:58.655696 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0928 13:10:58.738605 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0928 13:10:58.738644 18 builder.go:147] stdout: "nodeport-test-pjh76"
  I0928 13:10:58.738717 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.123 80'
  I0928 13:10:58.815897 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.123 80\nConnection to 10.152.183.123 80 port [tcp/http] succeeded!\n"
  I0928 13:10:58.815936 18 builder.go:147] stdout: "nodeport-test-5k6sv"
  I0928 13:10:58.816009 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 32143'
  I0928 13:10:58.893495 18 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 172.31.43.233 32143\nConnection to 172.31.43.233 32143 port [tcp/*] succeeded!\n"
  I0928 13:10:58.893535 18 builder.go:147] stdout: "nodeport-test-5k6sv"
  I0928 13:10:58.893631 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.80 32143'
  I0928 13:10:58.971866 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.80 32143\nConnection to 172.31.68.80 32143 port [tcp/*] succeeded!\n"
  I0928 13:10:58.971919 18 builder.go:147] stdout: ""
  E0928 13:10:59.332507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:10:59.894443 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-7994 exec execpodm62rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.80 32143'
  I0928 13:10:59.977232 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.80 32143\nConnection to 172.31.68.80 32143 port [tcp/*] succeeded!\n"
  I0928 13:10:59.977270 18 builder.go:147] stdout: "nodeport-test-pjh76"
  I0928 13:10:59.977398 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7994" for this suite. @ 09/28/24 13:10:59.981
â€¢ [8.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/28/24 13:10:59.989
  I0928 13:10:59.989486 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:10:59.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:11:00.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:11:00.011
  STEP: Creating configMap with name configmap-test-volume-5d5a6b38-0320-44fa-981e-8dcbf6b4e5de @ 09/28/24 13:11:00.015
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:11:00.019
  E0928 13:11:00.332668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:01.332721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:02.332876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:03.333591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:11:04.043
  I0928 13:11:04.047911 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-configmaps-24c764f3-7006-4c4e-8d7b-d7df41193e26 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:11:04.059
  I0928 13:11:04.074312 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2548" for this suite. @ 09/28/24 13:11:04.078
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/28/24 13:11:04.084
  I0928 13:11:04.084963 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-pred @ 09/28/24 13:11:04.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:11:04.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:11:04.105
  I0928 13:11:04.109144 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0928 13:11:04.116717 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 13:11:04.119861 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-43-233 before test
  I0928 13:11:04.124166 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hwx5d from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:50 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.124183 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:11:04.124189 18 predicates.go:957] calico-node-w4t86 from kube-system started at 2024-09-28 12:11:04 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.124194 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:11:04.124199 18 predicates.go:957] nodeport-test-pjh76 from services-7994 started at 2024-09-28 13:10:51 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.124203 18 predicates.go:959] 	Container nodeport-test ready: true, restart count 0
  I0928 13:11:04.124208 18 predicates.go:957] sonobuoy-e2e-job-3786396138ca4f60 from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:11:04.124214 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0928 13:11:04.124220 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:11:04.124226 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:11:04.124231 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:11:04.124236 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:11:04.124240 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-6-28 before test
  I0928 13:11:04.129041 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kpn8x from ingress-nginx-kubernetes-worker started at 2024-09-28 12:09:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.129058 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:11:04.129065 18 predicates.go:957] calico-node-5nq6s from kube-system started at 2024-09-28 12:10:43 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.129070 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:11:04.129075 18 predicates.go:957] execpodm62rq from services-7994 started at 2024-09-28 13:10:54 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.129093 18 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0928 13:11:04.129102 18 predicates.go:957] nodeport-test-5k6sv from services-7994 started at 2024-09-28 13:10:51 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.129110 18 predicates.go:959] 	Container nodeport-test ready: true, restart count 0
  I0928 13:11:04.129116 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-28 12:16:46 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.129120 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0928 13:11:04.129125 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-rsrhj from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:11:04.129129 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:11:04.129133 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:11:04.129138 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-80 before test
  I0928 13:11:04.135085 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gxfnw from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135100 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:11:04.135106 18 predicates.go:957] calico-node-4k796 from kube-system started at 2024-09-28 12:10:53 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135122 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:11:04.135128 18 predicates.go:957] coredns-5b4857d7c8-pb4s9 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135134 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0928 13:11:04.135140 18 predicates.go:957] kube-state-metrics-5d7bdccd49-ltzpt from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135148 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0928 13:11:04.135154 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-64tv5 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (2 container statuses recorded)
  I0928 13:11:04.135158 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0928 13:11:04.135163 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0928 13:11:04.135168 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-t64jl from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135174 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0928 13:11:04.135222 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cm655 from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:11:04.135241 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0928 13:11:04.135249 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-n5wgl from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:11:04.135254 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:11:04.135258 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/28/24 13:11:04.135
  E0928 13:11:04.334394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:05.334519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/28/24 13:11:06.152
  STEP: Trying to apply a random label on the found node. @ 09/28/24 13:11:06.164
  STEP: verifying the node has the label kubernetes.io/e2e-0b682ae6-2014-42b2-be1e-ae03626152ec 42 @ 09/28/24 13:11:06.172
  STEP: Trying to relaunch the pod, now with labels. @ 09/28/24 13:11:06.183
  E0928 13:11:06.335239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:07.335783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0b682ae6-2014-42b2-be1e-ae03626152ec off the node ip-172-31-43-233 @ 09/28/24 13:11:08.203
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0b682ae6-2014-42b2-be1e-ae03626152ec @ 09/28/24 13:11:08.214
  I0928 13:11:08.216902 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7013" for this suite. @ 09/28/24 13:11:08.221
â€¢ [4.146 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/28/24 13:11:08.231
  I0928 13:11:08.231501 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:11:08.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:11:08.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:11:08.252
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:11:08.256
  E0928 13:11:08.335965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:09.336798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:10.337089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:11.337209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:11:12.278
  I0928 13:11:12.281748 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-71113b1e-6f05-426e-b21f-1bfe95d10da8 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:11:12.288
  I0928 13:11:12.306344 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7364" for this suite. @ 09/28/24 13:11:12.31
â€¢ [4.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/28/24 13:11:12.316
  I0928 13:11:12.316819 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 13:11:12.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:11:12.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:11:12.336
  E0928 13:11:12.337837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016 @ 09/28/24 13:11:12.34
  E0928 13:11:13.338816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:14.339034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 13:11:14.358
  I0928 13:11:14.362141 18 container_probe.go:1749] Initial restart count of pod liveness-185b1525-ee5f-40bc-af66-75c234038165 is 0
  I0928 13:11:14.366024 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:15.339902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:16.340095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:16.371114 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:17.340174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:18.341188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:18.376351 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:19.341745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:20.341988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:20.381992 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:21.341997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:22.342793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:22.388103 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:23.342895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:24.343070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:24.396544 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:25.343163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:26.343375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:26.403075 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:27.343992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:28.344266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:28.408439 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:29.344751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:30.345802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:30.414035 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:31.346782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:32.346906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:32.419840 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:33.347049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:34.347168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:34.428074 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:35.347284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:36.347502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:36.433486 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:37.347740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:38.348240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:38.439212 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:39.348365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:40.348481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:40.444180 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:41.348694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:42.348716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:42.449988 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:43.349258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:44.349474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:44.455065 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:45.349732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:46.349938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:46.460010 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:47.349995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:48.350216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:48.464993 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:49.350429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:50.350519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:50.470351 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:51.350799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:52.351027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:52.476099 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:53.351300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:54.351642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:54.482007 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:55.351908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:56.351935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:56.487754 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:57.352817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:11:58.353044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:11:58.493595 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:11:59.353168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:00.353381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:00.499729 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:01.353686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:02.353928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:02.504841 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:03.354983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:04.355322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:04.510539 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:05.356082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:06.356184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:06.515336 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:07.356915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:08.357864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:08.521623 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:09.358654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:10.358854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:10.526932 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:11.358930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:12.359137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:12.532698 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:13.359737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:14.359995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:14.537764 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:15.360689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:16.360898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:16.542955 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:17.361916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:18.362121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:18.548155 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:19.362709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:20.362735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:20.554628 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:21.362846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:22.363108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:22.560715 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:23.363677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:24.363827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:24.565845 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:25.364512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:26.364699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:26.570986 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:27.365574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:28.365685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:28.577376 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:29.365784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:30.366765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:30.583303 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:31.367791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:32.368761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:32.589043 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:33.368960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:34.369169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:34.594965 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:35.369780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:36.369899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:36.599843 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:37.370740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:38.371028      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:38.605579 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:39.371407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:40.371900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:40.611048 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:41.372967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:42.373755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:42.616609 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:43.374083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:44.374834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:44.621769 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:45.375341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:46.375440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:46.627553 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:47.375761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:48.376042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:48.633342 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:49.376747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:50.377770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:50.638980 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:51.377879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:52.378114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:52.644665 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:53.378595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:54.378783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:54.650105 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:55.378863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:56.379027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:56.655134 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:57.380094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:12:58.380336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:12:58.660144 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:12:59.380800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:00.380980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:00.664997 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:01.381912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:02.382119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:02.670055 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:03.382209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:04.382240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:04.676291 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:05.383192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:06.383847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:06.682490 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:07.384259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:08.385170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:08.688008 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:09.385687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:10.386776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:10.693688 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:11.386849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:12.387756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:12.698827 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:13.388760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:14.388888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:14.704082 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:15.389904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:16.390116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:16.709946 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:17.390245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:18.391314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:18.714902 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:19.391624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:20.391822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:20.720633 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:21.392420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:22.392660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:22.725226 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:23.393203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:24.394121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:24.731059 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:25.394701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:26.395592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:26.736944 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:27.395693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:28.395867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:28.741767 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:29.395970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:30.396754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:30.747061 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:31.397755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:32.398771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:32.751284 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:33.399254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:34.399730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:34.757333 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:35.400195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:36.400376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:36.762520 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:37.401237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:38.402261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:38.767691 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:39.402454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:40.402674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:40.772806 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:41.402804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:42.403000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:42.778908 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:43.403680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:44.405301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:44.784147 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:45.404691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:46.404790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:46.789392 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:47.405761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:48.405857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:48.794804 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:49.406432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:50.406757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:50.800231 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:51.406912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:52.407325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:52.805632 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:53.408242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:54.409430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:54.812073 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:55.409782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:56.409785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:56.817037 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:57.410766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:13:58.411120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:13:58.822823 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:13:59.411295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:00.411469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:00.827706 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:01.412481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:02.412683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:02.833632 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:03.413300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:04.413723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:04.838139 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:05.413851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:06.414044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:06.843371 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:07.414104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:08.414370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:08.851178 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:09.414685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:10.414788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:10.856214 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:11.415503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:12.415895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:12.860800 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:13.416608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:14.417050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:14.866153 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:15.417800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:16.417899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:16.870848 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:17.418008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:18.418114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:18.877172 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:19.418847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:20.419060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:20.881875 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:21.419462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:22.419692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:22.887153 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:23.419952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:24.421683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:24.892237 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:25.420796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:26.421019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:26.897724 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:27.421315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:28.422353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:28.903539 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:29.423343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:30.423637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:30.909898 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:31.424615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:32.424692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:32.914935 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:33.425640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:34.427332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:34.920448 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:35.427770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:36.427879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:36.925612 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:37.427984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:38.428171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:38.931634 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:39.428194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:40.428322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:40.937009 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:41.428484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:42.428627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:42.941762 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:43.429524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:44.429718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:44.947061 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:45.430715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:46.430932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:46.952670 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:47.431188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:48.431186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:48.957418 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:49.431956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:50.432064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:50.962528 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:51.433140      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:52.433264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:52.967671 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:53.434328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:54.434434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:54.972862 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:55.435304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:56.435836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:56.978388 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:57.436782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:14:58.437094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:14:58.983870 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:14:59.437239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:00.437799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:00.989905 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:01.438457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:02.438781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:02.994847 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:03.439479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:04.439556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:05.000958 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:05.440490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:06.440725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:07.006512 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:07.440967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:08.441214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:09.011528 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:09.442105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:10.442236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:11.016594 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:11.442315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:12.442952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:13.021620 18 container_probe.go:1759] Get pod liveness-185b1525-ee5f-40bc-af66-75c234038165 in namespace container-probe-8016
  E0928 13:15:13.443034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:14.443113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/28/24 13:15:15.021
  I0928 13:15:15.036794 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8016" for this suite. @ 09/28/24 13:15:15.04
â€¢ [242.731 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/28/24 13:15:15.048
  I0928 13:15:15.048486 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:15:15.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:15.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:15.07
  STEP: Creating secret with name secret-test-af3e85c5-48ff-4180-a829-a49cbcd3a18f @ 09/28/24 13:15:15.073
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:15:15.078
  E0928 13:15:15.443590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:16.443806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:17.444854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:18.445163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:15:19.099
  I0928 13:15:19.103597 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-secrets-c4cd879b-3368-40bd-bd66-1f19e059d7a3 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:15:19.113
  I0928 13:15:19.129196 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4064" for this suite. @ 09/28/24 13:15:19.133
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/28/24 13:15:19.141
  I0928 13:15:19.141269 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename init-container @ 09/28/24 13:15:19.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:19.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:19.163
  STEP: creating the pod @ 09/28/24 13:15:19.166
  I0928 13:15:19.166734 18 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0928 13:15:19.445255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:20.445795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:21.446765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:22.367988 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5174" for this suite. @ 09/28/24 13:15:22.372
â€¢ [3.238 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/28/24 13:15:22.379
  I0928 13:15:22.379371 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename discovery @ 09/28/24 13:15:22.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:22.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:22.402
  STEP: Setting up server cert @ 09/28/24 13:15:22.407
  E0928 13:15:22.447446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:22.558392 18 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0928 13:15:22.560090 18 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0928 13:15:22.560116 18 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0928 13:15:22.560122 18 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0928 13:15:22.560129 18 discovery.go:139] Checking APIGroup: apps
  I0928 13:15:22.561548 18 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0928 13:15:22.561583 18 discovery.go:148] Versions found [{apps/v1 v1}]
  I0928 13:15:22.561589 18 discovery.go:154] apps/v1 matches apps/v1
  I0928 13:15:22.561599 18 discovery.go:139] Checking APIGroup: events.k8s.io
  I0928 13:15:22.562950 18 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0928 13:15:22.562960 18 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0928 13:15:22.562965 18 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0928 13:15:22.562971 18 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0928 13:15:22.564204 18 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0928 13:15:22.564213 18 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0928 13:15:22.564219 18 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0928 13:15:22.564224 18 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0928 13:15:22.565693 18 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0928 13:15:22.565713 18 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0928 13:15:22.565718 18 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0928 13:15:22.565723 18 discovery.go:139] Checking APIGroup: autoscaling
  I0928 13:15:22.567298 18 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0928 13:15:22.567321 18 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0928 13:15:22.567327 18 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0928 13:15:22.567336 18 discovery.go:139] Checking APIGroup: batch
  I0928 13:15:22.568844 18 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0928 13:15:22.568863 18 discovery.go:148] Versions found [{batch/v1 v1}]
  I0928 13:15:22.568869 18 discovery.go:154] batch/v1 matches batch/v1
  I0928 13:15:22.568874 18 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0928 13:15:22.570399 18 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0928 13:15:22.570418 18 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0928 13:15:22.570423 18 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0928 13:15:22.570429 18 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0928 13:15:22.571808 18 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0928 13:15:22.571830 18 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0928 13:15:22.571835 18 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0928 13:15:22.571841 18 discovery.go:139] Checking APIGroup: policy
  I0928 13:15:22.573141 18 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0928 13:15:22.573155 18 discovery.go:148] Versions found [{policy/v1 v1}]
  I0928 13:15:22.573160 18 discovery.go:154] policy/v1 matches policy/v1
  I0928 13:15:22.573166 18 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0928 13:15:22.574454 18 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0928 13:15:22.574466 18 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0928 13:15:22.574472 18 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0928 13:15:22.574478 18 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0928 13:15:22.575939 18 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0928 13:15:22.575960 18 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0928 13:15:22.575965 18 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0928 13:15:22.575974 18 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0928 13:15:22.577449 18 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0928 13:15:22.577476 18 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0928 13:15:22.577480 18 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0928 13:15:22.577485 18 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0928 13:15:22.579161 18 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0928 13:15:22.579179 18 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0928 13:15:22.579185 18 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0928 13:15:22.579190 18 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0928 13:15:22.580679 18 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0928 13:15:22.580697 18 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0928 13:15:22.580703 18 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0928 13:15:22.580708 18 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0928 13:15:22.582228 18 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0928 13:15:22.582247 18 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0928 13:15:22.582253 18 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0928 13:15:22.582258 18 discovery.go:139] Checking APIGroup: node.k8s.io
  I0928 13:15:22.583525 18 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0928 13:15:22.583540 18 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0928 13:15:22.583546 18 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0928 13:15:22.583553 18 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0928 13:15:22.584807 18 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0928 13:15:22.584816 18 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0928 13:15:22.584821 18 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0928 13:15:22.584826 18 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0928 13:15:22.586059 18 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0928 13:15:22.586074 18 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0928 13:15:22.586079 18 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0928 13:15:22.586084 18 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0928 13:15:22.587416 18 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0928 13:15:22.587428 18 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0928 13:15:22.587433 18 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0928 13:15:22.587597 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9507" for this suite. @ 09/28/24 13:15:22.591
â€¢ [0.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/28/24 13:15:22.6
  I0928 13:15:22.600808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename controllerrevisions @ 09/28/24 13:15:22.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:22.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:22.621
  STEP: Creating DaemonSet "e2e-2hh8n-daemon-set" @ 09/28/24 13:15:22.644
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 13:15:22.65
  I0928 13:15:22.656453 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:22.656483 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:22.660121 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2hh8n-daemon-set: 0
  I0928 13:15:22.660140 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:15:23.447684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:23.656043 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:23.656084 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:23.659442 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2hh8n-daemon-set: 0
  I0928 13:15:23.659461 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:15:24.447710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:24.656325 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:24.656364 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:15:24.659617 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2hh8n-daemon-set: 3
  I0928 13:15:24.659636 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-2hh8n-daemon-set
  STEP: Confirm DaemonSet "e2e-2hh8n-daemon-set" successfully created with "daemonset-name=e2e-2hh8n-daemon-set" label @ 09/28/24 13:15:24.663
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2hh8n-daemon-set" @ 09/28/24 13:15:24.67
  I0928 13:15:24.674282 18 controller_revision.go:162] Located ControllerRevision: "e2e-2hh8n-daemon-set-668564bfc6"
  STEP: Patching ControllerRevision "e2e-2hh8n-daemon-set-668564bfc6" @ 09/28/24 13:15:24.677
  I0928 13:15:24.684857 18 controller_revision.go:173] e2e-2hh8n-daemon-set-668564bfc6 has been patched
  STEP: Create a new ControllerRevision @ 09/28/24 13:15:24.684
  I0928 13:15:24.691597 18 controller_revision.go:191] Created ControllerRevision: e2e-2hh8n-daemon-set-6887bcf686
  STEP: Confirm that there are two ControllerRevisions @ 09/28/24 13:15:24.691
  I0928 13:15:24.691641 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0928 13:15:24.695027 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2hh8n-daemon-set-668564bfc6" @ 09/28/24 13:15:24.695
  STEP: Confirm that there is only one ControllerRevision @ 09/28/24 13:15:24.701
  I0928 13:15:24.701827 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0928 13:15:24.704944 18 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2hh8n-daemon-set-6887bcf686" @ 09/28/24 13:15:24.708
  I0928 13:15:24.718807 18 controller_revision.go:220] e2e-2hh8n-daemon-set-6887bcf686 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/28/24 13:15:24.718
  W0928 13:15:24.725870      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/28/24 13:15:24.725
  I0928 13:15:24.725951 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0928 13:15:25.447885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:25.726510 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0928 13:15:25.730531 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2hh8n-daemon-set-6887bcf686=updated" @ 09/28/24 13:15:25.73
  STEP: Confirm that there is only one ControllerRevision @ 09/28/24 13:15:25.736
  I0928 13:15:25.736999 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0928 13:15:25.739967 18 controller_revision.go:265] Found 1 ControllerRevisions
  I0928 13:15:25.742460 18 controller_revision.go:246] ControllerRevision "e2e-2hh8n-daemon-set-78fc669767" has revision 3
  STEP: Deleting DaemonSet "e2e-2hh8n-daemon-set" @ 09/28/24 13:15:25.747
  STEP: deleting DaemonSet.extensions e2e-2hh8n-daemon-set in namespace controllerrevisions-1455, will wait for the garbage collector to delete the pods @ 09/28/24 13:15:25.747
  I0928 13:15:25.807368 18 resources.go:139] Deleting DaemonSet.extensions e2e-2hh8n-daemon-set took: 6.835954ms
  I0928 13:15:25.908397 18 resources.go:163] Terminating DaemonSet.extensions e2e-2hh8n-daemon-set pods took: 101.022381ms
  E0928 13:15:26.448493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:27.214789 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2hh8n-daemon-set: 0
  I0928 13:15:27.214825 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2hh8n-daemon-set
  I0928 13:15:27.218511 18 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21896"},"items":null}

  I0928 13:15:27.222262 18 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21896"},"items":null}

  I0928 13:15:27.235914 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1455" for this suite. @ 09/28/24 13:15:27.24
â€¢ [4.645 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/28/24 13:15:27.246
  I0928 13:15:27.246326 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename podtemplate @ 09/28/24 13:15:27.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:27.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:27.269
  I0928 13:15:27.299350 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7216" for this suite. @ 09/28/24 13:15:27.302
â€¢ [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/28/24 13:15:27.308
  I0928 13:15:27.308157 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename endpointslice @ 09/28/24 13:15:27.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:27.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:27.33
  STEP: getting /apis @ 09/28/24 13:15:27.333
  STEP: getting /apis/discovery.k8s.io @ 09/28/24 13:15:27.337
  STEP: getting /apis/discovery.k8s.iov1 @ 09/28/24 13:15:27.338
  STEP: creating @ 09/28/24 13:15:27.34
  STEP: getting @ 09/28/24 13:15:27.352
  STEP: listing @ 09/28/24 13:15:27.356
  STEP: watching @ 09/28/24 13:15:27.361
  I0928 13:15:27.361096 18 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/28/24 13:15:27.362
  STEP: cluster-wide watching @ 09/28/24 13:15:27.366
  I0928 13:15:27.366284 18 endpointslice.go:459] starting watch
  STEP: patching @ 09/28/24 13:15:27.367
  STEP: updating @ 09/28/24 13:15:27.374
  I0928 13:15:27.382660 18 endpointslice.go:482] waiting for watch events with expected annotations
  I0928 13:15:27.382694 18 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/28/24 13:15:27.382
  STEP: deleting a collection @ 09/28/24 13:15:27.394
  I0928 13:15:27.408387 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1639" for this suite. @ 09/28/24 13:15:27.411
â€¢ [0.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/28/24 13:15:27.417
  I0928 13:15:27.417772 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename prestop @ 09/28/24 13:15:27.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:27.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:27.437
  STEP: Creating server pod server in namespace prestop-2790 @ 09/28/24 13:15:27.441
  STEP: Waiting for pods to come up. @ 09/28/24 13:15:27.447
  E0928 13:15:27.448452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:28.449393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:29.449869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-2790 @ 09/28/24 13:15:29.459
  E0928 13:15:30.450712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:31.450852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/28/24 13:15:31.473
  E0928 13:15:32.450950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:33.451174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:34.451802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:35.452756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:36.452917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:36.490022 18 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/28/24 13:15:36.49
  I0928 13:15:36.503816 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-2790" for this suite. @ 09/28/24 13:15:36.509
â€¢ [9.099 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/28/24 13:15:36.517
  I0928 13:15:36.517130 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:15:36.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:36.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:36.535
  STEP: creating the pod @ 09/28/24 13:15:36.539
  STEP: submitting the pod to kubernetes @ 09/28/24 13:15:36.539
  W0928 13:15:36.546159      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0928 13:15:37.453024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:38.453382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/28/24 13:15:38.56
  STEP: updating the pod @ 09/28/24 13:15:38.564
  I0928 13:15:39.077750 18 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-31da18c9-e2af-48cf-a9f3-318bdb37d9e1"
  E0928 13:15:39.453640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:40.453718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:41.454646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:42.454721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:15:43.092483 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3757" for this suite. @ 09/28/24 13:15:43.096
â€¢ [6.588 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/28/24 13:15:43.105
  I0928 13:15:43.105155 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:15:43.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:43.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:43.124
  STEP: Creating a ResourceQuota @ 09/28/24 13:15:43.129
  STEP: Getting a ResourceQuota @ 09/28/24 13:15:43.135
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/28/24 13:15:43.138
  STEP: Patching the ResourceQuota @ 09/28/24 13:15:43.141
  STEP: Deleting a Collection of ResourceQuotas @ 09/28/24 13:15:43.148
  STEP: Verifying the deleted ResourceQuota @ 09/28/24 13:15:43.157
  I0928 13:15:43.159828 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8367" for this suite. @ 09/28/24 13:15:43.163
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/28/24 13:15:43.172
  I0928 13:15:43.172043 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:15:43.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:43.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:43.193
  STEP: validating api versions @ 09/28/24 13:15:43.197
  I0928 13:15:43.197539 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2237 api-versions'
  I0928 13:15:43.263974 18 builder.go:146] stderr: ""
  I0928 13:15:43.264306 18 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0928 13:15:43.264972 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2237" for this suite. @ 09/28/24 13:15:43.27
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/28/24 13:15:43.278
  I0928 13:15:43.278819 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubelet-test @ 09/28/24 13:15:43.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:43.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:43.299
  I0928 13:15:43.328538 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2778" for this suite. @ 09/28/24 13:15:43.332
â€¢ [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/28/24 13:15:43.337
  I0928 13:15:43.337848 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:15:43.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:43.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:43.358
  STEP: fetching services @ 09/28/24 13:15:43.362
  I0928 13:15:43.366467 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7340" for this suite. @ 09/28/24 13:15:43.37
â€¢ [0.041 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/28/24 13:15:43.378
  I0928 13:15:43.378681 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption @ 09/28/24 13:15:43.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:43.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:43.403
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/28/24 13:15:43.406
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:15:43.411
  E0928 13:15:43.454936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:44.455831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/28/24 13:15:45.422
  STEP: Waiting for all pods to be running @ 09/28/24 13:15:45.422
  I0928 13:15:45.426852 18 disruption.go:680] pods: 0 < 3
  E0928 13:15:45.456122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:46.456220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/28/24 13:15:47.427
  STEP: Updating the pdb to allow a pod to be evicted @ 09/28/24 13:15:47.439
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:15:47.448
  E0928 13:15:47.456237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:48.456723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/28/24 13:15:49.452
  STEP: Waiting for all pods to be running @ 09/28/24 13:15:49.452
  E0928 13:15:49.456813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to observed all healthy pods @ 09/28/24 13:15:49.457
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/28/24 13:15:49.481
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:15:49.492
  E0928 13:15:50.456944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:51.457056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/28/24 13:15:51.497
  STEP: locating a running pod @ 09/28/24 13:15:51.501
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/28/24 13:15:51.51
  STEP: Waiting for the pdb to be deleted @ 09/28/24 13:15:51.516
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/28/24 13:15:51.519
  STEP: Waiting for all pods to be running @ 09/28/24 13:15:51.519
  I0928 13:15:51.536538 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6334" for this suite. @ 09/28/24 13:15:51.541
â€¢ [8.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/28/24 13:15:51.546
  I0928 13:15:51.546574 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-runtime @ 09/28/24 13:15:51.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:15:51.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:15:51.57
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/28/24 13:15:51.58
  E0928 13:15:52.457878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:53.457958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:54.458035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:55.458297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:56.458604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:57.458967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:58.459285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:15:59.460099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:00.460211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:01.460431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:02.460542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:03.461227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:04.461950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:05.462958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:06.464015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:07.464125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:08.464272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/28/24 13:16:08.674
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/28/24 13:16:08.678
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/28/24 13:16:08.685
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/28/24 13:16:08.685
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/28/24 13:16:08.706
  E0928 13:16:09.464413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:10.465013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:11.465106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/28/24 13:16:11.727
  E0928 13:16:12.465204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/28/24 13:16:12.737
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/28/24 13:16:12.744
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/28/24 13:16:12.744
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/28/24 13:16:12.768
  E0928 13:16:13.465864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/28/24 13:16:13.778
  E0928 13:16:14.466098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:15.466881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/28/24 13:16:15.794
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/28/24 13:16:15.801
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/28/24 13:16:15.801
  I0928 13:16:15.827859 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1763" for this suite. @ 09/28/24 13:16:15.831
â€¢ [24.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/28/24 13:16:15.839
  I0928 13:16:15.839429 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:16:15.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:15.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:15.861
  STEP: Creating configMap with name configmap-projected-all-test-volume-68a7e36c-4565-489f-825a-16d4e8509838 @ 09/28/24 13:16:15.865
  STEP: Creating secret with name secret-projected-all-test-volume-bdbfdc11-e900-4e17-a0d5-b88df50c0e7a @ 09/28/24 13:16:15.87
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/28/24 13:16:15.876
  E0928 13:16:16.467716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:17.467799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:18.468792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:19.469012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:16:19.896
  I0928 13:16:19.900114 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod projected-volume-d9b1b838-b867-4e6d-b505-505e6ae823c8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:16:19.913
  I0928 13:16:19.928979 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4964" for this suite. @ 09/28/24 13:16:19.933
â€¢ [4.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/28/24 13:16:19.94
  I0928 13:16:19.940449 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:16:19.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:19.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:19.961
  STEP: create the deployment @ 09/28/24 13:16:19.964
  W0928 13:16:19.968878      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/28/24 13:16:19.968
  E0928 13:16:20.469108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/28/24 13:16:20.474
  STEP: wait for all rs to be garbage collected @ 09/28/24 13:16:20.48
  STEP: expected 0 rs, got 1 rs @ 09/28/24 13:16:20.487
  STEP: expected 0 pods, got 2 pods @ 09/28/24 13:16:20.49
  STEP: Gathering metrics @ 09/28/24 13:16:20.99
  W0928 13:16:20.996348      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 13:16:20.996381 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 13:16:20.996508 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1680" for this suite. @ 09/28/24 13:16:20.999
â€¢ [1.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/28/24 13:16:21.005
  I0928 13:16:21.005893 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:16:21.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:21.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:21.032
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/28/24 13:16:21.036
  E0928 13:16:21.469264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:22.469400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:23.469584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:24.469806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:16:25.058
  I0928 13:16:25.062237 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-c509815e-0205-4af0-b41d-36d17ab57d2f container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:16:25.068
  I0928 13:16:25.082961 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2755" for this suite. @ 09/28/24 13:16:25.086
â€¢ [4.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/28/24 13:16:25.091
  I0928 13:16:25.091752 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 13:16:25.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:25.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:25.111
  I0928 13:16:25.135785 18 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0928 13:16:25.143179 18 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0928 13:16:25.147720 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:25.147751 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:25.151079 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:16:25.151101 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:16:25.470486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:26.147219 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:26.147259 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:26.150550 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0928 13:16:26.150585 18 fixtures.go:130] Node ip-172-31-6-28 is running 0 daemon pod, expected 1
  E0928 13:16:26.470774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:27.148439 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:27.148482 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:27.152222 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:16:27.152244 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0928 13:16:27.152259 18 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0928 13:16:27.162082 18 daemon_set.go:102] Updating DaemonSet daemon-set
  E0928 13:16:27.471282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:28.174499 18 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0928 13:16:28.183286 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0928 13:16:28.183323 18 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0928 13:16:28.186536 18 daemon_set.go:1193] Wrong image for pod: daemon-set-5chkr. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0928 13:16:28.186552 18 daemon_set.go:1198] Pod daemon-set-5chkr is not available
  I0928 13:16:28.189490 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:28.189513 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0928 13:16:28.471817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:29.191376 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:29.191408 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0928 13:16:29.472774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:30.188246 18 daemon_set.go:1198] Pod daemon-set-6vv52 is not available
  I0928 13:16:30.192059 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:16:30.192262 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 13:16:30.198
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3726, will wait for the garbage collector to delete the pods @ 09/28/24 13:16:30.198
  I0928 13:16:30.257084 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.63446ms
  I0928 13:16:30.357617 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.527509ms
  E0928 13:16:30.473008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:31.473059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:32.063657 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:16:32.063692 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 13:16:32.067685 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22769"},"items":null}

  I0928 13:16:32.071614 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22769"},"items":null}

  I0928 13:16:32.085794 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3726" for this suite. @ 09/28/24 13:16:32.089
â€¢ [7.005 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/28/24 13:16:32.097
  I0928 13:16:32.097068 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:16:32.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:32.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:32.116
  STEP: Counting existing ResourceQuota @ 09/28/24 13:16:32.119
  E0928 13:16:32.474076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:33.474162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:34.474870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:35.475353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:36.475789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/28/24 13:16:37.124
  STEP: Ensuring resource quota status is calculated @ 09/28/24 13:16:37.13
  E0928 13:16:37.476230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:38.476283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/28/24 13:16:39.136
  STEP: Ensuring resource quota status captures replication controller creation @ 09/28/24 13:16:39.148
  E0928 13:16:39.476414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:40.476505      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/28/24 13:16:41.153
  STEP: Ensuring resource quota status released usage @ 09/28/24 13:16:41.16
  E0928 13:16:41.476711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:42.476846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:43.165884 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-245" for this suite. @ 09/28/24 13:16:43.17
â€¢ [11.079 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/28/24 13:16:43.176
  I0928 13:16:43.176397 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:16:43.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:16:43.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:16:43.195
  STEP: creating service multiprotocol-test in namespace services-3114 @ 09/28/24 13:16:43.199
  STEP: creating pod pod1 in namespace services-3114 @ 09/28/24 13:16:43.206
  STEP: Creating pod pod1 in namespace services-3114 @ 09/28/24 13:16:43.206
  E0928 13:16:43.477534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:44.477753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3114 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/28/24 13:16:45.232
  I0928 13:16:45.243432 18 service.go:4392] successfully validated that service multiprotocol-test in namespace services-3114 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/28/24 13:16:45.243
  I0928 13:16:45.243480 18 resource.go:361] Creating new exec pod
  E0928 13:16:45.478625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:46.478702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:47.256218 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  I0928 13:16:47.345060 18 builder.go:146] stderr: "+ + nc -vecho hostName\n -t -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n"
  I0928 13:16:47.345105 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:16:47.345247 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.22 80'
  E0928 13:16:47.479523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:48.479746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:49.480414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:50.480582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:51.426357 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [udp/*] succeeded!\n"
  I0928 13:16:51.426394 18 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/28/24 13:16:51.426
  I0928 13:16:51.436483 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  E0928 13:16:51.480828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:51.527012 18 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.22 80\n+ echo hostName\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n"
  I0928 13:16:51.527054 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:16:51.527140 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.22 80'
  E0928 13:16:52.481033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:53.481356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:54.481694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:55.482048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:55.609166 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [udp/*] succeeded!\n"
  I0928 13:16:55.609210 18 builder.go:147] stdout: ""
  I0928 13:16:55.609265 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.22 80'
  E0928 13:16:56.482285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:57.482485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:58.483322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:16:59.483409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:16:59.693006 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [udp/*] succeeded!\n"
  I0928 13:16:59.693049 18 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/28/24 13:16:59.693
  I0928 13:16:59.702357 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.22 80'
  E0928 13:17:00.484418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:01.484492      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:02.484705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:03.484944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:03.792277 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [udp/*] succeeded!\n"
  I0928 13:17:03.792330 18 builder.go:147] stdout: "pod1"
  I0928 13:17:03.792424 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  E0928 13:17:04.485809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:05.486765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:05.870230 18 builder.go:135] rc: 1
  I0928 13:17:05.870293 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.22 80
  nc: connect to 10.152.183.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0928 13:17:05.870360 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  E0928 13:17:06.486860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:07.486969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:07.956704 18 builder.go:135] rc: 1
  I0928 13:17:07.956757 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.22 80
  nc: connect to 10.152.183.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0928 13:17:07.956822 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  E0928 13:17:08.487755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:09.487953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:10.035526 18 builder.go:135] rc: 1
  I0928 13:17:10.035608 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-3114 exec execpodv6j6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.22 80
  nc: connect to 10.152.183.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0928 13:17:10.035740 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3114" for this suite. @ 09/28/24 13:17:10.04
â€¢ [26.870 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/28/24 13:17:10.046
  I0928 13:17:10.046742 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:17:10.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:17:10.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:17:10.069
  STEP: Creating secret with name secret-test-map-f55e95a7-71d3-4bd7-8d7d-387258253e66 @ 09/28/24 13:17:10.074
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:17:10.08
  E0928 13:17:10.488025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:11.488194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:12.489228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:13.489347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:17:14.106
  I0928 13:17:14.109686 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-secrets-f3a39b68-9bf5-43a0-9163-674878d3db61 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:17:14.128
  I0928 13:17:14.146488 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8176" for this suite. @ 09/28/24 13:17:14.15
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/28/24 13:17:14.159
  I0928 13:17:14.159414 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:17:14.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:17:14.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:17:14.179
  STEP: creating an Endpoint @ 09/28/24 13:17:14.186
  STEP: waiting for available Endpoint @ 09/28/24 13:17:14.19
  STEP: listing all Endpoints @ 09/28/24 13:17:14.192
  STEP: updating the Endpoint @ 09/28/24 13:17:14.195
  STEP: fetching the Endpoint @ 09/28/24 13:17:14.202
  STEP: patching the Endpoint @ 09/28/24 13:17:14.206
  STEP: fetching the Endpoint @ 09/28/24 13:17:14.212
  STEP: deleting the Endpoint by Collection @ 09/28/24 13:17:14.215
  STEP: waiting for Endpoint deletion @ 09/28/24 13:17:14.224
  STEP: fetching the Endpoint @ 09/28/24 13:17:14.225
  I0928 13:17:14.228800 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3907" for this suite. @ 09/28/24 13:17:14.232
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/28/24 13:17:14.237
  I0928 13:17:14.237972 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:17:14.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:17:14.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:17:14.257
  STEP: Create a ReplicaSet @ 09/28/24 13:17:14.26
  STEP: Verify that the required pods have come up @ 09/28/24 13:17:14.264
  I0928 13:17:14.267745 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0928 13:17:14.490168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:15.490314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:16.490407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:17.490588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:18.491662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:19.271696 18 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/28/24 13:17:19.271
  I0928 13:17:19.274519 18 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/28/24 13:17:19.274
  STEP: DeleteCollection of the ReplicaSets @ 09/28/24 13:17:19.279
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/28/24 13:17:19.285
  I0928 13:17:19.289347 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7392" for this suite. @ 09/28/24 13:17:19.293
â€¢ [5.064 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/28/24 13:17:19.301
  I0928 13:17:19.301550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:17:19.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:17:19.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:17:19.328
  STEP: Setting up server cert @ 09/28/24 13:17:19.351
  E0928 13:17:19.495387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:17:19.67
  STEP: Deploying the webhook pod @ 09/28/24 13:17:19.679
  STEP: Wait for the deployment to be ready @ 09/28/24 13:17:19.692
  I0928 13:17:19.699773 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:17:20.495590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:21.495727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:17:21.712
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:17:21.721
  E0928 13:17:22.496779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:22.722126 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0928 13:17:22.730763 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/28/24 13:17:23.241
  STEP: Creating a custom resource that should be denied by the webhook @ 09/28/24 13:17:23.254
  E0928 13:17:23.497149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:24.497248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/28/24 13:17:25.27
  STEP: Updating the custom resource with disallowed data should be denied @ 09/28/24 13:17:25.277
  STEP: Deleting the custom resource should be denied @ 09/28/24 13:17:25.285
  STEP: Remove the offending key and value from the custom resource data @ 09/28/24 13:17:25.292
  STEP: Deleting the updated custom resource should be successful @ 09/28/24 13:17:25.301
  E0928 13:17:25.497772      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:17:25.860375 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4158" for this suite. @ 09/28/24 13:17:25.864
  STEP: Destroying namespace "webhook-markers-1058" for this suite. @ 09/28/24 13:17:25.871
â€¢ [6.576 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/28/24 13:17:25.878
  I0928 13:17:25.878120 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:17:25.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:17:25.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:17:25.898
  STEP: create the rc @ 09/28/24 13:17:25.904
  W0928 13:17:25.910675      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0928 13:17:26.497881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:27.499860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:28.500553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:29.500729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:30.501531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:31.501716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/28/24 13:17:31.914
  STEP: wait for the rc to be deleted @ 09/28/24 13:17:31.92
  E0928 13:17:32.502647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:33.502923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:34.503323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:35.503512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:36.503614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/28/24 13:17:36.925
  E0928 13:17:37.504626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:38.504752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:39.504813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:40.504912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:41.504980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:42.505124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:43.505198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:44.505311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:45.505396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:46.505481      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:47.505753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:48.505868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:49.506781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:50.507783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:51.508759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:52.509778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:53.510273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:54.510512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:55.510937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:56.511010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:57.511916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:58.512157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:17:59.512344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:00.512544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:01.512722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:02.512810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:03.513206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:04.513752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:05.513967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:06.514503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/28/24 13:18:06.938
  W0928 13:18:06.945104      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 13:18:06.945132 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 13:18:06.945179 18 delete.go:95] Deleting pod "simpletest.rc-27qt5" in namespace "gc-9124"
  I0928 13:18:06.957825 18 delete.go:95] Deleting pod "simpletest.rc-29vvv" in namespace "gc-9124"
  I0928 13:18:06.971954 18 delete.go:95] Deleting pod "simpletest.rc-2b4x5" in namespace "gc-9124"
  I0928 13:18:06.982629 18 delete.go:95] Deleting pod "simpletest.rc-2qmt6" in namespace "gc-9124"
  I0928 13:18:06.998213 18 delete.go:95] Deleting pod "simpletest.rc-2rxs5" in namespace "gc-9124"
  I0928 13:18:07.009761 18 delete.go:95] Deleting pod "simpletest.rc-2v4rb" in namespace "gc-9124"
  I0928 13:18:07.019643 18 delete.go:95] Deleting pod "simpletest.rc-42ltm" in namespace "gc-9124"
  I0928 13:18:07.031152 18 delete.go:95] Deleting pod "simpletest.rc-45lgn" in namespace "gc-9124"
  I0928 13:18:07.043194 18 delete.go:95] Deleting pod "simpletest.rc-4gzdh" in namespace "gc-9124"
  I0928 13:18:07.055252 18 delete.go:95] Deleting pod "simpletest.rc-575zn" in namespace "gc-9124"
  I0928 13:18:07.066493 18 delete.go:95] Deleting pod "simpletest.rc-6kwp6" in namespace "gc-9124"
  I0928 13:18:07.078335 18 delete.go:95] Deleting pod "simpletest.rc-7ckbh" in namespace "gc-9124"
  I0928 13:18:07.095344 18 delete.go:95] Deleting pod "simpletest.rc-7lg5s" in namespace "gc-9124"
  I0928 13:18:07.116470 18 delete.go:95] Deleting pod "simpletest.rc-7nb5z" in namespace "gc-9124"
  I0928 13:18:07.128988 18 delete.go:95] Deleting pod "simpletest.rc-7wwzp" in namespace "gc-9124"
  I0928 13:18:07.140985 18 delete.go:95] Deleting pod "simpletest.rc-847lt" in namespace "gc-9124"
  I0928 13:18:07.152128 18 delete.go:95] Deleting pod "simpletest.rc-868wf" in namespace "gc-9124"
  I0928 13:18:07.169505 18 delete.go:95] Deleting pod "simpletest.rc-88qlw" in namespace "gc-9124"
  I0928 13:18:07.183796 18 delete.go:95] Deleting pod "simpletest.rc-8zl4j" in namespace "gc-9124"
  I0928 13:18:07.197798 18 delete.go:95] Deleting pod "simpletest.rc-9smn7" in namespace "gc-9124"
  I0928 13:18:07.213064 18 delete.go:95] Deleting pod "simpletest.rc-b7xln" in namespace "gc-9124"
  I0928 13:18:07.225757 18 delete.go:95] Deleting pod "simpletest.rc-bks5x" in namespace "gc-9124"
  I0928 13:18:07.238006 18 delete.go:95] Deleting pod "simpletest.rc-bns7v" in namespace "gc-9124"
  I0928 13:18:07.247906 18 delete.go:95] Deleting pod "simpletest.rc-brswc" in namespace "gc-9124"
  I0928 13:18:07.259105 18 delete.go:95] Deleting pod "simpletest.rc-bt7fx" in namespace "gc-9124"
  I0928 13:18:07.271935 18 delete.go:95] Deleting pod "simpletest.rc-bxzpj" in namespace "gc-9124"
  I0928 13:18:07.296164 18 delete.go:95] Deleting pod "simpletest.rc-c7pxw" in namespace "gc-9124"
  I0928 13:18:07.306880 18 delete.go:95] Deleting pod "simpletest.rc-c86x5" in namespace "gc-9124"
  I0928 13:18:07.321532 18 delete.go:95] Deleting pod "simpletest.rc-c9rdj" in namespace "gc-9124"
  I0928 13:18:07.332780 18 delete.go:95] Deleting pod "simpletest.rc-cgqjp" in namespace "gc-9124"
  I0928 13:18:07.344952 18 delete.go:95] Deleting pod "simpletest.rc-cgvdw" in namespace "gc-9124"
  I0928 13:18:07.356385 18 delete.go:95] Deleting pod "simpletest.rc-ckxth" in namespace "gc-9124"
  I0928 13:18:07.370681 18 delete.go:95] Deleting pod "simpletest.rc-crg8t" in namespace "gc-9124"
  I0928 13:18:07.381432 18 delete.go:95] Deleting pod "simpletest.rc-df4td" in namespace "gc-9124"
  I0928 13:18:07.393124 18 delete.go:95] Deleting pod "simpletest.rc-djjmj" in namespace "gc-9124"
  I0928 13:18:07.410020 18 delete.go:95] Deleting pod "simpletest.rc-dnwfr" in namespace "gc-9124"
  I0928 13:18:07.422597 18 delete.go:95] Deleting pod "simpletest.rc-dvh6q" in namespace "gc-9124"
  I0928 13:18:07.443280 18 delete.go:95] Deleting pod "simpletest.rc-f6jtp" in namespace "gc-9124"
  I0928 13:18:07.456739 18 delete.go:95] Deleting pod "simpletest.rc-fm8qt" in namespace "gc-9124"
  I0928 13:18:07.473493 18 delete.go:95] Deleting pod "simpletest.rc-gf6g4" in namespace "gc-9124"
  I0928 13:18:07.488661 18 delete.go:95] Deleting pod "simpletest.rc-gfrzz" in namespace "gc-9124"
  I0928 13:18:07.502206 18 delete.go:95] Deleting pod "simpletest.rc-gh4nd" in namespace "gc-9124"
  I0928 13:18:07.513539 18 delete.go:95] Deleting pod "simpletest.rc-gt4lq" in namespace "gc-9124"
  E0928 13:18:07.515026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:07.525787 18 delete.go:95] Deleting pod "simpletest.rc-h2mdg" in namespace "gc-9124"
  I0928 13:18:07.545983 18 delete.go:95] Deleting pod "simpletest.rc-h67v9" in namespace "gc-9124"
  I0928 13:18:07.563370 18 delete.go:95] Deleting pod "simpletest.rc-h6gq5" in namespace "gc-9124"
  I0928 13:18:07.576549 18 delete.go:95] Deleting pod "simpletest.rc-h98rq" in namespace "gc-9124"
  I0928 13:18:07.589130 18 delete.go:95] Deleting pod "simpletest.rc-h9x7k" in namespace "gc-9124"
  I0928 13:18:07.601524 18 delete.go:95] Deleting pod "simpletest.rc-jcf8m" in namespace "gc-9124"
  I0928 13:18:07.616137 18 delete.go:95] Deleting pod "simpletest.rc-jvk58" in namespace "gc-9124"
  I0928 13:18:07.628768 18 delete.go:95] Deleting pod "simpletest.rc-kt8zp" in namespace "gc-9124"
  I0928 13:18:07.641462 18 delete.go:95] Deleting pod "simpletest.rc-kvdwf" in namespace "gc-9124"
  I0928 13:18:07.660242 18 delete.go:95] Deleting pod "simpletest.rc-l47nr" in namespace "gc-9124"
  I0928 13:18:07.671850 18 delete.go:95] Deleting pod "simpletest.rc-lb2x8" in namespace "gc-9124"
  I0928 13:18:07.689070 18 delete.go:95] Deleting pod "simpletest.rc-llndp" in namespace "gc-9124"
  I0928 13:18:07.700821 18 delete.go:95] Deleting pod "simpletest.rc-ltt2f" in namespace "gc-9124"
  I0928 13:18:07.713310 18 delete.go:95] Deleting pod "simpletest.rc-lvt4b" in namespace "gc-9124"
  I0928 13:18:07.725105 18 delete.go:95] Deleting pod "simpletest.rc-lw8zj" in namespace "gc-9124"
  I0928 13:18:07.735449 18 delete.go:95] Deleting pod "simpletest.rc-lzjxr" in namespace "gc-9124"
  I0928 13:18:07.748059 18 delete.go:95] Deleting pod "simpletest.rc-m7rzv" in namespace "gc-9124"
  I0928 13:18:07.760671 18 delete.go:95] Deleting pod "simpletest.rc-mjjtc" in namespace "gc-9124"
  I0928 13:18:07.771045 18 delete.go:95] Deleting pod "simpletest.rc-mtflj" in namespace "gc-9124"
  I0928 13:18:07.785892 18 delete.go:95] Deleting pod "simpletest.rc-njdh6" in namespace "gc-9124"
  I0928 13:18:07.800630 18 delete.go:95] Deleting pod "simpletest.rc-nkbzn" in namespace "gc-9124"
  I0928 13:18:07.809866 18 delete.go:95] Deleting pod "simpletest.rc-p7pw8" in namespace "gc-9124"
  I0928 13:18:07.826270 18 delete.go:95] Deleting pod "simpletest.rc-pdx87" in namespace "gc-9124"
  I0928 13:18:07.939765 18 delete.go:95] Deleting pod "simpletest.rc-pfltf" in namespace "gc-9124"
  I0928 13:18:07.953245 18 delete.go:95] Deleting pod "simpletest.rc-pnll8" in namespace "gc-9124"
  I0928 13:18:07.967329 18 delete.go:95] Deleting pod "simpletest.rc-pqzhg" in namespace "gc-9124"
  I0928 13:18:07.989171 18 delete.go:95] Deleting pod "simpletest.rc-qnwd8" in namespace "gc-9124"
  I0928 13:18:08.042600 18 delete.go:95] Deleting pod "simpletest.rc-qvf68" in namespace "gc-9124"
  I0928 13:18:08.090247 18 delete.go:95] Deleting pod "simpletest.rc-qzz98" in namespace "gc-9124"
  I0928 13:18:08.138795 18 delete.go:95] Deleting pod "simpletest.rc-r27l5" in namespace "gc-9124"
  I0928 13:18:08.189792 18 delete.go:95] Deleting pod "simpletest.rc-r5xck" in namespace "gc-9124"
  I0928 13:18:08.242290 18 delete.go:95] Deleting pod "simpletest.rc-r9cs5" in namespace "gc-9124"
  I0928 13:18:08.290484 18 delete.go:95] Deleting pod "simpletest.rc-rc84d" in namespace "gc-9124"
  I0928 13:18:08.337714 18 delete.go:95] Deleting pod "simpletest.rc-rlq47" in namespace "gc-9124"
  I0928 13:18:08.387719 18 delete.go:95] Deleting pod "simpletest.rc-rqfqx" in namespace "gc-9124"
  I0928 13:18:08.440909 18 delete.go:95] Deleting pod "simpletest.rc-sclr8" in namespace "gc-9124"
  I0928 13:18:08.488819 18 delete.go:95] Deleting pod "simpletest.rc-ssknq" in namespace "gc-9124"
  E0928 13:18:08.515706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:08.537105 18 delete.go:95] Deleting pod "simpletest.rc-tl2sc" in namespace "gc-9124"
  I0928 13:18:08.590642 18 delete.go:95] Deleting pod "simpletest.rc-tn496" in namespace "gc-9124"
  I0928 13:18:08.641873 18 delete.go:95] Deleting pod "simpletest.rc-tn6jp" in namespace "gc-9124"
  I0928 13:18:08.687558 18 delete.go:95] Deleting pod "simpletest.rc-tp2d2" in namespace "gc-9124"
  I0928 13:18:08.739228 18 delete.go:95] Deleting pod "simpletest.rc-tqt7c" in namespace "gc-9124"
  I0928 13:18:08.799827 18 delete.go:95] Deleting pod "simpletest.rc-twhjk" in namespace "gc-9124"
  I0928 13:18:08.842156 18 delete.go:95] Deleting pod "simpletest.rc-vbzs5" in namespace "gc-9124"
  I0928 13:18:08.892558 18 delete.go:95] Deleting pod "simpletest.rc-vgtp6" in namespace "gc-9124"
  I0928 13:18:08.943782 18 delete.go:95] Deleting pod "simpletest.rc-vjrsh" in namespace "gc-9124"
  I0928 13:18:08.987414 18 delete.go:95] Deleting pod "simpletest.rc-vvw6j" in namespace "gc-9124"
  I0928 13:18:09.039319 18 delete.go:95] Deleting pod "simpletest.rc-vz9lg" in namespace "gc-9124"
  I0928 13:18:09.087770 18 delete.go:95] Deleting pod "simpletest.rc-w8prf" in namespace "gc-9124"
  I0928 13:18:09.140690 18 delete.go:95] Deleting pod "simpletest.rc-wdhtb" in namespace "gc-9124"
  I0928 13:18:09.187125 18 delete.go:95] Deleting pod "simpletest.rc-wfg89" in namespace "gc-9124"
  I0928 13:18:09.239610 18 delete.go:95] Deleting pod "simpletest.rc-wgqlq" in namespace "gc-9124"
  I0928 13:18:09.290000 18 delete.go:95] Deleting pod "simpletest.rc-wrcrb" in namespace "gc-9124"
  I0928 13:18:09.343216 18 delete.go:95] Deleting pod "simpletest.rc-wzn2t" in namespace "gc-9124"
  I0928 13:18:09.393214 18 delete.go:95] Deleting pod "simpletest.rc-xjqgq" in namespace "gc-9124"
  I0928 13:18:09.437119 18 delete.go:95] Deleting pod "simpletest.rc-xxqw2" in namespace "gc-9124"
  I0928 13:18:09.496819 18 delete.go:95] Deleting pod "simpletest.rc-z98hp" in namespace "gc-9124"
  E0928 13:18:09.516690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:09.544362 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9124" for this suite. @ 09/28/24 13:18:09.583
â€¢ [43.757 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/28/24 13:18:09.635
  I0928 13:18:09.635815 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:18:09.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:09.68
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/28/24 13:18:09.684
  E0928 13:18:10.519614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:11.519811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:12.519951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:13.520063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:13.713
  I0928 13:18:13.717615 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-12b08c67-680c-420b-be8a-a82b87749dd1 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:18:13.726
  I0928 13:18:13.740745 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9134" for this suite. @ 09/28/24 13:18:13.744
â€¢ [4.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/28/24 13:18:13.751
  I0928 13:18:13.751370 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename cronjob @ 09/28/24 13:18:13.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:13.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:13.771
  STEP: Creating a cronjob @ 09/28/24 13:18:13.774
  STEP: creating @ 09/28/24 13:18:13.774
  STEP: getting @ 09/28/24 13:18:13.78
  STEP: listing @ 09/28/24 13:18:13.783
  STEP: watching @ 09/28/24 13:18:13.786
  I0928 13:18:13.786592 18 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/28/24 13:18:13.787
  STEP: cluster-wide watching @ 09/28/24 13:18:13.791
  I0928 13:18:13.791493 18 cronjob.go:382] starting watch
  STEP: patching @ 09/28/24 13:18:13.792
  STEP: updating @ 09/28/24 13:18:13.799
  I0928 13:18:13.808044 18 cronjob.go:406] waiting for watch events with expected annotations
  I0928 13:18:13.808073 18 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/28/24 13:18:13.808
  STEP: updating /status @ 09/28/24 13:18:13.812
  STEP: get /status @ 09/28/24 13:18:13.82
  STEP: deleting @ 09/28/24 13:18:13.824
  STEP: deleting a collection @ 09/28/24 13:18:13.839
  I0928 13:18:13.850021 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3576" for this suite. @ 09/28/24 13:18:13.853
â€¢ [0.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/28/24 13:18:13.859
  I0928 13:18:13.859924 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 13:18:13.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:13.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:13.885
  STEP: apply creating a deployment @ 09/28/24 13:18:13.888
  I0928 13:18:13.903716 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1209" for this suite. @ 09/28/24 13:18:13.906
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/28/24 13:18:13.914
  I0928 13:18:13.914870 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:18:13.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:13.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:13.936
  STEP: Creating configMap configmap-3430/configmap-test-97777ead-f17a-4f75-a43b-4ea35d341ba9 @ 09/28/24 13:18:13.939
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:18:13.944
  E0928 13:18:14.520287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:15.520917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:16.521050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:17.521228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:17.964
  I0928 13:18:17.968141 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-7f6f80fc-7871-49a8-bed7-4417fb34631a container env-test: <nil>
  STEP: delete the pod @ 09/28/24 13:18:17.974
  I0928 13:18:17.990136 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3430" for this suite. @ 09/28/24 13:18:17.993
â€¢ [4.085 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/28/24 13:18:18
  I0928 13:18:18.000280 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:18:18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:18.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:18.021
  STEP: Setting up server cert @ 09/28/24 13:18:18.049
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:18:18.243
  STEP: Deploying the webhook pod @ 09/28/24 13:18:18.253
  STEP: Wait for the deployment to be ready @ 09/28/24 13:18:18.267
  I0928 13:18:18.273533 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:18:18.521907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:19.522158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:18:20.287
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:18:20.3
  E0928 13:18:20.522678      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:21.300224 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/28/24 13:18:21.31
  I0928 13:18:21.346025 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4373" for this suite. @ 09/28/24 13:18:21.349
  STEP: Destroying namespace "webhook-markers-7046" for this suite. @ 09/28/24 13:18:21.354
â€¢ [3.361 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/28/24 13:18:21.361
  I0928 13:18:21.361042 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:18:21.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:21.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:21.381
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:18:21.384
  E0928 13:18:21.523115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:22.523347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:23.523711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:24.524789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:25.407
  I0928 13:18:25.411260 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-3c92c1a6-4f1c-4bfb-835e-6680c2efaf50 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:18:25.418
  I0928 13:18:25.432055 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2801" for this suite. @ 09/28/24 13:18:25.435
â€¢ [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/28/24 13:18:25.441
  I0928 13:18:25.441071 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:18:25.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:25.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:25.462
  STEP: Creating projection with secret that has name projected-secret-test-d7424697-2582-4663-bd2d-74d3db15ae13 @ 09/28/24 13:18:25.465
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:18:25.471
  E0928 13:18:25.525166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:26.525265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:27.525843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:28.525938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:29.491
  I0928 13:18:29.494939 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-secrets-d999265a-5852-402e-be4b-c321db3a2499 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:18:29.502
  I0928 13:18:29.516992 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4668" for this suite. @ 09/28/24 13:18:29.521
  E0928 13:18:29.526252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/28/24 13:18:29.529
  I0928 13:18:29.529051 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:18:29.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:29.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:29.546
  STEP: Creating projection with secret that has name projected-secret-test-fd72a88a-82b0-4860-baf4-337c5e86ca88 @ 09/28/24 13:18:29.549
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:18:29.553
  E0928 13:18:30.526726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:31.526876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:32.528707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:33.530728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:33.576
  I0928 13:18:33.580455 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-secrets-692390ce-1be6-4a10-9600-3677f92127ba container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:18:33.587
  I0928 13:18:33.603133 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6849" for this suite. @ 09/28/24 13:18:33.606
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/28/24 13:18:33.612
  I0928 13:18:33.612925 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 13:18:33.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:33.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:33.633
  I0928 13:18:33.637184 18 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0928 13:18:33.645595 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0928 13:18:34.531771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:35.532817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:36.532937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:37.533002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:38.533342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:38.651144 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 13:18:38.651
  I0928 13:18:38.651212 18 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0928 13:18:38.657138 18 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0928 13:18:38.663446 18 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0928 13:18:39.533884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:40.534047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:40.673232 18 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0928 13:18:40.677219 18 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0928 13:18:40.688551 18 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6167",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3b55c9c-63ff-4083-b9df-70e21e168968",
      ResourceVersion: (string) (len=5) "26182",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 13:18:40.692501 18 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6167",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dff4c0b7-3b26-4f4b-8889-d9a892f11bbf",
      ResourceVersion: (string) (len=5) "26172",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b3b55c9c-63ff-4083-b9df-70e21e168968",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 62 35 35 63  39 63 2d 36 33 66 66 2d  |\"b3b55c9c-63ff-|
              00000120  34 30 38 33 2d 62 39 64  66 2d 37 30 65 32 31 65  |4083-b9df-70e21e|
              00000130  31 36 38 39 36 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |168968\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:18:40.692949 18 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0928 13:18:40.693124 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6167",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd563df6-f571-4c23-a0db-64fb7c2dc7c1",
      ResourceVersion: (string) (len=5) "26181",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126313,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b3b55c9c-63ff-4083-b9df-70e21e168968",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 33 62 35 35 63 39  |"uid\":\"b3b55c9|
              000000b0  63 2d 36 33 66 66 2d 34  30 38 33 2d 62 39 64 66  |c-63ff-4083-b9df|
              000000c0  2d 37 30 65 32 31 65 31  36 38 39 36 38 5c 22 7d  |-70e21e168968\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:18:40.697377 18 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-lc97s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-lc97s",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-6167",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74e18311-bca5-4816-9eb3-d69188904edf",
      ResourceVersion: (string) (len=5) "26171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "dff4c0b7-3b26-4f4b-8889-d9a892f11bbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 66  66 34 63 30 62 37 2d 33  |d\":\"dff4c0b7-3|
              00000090  62 32 36 2d 34 66 34 62  2d 38 38 38 39 2d 64 39  |b26-4f4b-8889-d9|
              000000a0  61 38 39 32 66 31 31 62  62 66 5c 22 7d 22 3a 7b  |a892f11bbf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 31 36 5c 22 7d 22  |2.168.38.116\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srz89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srz89",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126319,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://4a44c61d6f72897aec0288b9ade711a9394fe7e28cda8b3e9cc1cb9a8df3361e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-srz89",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:18:40.698290 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6167" for this suite. @ 09/28/24 13:18:40.702
â€¢ [7.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/28/24 13:18:40.709
  I0928 13:18:40.710004 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:18:40.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:40.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:40.732
  STEP: Creating secret with name secret-test-map-f01272f1-5c40-44a9-9f9e-d77345405830 @ 09/28/24 13:18:40.735
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:18:40.74
  E0928 13:18:41.534216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:42.534386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:43.535265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:44.536294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:44.762
  I0928 13:18:44.766830 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-secrets-943aec81-646f-4df9-befd-dce9e0521859 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:18:44.773
  I0928 13:18:44.790277 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3235" for this suite. @ 09/28/24 13:18:44.796
â€¢ [4.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/28/24 13:18:44.806
  I0928 13:18:44.806256 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 13:18:44.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:44.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:44.835
  I0928 13:18:44.839305 18 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0928 13:18:44.849817 18 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0928 13:18:44.859540 18 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0928 13:18:45.536839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:46.536940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:46.868633 18 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0928 13:18:46.872128 18 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0928 13:18:46.881387 18 deployment.go:313] Updating deployment test-recreate-deployment
  I0928 13:18:46.881407 18 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0928 13:18:46.967177 18 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc3ad90c-5591-4b70-98ef-7a61c996a39c",
      ResourceVersion: (string) (len=5) "26301",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 13:18:46.972060 18 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7263aef7-52d8-442f-8fa5-cb75a072b907",
      ResourceVersion: (string) (len=5) "26300",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bc3ad90c-5591-4b70-98ef-7a61c996a39c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 33 61 64 39  30 63 2d 35 35 39 31 2d  |\"bc3ad90c-5591-|
              00000120  34 62 37 30 2d 39 38 65  66 2d 37 61 36 31 63 39  |4b70-98ef-7a61c9|
              00000130  39 36 61 33 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96a39c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:18:46.972672 18 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0928 13:18:46.972951 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6221deda-76fd-4d1b-aed3-4714e995a0f4",
      ResourceVersion: (string) (len=5) "26290",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bc3ad90c-5591-4b70-98ef-7a61c996a39c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 33 61 64 39  30 63 2d 35 35 39 31 2d  |\"bc3ad90c-5591-|
              00000120  34 62 37 30 2d 39 38 65  66 2d 37 61 36 31 63 39  |4b70-98ef-7a61c9|
              00000130  39 36 61 33 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96a39c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:18:46.977371 18 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-6c4sb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-6c4sb",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-9947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31078649-4323-495c-87b5-394b61b0760b",
      ResourceVersion: (string) (len=5) "26302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "7263aef7-52d8-442f-8fa5-cb75a072b907",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  36 33 61 65 66 37 2d 35  |d\":\"7263aef7-5|
              00000090  32 64 38 2d 34 34 32 66  2d 38 66 61 35 2d 63 62  |2d8-442f-8fa5-cb|
              000000a0  37 35 61 30 37 32 62 39  30 37 5c 22 7d 22 3a 7b  |75a072b907\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hm8gm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hm8gm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hm8gm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:18:46.978424 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9947" for this suite. @ 09/28/24 13:18:46.982
â€¢ [2.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/28/24 13:18:46.99
  I0928 13:18:46.990091 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:18:46.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:47.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:47.01
  STEP: Setting up server cert @ 09/28/24 13:18:47.036
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:18:47.167
  STEP: Deploying the webhook pod @ 09/28/24 13:18:47.173
  STEP: Wait for the deployment to be ready @ 09/28/24 13:18:47.186
  I0928 13:18:47.200005 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:18:47.538730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:48.538811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:18:49.212
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:18:49.223
  E0928 13:18:49.539500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:50.223976 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0928 13:18:50.232124 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:18:50.539688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7799-crds.webhook.example.com via the AdmissionRegistration API @ 09/28/24 13:18:50.746
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/28/24 13:18:50.76
  E0928 13:18:51.540318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:52.540423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:53.347150 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4245" for this suite. @ 09/28/24 13:18:53.351
  STEP: Destroying namespace "webhook-markers-9882" for this suite. @ 09/28/24 13:18:53.359
â€¢ [6.376 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/28/24 13:18:53.366
  I0928 13:18:53.366625 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:18:53.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:53.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:53.388
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/28/24 13:18:53.391
  E0928 13:18:53.540854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:54.541094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:55.541972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:56.542179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:18:57.413
  I0928 13:18:57.417237 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-24a48bc9-74da-46c4-a44a-7f7093cbbd4a container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:18:57.424
  I0928 13:18:57.438406 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2585" for this suite. @ 09/28/24 13:18:57.442
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/28/24 13:18:57.447
  I0928 13:18:57.447678 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename aggregator @ 09/28/24 13:18:57.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:18:57.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:18:57.467
  I0928 13:18:57.470279 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Registering the sample API server. @ 09/28/24 13:18:57.47
  E0928 13:18:57.542390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:57.662875 18 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0928 13:18:57.689838 18 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0928 13:18:58.542741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:18:59.542845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:18:59.737005 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:00.542932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:01.543105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:01.741879 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:02.543324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:03.543408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:03.741761 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:04.543647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:05.543762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:05.742749 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:06.544219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:07.544355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:07.742273 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:08.544939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:09.545780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:09.742124 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:10.546783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:11.547806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:11.741922 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:12.548786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:13.548932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:13.741927 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:14.549045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:15.549157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:15.741298 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:16.549239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:17.549446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:17.742471 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:18.550493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:19.550648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:19.742774 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:20.550758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:21.551058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:21.741862 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 28, 13, 18, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0928 13:19:22.551753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:23.551891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:23.861959 18 aggregator.go:755] Waited 113.490077ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/28/24 13:19:23.899
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/28/24 13:19:23.904
  STEP: List APIServices @ 09/28/24 13:19:23.912
  I0928 13:19:23.916605 18 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/28/24 13:19:23.916
  I0928 13:19:23.928185 18 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/28/24 13:19:23.928
  I0928 13:19:23.938099 18 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 28, 13, 19, 23, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/28/24 13:19:23.938
  I0928 13:19:23.941825 18 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-28 13:19:23 +0000 UTC Passed all checks passed}
  I0928 13:19:23.941851 18 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 13:19:23.941861 18 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/28/24 13:19:23.941
  I0928 13:19:23.952405 18 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-47855158" @ 09/28/24 13:19:23.952
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/28/24 13:19:23.962
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/28/24 13:19:23.969
  STEP: Patch APIService Status @ 09/28/24 13:19:23.973
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/28/24 13:19:23.982
  I0928 13:19:24.097466 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-28 13:19:23 +0000 UTC Passed all checks passed}
  I0928 13:19:24.097503 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 13:19:24.097516 18 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0928 13:19:24.097524 18 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/28/24 13:19:24.097
  STEP: Confirm that the generated APIService has been deleted @ 09/28/24 13:19:24.107
  I0928 13:19:24.107152 18 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0928 13:19:24.111674 18 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0928 13:19:24.111697 18 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0928 13:19:24.206332 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8609" for this suite. @ 09/28/24 13:19:24.21
â€¢ [26.768 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/28/24 13:19:24.215
  I0928 13:19:24.215767 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/28/24 13:19:24.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:19:24.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:19:24.235
  STEP: creating a target pod @ 09/28/24 13:19:24.238
  E0928 13:19:24.552119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:25.552340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:26.552947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:27.553169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/28/24 13:19:28.263
  E0928 13:19:28.553703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:29.553892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/28/24 13:19:30.28
  I0928 13:19:30.280997 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2019 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:19:30.281013 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:19:30.281462 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:19:30.281519 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2019/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0928 13:19:30.319103 18 exec_util.go:111] Exec stderr: ""
  I0928 13:19:30.325939 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2019" for this suite. @ 09/28/24 13:19:30.33
â€¢ [6.123 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/28/24 13:19:30.338
  I0928 13:19:30.338522 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 13:19:30.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:19:30.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:19:30.36
  STEP: Creating a test headless service @ 09/28/24 13:19:30.363
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2256.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2256.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 153.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.153_udp@PTR;check="$$(dig +tcp +noall +answer +search 153.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.153_tcp@PTR;sleep 1; done
   @ 09/28/24 13:19:30.38
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2256.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2256.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2256.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2256.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2256.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 153.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.153_udp@PTR;check="$$(dig +tcp +noall +answer +search 153.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.153_tcp@PTR;sleep 1; done
   @ 09/28/24 13:19:30.38
  STEP: creating a pod to probe DNS @ 09/28/24 13:19:30.38
  STEP: submitting the pod to kubernetes @ 09/28/24 13:19:30.38
  E0928 13:19:30.554400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:31.554590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 13:19:32.403
  STEP: looking for the results for each expected name from probers @ 09/28/24 13:19:32.407
  I0928 13:19:32.412512 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.416666 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.420985 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.424829 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.445159 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.448656 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.452985 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.456595 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local from pod dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418: the server could not find the requested resource (get pods dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418)
  I0928 13:19:32.471660 18 dns_common.go:489] Lookups using dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418 failed for: [wheezy_udp@dns-test-service.dns-2256.svc.cluster.local wheezy_tcp@dns-test-service.dns-2256.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local jessie_udp@dns-test-service.dns-2256.svc.cluster.local jessie_tcp@dns-test-service.dns-2256.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2256.svc.cluster.local]

  I0928 13:19:32.478336 18 dns_common.go:495] Pod client logs for webserver: 
  I0928 13:19:32.483655 18 dns_common.go:495] Pod client logs for querier: 
  I0928 13:19:32.489360 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0928 13:19:32.554640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:33.554712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:34.554808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:35.555008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:36.555103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:37.473619 18 dns_common.go:527] DNS probes using dns-2256/dns-test-0c55deb9-3e8f-4bae-af64-5119b5591418 succeeded

  STEP: deleting the pod @ 09/28/24 13:19:37.473
  STEP: deleting the test service @ 09/28/24 13:19:37.489
  STEP: deleting the test headless service @ 09/28/24 13:19:37.505
  I0928 13:19:37.517853 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2256" for this suite. @ 09/28/24 13:19:37.524
â€¢ [7.192 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/28/24 13:19:37.53
  I0928 13:19:37.530356 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/28/24 13:19:37.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:19:37.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:19:37.549
  E0928 13:19:37.555329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:37.555877 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4365" for this suite. @ 09/28/24 13:19:37.559
â€¢ [0.037 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/28/24 13:19:37.567
  I0928 13:19:37.567626 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:19:37.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:19:37.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:19:37.588
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:19:37.591
  E0928 13:19:38.556325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:39.556781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:40.556891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:41.556978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:19:41.616
  I0928 13:19:41.619971 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-0c0de06b-a042-4fad-9f6b-8cffcf11807b container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:19:41.626
  I0928 13:19:41.644624 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3031" for this suite. @ 09/28/24 13:19:41.648
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/28/24 13:19:41.654
  I0928 13:19:41.654531 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 13:19:41.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:19:41.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:19:41.676
  STEP: Creating service test in namespace statefulset-4935 @ 09/28/24 13:19:41.68
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/28/24 13:19:41.684
  STEP: Creating stateful set ss in namespace statefulset-4935 @ 09/28/24 13:19:41.687
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4935 @ 09/28/24 13:19:41.694
  I0928 13:19:41.697771 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0928 13:19:42.557053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:43.557785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:44.558789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:45.558860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:46.558986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:47.559096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:48.559208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:49.559344      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:50.559460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:51.559692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:19:51.700300 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/28/24 13:19:51.7
  I0928 13:19:51.704666 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:19:51.790219 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:19:51.790256 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:19:51.790272 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:19:51.794807 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0928 13:19:52.559866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:53.560116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:54.560253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:55.560450      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:56.560693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:57.560823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:58.561053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:19:59.561323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:00.561426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:01.561649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:01.795760 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:20:01.795802 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0928 13:20:01.815655 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999786s
  E0928 13:20:02.561827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:02.821387 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994835799s
  E0928 13:20:03.561996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:03.827548 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.988631485s
  E0928 13:20:04.562333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:04.833401 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.982387291s
  E0928 13:20:05.563305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:05.837862 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.977450197s
  E0928 13:20:06.563405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:06.844019 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.972094513s
  E0928 13:20:07.563718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:07.848715 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.966866945s
  E0928 13:20:08.564536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:08.853916 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.962123154s
  E0928 13:20:09.564721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:09.858863 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.956986402s
  E0928 13:20:10.565544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:10.863497 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 952.092908ms
  E0928 13:20:11.565725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4935 @ 09/28/24 13:20:11.864
  I0928 13:20:11.868893 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:20:11.950383 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 13:20:11.950437 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:20:11.950452 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:20:11.956837 18 wait.go:40] Found 1 stateful pods, waiting for 3
  E0928 13:20:12.566394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:13.566799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:14.567151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:15.567219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:16.567759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:17.567970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:18.568285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:19.568477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:20.568704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:21.568950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:21.956347 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 13:20:21.956380 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 13:20:21.956386 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/28/24 13:20:21.956
  STEP: Scale down will halt with unhealthy stateful pod @ 09/28/24 13:20:21.956
  I0928 13:20:21.963629 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:20:22.046002 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:20:22.046041 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:20:22.046050 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:20:22.046145 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:20:22.132661 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:20:22.132698 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:20:22.132709 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:20:22.132750 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:20:22.223516 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:20:22.223557 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:20:22.223581 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:20:22.223588 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0928 13:20:22.227743 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0928 13:20:22.569691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:23.570319      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:24.570450      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:25.570591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:26.570704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:27.571004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:28.571091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:29.571905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:30.572776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:31.572890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:32.233613 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:20:32.233646 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:20:32.233653 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:20:32.247065 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999729s
  E0928 13:20:32.573610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:33.252466 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.99629353s
  E0928 13:20:33.573861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:34.255968 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991160713s
  E0928 13:20:34.574420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:35.260601 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.987680735s
  E0928 13:20:35.574796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:36.266505 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.982095836s
  E0928 13:20:36.574864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:37.271216 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.977144176s
  E0928 13:20:37.575524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:38.275800 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.972274494s
  E0928 13:20:38.576195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:39.279967 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.967872188s
  E0928 13:20:39.576263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:40.285057 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.963637532s
  E0928 13:20:40.576347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:41.290504 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 958.100188ms
  E0928 13:20:41.576780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4935 @ 09/28/24 13:20:42.29
  I0928 13:20:42.295467 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:20:42.384264 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 13:20:42.384302 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:20:42.384312 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:20:42.384414 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:20:42.462267 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 13:20:42.462304 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:20:42.462320 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:20:42.462360 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-4935 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:20:42.537798 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 13:20:42.537835 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:20:42.537844 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:20:42.537853 18 rest.go:150] Scaling statefulset ss to 0
  E0928 13:20:42.577683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:43.577807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:44.577852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:45.578576      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:46.579471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:47.579776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:48.579871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:49.580077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:50.580161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:51.580329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/28/24 13:20:52.546
  I0928 13:20:52.546838 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4935
  I0928 13:20:52.550411 18 rest.go:150] Scaling statefulset ss to 0
  I0928 13:20:52.557215 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:20:52.560929 18 rest.go:88] Deleting statefulset ss
  I0928 13:20:52.573113 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4935" for this suite. @ 09/28/24 13:20:52.577
  E0928 13:20:52.581033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [70.931 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/28/24 13:20:52.586
  I0928 13:20:52.586046 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:20:52.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:20:52.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:20:52.607
  STEP: Creating projection with secret that has name projected-secret-test-map-336fe433-0039-46ae-9139-561e16476d76 @ 09/28/24 13:20:52.61
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:20:52.616
  E0928 13:20:53.581196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:54.581401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:55.581513      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:56.581631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:20:56.637
  I0928 13:20:56.641321 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-secrets-447bd6d2-59fb-4057-8d73-aad5c2e215ef container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:20:56.648
  I0928 13:20:56.663944 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6731" for this suite. @ 09/28/24 13:20:56.667
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/28/24 13:20:56.676
  I0928 13:20:56.676092 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:20:56.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:20:56.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:20:56.696
  E0928 13:20:57.581812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:20:58.581967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:20:58.717483 18 delete.go:62] Deleting pod "var-expansion-6e2e2987-e8d0-4362-9475-6bb92aadd39c" in namespace "var-expansion-6536"
  I0928 13:20:58.724722 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-6e2e2987-e8d0-4362-9475-6bb92aadd39c" to be fully deleted
  E0928 13:20:59.582071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:00.582385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:00.732324 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6536" for this suite. @ 09/28/24 13:21:00.736
â€¢ [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/28/24 13:21:00.745
  I0928 13:21:00.745280 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:21:00.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:00.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:00.763
  STEP: create the rc1 @ 09/28/24 13:21:00.774
  STEP: create the rc2 @ 09/28/24 13:21:00.779
  E0928 13:21:01.582835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:02.583951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:03.584850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:04.584751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:05.584808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:06.585466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/28/24 13:21:06.791
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/28/24 13:21:07.304
  STEP: wait for the rc to be deleted @ 09/28/24 13:21:07.31
  E0928 13:21:07.585536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:08.585540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:09.585709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:10.585806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:11.585896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:12.320309 18 garbage_collector.go:762] 69 pods remaining
  I0928 13:21:12.320336 18 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0928 13:21:12.320342 18 garbage_collector.go:770] 
  E0928 13:21:12.586026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:13.586684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:14.587067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:15.587245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:16.588178      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/28/24 13:21:17.321
  W0928 13:21:17.327525      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 13:21:17.327553 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 13:21:17.327620 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26n8q" in namespace "gc-6620"
  I0928 13:21:17.341674 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45h66" in namespace "gc-6620"
  I0928 13:21:17.352792 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45sfr" in namespace "gc-6620"
  I0928 13:21:17.364512 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45vwc" in namespace "gc-6620"
  I0928 13:21:17.376365 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pqrt" in namespace "gc-6620"
  I0928 13:21:17.388600 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57gbz" in namespace "gc-6620"
  I0928 13:21:17.404588 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57ls6" in namespace "gc-6620"
  I0928 13:21:17.418103 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-595bd" in namespace "gc-6620"
  I0928 13:21:17.430257 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5bszt" in namespace "gc-6620"
  I0928 13:21:17.442822 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5tfdq" in namespace "gc-6620"
  I0928 13:21:17.454821 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vnq2" in namespace "gc-6620"
  I0928 13:21:17.474136 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dh92" in namespace "gc-6620"
  I0928 13:21:17.484153 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ggbx" in namespace "gc-6620"
  I0928 13:21:17.530280 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78f8m" in namespace "gc-6620"
  I0928 13:21:17.542774 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78pjf" in namespace "gc-6620"
  I0928 13:21:17.554802 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hqq6" in namespace "gc-6620"
  I0928 13:21:17.568683 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-82hmw" in namespace "gc-6620"
  I0928 13:21:17.581806 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bctf" in namespace "gc-6620"
  E0928 13:21:17.589192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:17.596210 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8h6m2" in namespace "gc-6620"
  I0928 13:21:17.604721 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8jvdz" in namespace "gc-6620"
  I0928 13:21:17.615183 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8zk2x" in namespace "gc-6620"
  I0928 13:21:17.629601 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-968vf" in namespace "gc-6620"
  I0928 13:21:17.641125 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9g4jp" in namespace "gc-6620"
  I0928 13:21:17.657232 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9kqtk" in namespace "gc-6620"
  I0928 13:21:17.686977 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9rctg" in namespace "gc-6620"
  I0928 13:21:17.708066 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4xd4" in namespace "gc-6620"
  I0928 13:21:17.722986 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6xsg" in namespace "gc-6620"
  I0928 13:21:17.736239 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmcr6" in namespace "gc-6620"
  I0928 13:21:17.745266 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cd7jp" in namespace "gc-6620"
  I0928 13:21:17.758476 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgw2z" in namespace "gc-6620"
  I0928 13:21:17.774742 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cl6t2" in namespace "gc-6620"
  I0928 13:21:17.792794 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqgh7" in namespace "gc-6620"
  I0928 13:21:17.804095 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cs969" in namespace "gc-6620"
  I0928 13:21:17.817649 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvnxp" in namespace "gc-6620"
  I0928 13:21:17.835911 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cxhbc" in namespace "gc-6620"
  I0928 13:21:17.847915 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cxklz" in namespace "gc-6620"
  I0928 13:21:18.005524 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d75mq" in namespace "gc-6620"
  I0928 13:21:18.025442 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dl6f6" in namespace "gc-6620"
  I0928 13:21:18.046620 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn9z6" in namespace "gc-6620"
  I0928 13:21:18.065523 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dv9tf" in namespace "gc-6620"
  I0928 13:21:18.085996 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f62qt" in namespace "gc-6620"
  I0928 13:21:18.107968 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f82hw" in namespace "gc-6620"
  I0928 13:21:18.121813 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjz86" in namespace "gc-6620"
  I0928 13:21:18.139067 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnn82" in namespace "gc-6620"
  I0928 13:21:18.154755 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnr55" in namespace "gc-6620"
  I0928 13:21:18.171481 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4gks" in namespace "gc-6620"
  I0928 13:21:18.189151 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbxhs" in namespace "gc-6620"
  I0928 13:21:18.210311 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gjlbz" in namespace "gc-6620"
  I0928 13:21:18.230261 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gt4dm" in namespace "gc-6620"
  I0928 13:21:18.244837 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gztx8" in namespace "gc-6620"
  I0928 13:21:18.264467 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6620" for this suite. @ 09/28/24 13:21:18.276
â€¢ [17.540 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/28/24 13:21:18.286
  I0928 13:21:18.286241 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:21:18.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:18.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:18.31
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/28/24 13:21:18.314
  I0928 13:21:18.314774 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9213 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0928 13:21:18.450475 18 builder.go:146] stderr: ""
  I0928 13:21:18.450690 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/28/24 13:21:18.45
  I0928 13:21:18.450906 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9213 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0928 13:21:18.567066 18 builder.go:146] stderr: ""
  I0928 13:21:18.567174 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/28/24 13:21:18.567
  E0928 13:21:18.590220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:18.615894 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9213 delete pods e2e-test-httpd-pod'
  E0928 13:21:19.590773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:20.590825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:21.157183 18 builder.go:146] stderr: ""
  I0928 13:21:21.157219 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0928 13:21:21.157403 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9213" for this suite. @ 09/28/24 13:21:21.161
â€¢ [2.883 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/28/24 13:21:21.169
  I0928 13:21:21.169577 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:21:21.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:21.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:21.189
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/28/24 13:21:21.192
  E0928 13:21:21.591544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:22.591770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:23.592710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:24.592935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:21:25.216
  I0928 13:21:25.219271 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-c7d6cb5e-2ae2-40cf-a792-5377cde81772 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:21:25.23
  I0928 13:21:25.246663 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2478" for this suite. @ 09/28/24 13:21:25.25
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/28/24 13:21:25.255
  I0928 13:21:25.255665 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-webhook @ 09/28/24 13:21:25.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:25.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:25.281
  STEP: Setting up server cert @ 09/28/24 13:21:25.284
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/28/24 13:21:25.42
  STEP: Deploying the custom resource conversion webhook pod @ 09/28/24 13:21:25.427
  STEP: Wait for the deployment to be ready @ 09/28/24 13:21:25.441
  I0928 13:21:25.451973 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0928 13:21:25.593233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:26.593437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:21:27.464
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:21:27.473
  E0928 13:21:27.594376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:28.473921 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0928 13:21:28.481354 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:21:28.595293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:29.595987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:30.596986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/28/24 13:21:31.032
  STEP: v2 custom resource should be converted @ 09/28/24 13:21:31.036
  I0928 13:21:31.590093 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7191" for this suite. @ 09/28/24 13:21:31.594
  E0928 13:21:31.597105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [6.350 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/28/24 13:21:31.605
  I0928 13:21:31.605890 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename watch @ 09/28/24 13:21:31.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:31.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:31.63
  STEP: creating a watch on configmaps @ 09/28/24 13:21:31.633
  STEP: creating a new configmap @ 09/28/24 13:21:31.634
  STEP: modifying the configmap once @ 09/28/24 13:21:31.638
  STEP: closing the watch once it receives two notifications @ 09/28/24 13:21:31.645
  I0928 13:21:31.645969 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2443  f671e378-cb04-4c85-a51a-c6896df6572e 29959 0 2024-09-28 13:21:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-28 13:21:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:21:31.646114 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2443  f671e378-cb04-4c85-a51a-c6896df6572e 29960 0 2024-09-28 13:21:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-28 13:21:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/28/24 13:21:31.646
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/28/24 13:21:31.654
  STEP: deleting the configmap @ 09/28/24 13:21:31.655
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/28/24 13:21:31.661
  I0928 13:21:31.661159 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2443  f671e378-cb04-4c85-a51a-c6896df6572e 29961 0 2024-09-28 13:21:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-28 13:21:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:21:31.661242 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2443  f671e378-cb04-4c85-a51a-c6896df6572e 29962 0 2024-09-28 13:21:31 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-28 13:21:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:21:31.661309 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2443" for this suite. @ 09/28/24 13:21:31.664
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/28/24 13:21:31.669
  I0928 13:21:31.669549 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:21:31.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:31.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:31.685
  STEP: Creating projection with secret that has name projected-secret-test-map-ede4d7c8-b6e3-4462-a6d7-a040fb3c9937 @ 09/28/24 13:21:31.688
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:21:31.692
  E0928 13:21:32.597326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:33.597495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:34.597601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:35.597780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:21:35.721
  I0928 13:21:35.724486 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-secrets-2d40c51d-179d-4382-a498-15d5bef3e861 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:21:35.732
  I0928 13:21:35.746706 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3048" for this suite. @ 09/28/24 13:21:35.75
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/28/24 13:21:35.756
  I0928 13:21:35.756640 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replication-controller @ 09/28/24 13:21:35.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:35.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:35.778
  STEP: Creating replication controller my-hostname-basic-df7aa022-090c-4dc6-b75f-d743f8624103 @ 09/28/24 13:21:35.781
  I0928 13:21:35.791165 18 resource.go:87] Pod name my-hostname-basic-df7aa022-090c-4dc6-b75f-d743f8624103: Found 0 pods out of 1
  E0928 13:21:36.597999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:37.598058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:38.598215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:39.598300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:40.598381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:40.795470 18 resource.go:87] Pod name my-hostname-basic-df7aa022-090c-4dc6-b75f-d743f8624103: Found 1 pods out of 1
  I0928 13:21:40.795497 18 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-df7aa022-090c-4dc6-b75f-d743f8624103" are running
  I0928 13:21:40.799053 18 rc.go:523] Pod "my-hostname-basic-df7aa022-090c-4dc6-b75f-d743f8624103-gf4kq" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:21:37 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:21:35 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:21:37 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:21:37 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:21:35 +0000 UTC Reason: Message:}])
  I0928 13:21:40.799076 18 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/28/24 13:21:40.799
  I0928 13:21:40.809739 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4977" for this suite. @ 09/28/24 13:21:40.812
â€¢ [5.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/28/24 13:21:40.819
  I0928 13:21:40.819411 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename events @ 09/28/24 13:21:40.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:40.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:40.839
  STEP: Create set of events @ 09/28/24 13:21:40.842
  STEP: get a list of Events with a label in the current namespace @ 09/28/24 13:21:40.858
  STEP: delete a list of events @ 09/28/24 13:21:40.86
  I0928 13:21:40.860646 18 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/28/24 13:21:40.88
  I0928 13:21:40.882868 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-92" for this suite. @ 09/28/24 13:21:40.886
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/28/24 13:21:40.891
  I0928 13:21:40.891458 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:21:40.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:40.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:40.916
  STEP: Creating projection with secret that has name projected-secret-test-170c1249-51b1-49a3-8f32-62a684073746 @ 09/28/24 13:21:40.92
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:21:40.925
  E0928 13:21:41.598794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:42.598900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:43.601707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:44.601929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:21:44.948
  I0928 13:21:44.951926 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-projected-secrets-c15abcc5-0ae4-42d1-8ff3-761581b5aa7d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:21:44.963
  I0928 13:21:44.982519 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1751" for this suite. @ 09/28/24 13:21:44.985
â€¢ [4.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/28/24 13:21:44.992
  I0928 13:21:44.992347 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:21:44.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:45.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:45.017
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:21:45.021
  E0928 13:21:45.602168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:46.602406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:47.602463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:48.602770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:21:49.043
  I0928 13:21:49.047817 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-145a0339-4797-4d57-b71f-90ed962cbae8 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:21:49.054
  I0928 13:21:49.072212 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9663" for this suite. @ 09/28/24 13:21:49.076
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/28/24 13:21:49.085
  I0928 13:21:49.085735 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 13:21:49.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:49.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:49.106
  I0928 13:21:49.128436 18 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 13:21:49.134
  I0928 13:21:49.139639 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:49.139668 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:49.142692 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:21:49.142712 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:21:49.603230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:50.139877 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:50.139920 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:50.142837 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0928 13:21:50.142856 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:21:50.603300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:51.139555 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:51.139616 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:51.142729 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:21:51.142746 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/28/24 13:21:51.156
  STEP: Check that daemon pods images are updated. @ 09/28/24 13:21:51.168
  I0928 13:21:51.171232 18 daemon_set.go:1193] Wrong image for pod: daemon-set-6vsmb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:51.171259 18 daemon_set.go:1193] Wrong image for pod: daemon-set-gmtcw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:51.171263 18 daemon_set.go:1193] Wrong image for pod: daemon-set-sfm6n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:51.175966 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:51.175991 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0928 13:21:51.603389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:52.172393 18 daemon_set.go:1193] Wrong image for pod: daemon-set-6vsmb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:52.172430 18 daemon_set.go:1198] Pod daemon-set-7fz5s is not available
  I0928 13:21:52.172438 18 daemon_set.go:1193] Wrong image for pod: daemon-set-sfm6n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:52.175984 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:52.176007 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0928 13:21:52.603946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:53.173523 18 daemon_set.go:1193] Wrong image for pod: daemon-set-6vsmb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0928 13:21:53.173587 18 daemon_set.go:1198] Pod daemon-set-bv7wv is not available
  I0928 13:21:53.177760 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:53.177801 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0928 13:21:53.604107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:54.172678 18 daemon_set.go:1198] Pod daemon-set-8472j is not available
  I0928 13:21:54.178870 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:54.178896 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/28/24 13:21:54.178
  I0928 13:21:54.181946 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:54.181973 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:54.184920 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0928 13:21:54.184935 18 fixtures.go:130] Node ip-172-31-68-80 is running 0 daemon pod, expected 1
  E0928 13:21:54.604434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:55.187015 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:55.187051 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:21:55.190685 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:21:55.190707 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 13:21:55.206
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6679, will wait for the garbage collector to delete the pods @ 09/28/24 13:21:55.206
  I0928 13:21:55.266695 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.756323ms
  I0928 13:21:55.367617 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.929053ms
  E0928 13:21:55.605475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:56.606432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:21:57.172052 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:21:57.172085 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 13:21:57.175540 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30346"},"items":null}

  I0928 13:21:57.179488 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30346"},"items":null}

  I0928 13:21:57.193495 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6679" for this suite. @ 09/28/24 13:21:57.196
â€¢ [8.118 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/28/24 13:21:57.203
  I0928 13:21:57.203918 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pv @ 09/28/24 13:21:57.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:57.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:57.225
  STEP: Creating initial PV and PVC @ 09/28/24 13:21:57.228
  I0928 13:21:57.228822 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7962" @ 09/28/24 13:21:57.242
  STEP: Listing PVCs in namespace "pv-7962" @ 09/28/24 13:21:57.246
  STEP: Reading "pvc-m59db" Status @ 09/28/24 13:21:57.249
  STEP: Reading "pv-7962-qr2dm" Status @ 09/28/24 13:21:57.253
  STEP: Patching "pvc-m59db" Status @ 09/28/24 13:21:57.258
  STEP: Patching "pv-7962-qr2dm" Status @ 09/28/24 13:21:57.263
  STEP: Updating "pvc-m59db" Status @ 09/28/24 13:21:57.287
  STEP: Updating "pv-7962-qr2dm" Status @ 09/28/24 13:21:57.295
  I0928 13:21:57.305018 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0928 13:21:57.305041 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-m59db"
  I0928 13:21:57.310335 18 pv.go:193] Deleting PersistentVolume "pv-7962-qr2dm"
  I0928 13:21:57.316776 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7962" for this suite. @ 09/28/24 13:21:57.32
â€¢ [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/28/24 13:21:57.325
  I0928 13:21:57.325808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:21:57.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:21:57.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:21:57.454
  E0928 13:21:57.607008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:58.607127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:21:59.608093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:00.608273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:22:01.504
  I0928 13:22:01.508618 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod client-envvars-9980bc50-8a73-4fc0-a5c7-fbe248b0f405 container env3cont: <nil>
  STEP: delete the pod @ 09/28/24 13:22:01.515
  I0928 13:22:01.533325 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2100" for this suite. @ 09/28/24 13:22:01.537
â€¢ [4.217 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/28/24 13:22:01.543
  I0928 13:22:01.543421 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subjectreview @ 09/28/24 13:22:01.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:01.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:01.564
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9947" @ 09/28/24 13:22:01.567
  I0928 13:22:01.572308 18 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9947:e2e"
  I0928 13:22:01.572331 18 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9947"}
  I0928 13:22:01.572338 18 subjectreviews.go:71] saUID: "fd17e51b-1a87-48d9-b01d-51a214a14f7b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9947:e2e" @ 09/28/24 13:22:01.572
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9947:e2e" @ 09/28/24 13:22:01.572
  I0928 13:22:01.574263 18 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9947:e2e" api 'list' configmaps in "subjectreview-9947" namespace @ 09/28/24 13:22:01.574
  I0928 13:22:01.575805 18 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9947:e2e" @ 09/28/24 13:22:01.575
  I0928 13:22:01.577967 18 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0928 13:22:01.577987 18 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0928 13:22:01.578096 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9947" for this suite. @ 09/28/24 13:22:01.582
â€¢ [0.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/28/24 13:22:01.589
  I0928 13:22:01.589224 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:22:01.589
  E0928 13:22:01.609226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:01.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:01.614
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/28/24 13:22:01.617
  I0928 13:22:01.625628 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0928 13:22:02.609538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:03.609698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:04.609846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:05.610080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:06.610289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:22:06.631881 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 13:22:06.631
  STEP: getting scale subresource @ 09/28/24 13:22:06.631
  STEP: updating a scale subresource @ 09/28/24 13:22:06.635
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/28/24 13:22:06.641
  STEP: Patch a scale subresource @ 09/28/24 13:22:06.645
  I0928 13:22:06.690586 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5816" for this suite. @ 09/28/24 13:22:06.698
â€¢ [5.119 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/28/24 13:22:06.708
  I0928 13:22:06.708480 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:22:06.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:06.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:06.738
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:22:06.741
  E0928 13:22:07.610940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:08.611046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:09.611286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:10.611778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:22:10.763
  I0928 13:22:10.767758 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-71169628-5d22-4fc0-880f-89760ec7a6f2 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:22:10.774
  I0928 13:22:10.791201 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8319" for this suite. @ 09/28/24 13:22:10.795
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/28/24 13:22:10.802
  I0928 13:22:10.802977 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename runtimeclass @ 09/28/24 13:22:10.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:10.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:10.824
  E0928 13:22:11.611974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:12.612170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:22:12.857179 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1808" for this suite. @ 09/28/24 13:22:12.86
â€¢ [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/28/24 13:22:12.868
  I0928 13:22:12.868352 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 13:22:12.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:12.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:12.899
  STEP: Updating Namespace "namespaces-9417" @ 09/28/24 13:22:12.902
  I0928 13:22:12.909363 18 namespace.go:389] Namespace "namespaces-9417" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8b713d76-5417-4e7d-90d5-abbfd20b4f47", "kubernetes.io/metadata.name":"namespaces-9417", "namespaces-9417":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0928 13:22:12.909461 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9417" for this suite. @ 09/28/24 13:22:12.912
â€¢ [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/28/24 13:22:12.917
  I0928 13:22:12.918038 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:22:12.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:12.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:12.939
  STEP: creating the pod @ 09/28/24 13:22:12.943
  STEP: waiting for pod running @ 09/28/24 13:22:12.949
  E0928 13:22:13.612526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:14.612692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/28/24 13:22:14.962
  I0928 13:22:14.969537 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4517 PodName:var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:22:14.969586 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:22:14.969987 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:22:14.970028 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4517/pods/var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/28/24 13:22:15.009
  I0928 13:22:15.014382 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4517 PodName:var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:22:15.014405 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:22:15.014821 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:22:15.014858 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4517/pods/var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/28/24 13:22:15.05
  I0928 13:22:15.564041 18 pod_client.go:173] Successfully updated pod "var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81"
  STEP: waiting for annotated pod running @ 09/28/24 13:22:15.564
  STEP: deleting the pod gracefully @ 09/28/24 13:22:15.568
  I0928 13:22:15.568196 18 delete.go:62] Deleting pod "var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81" in namespace "var-expansion-4517"
  I0928 13:22:15.577902 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-4d0a763f-4718-4320-be76-ee0b451fbc81" to be fully deleted
  E0928 13:22:15.612985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:16.613116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:17.613293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:18.613385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:19.614390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:20.614511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:21.614781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:22.615784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:23.615802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:24.616778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:25.617552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:26.617713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:27.617770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:28.618773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:29.619466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:30.619696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:31.619805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:32.620003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:33.620389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:34.620669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:35.620799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:36.621717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:37.621821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:38.621993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:39.622216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:40.622281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:41.622775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:42.622923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:43.622998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:44.623193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:45.623748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:46.623980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:47.624266      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:22:47.664132 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4517" for this suite. @ 09/28/24 13:22:47.668
â€¢ [34.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/28/24 13:22:47.674
  I0928 13:22:47.674627 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename discovery @ 09/28/24 13:22:47.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:47.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:47.696
  STEP: Setting up server cert @ 09/28/24 13:22:47.7
  STEP: Requesting APIResourceList from "/api/v1" @ 09/28/24 13:22:48.042
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/28/24 13:22:48.045
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/28/24 13:22:48.046
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/28/24 13:22:48.048
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/28/24 13:22:48.049
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/28/24 13:22:48.051
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/28/24 13:22:48.052
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/28/24 13:22:48.054
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/28/24 13:22:48.055
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/28/24 13:22:48.056
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/28/24 13:22:48.057
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/28/24 13:22:48.059
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/28/24 13:22:48.06
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/28/24 13:22:48.061
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/28/24 13:22:48.063
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/28/24 13:22:48.064
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/28/24 13:22:48.065
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/28/24 13:22:48.066
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/28/24 13:22:48.068
  I0928 13:22:48.069822 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9597" for this suite. @ 09/28/24 13:22:48.074
â€¢ [0.407 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/28/24 13:22:48.082
  I0928 13:22:48.082152 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:22:48.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:48.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:48.106
  STEP: creating the pod @ 09/28/24 13:22:48.109
  STEP: submitting the pod to kubernetes @ 09/28/24 13:22:48.109
  E0928 13:22:48.624883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:49.625775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/28/24 13:22:50.135
  STEP: updating the pod @ 09/28/24 13:22:50.138
  E0928 13:22:50.626430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:22:50.652441 18 pod_client.go:173] Successfully updated pod "pod-update-9fb68084-71a9-48cd-9778-203970dcc102"
  STEP: verifying the updated pod is in kubernetes @ 09/28/24 13:22:50.655
  I0928 13:22:50.660620 18 pods.go:391] Pod update OK
  I0928 13:22:50.660710 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4365" for this suite. @ 09/28/24 13:22:50.663
â€¢ [2.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/28/24 13:22:50.668
  I0928 13:22:50.668833 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename watch @ 09/28/24 13:22:50.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:50.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:50.689
  STEP: creating a new configmap @ 09/28/24 13:22:50.692
  STEP: modifying the configmap once @ 09/28/24 13:22:50.696
  STEP: modifying the configmap a second time @ 09/28/24 13:22:50.704
  STEP: deleting the configmap @ 09/28/24 13:22:50.717
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/28/24 13:22:50.725
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/28/24 13:22:50.726
  I0928 13:22:50.726868 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3671  0cf780dd-df29-4cfb-8d56-bbdd753fa198 30804 0 2024-09-28 13:22:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-28 13:22:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:22:50.726972 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3671  0cf780dd-df29-4cfb-8d56-bbdd753fa198 30805 0 2024-09-28 13:22:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-28 13:22:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:22:50.727039 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3671" for this suite. @ 09/28/24 13:22:50.73
â€¢ [0.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/28/24 13:22:50.736
  I0928 13:22:50.736392 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:22:50.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:50.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:50.755
  STEP: Creating configMap that has name configmap-test-emptyKey-bdf9d5ae-6b23-4be9-a9c9-89551782d833 @ 09/28/24 13:22:50.759
  I0928 13:22:50.761065 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8939" for this suite. @ 09/28/24 13:22:50.764
â€¢ [0.034 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/28/24 13:22:50.77
  I0928 13:22:50.770910 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:22:50.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:22:50.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:22:50.793
  STEP: Creating a ResourceQuota with best effort scope @ 09/28/24 13:22:50.797
  STEP: Ensuring ResourceQuota status is calculated @ 09/28/24 13:22:50.803
  E0928 13:22:51.626866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:52.627105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/28/24 13:22:52.807
  STEP: Ensuring ResourceQuota status is calculated @ 09/28/24 13:22:52.812
  E0928 13:22:53.627789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:54.627899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/28/24 13:22:54.818
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/28/24 13:22:54.832
  E0928 13:22:55.628771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:56.628989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/28/24 13:22:56.837
  E0928 13:22:57.629076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:22:58.629176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/28/24 13:22:58.843
  STEP: Ensuring resource quota status released the pod usage @ 09/28/24 13:22:58.857
  E0928 13:22:59.629431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:00.629618      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/28/24 13:23:00.862
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/28/24 13:23:00.873
  E0928 13:23:01.629779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:02.629982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/28/24 13:23:02.878
  E0928 13:23:03.630098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:04.630251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/28/24 13:23:04.883
  STEP: Ensuring resource quota status released the pod usage @ 09/28/24 13:23:04.903
  E0928 13:23:05.631038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:06.631255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:06.908762 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8569" for this suite. @ 09/28/24 13:23:06.913
â€¢ [16.149 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/28/24 13:23:06.919
  I0928 13:23:06.919823 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 13:23:06.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:23:06.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:23:06.941
  I0928 13:23:06.944761 18 deployment.go:1196] Creating deployment "webserver-deployment"
  I0928 13:23:06.951161 18 deployment.go:1200] Waiting for observed generation 1
  E0928 13:23:07.631905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:08.632255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:08.959329 18 deployment.go:1205] Waiting for all required pods to come up
  I0928 13:23:08.963388 18 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/28/24 13:23:08.963
  I0928 13:23:08.963461 18 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0928 13:23:08.970074 18 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0928 13:23:08.980961 18 deployment.go:313] Updating deployment webserver-deployment
  I0928 13:23:08.980986 18 deployment.go:1224] Waiting for observed generation 2
  E0928 13:23:09.632782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:10.633152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:10.989702 18 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0928 13:23:10.993766 18 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0928 13:23:10.997529 18 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0928 13:23:11.008258 18 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0928 13:23:11.008284 18 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0928 13:23:11.011448 18 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0928 13:23:11.018730 18 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0928 13:23:11.018749 18 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0928 13:23:11.029139 18 deployment.go:313] Updating deployment webserver-deployment
  I0928 13:23:11.029170 18 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0928 13:23:11.035959 18 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0928 13:23:11.038850 18 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0928 13:23:11.633877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:12.633949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:13.048180 18 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f62e982-14c1-4621-9b01-8b0b7d2d4dbf",
      ResourceVersion: (string) (len=5) "31466",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 16,
      AvailableReplicas: (int32) 16,
      UnavailableReplicas: (int32) 17,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 13:23:13.052286 18 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
      ResourceVersion: (string) (len=5) "31252",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6f62e982-14c1-4621-9b01-8b0b7d2d4dbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 36 32 65 39  38 32 2d 31 34 63 31 2d  |\"6f62e982-14c1-|
              00000120  34 36 32 31 2d 39 62 30  31 2d 38 62 30 62 37 64  |4621-9b01-8b0b7d|
              00000130  32 64 34 64 62 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2d4dbf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:23:13.052781 18 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0928 13:23:13.052991 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
      ResourceVersion: (string) (len=5) "31465",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6f62e982-14c1-4621-9b01-8b0b7d2d4dbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 36 32 65 39  38 32 2d 31 34 63 31 2d  |\"6f62e982-14c1-|
              00000120  34 36 32 31 2d 39 62 30  31 2d 38 62 30 62 37 64  |4621-9b01-8b0b7d|
              00000130  32 64 34 64 62 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2d4dbf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 16,
      AvailableReplicas: (int32) 16,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:23:13.060129 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5gpgg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5gpgg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93a4cf2d-2615-45bc-b468-f7908c6270ab",
      ResourceVersion: (string) (len=5) "31057",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 37 30 5c 22 7d 22 3a  |2.168.12.70\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlmq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlmq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b72daafb86dfc5ecf6803f5398856e7c7fdc76d834ccf321f7cdf039ea6c331c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qlmq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.061409 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-66sw5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-66sw5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b70ac8c-5ab7-4bbb-b9b8-1266240cb4eb",
      ResourceVersion: (string) (len=5) "31045",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 32 33 38 5c 22 7d  |2.168.107.238\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rcccf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rcccf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://631a6aa0a1c5fe572b118eb1d2dbbc8cb28699ed7fa2f44ebe81ae8ee0fa656a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rcccf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.062691 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6tnhf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6tnhf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "606a10be-8821-43ef-b7a6-7d0fc89182de",
      ResourceVersion: (string) (len=5) "31418",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 31 39 38 5c 22 7d  |2.168.107.198\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnhx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnhx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://331bdafdc7f28cf4f8f1a3e6946989c0f14df56a37fa04db7030779b545583fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pnhx8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.063882 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7k8zl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7k8zl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d0c95d1-75e8-4237-a987-a5063317460b",
      ResourceVersion: (string) (len=5) "31072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 39 38 5c 22 7d 22 3a  |2.168.38.98\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w4knb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w4knb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=13) "192.168.38.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.38.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://84b78146e933804abac18d86ef892256ac0c791b9e24110eb5fc7d2ee4b49433",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w4knb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.065049 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9ms4z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9ms4z",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f09c1600-bc79-44cf-92a8-4c2b72ce8a98",
      ResourceVersion: (string) (len=5) "31433",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 37 39 5c 22 7d 22 3a  |2.168.12.79\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6kgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6kgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://895e36ced034f150e925b94e5d3b38d28e023f2938e12bfcad24e1c78c4d2e85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w6kgr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.066232 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9z2jm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9z2jm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3a1116b-0bf8-4ebb-864b-620c09a5bb8b",
      ResourceVersion: (string) (len=5) "31069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 30 30 5c 22 7d 22  |2.168.38.100\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbldq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbldq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2029023e60d168b22795a7eccc783bf26640c5233fc14b42c8e5a0e03607305a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vbldq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.067416 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bqrtf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bqrtf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c029f2bc-340a-487c-8f57-2ec31b4a4b83",
      ResourceVersion: (string) (len=5) "31051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 32 32 38 5c 22 7d  |2.168.107.228\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6j6c5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6j6c5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f3132f8ec60b3aa4e322d577da8814d8baeea2ea2f00a7758a4d6daedd25dce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6j6c5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.068807 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-c9r4t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-c9r4t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f6a3f9d-cb84-4c8e-a042-07dbea6bf89c",
      ResourceVersion: (string) (len=5) "31426",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 32 32 39 5c 22 7d  |2.168.107.229\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sklvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sklvl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.229",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.229"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126591,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a24095677cf85fe83d53399cb4bb7e34b5c985f2d64a1b71a0f2597dd6754ee6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sklvl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.070015 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-d7l8v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-d7l8v",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e33b339f-b041-4fca-ba0e-02d9d92a94c3",
      ResourceVersion: (string) (len=5) "31411",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 32 35 35 5c 22 7d  |2.168.107.255\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lxm4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lxm4c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.255",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.255"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9042ea64f839f70b4649c8683f3a282e8e755df877989df307867b3669f983c3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lxm4c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.071198 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ggvz6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ggvz6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a44622a-1dc2-4b00-9340-582bd9eebe83",
      ResourceVersion: (string) (len=5) "31265",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4d8rr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4d8rr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4d8rr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.072321 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gprgx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gprgx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72ac9214-8aca-4b3d-85c1-95cd8bbc9b47",
      ResourceVersion: (string) (len=5) "31066",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 38 37 5c 22 7d 22 3a  |2.168.38.87\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zdvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zdvq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=13) "192.168.38.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.38.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://38a2eb86adaef0278f5aeb07f4eb01fc466ba7c48eaf03167eda08ff0973ad7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2zdvq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.073501 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hh292" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hh292",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e759b42-22eb-4301-8113-7ec82c3f5e63",
      ResourceVersion: (string) (len=5) "31250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9t2ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9t2ml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9t2ml",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.074686 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hqrb4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hqrb4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a510b51-f0a7-433c-8f4c-b7e0f85f7629",
      ResourceVersion: (string) (len=5) "31274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlg5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlg5g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qlg5g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.075845 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-k9vt8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-k9vt8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d66dec33-1c93-47e8-80ca-859dbd78c990",
      ResourceVersion: (string) (len=5) "31054",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 37 31 5c 22 7d 22 3a  |2.168.12.71\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sfbmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sfbmh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://32510d2e3b1088199238b4203c4295a81a0ab72cc49cd6550fa232677c55b5da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sfbmh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.076968 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-khw8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-khw8m",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d45b915-9b2f-4797-9a1a-1c9d680d8a04",
      ResourceVersion: (string) (len=5) "31281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tb5nd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tb5nd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tb5nd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.078684 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ph2gr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ph2gr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12232c8a-31ea-469c-98b5-d2fe2859b69f",
      ResourceVersion: (string) (len=5) "31464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 31 34 5c 22 7d 22  |2.168.38.114\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96w2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96w2s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126591,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://157527b4ec514c72cf559b84b1c7eea1856eff7749cf69f5bee6a23834204037",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-96w2s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.079839 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-prl76" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-prl76",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c30e738-35f5-48dd-b10d-312070e192c0",
      ResourceVersion: (string) (len=5) "31458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 39 37 5c 22 7d 22 3a  |2.168.38.97\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q8qk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q8qk4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=13) "192.168.38.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.38.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bda779585f547ba9084c832ce26be1de688825d4fbf4b657aa105bd871f57c9c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q8qk4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.080955 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-s6x45" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-s6x45",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2652420-b0c2-4379-b75f-5a34458a3207",
      ResourceVersion: (string) (len=5) "31048",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126586,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126586,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  37 2e 32 34 35 5c 22 7d  |2.168.107.245\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lbw9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lbw9g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126587,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126587,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c61ecb1e2eda864b23c97e34f5bab04bf9f61fdd157bef8fffc966db6e1c9e57",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lbw9g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.082094 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-srsbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-srsbl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f8db513-8d9f-4189-ab4e-60b477a3cf8b",
      ResourceVersion: (string) (len=5) "31461",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 30 36 5c 22 7d 22  |2.168.38.106\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8p25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8p25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8c2ddc3983cdee8f9f7a160907c09d93a540a1e6746c1e5c7d91d5e78115d3f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k8p25",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.083249 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wg8sh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wg8sh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0b249b5-11e9-48c5-bc69-8de9fe868e4d",
      ResourceVersion: (string) (len=5) "31455",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "28c71f11-fb37-41a5-a321-461548cca400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  63 37 31 66 31 31 2d 66  |d\":\"28c71f11-f|
              00000090  62 33 37 2d 34 31 61 35  2d 61 33 32 31 2d 34 36  |b37-41a5-a321-46|
              000000a0  31 35 34 38 63 63 61 34  30 30 5c 22 7d 22 3a 7b  |1548cca400\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 38  2e 31 30 38 5c 22 7d 22  |2.168.38.108\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbp2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbp2h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863126592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1996325d7ca29ddf1db8ccd63d985faf0c217589d54dcf86bfecf664b0f6d283",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pbp2h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.084384 18 deployment.go:67] Pod "webserver-deployment-786f49d774-2l7nz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2l7nz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d87d5b9f-2a7b-4af8-82e0-1cb464676864",
      ResourceVersion: (string) (len=5) "31163",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 38 2e 31 31  33 5c 22 7d 22 3a 7b 22  |68.38.113\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gs4dw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gs4dw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gs4dw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.085531 18 deployment.go:67] Pod "webserver-deployment-786f49d774-2zxpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2zxpn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9761ce05-46f4-4859-9a86-1a014b513abe",
      ResourceVersion: (string) (len=5) "31283",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qz5v8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qz5v8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qz5v8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.086671 18 deployment.go:67] Pod "webserver-deployment-786f49d774-5ksbk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5ksbk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9911d629-7098-44a5-b149-712f5e6a1229",
      ResourceVersion: (string) (len=5) "31176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 2e 37 36  5c 22 7d 22 3a 7b 22 2e  |68.12.76\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qw75f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qw75f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qw75f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.087829 18 deployment.go:67] Pod "webserver-deployment-786f49d774-6ssrc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6ssrc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25154035-3cf5-4290-a394-072f2e61b82a",
      ResourceVersion: (string) (len=5) "31179",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 2e 37 34  5c 22 7d 22 3a 7b 22 2e  |68.12.74\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2h2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2h2h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f2h2h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.089010 18 deployment.go:67] Pod "webserver-deployment-786f49d774-b4jcf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-b4jcf",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45ae9aff-5f7c-4ff7-8302-d55f52f02388",
      ResourceVersion: (string) (len=5) "31267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x6xn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x6xn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6x6xn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.090129 18 deployment.go:67] Pod "webserver-deployment-786f49d774-ggjkj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ggjkj",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbf0d8cf-ca17-4277-abcc-c2ad1fb69bd1",
      ResourceVersion: (string) (len=5) "31467",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 38 2e 31 31  31 5c 22 7d 22 3a 7b 22  |68.38.111\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2r6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2r6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d2r6w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.091283 18 deployment.go:67] Pod "webserver-deployment-786f49d774-h8lgt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-h8lgt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d37ec267-03a8-494b-81e6-a26274ecc9cf",
      ResourceVersion: (string) (len=5) "31431",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 37 2e 32  34 32 5c 22 7d 22 3a 7b  |68.107.242\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6cvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6cvn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x6cvn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.092279 18 deployment.go:67] Pod "webserver-deployment-786f49d774-kwvv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-kwvv6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85ee1775-bd7e-41ef-8a4a-28ae148e2d0a",
      ResourceVersion: (string) (len=5) "31278",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gwsh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gwsh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9gwsh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.095056 18 deployment.go:67] Pod "webserver-deployment-786f49d774-kxc79" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-kxc79",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2274167-75c1-434b-ae95-a369837ac919",
      ResourceVersion: (string) (len=5) "31424",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 37 2e 32  35 30 5c 22 7d 22 3a 7b  |68.107.250\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xbbmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xbbmv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xbbmv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.097676 18 deployment.go:67] Pod "webserver-deployment-786f49d774-qpbds" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-qpbds",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73ab8d51-a118-4aa1-b207-39f6ff0c602f",
      ResourceVersion: (string) (len=5) "31173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 37 2e 32  32 35 5c 22 7d 22 3a 7b  |68.107.225\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vpt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vpt4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-68-80",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.68.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.68.80"
        }
      },
      PodIP: (string) (len=15) "192.168.107.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.107.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4vpt4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.100218 18 deployment.go:67] Pod "webserver-deployment-786f49d774-r69mg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-r69mg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8baea50f-2a14-498d-918b-7554aa021fc7",
      ResourceVersion: (string) (len=5) "31160",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 38 2e 31 30  35 5c 22 7d 22 3a 7b 22  |68.38.105\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwzwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwzwc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=14) "192.168.38.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.38.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bwzwc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.101373 18 deployment.go:67] Pod "webserver-deployment-786f49d774-t94hp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-t94hp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a11075a4-d680-49ca-8737-ad0e96f3f148",
      ResourceVersion: (string) (len=5) "31438",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 2e 37 38  5c 22 7d 22 3a 7b 22 2e  |68.12.78\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ptzn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ptzn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ptzn2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.103535 18 deployment.go:67] Pod "webserver-deployment-786f49d774-xwf6r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xwf6r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-3698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2dba8af-f47a-4af3-820d-8fd58bc1c6f5",
      ResourceVersion: (string) (len=5) "31452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "9f41bbeb-62fe-4a1c-a15f-621227867cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 31 62 62 65 62 2d 36  |d\":\"9f41bbeb-6|
              00000090  32 66 65 2d 34 61 31 63  2d 61 31 35 66 2d 36 32  |2fe-4a1c-a15f-62|
              000000a0  31 32 32 37 38 36 37 63  62 61 5c 22 7d 22 3a 7b  |1227867cba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 38 2e 39 35  5c 22 7d 22 3a 7b 22 2e  |68.38.95\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5jvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5jvc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-43-233",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863126591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.43.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.43.233"
        }
      },
      PodIP: (string) (len=13) "192.168.38.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.38.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863126591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x5jvc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:23:13.104534 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3698" for this suite. @ 09/28/24 13:23:13.109
â€¢ [6.198 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/28/24 13:23:13.118
  I0928 13:23:13.118965 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/28/24 13:23:13.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:23:13.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:23:13.139
  I0928 13:23:13.142337 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:23:13.634375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:14.635330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:15.635384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:16.224838 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7701" for this suite. @ 09/28/24 13:23:16.228
â€¢ [3.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/28/24 13:23:16.236
  I0928 13:23:16.236752 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename hostport @ 09/28/24 13:23:16.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:23:16.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:23:16.258
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/28/24 13:23:16.266
  E0928 13:23:16.636227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:17.636338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.6.28 on the node which pod1 resides and expect scheduled @ 09/28/24 13:23:18.283
  E0928 13:23:18.637303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:19.637383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:20.637786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:21.638437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:22.638620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:23.639631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:24.639784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:25.639992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:26.640923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:27.641040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:28.641163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:29.641953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.6.28 but use UDP protocol on the node which pod2 resides @ 09/28/24 13:23:30.328
  E0928 13:23:30.642444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:31.642773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:32.642978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:33.643093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:34.643176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:35.643262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:36.643432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:37.643486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:38.644392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:39.644490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:40.645329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:41.646728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:42.647617      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:43.647781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/28/24 13:23:44.39
  I0928 13:23:44.390753 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.6.28 http://127.0.0.1:54323/hostname] Namespace:hostport-9044 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:23:44.390784 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:23:44.391843 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:23:44.391898 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9044/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.6.28+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.6.28, port: 54323 @ 09/28/24 13:23:44.442
  I0928 13:23:44.442382 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.6.28:54323/hostname] Namespace:hostport-9044 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:23:44.442399 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:23:44.442824 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:23:44.442869 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9044/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.6.28%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.6.28, port: 54323 UDP @ 09/28/24 13:23:44.479
  I0928 13:23:44.479526 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.6.28 54323] Namespace:hostport-9044 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:23:44.479540 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:23:44.479907 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:23:44.479951 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9044/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.6.28+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0928 13:23:44.648550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:45.648788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:46.649011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:47.649204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:48.650143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:49.528695 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9044" for this suite. @ 09/28/24 13:23:49.533
â€¢ [33.302 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/28/24 13:23:49.539
  I0928 13:23:49.539165 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:23:49.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:23:49.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:23:49.559
  STEP: create deployment with httpd image @ 09/28/24 13:23:49.563
  I0928 13:23:49.563114 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9331 create -f -'
  I0928 13:23:49.625249 18 builder.go:146] stderr: ""
  I0928 13:23:49.625294 18 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/28/24 13:23:49.625
  I0928 13:23:49.625374 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9331 diff -f -'
  E0928 13:23:49.651477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:50.651647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:51.651892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:52.652781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:53.653192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:53.945577 18 builder.go:135] rc: 1
  I0928 13:23:53.945670 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-9331 delete -f -'
  I0928 13:23:53.998246 18 builder.go:146] stderr: ""
  I0928 13:23:53.998282 18 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0928 13:23:53.998401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9331" for this suite. @ 09/28/24 13:23:54.002
â€¢ [4.472 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/28/24 13:23:54.01
  I0928 13:23:54.010813 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 13:23:54.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:23:54.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:23:54.04
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/28/24 13:23:54.043
  I0928 13:23:54.044094 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:23:54.653597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:23:55.272688 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:23:55.653715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:56.654371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:57.655284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:58.655804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:23:59.656372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:00.294901 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3717" for this suite. @ 09/28/24 13:24:00.302
â€¢ [6.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/28/24 13:24:00.31
  I0928 13:24:00.310811 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:24:00.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:00.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:00.333
  STEP: creating service in namespace services-2194 @ 09/28/24 13:24:00.336
  STEP: creating service affinity-clusterip-transition in namespace services-2194 @ 09/28/24 13:24:00.336
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2194 @ 09/28/24 13:24:00.346
  I0928 13:24:00.353229      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2194, replica count: 3
  E0928 13:24:00.657250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:01.657722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:02.658542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:03.404625      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 13:24:03.414761 18 resource.go:361] Creating new exec pod
  E0928 13:24:03.658702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:04.658934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:05.659511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:06.433029 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-2194 exec execpod-affinity9gmjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0928 13:24:06.514507 18 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0928 13:24:06.514550 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:06.514643 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-2194 exec execpod-affinity9gmjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  I0928 13:24:06.586926 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.109 80\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n"
  I0928 13:24:06.586966 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:06.596151 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-2194 exec execpod-affinity9gmjr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.109:80/ ; done'
  E0928 13:24:06.659777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:06.727524 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n"
  I0928 13:24:06.727583 18 builder.go:147] stdout: "\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-nbz4x\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-nbz4x\naffinity-clusterip-transition-nbz4x\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-kz9rm\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-nbz4x\naffinity-clusterip-transition-nbz4x"
  I0928 13:24:06.727601 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727609 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727614 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.727619 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727624 18 service.go:242] Received response from host: affinity-clusterip-transition-nbz4x
  I0928 13:24:06.727629 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727696 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.727702 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727710 18 service.go:242] Received response from host: affinity-clusterip-transition-nbz4x
  I0928 13:24:06.727716 18 service.go:242] Received response from host: affinity-clusterip-transition-nbz4x
  I0928 13:24:06.727722 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.727737 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727744 18 service.go:242] Received response from host: affinity-clusterip-transition-kz9rm
  I0928 13:24:06.727749 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.727757 18 service.go:242] Received response from host: affinity-clusterip-transition-nbz4x
  I0928 13:24:06.727764 18 service.go:242] Received response from host: affinity-clusterip-transition-nbz4x
  I0928 13:24:06.737392 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-2194 exec execpod-affinity9gmjr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.109:80/ ; done'
  I0928 13:24:06.882035 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n"
  I0928 13:24:06.882086 18 builder.go:147] stdout: "\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj\naffinity-clusterip-transition-lkqcj"
  I0928 13:24:06.882101 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882114 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882121 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882127 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882133 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882138 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882142 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882148 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882154 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882160 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882164 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882169 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882175 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882180 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882188 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882194 18 service.go:242] Received response from host: affinity-clusterip-transition-lkqcj
  I0928 13:24:06.882258 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2194, will wait for the garbage collector to delete the pods @ 09/28/24 13:24:06.903
  I0928 13:24:06.966222 18 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 8.03105ms
  I0928 13:24:07.067096 18 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.86823ms
  E0928 13:24:07.660511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:08.661091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:09.661151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:09.987079 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2194" for this suite. @ 09/28/24 13:24:09.99
â€¢ [9.686 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/28/24 13:24:09.996
  I0928 13:24:09.996603 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:24:09.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:10.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:10.019
  I0928 13:24:10.025507 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-639" for this suite. @ 09/28/24 13:24:10.028
â€¢ [0.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/28/24 13:24:10.034
  I0928 13:24:10.034194 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 13:24:10.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:10.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:10.055
  I0928 13:24:10.061773 18 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-9161"
  I0928 13:24:10.067409 18 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-9161"
  STEP: waiting for a new root ca configmap created @ 09/28/24 13:24:10.567
  I0928 13:24:10.572258 18 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-9161"
  I0928 13:24:10.577680 18 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-9161"
  E0928 13:24:10.662059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 09/28/24 13:24:11.078
  I0928 13:24:11.084025 18 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-9161"
  I0928 13:24:11.084161 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9161" for this suite. @ 09/28/24 13:24:11.088
â€¢ [1.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/28/24 13:24:11.094
  I0928 13:24:11.094708 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:24:11.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:11.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:11.115
  STEP: Creating a ResourceQuota with terminating scope @ 09/28/24 13:24:11.119
  STEP: Ensuring ResourceQuota status is calculated @ 09/28/24 13:24:11.123
  E0928 13:24:11.662197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:12.662415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/28/24 13:24:13.129
  STEP: Ensuring ResourceQuota status is calculated @ 09/28/24 13:24:13.136
  E0928 13:24:13.662677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:14.663209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/28/24 13:24:15.14
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/28/24 13:24:15.155
  E0928 13:24:15.663680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:16.663942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/28/24 13:24:17.16
  E0928 13:24:17.664690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:18.664773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/28/24 13:24:19.164
  STEP: Ensuring resource quota status released the pod usage @ 09/28/24 13:24:19.18
  E0928 13:24:19.664857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:20.665786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/28/24 13:24:21.186
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/28/24 13:24:21.196
  E0928 13:24:21.666657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:22.666745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/28/24 13:24:23.201
  E0928 13:24:23.667808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:24.668795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/28/24 13:24:25.206
  STEP: Ensuring resource quota status released the pod usage @ 09/28/24 13:24:25.229
  E0928 13:24:25.669461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:26.670313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:27.234916 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8212" for this suite. @ 09/28/24 13:24:27.238
â€¢ [16.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/28/24 13:24:27.244
  I0928 13:24:27.244550 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:24:27.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:27.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:27.267
  STEP: creating service in namespace services-1921 @ 09/28/24 13:24:27.27
  STEP: creating service affinity-nodeport-transition in namespace services-1921 @ 09/28/24 13:24:27.27
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1921 @ 09/28/24 13:24:27.286
  I0928 13:24:27.294808      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1921, replica count: 3
  E0928 13:24:27.671127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:28.671693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:29.672748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:30.346069      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 13:24:30.358910 18 resource.go:361] Creating new exec pod
  E0928 13:24:30.673583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:31.673793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:32.674436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:33.378993 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0928 13:24:33.456947 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0928 13:24:33.456994 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:33.457080 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  I0928 13:24:33.539874 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0928 13:24:33.539925 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:33.540023 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.43.233 32507'
  I0928 13:24:33.632657 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.43.233 32507\nConnection to 172.31.43.233 32507 port [tcp/*] succeeded!\n"
  I0928 13:24:33.632714 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:33.632778 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.80 32507'
  E0928 13:24:33.674732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:33.706701 18 builder.go:146] stderr: "+ + echonc hostName\n -v -t -w 2 172.31.68.80 32507\nConnection to 172.31.68.80 32507 port [tcp/*] succeeded!\n"
  I0928 13:24:33.706741 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:24:33.717451 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.43.233:32507/ ; done'
  I0928 13:24:33.886998 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n"
  I0928 13:24:33.887055 18 builder.go:147] stdout: "\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-vjg8q\naffinity-nodeport-transition-vjg8q\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-vb6s6\naffinity-nodeport-transition-vjg8q\naffinity-nodeport-transition-xm4tr"
  I0928 13:24:33.887067 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887074 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887081 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887086 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887092 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887098 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887105 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887111 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887120 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887125 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887130 18 service.go:242] Received response from host: affinity-nodeport-transition-vjg8q
  I0928 13:24:33.887137 18 service.go:242] Received response from host: affinity-nodeport-transition-vjg8q
  I0928 13:24:33.887158 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.887164 18 service.go:242] Received response from host: affinity-nodeport-transition-vb6s6
  I0928 13:24:33.887170 18 service.go:242] Received response from host: affinity-nodeport-transition-vjg8q
  I0928 13:24:33.887176 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:33.898159 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-1921 exec execpod-affinity76fdg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.43.233:32507/ ; done'
  I0928 13:24:34.083598 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.43.233:32507/\n"
  I0928 13:24:34.083650 18 builder.go:147] stdout: "\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr\naffinity-nodeport-transition-xm4tr"
  I0928 13:24:34.083663 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083674 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083680 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083686 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083691 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083696 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083702 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083708 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083714 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083720 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083729 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083734 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083738 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083743 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083749 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083755 18 service.go:242] Received response from host: affinity-nodeport-transition-xm4tr
  I0928 13:24:34.083821 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1921, will wait for the garbage collector to delete the pods @ 09/28/24 13:24:34.098
  I0928 13:24:34.159324 18 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.202343ms
  I0928 13:24:34.260394 18 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.065676ms
  E0928 13:24:34.675638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:35.676049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:36.676494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:24:36.978888 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1921" for this suite. @ 09/28/24 13:24:36.982
â€¢ [9.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/28/24 13:24:36.987
  I0928 13:24:36.987850 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename cronjob @ 09/28/24 13:24:36.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:24:37.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:24:37.009
  STEP: Creating a ReplaceConcurrent cronjob @ 09/28/24 13:24:37.012
  STEP: Ensuring a job is scheduled @ 09/28/24 13:24:37.019
  E0928 13:24:37.677334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:38.677390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:39.677682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:40.677933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:41.678125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:42.678802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:43.679012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:44.679260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:45.679372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:46.679439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:47.679586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:48.679916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:49.680071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:50.680387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:51.680482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:52.680705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:53.680775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:54.681012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:55.681137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:56.681229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:57.681725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:58.681866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:24:59.682066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:00.682261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/28/24 13:25:01.024
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/28/24 13:25:01.028
  STEP: Ensuring the job is replaced with a new one @ 09/28/24 13:25:01.031
  E0928 13:25:01.682784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:02.683044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:03.683454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:04.683686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:05.683809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:06.684050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:07.684081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:08.684360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:09.684731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:10.684829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:11.684921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:12.685012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:13.685780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:14.685874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:15.685969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:16.686091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:17.686809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:18.686892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:19.687705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:20.687883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:21.688210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:22.688447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:23.688775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:24.688949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:25.689077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:26.689288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:27.689332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:28.689491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:29.689641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:30.689780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:31.689923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:32.690016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:33.691049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:34.691216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:35.691512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:36.691713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:37.691817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:38.691916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:39.692087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:40.692236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:41.693255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:42.693776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:43.693829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:44.693861      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:45.694139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:46.694373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:47.694778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:48.694878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:49.694985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:50.695718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:51.696638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:52.696906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:53.697003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:54.697091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:55.697785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:56.697862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:57.698796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:58.698903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:25:59.699024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:00.699342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/28/24 13:26:01.037
  I0928 13:26:01.043526 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1195" for this suite. @ 09/28/24 13:26:01.047
â€¢ [84.067 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/28/24 13:26:01.054
  I0928 13:26:01.054911 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/28/24 13:26:01.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:26:01.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:26:01.079
  I0928 13:26:01.082539 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:26:01.699721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:02.700521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:03.701403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:04.701860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:05.702027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:06.703003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:07.297291 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5410" for this suite. @ 09/28/24 13:26:07.301
â€¢ [6.255 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/28/24 13:26:07.309
  I0928 13:26:07.309929 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:26:07.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:26:07.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:26:07.332
  STEP: Creating resourceQuota "e2e-rq-status-4pnvw" @ 09/28/24 13:26:07.339
  I0928 13:26:07.347429 18 resource_quota.go:1102] Resource quota "e2e-rq-status-4pnvw" reports spec: hard cpu limit of 500m
  I0928 13:26:07.347449 18 resource_quota.go:1104] Resource quota "e2e-rq-status-4pnvw" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-4pnvw" /status @ 09/28/24 13:26:07.347
  STEP: Confirm /status for "e2e-rq-status-4pnvw" resourceQuota via watch @ 09/28/24 13:26:07.354
  I0928 13:26:07.356514 18 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-4pnvw" in namespace "resourcequota-7096" with hard status: v1.ResourceList(nil)
  I0928 13:26:07.356599 18 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-4pnvw" in namespace "resourcequota-7096" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0928 13:26:07.356609 18 resource_quota.go:1141] ResourceQuota "e2e-rq-status-4pnvw" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/28/24 13:26:07.36
  I0928 13:26:07.365883 18 resource_quota.go:1152] Resource quota "e2e-rq-status-4pnvw" reports spec: hard cpu limit of 1
  I0928 13:26:07.365903 18 resource_quota.go:1153] Resource quota "e2e-rq-status-4pnvw" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-4pnvw" /status @ 09/28/24 13:26:07.365
  STEP: Confirm /status for "e2e-rq-status-4pnvw" resourceQuota via watch @ 09/28/24 13:26:07.371
  I0928 13:26:07.372864 18 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-4pnvw" in namespace "resourcequota-7096" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0928 13:26:07.372887 18 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-4pnvw" in namespace "resourcequota-7096" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0928 13:26:07.372896 18 resource_quota.go:1185] ResourceQuota "e2e-rq-status-4pnvw" /status was patched
  STEP: Get "e2e-rq-status-4pnvw" /status @ 09/28/24 13:26:07.372
  I0928 13:26:07.377175 18 resource_quota.go:1196] Resourcequota "e2e-rq-status-4pnvw" reports status: hard cpu of 1
  I0928 13:26:07.377193 18 resource_quota.go:1198] Resourcequota "e2e-rq-status-4pnvw" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-4pnvw" /status before checking Spec is unchanged @ 09/28/24 13:26:07.38
  I0928 13:26:07.385294 18 resource_quota.go:1218] Resourcequota "e2e-rq-status-4pnvw" reports status: hard cpu of 2
  I0928 13:26:07.385314 18 resource_quota.go:1220] Resourcequota "e2e-rq-status-4pnvw" reports status: hard memory of 2Gi
  I0928 13:26:07.386911 18 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-4pnvw" in namespace "resourcequota-7096" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0928 13:26:07.390327 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c389c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c389f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c38a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:07.703781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:08.704045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:09.704235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:10.704954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:11.705132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:12.391509 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c38c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c38c90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c38cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:12.705926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:13.706133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:14.706116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:15.706189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:16.706287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:17.392270 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:17.706585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:18.706903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:19.707006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:20.707095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:21.707906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:22.392419 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:22.708842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:23.709120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:24.709316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:25.709438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:26.709554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:27.392296 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e10f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:27.709690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:28.710018      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:29.710224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:30.710486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:31.711494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:32.391810 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e110e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:32.712270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:33.712379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:34.712634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:35.712717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:36.712853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:37.392314 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e112c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:37.713718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:38.713871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:39.713998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:40.714184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:41.714470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:42.391354 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c390e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39170), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:42.714759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:43.714985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:44.715816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:45.716766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:46.717744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:47.391908 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c393b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:47.718306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:48.718415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:49.718831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:50.719042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:51.719248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:52.392531 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11590), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e115d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:52.719936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:53.720758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:54.720961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:55.721064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:56.721186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:26:57.392035 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e117b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e117e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:26:57.721400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:58.722454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:26:59.723365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:00.723537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:01.723833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:02.391705 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11998), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e119e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:02.723999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:03.724097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:04.724286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:05.724386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:06.725395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:07.391806 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11b48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11b90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11bc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:07.726219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:08.726307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:09.726399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:10.726502      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:11.726633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:12.390739 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11d40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11d70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:12.727143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:13.727448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:14.727549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:15.727776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:16.727857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:17.392554 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11f20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002e11f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:17.728785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:18.728886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:19.729049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:20.729101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:21.729291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:22.391972 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c398d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39920), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:22.729376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:23.729453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:24.729596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:25.729724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:26.729815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:27.391577 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd42d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:27.730789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:28.730891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:29.730990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:30.731064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:31.731171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:32.392666 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39ba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39bf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39c38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:32.732119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:33.732384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:34.732480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:35.732622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:36.732729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:37.391855 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39e18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39e78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c39ea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:37.733029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:38.733444      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:39.733687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:40.733765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:41.733955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:42.391711 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f901e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:42.734081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:43.734161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:44.734259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:45.734331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:46.734422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:47.391673 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f904b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:47.735069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:48.735597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:49.735710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:50.735944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:51.736751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:52.392227 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f906f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f907b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:52.737321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:53.738382      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:54.738475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:55.738532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:56.738698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:27:57.391082 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f909f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:27:57.739472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:58.740302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:27:59.740429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:00.740807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:01.740842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:02.392026 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd40c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:02.741427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:03.741610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:04.741819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:05.742007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:06.742748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:07.392744 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd42d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:07.743230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:08.743450      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:09.743641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:10.743709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:11.743897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:12.392133 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f901b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:12.744622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:13.744704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:14.745756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:15.745832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:16.745897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:17.392195 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f903a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:17.746657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:18.746690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:19.746793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:20.746911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:21.747757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:22.391835 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f906c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f906f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:22.748289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:23.748463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:24.748697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:25.748951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:26.749154      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:27.391955 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:27.749253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:28.749647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:29.749835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:30.750041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:31.750264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:32.392557 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd48b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:32.751139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:33.751659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:34.751850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:35.752084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:36.752348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:37.392020 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f909f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f90a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:37.752506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:38.752857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:39.753068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:40.753258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:41.753439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:42.391888 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-4pnvw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-4pnvw", GenerateName:"", Namespace:"resourcequota-7096", SelfLink:"", UID:"ba56b818-abdb-4706-bb50-df817ea825d2", ResourceVersion:"32902", Generation:0, CreationTimestamp:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-4pnvw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4be8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4c18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 28, 13, 26, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fd4c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0928 13:28:42.754398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:43.755417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:44.755517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:45.755689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:46.756747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:28:47.391675 18 resource_quota.go:1260] ResourceQuota "e2e-rq-status-4pnvw" Spec was unchanged and /status reset
  I0928 13:28:47.391810 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7096" for this suite. @ 09/28/24 13:28:47.395
â€¢ [160.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/28/24 13:28:47.403
  I0928 13:28:47.403439 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:28:47.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:28:47.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:28:47.423
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:28:47.427
  E0928 13:28:47.756812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:48.756893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:28:49.452
  I0928 13:28:49.456098 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-bf4fa581-af0b-45b0-89e4-9f14dce0421d container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:28:49.469
  I0928 13:28:49.487627 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8799" for this suite. @ 09/28/24 13:28:49.491
â€¢ [2.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/28/24 13:28:49.497
  I0928 13:28:49.497894 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:28:49.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:28:49.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:28:49.518
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:28:49.521
  E0928 13:28:49.757697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:50.758169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:51.758548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:52.758767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:28:53.544
  I0928 13:28:53.547640 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-bf92623f-df41-4d06-8912-1456117fed91 container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:28:53.553
  I0928 13:28:53.568543 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8380" for this suite. @ 09/28/24 13:28:53.572
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/28/24 13:28:53.578
  I0928 13:28:53.578237 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename chunking @ 09/28/24 13:28:53.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:28:53.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:28:53.595
  STEP: creating a large number of resources @ 09/28/24 13:28:53.599
  E0928 13:28:53.759314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:54.759925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:55.760629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:56.761304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:57.761943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:58.762924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:28:59.763850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:00.764879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:01.764936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:02.765928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:03.766899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:04.767359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:05.767622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:06.767661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:07.768363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:08.769101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:09.769497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:10.770403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/28/24 13:29:11.288
  I0928 13:29:11.334747 18 chunking.go:163] Retrieved 40/40 results with rv 33752 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 09/28/24 13:29:11.334
  E0928 13:29:11.771111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:12.771368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:13.771624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:14.771800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:15.771922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:16.772796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:17.772891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:18.773026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:19.773241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:20.773430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:21.773588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:22.773904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:23.774974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:24.775064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:25.775798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:26.775946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:27.776020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:28.776748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:29.777760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:30.778156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:29:31.340756 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:29:31.778871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:32.779177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:33.779434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:34.779649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:35.779837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:36.780768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:37.780866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:38.781159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:39.781348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:40.781539      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:41.781693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:42.781916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:43.782289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:44.782521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:45.782750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:46.782939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:47.783151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:48.783499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:49.783710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:50.783920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:29:51.340691 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:29:51.784799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:52.784887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:53.785751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:54.786761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:55.787751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:56.787950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:57.788754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:58.789761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:29:59.790011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:00.790337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:01.790494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:02.790713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:03.790806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:04.790918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:05.791099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:06.791324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:07.791620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:08.791909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:09.792105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:10.792330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:30:11.340404 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:30:11.792504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:12.792690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:13.792832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:14.793058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:15.793278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:16.793452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:17.793787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:18.793889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:19.793990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:20.794167      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:21.794939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:22.795031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:23.795075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:24.795762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:25.796754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:26.797751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:27.797924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:28.798212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:29.798758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:30.798998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:30:31.341453 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:30:31.800051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:32.800293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:33.800510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:34.800715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:35.800903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:36.801089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:37.801292      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:38.801611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:39.801847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:40.802027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:41.802220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:42.802910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:43.803205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:44.803404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:45.803620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:46.803798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:47.804014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:48.804295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:49.804404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:50.804491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:30:51.340743 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:30:51.805242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:52.805945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:53.806033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:54.806760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:55.806878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:56.806983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:57.807951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:58.808778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:30:59.808979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:00.809755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:01.809981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:02.810166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:03.810640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:04.810891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:05.811073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:06.811253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:07.811448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:08.811528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:09.811807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:10.811998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:31:11.340416 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:31:11.812932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:12.813149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:13.813552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:14.813785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:15.813989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:16.814197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:17.814285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:18.814512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:19.814697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:20.815418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:21.815511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:22.815690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:23.816750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:24.817752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:25.817983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:26.818166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:27.818366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:28.818620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:29.819359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:30.819482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:31:31.340331 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:31:31.819686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:32.820756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:33.821054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:34.821299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:35.821514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:36.821723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:37.821884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:38.822174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:39.822440      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:40.822699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:41.822931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:42.823125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:43.823260      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:44.823526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:45.823714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:46.823807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:47.824017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:48.824398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:49.824694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:50.824782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:31:51.340232 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:31:51.825521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:52.825846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:53.826060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:54.826760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:55.826862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:56.827754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:57.827990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:58.828303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:31:59.828556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:00.828943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:01.828901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:02.829092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:03.829255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:04.829391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:05.829621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:06.829812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:07.829906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:08.830264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:09.830515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:10.830719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:32:11.341271 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:32:11.830862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:12.831095      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:13.831411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:14.831649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:15.831849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:16.832165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:17.832491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:18.832600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:19.832846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:20.833748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:21.834830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:22.834935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:23.835134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:24.835234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:25.835871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:26.835967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:27.836755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:28.837798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:29.837880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:30.838677      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:32:31.339600 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:32:31.838785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:32.838876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:33.838977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:34.839158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:35.839286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:36.839484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:37.839692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:38.840044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:39.840265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:40.840506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:41.840690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:42.840875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:43.841923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:44.842160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:45.842271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:46.842441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:47.842660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:48.843046      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:49.843252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:50.843405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:32:51.340945 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:32:51.844433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:52.844485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:53.844599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:54.844833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:55.844923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:56.845763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:57.846768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:58.847067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:32:59.847296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:00.847762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:01.847946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:02.848069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:03.848180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:04.848355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:05.848646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:06.848832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:07.849050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:08.849522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:09.849768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:10.850119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:33:11.340932 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:33:11.850457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:12.850682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:13.850962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:14.851142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:15.851327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:16.851530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:17.851739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:18.852033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:19.852279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:20.852478      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:21.852682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:22.852929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:23.853226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:24.853757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:25.854626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:26.854716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:27.855483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:28.855911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:29.856003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:30.856758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:33:31.340139 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:33:31.857656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:32.857854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:33.857955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:34.858782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:35.859765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:36.859960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:37.860169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:38.860391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:39.860635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:40.860820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:41.861049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:42.861239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:43.861900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:44.862141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:45.862936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:46.863137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:47.863451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:48.863763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:49.864063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:50.864831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:33:51.341407 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:33:51.865419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:52.865510      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:53.865635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:54.865696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:55.866757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:56.866854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:57.867767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:58.868069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:33:59.868265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:00.868619      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:01.868582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:02.868784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:03.869076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:04.869257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:05.869446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:06.869793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:07.869987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:08.870288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:09.870487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:10.870700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:34:11.340380 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:34:11.870923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:12.871135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:13.871467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:14.871683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:15.871781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:16.872753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:17.873746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:18.874025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:19.874135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:20.874523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:21.875543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:22.875726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:23.875804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:24.876760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:25.877749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:26.878763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:27.879754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:28.880043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:29.880222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:30.880687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:34:31.340584 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:34:31.881092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:32.881288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:33.881606      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:34.881849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:35.882042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:36.882251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:37.882870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:38.883179      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:39.883280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:40.883468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:41.883675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:42.883862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:43.884193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:44.884680      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:45.884776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:46.884966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:47.885757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:48.886747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:49.887756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:50.887958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:34:51.340017 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:34:51.888656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:52.888849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:53.888987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:54.889170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:55.889360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:56.889602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:57.889796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:58.890755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:34:59.890955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:00.891138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:01.891328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:02.891518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:03.891833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:04.892052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:05.892262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:06.892441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:07.893210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:08.893526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:09.893791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:10.894884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:35:11.340210 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:35:11.895414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:12.895504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:13.895685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:14.896773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:15.897760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:16.898757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:17.899780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:18.900070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:19.900317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:20.900847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:21.900992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:22.901198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:23.901585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:24.901777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:25.901977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:26.902180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:27.902358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:28.902899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:29.903170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:30.903375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:35:31.341238 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:35:31.903701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:32.903884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:33.903958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:34.904024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:35.905067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:36.905174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:37.905246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:38.905683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:39.906750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:40.906846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:41.907130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:42.907870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:43.908171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:44.908267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:45.908523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:46.908787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:47.908947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:48.909045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:49.909750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:50.910754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:35:51.341665 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:35:51.911754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:52.912763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:53.913747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:54.913864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:55.913979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:56.914692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:57.914730      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:58.915759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:35:59.916751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:00.917025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:01.916977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:02.917760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:03.917853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:04.918195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:05.918912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:06.919091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:07.919836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:08.919954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:09.920144      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:10.920367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:36:11.341403 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:36:11.920977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:12.921159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:13.921475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:14.921703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:15.921907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:16.922090      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:17.922269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:18.922701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:19.922916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:20.923749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:21.923879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:22.924056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:23.924152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:24.924351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:25.924763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:26.925596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:27.925687      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:28.925778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:29.926766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:30.926856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:36:31.340270 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:36:31.927761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:32.927925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:33.928224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:34.928361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:35.928538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:36.928756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:37.929008      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:38.929815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:39.929922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:40.930016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:41.930196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:42.930395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:43.930798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:44.930914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:45.931122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:46.931320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:47.931427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:48.931693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:49.931864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:50.932077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:36:51.340632 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:36:51.932194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:52.932397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:53.932543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:54.932770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:55.932951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:56.933079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:57.933758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:58.934053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:36:59.934099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:00.934287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:01.934394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:02.934448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:03.934717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:04.935124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:05.935223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:06.935315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:07.935384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:08.936240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:09.936777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:10.936964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:37:11.340266 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:37:11.937775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:12.938802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:13.938995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:14.939198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:15.939387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:16.939614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:17.939827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:18.940006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:19.940205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:20.940403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:21.940517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:22.940734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:23.941504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:24.941795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:25.942102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:26.942346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:27.942756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:28.943066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:29.943217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:30.943420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:37:31.340317 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:37:31.943686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:32.943838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:33.944141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:34.944338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:35.944426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:36.944547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:37.944699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:38.944789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:39.945757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:40.946749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:41.947832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:42.948757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:43.949758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:44.949937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:45.950060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:46.950290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:47.950880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:48.951174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:49.951388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:50.951592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:37:51.339993 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:37:51.952614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:52.952796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:53.953117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:54.953329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:55.953516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:56.953707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:57.953961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:58.954269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:37:59.954429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:00.954690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:01.954836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:02.955814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:03.955895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:04.956754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:05.957763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:06.957946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:07.958123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:08.958752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:09.959765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:10.959872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:38:11.340651 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM3NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0928 13:38:11.960045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:12.960227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:13.960350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:14.960546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:15.960763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:16.960963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:17.961157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:18.961694      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:19.961876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:20.962073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:21.962872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:22.963137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:23.963540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:24.963745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:25.963945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:26.964748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:27.964930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:28.965747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:29.966750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:30.967760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:38:31.339377 18 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0928 13:38:31.339412 18 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/28/24 13:38:31.339
  STEP: retrieving all remaining pages @ 09/28/24 13:38:31.343
  I0928 13:38:31.347792 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0928 13:38:31.352401 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0928 13:38:31.356335 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0928 13:38:31.360006 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0928 13:38:31.364303 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0928 13:38:31.368296 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0928 13:38:31.372586 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0928 13:38:31.376274 18 chunking.go:221] Retrieved 40/40 results with rv 34817 and continue 
  I0928 13:38:31.376429 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3628" for this suite. @ 09/28/24 13:38:31.38
â€¢ [577.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/28/24 13:38:31.386
  I0928 13:38:31.386522 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 13:38:31.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:38:31.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:38:31.407
  STEP: Creating service test in namespace statefulset-6533 @ 09/28/24 13:38:31.41
  STEP: Creating statefulset ss in namespace statefulset-6533 @ 09/28/24 13:38:31.416
  I0928 13:38:31.426322 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0928 13:38:31.967867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:32.968141      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:33.968226      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:34.968458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:35.968649      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:36.968754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:37.968894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:38.969106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:39.969317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:40.969419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:38:41.428661 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/28/24 13:38:41.436
  STEP: updating a scale subresource @ 09/28/24 13:38:41.44
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/28/24 13:38:41.447
  STEP: Patch a scale subresource @ 09/28/24 13:38:41.453
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/28/24 13:38:41.462
  I0928 13:38:41.465353 18 statefulset.go:138] Deleting all statefulset in ns statefulset-6533
  I0928 13:38:41.468662 18 rest.go:150] Scaling statefulset ss to 0
  E0928 13:38:41.969494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:42.969638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:43.969853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:44.969970      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:45.970069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:46.970166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:47.970233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:48.970447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:49.970688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:50.970878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:38:51.484685 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:38:51.488123 18 rest.go:88] Deleting statefulset ss
  I0928 13:38:51.501219 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6533" for this suite. @ 09/28/24 13:38:51.504
â€¢ [20.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/28/24 13:38:51.512
  I0928 13:38:51.512381 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:38:51.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:38:51.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:38:51.533
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:38:51.536
  E0928 13:38:51.970978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:52.971240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:53.971418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:54.971495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:38:55.562
  I0928 13:38:55.566172 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-bb3c6a58-9b5a-47bd-aab7-9d182ebaecdd container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:38:55.584
  I0928 13:38:55.603286 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-10" for this suite. @ 09/28/24 13:38:55.607
â€¢ [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/28/24 13:38:55.614
  I0928 13:38:55.614784 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename events @ 09/28/24 13:38:55.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:38:55.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:38:55.635
  STEP: creating a test event @ 09/28/24 13:38:55.638
  STEP: listing all events in all namespaces @ 09/28/24 13:38:55.642
  STEP: patching the test event @ 09/28/24 13:38:55.645
  STEP: fetching the test event @ 09/28/24 13:38:55.653
  STEP: updating the test event @ 09/28/24 13:38:55.656
  STEP: getting the test event @ 09/28/24 13:38:55.665
  STEP: deleting the test event @ 09/28/24 13:38:55.669
  STEP: listing all events in all namespaces @ 09/28/24 13:38:55.676
  I0928 13:38:55.679276 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1865" for this suite. @ 09/28/24 13:38:55.682
â€¢ [0.076 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/28/24 13:38:55.69
  I0928 13:38:55.690681 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:38:55.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:38:55.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:38:55.711
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/28/24 13:38:55.715
  E0928 13:38:55.972626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:56.972751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:57.973181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:38:58.973511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:38:59.739
  I0928 13:38:59.744222 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-ce6d7fe2-5cb0-49f2-9231-ffe6e7a4f7c8 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:38:59.751
  I0928 13:38:59.768029 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7087" for this suite. @ 09/28/24 13:38:59.772
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/28/24 13:38:59.78
  I0928 13:38:59.780231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:38:59.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:38:59.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:38:59.802
  STEP: create the rc @ 09/28/24 13:38:59.809
  W0928 13:38:59.814285      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0928 13:38:59.973588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:00.974907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:01.976093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:02.975936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:03.979527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:04.979765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/28/24 13:39:05.817
  STEP: wait for the rc to be deleted @ 09/28/24 13:39:05.828
  E0928 13:39:05.980701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:06.839335 18 garbage_collector.go:670] 80 pods remaining
  I0928 13:39:06.839391 18 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0928 13:39:06.839397 18 garbage_collector.go:678] 
  E0928 13:39:06.981489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:07.842497 18 garbage_collector.go:670] 70 pods remaining
  I0928 13:39:07.842528 18 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0928 13:39:07.842533 18 garbage_collector.go:678] 
  E0928 13:39:07.982313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:08.839116 18 garbage_collector.go:670] 60 pods remaining
  I0928 13:39:08.839143 18 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0928 13:39:08.839149 18 garbage_collector.go:678] 
  E0928 13:39:08.982793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:09.844135 18 garbage_collector.go:670] 40 pods remaining
  I0928 13:39:09.844174 18 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0928 13:39:09.844180 18 garbage_collector.go:678] 
  E0928 13:39:09.984059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:10.841065 18 garbage_collector.go:670] 30 pods remaining
  I0928 13:39:10.841107 18 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0928 13:39:10.841114 18 garbage_collector.go:678] 
  E0928 13:39:10.984647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:11.835646 18 garbage_collector.go:670] 20 pods remaining
  I0928 13:39:11.835677 18 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0928 13:39:11.835682 18 garbage_collector.go:678] 
  E0928 13:39:11.984792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/28/24 13:39:12.837
  W0928 13:39:12.844517      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 13:39:12.845022 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 13:39:12.845176 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-944" for this suite. @ 09/28/24 13:39:12.851
â€¢ [13.079 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/28/24 13:39:12.858
  I0928 13:39:12.858982 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/28/24 13:39:12.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:12.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:12.895
  I0928 13:39:12.913065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:39:12.984930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:13.465646 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7754" for this suite. @ 09/28/24 13:39:13.471
â€¢ [0.621 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/28/24 13:39:13.48
  I0928 13:39:13.480050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-pred @ 09/28/24 13:39:13.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:13.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:13.499
  I0928 13:39:13.502993 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0928 13:39:13.510677 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 13:39:13.514023 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-43-233 before test
  I0928 13:39:13.519022 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hwx5d from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:50 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.519159 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:39:13.519242 18 predicates.go:957] calico-node-w4t86 from kube-system started at 2024-09-28 12:11:04 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.519250 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:39:13.519257 18 predicates.go:957] sonobuoy-e2e-job-3786396138ca4f60 from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:39:13.519340 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0928 13:39:13.519390 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:39:13.519448 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:39:13.519469 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:39:13.519473 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:39:13.519547 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-6-28 before test
  I0928 13:39:13.530695 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-kpn8x from ingress-nginx-kubernetes-worker started at 2024-09-28 12:09:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.530719 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:39:13.530727 18 predicates.go:957] calico-node-5nq6s from kube-system started at 2024-09-28 12:10:43 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.530734 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:39:13.530740 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-28 12:16:46 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.530745 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0928 13:39:13.530751 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-rsrhj from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:39:13.530756 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:39:13.530761 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:39:13.530767 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-80 before test
  I0928 13:39:13.536151 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gxfnw from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536171 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:39:13.536180 18 predicates.go:957] calico-node-4k796 from kube-system started at 2024-09-28 12:10:53 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536185 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:39:13.536361 18 predicates.go:957] coredns-5b4857d7c8-pb4s9 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536388 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0928 13:39:13.536395 18 predicates.go:957] kube-state-metrics-5d7bdccd49-ltzpt from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536399 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0928 13:39:13.536405 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-64tv5 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (2 container statuses recorded)
  I0928 13:39:13.536411 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0928 13:39:13.536421 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0928 13:39:13.536429 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-t64jl from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536434 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0928 13:39:13.536440 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cm655 from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:39:13.536445 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0928 13:39:13.536450 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-n5wgl from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:39:13.536455 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:39:13.536459 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/28/24 13:39:13.536
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f96c114849826c], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 09/28/24 13:39:13.564
  E0928 13:39:13.985027      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:14.561007 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1951" for this suite. @ 09/28/24 13:39:14.565
â€¢ [1.092 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/28/24 13:39:14.572
  I0928 13:39:14.572462 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename deployment @ 09/28/24 13:39:14.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:14.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:14.592
  I0928 13:39:14.604059 18 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0928 13:39:14.985543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:15.985936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:16.986040      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:17.986135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:18.986196      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:19.609553 18 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 13:39:19.609
  I0928 13:39:19.609632 18 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/28/24 13:39:19.618
  I0928 13:39:19.629695 18 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2927",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2c1638d-a84b-4eec-a9a4-01a9e2ce898d",
      ResourceVersion: (string) (len=5) "37718",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863127559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0928 13:39:19.633764 18 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0928 13:39:19.633781 18 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0928 13:39:19.633989 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2927",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee24ff8a-6cb0-4f55-ac02-3724aa02f8d7",
      ResourceVersion: (string) (len=5) "37721",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863127554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c2c1638d-a84b-4eec-a9a4-01a9e2ce898d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 32 63 31 36 33 38  |"uid\":\"c2c1638|
              00000040  64 2d 61 38 34 62 2d 34  65 65 63 2d 61 39 61 34  |d-a84b-4eec-a9a4|
              00000050  2d 30 31 61 39 65 32 63  65 38 39 38 64 5c 22 7d  |-01a9e2ce898d\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0928 13:39:19.641069 18 deployment.go:67] Pod "test-cleanup-controller-hjjlh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-hjjlh",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2927",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e450d27-ed09-42b5-a795-8ca6afc195ec",
      ResourceVersion: (string) (len=5) "37355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863127554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "ee24ff8a-6cb0-4f55-ac02-3724aa02f8d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 65 32 34 66 66 38 61  |uid\":\"ee24ff8a|
              00000080  2d 36 63 62 30 2d 34 66  35 35 2d 61 63 30 32 2d  |-6cb0-4f55-ac02-|
              00000090  33 37 32 34 61 61 30 32  66 38 64 37 5c 22 7d 22  |3724aa02f8d7\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  2e 37 33 5c 22 7d 22 3a  |2.168.12.73\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6d7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6d7b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-6-28",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63863127554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.6.28",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.6.28"
        }
      },
      PodIP: (string) (len=13) "192.168.12.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.12.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63863127554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63863127555,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8c3a6e6edd3ae8eb72142461823fdb49d0f3ed9e97c9a41ef3dfc746b44eb403",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s6d7b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0928 13:39:19.642088 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2927" for this suite. @ 09/28/24 13:39:19.651
â€¢ [5.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/28/24 13:39:19.665
  I0928 13:39:19.665408 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:39:19.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:19.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:19.687
  STEP: Creating configMap with name configmap-test-upd-61615d61-0e56-4afa-b9d0-f412c7d7832c @ 09/28/24 13:39:19.693
  STEP: Creating the pod @ 09/28/24 13:39:19.697
  E0928 13:39:19.986323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:20.986442      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/28/24 13:39:21.717
  STEP: Waiting for pod with binary data @ 09/28/24 13:39:21.725
  I0928 13:39:21.731521 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3397" for this suite. @ 09/28/24 13:39:21.735
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/28/24 13:39:21.742
  I0928 13:39:21.742231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:39:21.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:21.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:21.763
  STEP: creating service endpoint-test2 in namespace services-6782 @ 09/28/24 13:39:21.767
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6782 to expose endpoints map[] @ 09/28/24 13:39:21.778
  I0928 13:39:21.791742 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-6782 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6782 @ 09/28/24 13:39:21.791
  E0928 13:39:21.986777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:22.986897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6782 to expose endpoints map[pod1:[80]] @ 09/28/24 13:39:23.815
  I0928 13:39:23.828749 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-6782 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/28/24 13:39:23.828
  I0928 13:39:23.828807 18 resource.go:361] Creating new exec pod
  E0928 13:39:23.987228      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:24.987782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:25.988368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:26.841809 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0928 13:39:26.928197 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0928 13:39:26.928353 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:39:26.928460 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  E0928 13:39:26.988851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:27.008484 18 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.30 80\n+ echo hostName\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  I0928 13:39:27.008527 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-6782 @ 09/28/24 13:39:27.008
  E0928 13:39:27.989815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:28.990134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6782 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/28/24 13:39:29.192
  I0928 13:39:29.207530 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-6782 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/28/24 13:39:29.207
  E0928 13:39:29.990681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:30.208122 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0928 13:39:30.291484 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0928 13:39:30.291525 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:39:30.291623 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  I0928 13:39:30.370513 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.30 80\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  I0928 13:39:30.370553 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6782 @ 09/28/24 13:39:30.37
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6782 to expose endpoints map[pod2:[80]] @ 09/28/24 13:39:30.385
  I0928 13:39:30.401784 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-6782 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/28/24 13:39:30.402
  E0928 13:39:30.990733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:31.403470 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0928 13:39:31.482974 18 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0928 13:39:31.483021 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:39:31.483087 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6782 exec execpodslkmp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.30 80'
  I0928 13:39:31.567982 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.30 80\nConnection to 10.152.183.30 80 port [tcp/http] succeeded!\n"
  I0928 13:39:31.568022 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-6782 @ 09/28/24 13:39:31.568
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6782 to expose endpoints map[] @ 09/28/24 13:39:31.584
  E0928 13:39:31.991025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:32.604069 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-6782 exposes endpoints map[]
  I0928 13:39:32.620178 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6782" for this suite. @ 09/28/24 13:39:32.623
â€¢ [10.887 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/28/24 13:39:32.629
  I0928 13:39:32.629462 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 13:39:32.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:32.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:32.648
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/28/24 13:39:32.652
  I0928 13:39:32.652740 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:39:32.992074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:33.992252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:34.992577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:35.992648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:36.993139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/28/24 13:39:37.713
  I0928 13:39:37.714265 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:39:37.993804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:38.994297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:39.012866 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:39:39.994465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:40.994512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:41.994740      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:42.994827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:43.995122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:44.090779 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6137" for this suite. @ 09/28/24 13:39:44.097
â€¢ [11.474 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/28/24 13:39:44.103
  I0928 13:39:44.103804 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:39:44.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:44.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:44.123
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/28/24 13:39:44.127
  E0928 13:39:44.995855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:45.996758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/28/24 13:39:46.144
  STEP: Then the orphan pod is adopted @ 09/28/24 13:39:46.149
  E0928 13:39:46.996881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/28/24 13:39:47.158
  I0928 13:39:47.161754 18 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/28/24 13:39:47.172
  E0928 13:39:47.997026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:48.180419 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4352" for this suite. @ 09/28/24 13:39:48.184
â€¢ [4.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/28/24 13:39:48.192
  I0928 13:39:48.192189 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:39:48.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:48.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:48.211
  I0928 13:39:48.215246 18 replica_set.go:191] Creating ReplicaSet my-hostname-basic-b7330c40-0e8a-43d2-8759-d1d5abaef230
  I0928 13:39:48.222910 18 resource.go:87] Pod name my-hostname-basic-b7330c40-0e8a-43d2-8759-d1d5abaef230: Found 0 pods out of 1
  E0928 13:39:48.997723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:49.997899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:50.998009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:51.998091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:52.998288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:53.228109 18 resource.go:87] Pod name my-hostname-basic-b7330c40-0e8a-43d2-8759-d1d5abaef230: Found 1 pods out of 1
  I0928 13:39:53.228144 18 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-b7330c40-0e8a-43d2-8759-d1d5abaef230" is running
  I0928 13:39:53.231097 18 replica_set.go:220] Pod "my-hostname-basic-b7330c40-0e8a-43d2-8759-d1d5abaef230-w4gwd" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:39:49 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:39:48 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:39:49 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:39:49 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-28 13:39:48 +0000 UTC Reason: Message:}])
  I0928 13:39:53.231120 18 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/28/24 13:39:53.231
  I0928 13:39:53.241738 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1303" for this suite. @ 09/28/24 13:39:53.245
â€¢ [5.060 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/28/24 13:39:53.252
  I0928 13:39:53.252267 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:39:53.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:39:53.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:39:53.274
  STEP: creating service multi-endpoint-test in namespace services-426 @ 09/28/24 13:39:53.277
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-426 to expose endpoints map[] @ 09/28/24 13:39:53.285
  I0928 13:39:53.289439 18 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0928 13:39:53.999331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:39:54.297967 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-426 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-426 @ 09/28/24 13:39:54.298
  E0928 13:39:54.999528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:55.999952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-426 to expose endpoints map[pod1:[100]] @ 09/28/24 13:39:56.318
  I0928 13:39:56.330662 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-426 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-426 @ 09/28/24 13:39:56.33
  E0928 13:39:57.000115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:39:58.000305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-426 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/28/24 13:39:58.347
  I0928 13:39:58.360433 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-426 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/28/24 13:39:58.36
  I0928 13:39:58.360495 18 resource.go:361] Creating new exec pod
  E0928 13:39:59.000828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:00.000945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:01.001921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:01.375527 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-426 exec execpodfm2dg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0928 13:40:01.455734 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0928 13:40:01.455777 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:40:01.455846 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-426 exec execpodfm2dg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.173 80'
  I0928 13:40:01.535603 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.173 80\nConnection to 10.152.183.173 80 port [tcp/http] succeeded!\n"
  I0928 13:40:01.535645 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:40:01.535716 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-426 exec execpodfm2dg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0928 13:40:01.614850 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0928 13:40:01.614890 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0928 13:40:01.614962 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-426 exec execpodfm2dg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.173 81'
  I0928 13:40:01.691008 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.173 81\nConnection to 10.152.183.173 81 port [tcp/*] succeeded!\n"
  I0928 13:40:01.691047 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-426 @ 09/28/24 13:40:01.691
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-426 to expose endpoints map[pod2:[101]] @ 09/28/24 13:40:01.705
  E0928 13:40:02.002083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:02.728012 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-426 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-426 @ 09/28/24 13:40:02.728
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-426 to expose endpoints map[] @ 09/28/24 13:40:02.743
  E0928 13:40:03.002190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:03.762946 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-426 exposes endpoints map[]
  I0928 13:40:03.777146 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-426" for this suite. @ 09/28/24 13:40:03.78
â€¢ [10.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/28/24 13:40:03.788
  I0928 13:40:03.788175 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:40:03.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:03.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:03.809
  STEP: Setting up server cert @ 09/28/24 13:40:03.832
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:40:03.967
  STEP: Deploying the webhook pod @ 09/28/24 13:40:03.977
  STEP: Wait for the deployment to be ready @ 09/28/24 13:40:03.989
  I0928 13:40:03.995760 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:40:04.002942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:05.003889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:06.004256      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:40:06.008
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:40:06.016
  E0928 13:40:07.005049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:07.017304 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/28/24 13:40:07.093
  STEP: Creating a configMap that should be mutated @ 09/28/24 13:40:07.107
  STEP: Deleting the collection of validation webhooks @ 09/28/24 13:40:07.131
  STEP: Creating a configMap that should not be mutated @ 09/28/24 13:40:07.178
  I0928 13:40:07.220657 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8414" for this suite. @ 09/28/24 13:40:07.226
  STEP: Destroying namespace "webhook-markers-9617" for this suite. @ 09/28/24 13:40:07.234
â€¢ [3.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/28/24 13:40:07.24
  I0928 13:40:07.240579 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:40:07.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:07.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:07.26
  I0928 13:40:07.263487 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 create -f -'
  I0928 13:40:07.346445 18 builder.go:146] stderr: ""
  I0928 13:40:07.346482 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0928 13:40:07.346530 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 create -f -'
  I0928 13:40:07.437041 18 builder.go:146] stderr: ""
  I0928 13:40:07.437079 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/28/24 13:40:07.437
  E0928 13:40:08.005647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:08.441622 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 13:40:08.441656 18 framework.go:733] Found 1 / 1
  I0928 13:40:08.441673 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0928 13:40:08.445365 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0928 13:40:08.445378 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0928 13:40:08.445423 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 describe pod agnhost-primary-sk445'
  I0928 13:40:08.497815 18 builder.go:146] stderr: ""
  I0928 13:40:08.497881 18 builder.go:147] stdout: "Name:             agnhost-primary-sk445\nNamespace:        kubectl-7633\nPriority:         0\nService Account:  default\nNode:             ip-172-31-6-28/172.31.6.28\nStart Time:       Sat, 28 Sep 2024 13:40:07 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.12.71\nIPs:\n  IP:           192.168.12.71\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://0ca9e6cb75da5bf39663e39e8cb89bfab7c6a43f8092f314e4361830a52bb8d1\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 28 Sep 2024 13:40:07 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-rx66g (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-rx66g:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7633/agnhost-primary-sk445 to ip-172-31-6-28\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0928 13:40:08.498049 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 describe rc agnhost-primary'
  I0928 13:40:08.551822 18 builder.go:146] stderr: ""
  I0928 13:40:08.551872 18 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7633\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sk445\n"
  I0928 13:40:08.551974 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 describe service agnhost-primary'
  I0928 13:40:08.605195 18 builder.go:146] stderr: ""
  I0928 13:40:08.605241 18 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7633\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.211\nIPs:                      10.152.183.211\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.12.71:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0928 13:40:08.609014 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 describe node ip-172-31-43-233'
  I0928 13:40:08.672974 18 builder.go:146] stderr: ""
  I0928 13:40:08.673048 18 builder.go:147] stdout: "Name:               ip-172-31-43-233\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-43-233\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 28 Sep 2024 12:01:06 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-43-233\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 28 Sep 2024 13:40:05 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 28 Sep 2024 12:11:06 +0000   Sat, 28 Sep 2024 12:11:06 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 28 Sep 2024 13:35:19 +0000   Sat, 28 Sep 2024 12:01:06 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 28 Sep 2024 13:35:19 +0000   Sat, 28 Sep 2024 12:01:06 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 28 Sep 2024 13:35:19 +0000   Sat, 28 Sep 2024 12:01:06 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 28 Sep 2024 13:35:19 +0000   Sat, 28 Sep 2024 12:03:06 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.43.233\n  Hostname:    ip-172-31-43-233\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967664Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865264Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec23b9692a95de363c59794d96bdd19e\n  System UUID:                     ec23b969-2a95-de36-3c59-794d96bdd19e\n  Boot ID:                         6a46df89-69de-49f5-9481-9126db3841ad\n  Kernel Version:                  6.8.0-1015-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.1\n  Kube-Proxy Version:              v1.31.1\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-hwx5d           0 (0%)        0 (0%)      0 (0%)           0 (0%)         91m\n  kube-system                      calico-node-w4t86                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         89m\n  services-426                     execpodfm2dg                                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  sonobuoy                         sonobuoy-e2e-job-3786396138ca4f60                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld    0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0928 13:40:08.673101 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7633 describe namespace kubectl-7633'
  I0928 13:40:08.724717 18 builder.go:146] stderr: ""
  I0928 13:40:08.724759 18 builder.go:147] stdout: "Name:         kubectl-7633\nLabels:       e2e-framework=kubectl\n              e2e-run=8b713d76-5417-4e7d-90d5-abbfd20b4f47\n              kubernetes.io/metadata.name=kubectl-7633\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0928 13:40:08.724865 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7633" for this suite. @ 09/28/24 13:40:08.729
â€¢ [1.495 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/28/24 13:40:08.736
  I0928 13:40:08.736088 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:40:08.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:08.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:08.757
  I0928 13:40:08.792589 18 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"55032212-367f-4ec7-88cf-392ca44e7c8f", Controller:(*bool)(0xc0049adbf6), BlockOwnerDeletion:(*bool)(0xc0049adbf7)}}
  I0928 13:40:08.800051 18 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d002a6b5-21b2-48c2-9f7b-86cc0a01857b", Controller:(*bool)(0xc00587ed2e), BlockOwnerDeletion:(*bool)(0xc00587ed2f)}}
  I0928 13:40:08.811240 18 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"06929821-b0af-48dd-9592-5a9811ebac2a", Controller:(*bool)(0xc0049ade3e), BlockOwnerDeletion:(*bool)(0xc0049ade3f)}}
  E0928 13:40:09.005702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:10.006642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:11.006714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:12.006930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:13.007876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:13.823031 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7651" for this suite. @ 09/28/24 13:40:13.826
â€¢ [5.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/28/24 13:40:13.831
  I0928 13:40:13.831846 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename disruption @ 09/28/24 13:40:13.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:13.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:13.853
  STEP: creating the pdb @ 09/28/24 13:40:13.856
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:40:13.862
  E0928 13:40:14.008912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:15.009859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/28/24 13:40:15.867
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:40:15.878
  STEP: patching the pdb @ 09/28/24 13:40:15.885
  STEP: Waiting for the pdb to be processed @ 09/28/24 13:40:15.894
  STEP: Waiting for the pdb to be deleted @ 09/28/24 13:40:15.909
  I0928 13:40:15.913085 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4874" for this suite. @ 09/28/24 13:40:15.917
â€¢ [2.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/28/24 13:40:15.925
  I0928 13:40:15.925019 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subpath @ 09/28/24 13:40:15.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:15.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:15.945
  STEP: Setting up data @ 09/28/24 13:40:15.948
  STEP: Creating pod pod-subpath-test-projected-6fnz @ 09/28/24 13:40:15.957
  STEP: Creating a pod to test atomic-volume-subpath @ 09/28/24 13:40:15.957
  E0928 13:40:16.010644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:17.010873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:18.011339      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:19.011736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:20.012430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:21.012667      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:22.013604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:23.013733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:24.013849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:25.014026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:26.014311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:27.014498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:28.015449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:29.015722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:30.016720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:31.017781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:32.018640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:33.018821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:34.019526      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:35.019792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:36.019757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:37.019923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:38.020063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:39.020341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:40.020549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:40:40.034
  I0928 13:40:40.037723 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-subpath-test-projected-6fnz container test-container-subpath-projected-6fnz: <nil>
  STEP: delete the pod @ 09/28/24 13:40:40.044
  STEP: Deleting pod pod-subpath-test-projected-6fnz @ 09/28/24 13:40:40.067
  I0928 13:40:40.067818 18 delete.go:62] Deleting pod "pod-subpath-test-projected-6fnz" in namespace "subpath-2705"
  I0928 13:40:40.071477 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2705" for this suite. @ 09/28/24 13:40:40.075
â€¢ [24.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/28/24 13:40:40.082
  I0928 13:40:40.082966 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename podtemplate @ 09/28/24 13:40:40.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:40.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:40.106
  STEP: Create set of pod templates @ 09/28/24 13:40:40.11
  I0928 13:40:40.114701 18 podtemplates.go:143] created test-podtemplate-1
  I0928 13:40:40.119484 18 podtemplates.go:143] created test-podtemplate-2
  I0928 13:40:40.124297 18 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/28/24 13:40:40.124
  STEP: delete collection of pod templates @ 09/28/24 13:40:40.127
  I0928 13:40:40.127013 18 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/28/24 13:40:40.145
  I0928 13:40:40.145625 18 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0928 13:40:40.148762 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-259" for this suite. @ 09/28/24 13:40:40.152
â€¢ [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/28/24 13:40:40.159
  I0928 13:40:40.159396 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:40:40.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:40.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:40.18
  I0928 13:40:40.183847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: creating the pod @ 09/28/24 13:40:40.184
  STEP: submitting the pod to kubernetes @ 09/28/24 13:40:40.184
  E0928 13:40:41.020695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:42.021123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:42.218620 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4492" for this suite. @ 09/28/24 13:40:42.224
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/28/24 13:40:42.234
  I0928 13:40:42.234198 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:40:42.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:42.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:42.251
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:40:42.254
  E0928 13:40:43.021308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:44.021463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:45.021626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:46.021782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:40:46.278
  I0928 13:40:46.282696 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod downwardapi-volume-141ffb20-a618-43fe-98bb-4ae729659c1b container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:40:46.299
  I0928 13:40:46.317084 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7875" for this suite. @ 09/28/24 13:40:46.321
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/28/24 13:40:46.329
  I0928 13:40:46.329235 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 13:40:46.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:46.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:46.35
  STEP: Creating ServiceAccount "e2e-sa-b2t2s"  @ 09/28/24 13:40:46.353
  I0928 13:40:46.357538 18 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-b2t2s"  @ 09/28/24 13:40:46.357
  I0928 13:40:46.365200 18 service_accounts.go:839] AutomountServiceAccountToken: true
  I0928 13:40:46.365275 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-822" for this suite. @ 09/28/24 13:40:46.368
â€¢ [0.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/28/24 13:40:46.376
  I0928 13:40:46.376522 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:40:46.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:46.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:46.397
  STEP: Creating configMap with name configmap-test-volume-6e6ff856-f2ac-4334-8c45-3d6c652c4c61 @ 09/28/24 13:40:46.4
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:40:46.407
  E0928 13:40:47.022778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:48.022932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:49.023844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:50.023952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:40:50.429
  I0928 13:40:50.432688 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-d8c9d5f5-6038-494f-875b-92a9e0aff8e1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:40:50.439
  I0928 13:40:50.456549 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6234" for this suite. @ 09/28/24 13:40:50.46
â€¢ [4.091 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/28/24 13:40:50.467
  I0928 13:40:50.467947 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:40:50.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:50.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:50.488
  STEP: Setting up server cert @ 09/28/24 13:40:50.518
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:40:50.601
  STEP: Deploying the webhook pod @ 09/28/24 13:40:50.61
  STEP: Wait for the deployment to be ready @ 09/28/24 13:40:50.624
  I0928 13:40:50.632737 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:40:51.024023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:52.024692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:40:52.645
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:40:52.656
  E0928 13:40:53.025706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:40:53.656522 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/28/24 13:40:53.664
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/28/24 13:40:53.678
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/28/24 13:40:53.685
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/28/24 13:40:53.695
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/28/24 13:40:53.706
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/28/24 13:40:53.713
  I0928 13:40:53.753862 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9064" for this suite. @ 09/28/24 13:40:53.758
  STEP: Destroying namespace "webhook-markers-2076" for this suite. @ 09/28/24 13:40:53.768
â€¢ [3.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/28/24 13:40:53.774
  I0928 13:40:53.774701 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 13:40:53.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:53.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:53.792
  STEP: creating a Namespace @ 09/28/24 13:40:53.795
  STEP: patching the Namespace @ 09/28/24 13:40:53.812
  STEP: get the Namespace and ensuring it has the label @ 09/28/24 13:40:53.819
  I0928 13:40:53.824345 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9125" for this suite. @ 09/28/24 13:40:53.828
  STEP: Destroying namespace "nspatchtest-80abed30-0fc2-44e1-a087-2d61e739e6bc-7106" for this suite. @ 09/28/24 13:40:53.832
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/28/24 13:40:53.838
  I0928 13:40:53.838255 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:40:53.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:53.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:53.857
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:40:53.86
  E0928 13:40:54.026465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:55.026699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:56.026717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:57.026826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:40:57.882
  I0928 13:40:57.887302 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-d58f4dd1-ed6c-4bc2-83a2-4d7e171e18fc container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:40:57.893
  I0928 13:40:57.910401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5961" for this suite. @ 09/28/24 13:40:57.913
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/28/24 13:40:57.921
  I0928 13:40:57.921207 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename taint-single-pod @ 09/28/24 13:40:57.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:40:57.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:40:57.938
  I0928 13:40:57.941734 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 13:40:58.027083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:40:59.027172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:00.027761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:01.027871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:02.028101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:03.028287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:04.029328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:05.029517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:06.030088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:07.030277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:08.031149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:09.031246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:10.031867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:11.032066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:12.032876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:13.033063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:14.033852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:15.034768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:16.035769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:17.036755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:18.037787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:19.037869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:20.038061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:21.038061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:22.038511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:23.038696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:24.039657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:25.039874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:26.040898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:27.041121      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:28.041192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:29.041531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:30.042053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:31.042284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:32.042803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:33.043002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:34.043546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:35.043762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:36.043990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:37.044759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:38.045239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:39.045763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:40.046402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:41.046759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:42.047739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:43.047917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:44.048819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:45.049024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:46.050050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:47.050188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:48.050700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:49.051025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:50.051877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:51.051972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:52.052997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:53.053243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:54.053383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:55.053592      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:56.053725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:41:57.053806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:41:57.941944 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 13:41:57.946320 18 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/28/24 13:41:57.946
  E0928 13:41:58.053886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:41:58.162836 18 taints.go:294] Pod is running on ip-172-31-6-28. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/28/24 13:41:58.162
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/28/24 13:41:58.173
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/28/24 13:41:58.176
  I0928 13:41:58.176529 18 taints.go:313] Pod wasn't evicted. Proceeding
  I0928 13:41:58.176544 18 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/28/24 13:41:58.185
  STEP: Waiting some time to make sure that toleration time passed. @ 09/28/24 13:41:58.189
  E0928 13:41:59.053992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:00.054099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:01.054210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:02.054826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:03.054895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:04.054989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:05.055070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:06.055154      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:07.055282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:08.055373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:09.056187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:10.056284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:11.056769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:12.056866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:13.057125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:14.057758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:15.058821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:16.059019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:17.059213      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:18.059893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:19.060079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:20.060758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:21.060990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:22.061232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:23.061925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:24.062755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:25.063049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:26.063239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:27.063451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:28.064087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:29.065163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:30.065259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:31.065996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:32.066092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:33.066487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:34.066688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:35.067781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:36.067963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:37.068765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:38.069173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:39.069427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:40.069629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:41.069828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:42.070752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:43.070831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:44.071007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:45.071761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:46.071932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:47.072124      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:48.072930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:49.073856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:50.073936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:51.074222      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:52.075152      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:53.075963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:54.076747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:55.077749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:56.078762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:57.078981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:58.079994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:42:59.080793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:00.081035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:01.081017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:02.081109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:03.081879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:04.082753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:05.082887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:06.083763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:07.084007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:08.084902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:09.085087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:10.085767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:11.086756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:12.087767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:13.087831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:43:13.190112 18 taints.go:329] Pod wasn't evicted. Test successful
  I0928 13:43:13.190269 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9660" for this suite. @ 09/28/24 13:43:13.195
â€¢ [135.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/28/24 13:43:13.202
  I0928 13:43:13.202187 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename events @ 09/28/24 13:43:13.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:13.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:13.222
  STEP: creating a test event @ 09/28/24 13:43:13.226
  STEP: listing events in all namespaces @ 09/28/24 13:43:13.232
  STEP: listing events in test namespace @ 09/28/24 13:43:13.235
  STEP: listing events with field selection filtering on source @ 09/28/24 13:43:13.238
  STEP: listing events with field selection filtering on reportingController @ 09/28/24 13:43:13.241
  STEP: getting the test event @ 09/28/24 13:43:13.245
  STEP: patching the test event @ 09/28/24 13:43:13.248
  STEP: getting the test event @ 09/28/24 13:43:13.255
  STEP: updating the test event @ 09/28/24 13:43:13.258
  STEP: getting the test event @ 09/28/24 13:43:13.264
  STEP: deleting the test event @ 09/28/24 13:43:13.267
  STEP: listing events in all namespaces @ 09/28/24 13:43:13.277
  STEP: listing events in test namespace @ 09/28/24 13:43:13.281
  I0928 13:43:13.286113 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8557" for this suite. @ 09/28/24 13:43:13.29
â€¢ [0.094 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/28/24 13:43:13.295
  I0928 13:43:13.295917 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 13:43:13.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:13.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:13.312
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/28/24 13:43:13.315
  I0928 13:43:13.322028 18 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3566  adf2907a-a2b2-4dcb-a8bb-baf3484a6793 39352 0 2024-09-28 13:43:13 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-28 13:43:13 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vdd2s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vdd2s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0928 13:43:14.088059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:15.088779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/28/24 13:43:15.33
  I0928 13:43:15.330455 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3566 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:43:15.330479 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:43:15.330926 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:43:15.330961 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3566/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/28/24 13:43:15.378
  I0928 13:43:15.378465 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3566 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:43:15.378489 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:43:15.378910 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:43:15.378956 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3566/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0928 13:43:15.420945 18 dns.go:423] Deleting pod test-dns-nameservers...
  I0928 13:43:15.433358 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3566" for this suite. @ 09/28/24 13:43:15.437
â€¢ [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/28/24 13:43:15.445
  I0928 13:43:15.445499 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:43:15.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:15.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:15.579
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/28/24 13:43:15.583
  E0928 13:43:16.089590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:17.089758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:18.090551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:19.090785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:43:19.606
  I0928 13:43:19.609910 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-1321806b-e021-4e48-b10a-09fcce02415c container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:43:19.619
  I0928 13:43:19.635154 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1429" for this suite. @ 09/28/24 13:43:19.639
â€¢ [4.204 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/28/24 13:43:19.649
  I0928 13:43:19.649449 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 13:43:19.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:19.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:19.671
  STEP: Creating a job @ 09/28/24 13:43:19.674
  STEP: Ensuring active pods == parallelism @ 09/28/24 13:43:19.679
  E0928 13:43:20.091379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:21.091615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/28/24 13:43:21.684
  STEP: deleting Job.batch foo in namespace job-6907, will wait for the garbage collector to delete the pods @ 09/28/24 13:43:21.684
  I0928 13:43:21.746945 18 resources.go:139] Deleting Job.batch foo took: 7.633446ms
  I0928 13:43:21.847257 18 resources.go:163] Terminating Job.batch foo pods took: 100.307206ms
  E0928 13:43:22.092584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/28/24 13:43:22.647
  I0928 13:43:22.656199 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6907" for this suite. @ 09/28/24 13:43:22.66
â€¢ [3.020 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/28/24 13:43:22.669
  I0928 13:43:22.669302 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/28/24 13:43:22.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:22.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:22.691
  STEP: mirroring a new custom Endpoint @ 09/28/24 13:43:22.704
  I0928 13:43:22.713697 18 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0928 13:43:23.093248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:24.093459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/28/24 13:43:24.718
  I0928 13:43:24.725080 18 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0928 13:43:25.093724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:26.093819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 09/28/24 13:43:26.728
  I0928 13:43:26.737210 18 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0928 13:43:27.094711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:28.094896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:43:28.741855 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5234" for this suite. @ 09/28/24 13:43:28.745
â€¢ [6.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:43:28.752
  I0928 13:43:28.752843 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename cronjob @ 09/28/24 13:43:28.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:43:28.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:43:28.77
  STEP: Creating a ForbidConcurrent cronjob @ 09/28/24 13:43:28.773
  STEP: Ensuring a job is scheduled @ 09/28/24 13:43:28.778
  E0928 13:43:29.094980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:30.095075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:31.095162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:32.095236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:33.095776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:34.095867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:35.095992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:36.096872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:37.096951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:38.097857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:39.098648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:40.098881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:41.099070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:42.099247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:43.100268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:44.100368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:45.100516      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:46.101529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:47.101717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:48.101928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:49.102761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:50.103056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:51.103519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:52.104523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:53.105020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:54.105092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:55.105208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:56.105460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:57.105786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:58.105999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:43:59.106436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:00.106752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/28/24 13:44:00.784
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/28/24 13:44:00.787
  STEP: Ensuring no more jobs are scheduled @ 09/28/24 13:44:00.79
  STEP: Removing cronjob @ 09/28/24 13:44:00.794
  I0928 13:44:00.800330 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9344" for this suite. @ 09/28/24 13:44:00.804
â€¢ [32.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/28/24 13:44:00.809
  I0928 13:44:00.809319 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:44:00.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:00.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:00.831
  STEP: Creating secret with name secret-test-75ceb886-925c-4f5f-b4bf-499a1fb7ba94 @ 09/28/24 13:44:00.856
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:44:00.862
  E0928 13:44:01.106992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:02.107777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:44:02.879
  I0928 13:44:02.883580 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-secrets-2d454976-0324-4d37-a966-c1771ac613ea container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:44:02.898
  I0928 13:44:02.915025 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8740" for this suite. @ 09/28/24 13:44:02.918
  STEP: Destroying namespace "secret-namespace-917" for this suite. @ 09/28/24 13:44:02.924
â€¢ [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/28/24 13:44:02.932
  I0928 13:44:02.932888 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 13:44:02.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:02.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:02.952
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/28/24 13:44:02.972
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 13:44:02.977
  I0928 13:44:02.983614 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:02.983639 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:02.986254 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:44:02.986269 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:44:03.108768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:03.983823 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:03.983863 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:03.987733 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0928 13:44:03.987752 18 fixtures.go:130] Node ip-172-31-68-80 is running 0 daemon pod, expected 1
  E0928 13:44:04.108844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:04.984273 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:04.984316 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:04.988340 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:44:04.988361 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/28/24 13:44:04.991
  I0928 13:44:05.005332 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:05.005359 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:44:05.010807 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:44:05.010822 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/28/24 13:44:05.01
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 13:44:05.02
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8608, will wait for the garbage collector to delete the pods @ 09/28/24 13:44:05.02
  I0928 13:44:05.083540 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.555713ms
  E0928 13:44:05.109600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:05.183872 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.317397ms
  E0928 13:44:06.110451      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:06.789192 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:44:06.789225 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 13:44:06.793067 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39784"},"items":null}

  I0928 13:44:06.796465 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39784"},"items":null}

  I0928 13:44:06.811037 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8608" for this suite. @ 09/28/24 13:44:06.814
â€¢ [3.888 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/28/24 13:44:06.82
  I0928 13:44:06.820757 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 13:44:06.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:06.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:06.847
  I0928 13:44:06.850293 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:44:07.110909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:08.110994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/28/24 13:44:08.279
  I0928 13:44:08.279509 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 create -f -'
  I0928 13:44:08.346218 18 builder.go:146] stderr: ""
  I0928 13:44:08.346262 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9136-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0928 13:44:08.346305 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 delete e2e-test-crd-publish-openapi-9136-crds test-foo'
  I0928 13:44:08.395481 18 builder.go:146] stderr: ""
  I0928 13:44:08.395525 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9136-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0928 13:44:08.395585 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 apply -f -'
  I0928 13:44:08.449436 18 builder.go:146] stderr: ""
  I0928 13:44:08.449482 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9136-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0928 13:44:08.449541 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 delete e2e-test-crd-publish-openapi-9136-crds test-foo'
  I0928 13:44:08.497882 18 builder.go:146] stderr: ""
  I0928 13:44:08.497918 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9136-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/28/24 13:44:08.497
  I0928 13:44:08.498013 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 create -f -'
  I0928 13:44:08.541435 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/28/24 13:44:08.541
  I0928 13:44:08.541549 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 create -f -'
  I0928 13:44:08.582907 18 builder.go:135] rc: 1
  I0928 13:44:08.583028 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 apply -f -'
  I0928 13:44:08.633263 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/28/24 13:44:08.633
  I0928 13:44:08.633372 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 create -f -'
  I0928 13:44:08.677946 18 builder.go:135] rc: 1
  I0928 13:44:08.678035 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 --namespace=crd-publish-openapi-9184 apply -f -'
  I0928 13:44:08.726815 18 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/28/24 13:44:08.726
  I0928 13:44:08.726923 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 explain e2e-test-crd-publish-openapi-9136-crds'
  I0928 13:44:08.766922 18 builder.go:146] stderr: ""
  I0928 13:44:08.766983 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9136-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/28/24 13:44:08.767
  I0928 13:44:08.767279 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 explain e2e-test-crd-publish-openapi-9136-crds.metadata'
  I0928 13:44:08.809259 18 builder.go:146] stderr: ""
  I0928 13:44:08.809368 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9136-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0928 13:44:08.809632 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 explain e2e-test-crd-publish-openapi-9136-crds.spec'
  I0928 13:44:08.853123 18 builder.go:146] stderr: ""
  I0928 13:44:08.853173 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9136-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0928 13:44:08.853313 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 explain e2e-test-crd-publish-openapi-9136-crds.spec.bars'
  I0928 13:44:08.894758 18 builder.go:146] stderr: ""
  I0928 13:44:08.894809 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9136-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/28/24 13:44:08.894
  I0928 13:44:08.895072 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=crd-publish-openapi-9184 explain e2e-test-crd-publish-openapi-9136-crds.spec.bars2'
  I0928 13:44:08.936256 18 builder.go:135] rc: 1
  E0928 13:44:09.111623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:10.111647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:10.157144 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9184" for this suite. @ 09/28/24 13:44:10.165
â€¢ [3.353 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/28/24 13:44:10.174
  I0928 13:44:10.174339 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:44:10.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:10.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:10.193
  STEP: creating pod @ 09/28/24 13:44:10.197
  E0928 13:44:11.111808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:12.112211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:12.221826 18 pods.go:83] Pod pod-hostip-19d1f627-7378-4fc7-a84d-947931dd12dc has hostIP: 172.31.6.28
  I0928 13:44:12.221936 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4592" for this suite. @ 09/28/24 13:44:12.226
â€¢ [2.058 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/28/24 13:44:12.232
  I0928 13:44:12.232513 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:44:12.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:12.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:12.251
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/28/24 13:44:12.254
  I0928 13:44:12.254959 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7180 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0928 13:44:12.302406 18 builder.go:146] stderr: ""
  I0928 13:44:12.302449 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/28/24 13:44:12.302
  I0928 13:44:12.306236 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-7180 delete pods e2e-test-httpd-pod'
  E0928 13:44:13.113005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:44:13.706597 18 builder.go:146] stderr: ""
  I0928 13:44:13.706635 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0928 13:44:13.706802 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7180" for this suite. @ 09/28/24 13:44:13.71
â€¢ [1.484 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:44:13.716
  I0928 13:44:13.716894 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:44:13.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:44:13.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:44:13.737
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-553cb7f2-b9d4-4be9-8388-c7ec924961b0 @ 09/28/24 13:44:13.745
  STEP: Creating the pod @ 09/28/24 13:44:13.751
  E0928 13:44:14.113780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:15.113975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-553cb7f2-b9d4-4be9-8388-c7ec924961b0 @ 09/28/24 13:44:15.78
  STEP: waiting to observe update in volume @ 09/28/24 13:44:15.786
  E0928 13:44:16.114679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:17.114788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:18.114826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:19.114916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:20.115491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:21.115780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:22.116706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:23.116984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:24.117777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:25.117981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:26.118486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:27.118720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:28.118922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:29.119069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:30.119605      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:31.119723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:32.120774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:33.120946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:34.121753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:35.121968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:36.122104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:37.122312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:38.122913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:39.123553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:40.123817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:41.124138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:42.124594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:43.124923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:44.125797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:45.125870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:46.126438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:47.126597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:48.126858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:49.127779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:50.128086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:51.128180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:52.128375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:53.128897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:54.129119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:55.129414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:56.129809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:57.129964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:58.130237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:44:59.130431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:00.130648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:01.130894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:02.131326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:03.131981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:04.133042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:05.133235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:06.133384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:07.133519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:08.134438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:09.134532      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:10.135117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:11.135210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:12.135521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:13.135965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:14.136202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:15.136911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:16.137493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:17.137818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:18.137913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:19.138119      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:20.138636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:21.138721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:22.138994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:23.139946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:24.140848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:25.141073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:26.141322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:27.141580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:28.142080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:29.142268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:30.142932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:31.143050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:32.143598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:33.144076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:34.144981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:35.145173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:36.145703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:37.146807      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:38.147132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:39.147283      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:40.147501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:41.147786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:42.147940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:43.148083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:44.148284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:45.148406      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:46.148633      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:47.148668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:48.149025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:45:48.205633 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9166" for this suite. @ 09/28/24 13:45:48.209
â€¢ [94.500 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/28/24 13:45:48.217
  I0928 13:45:48.217082 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 13:45:48.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:45:48.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:45:48.236
  STEP: Creating configMap with name projected-configmap-test-volume-map-093ff462-e15d-47a9-8a68-7683eceff277 @ 09/28/24 13:45:48.239
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:45:48.244
  E0928 13:45:49.149262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:50.149500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:51.149719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:52.149849      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:45:52.268
  I0928 13:45:52.272108 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-projected-configmaps-23389b0e-f111-4ffd-a0cd-34d90a2df2b5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:45:52.287
  I0928 13:45:52.303940 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4926" for this suite. @ 09/28/24 13:45:52.307
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/28/24 13:45:52.316
  I0928 13:45:52.316518 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename chunking @ 09/28/24 13:45:52.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:45:52.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:45:52.341
  STEP: creating a large number of resources @ 09/28/24 13:45:52.349
  E0928 13:45:53.149866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:54.150126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:55.150862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:56.151263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:57.152320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:58.152483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:45:59.152907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:00.153767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:01.154307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:02.154924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:03.155314      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:04.156269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:05.156927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:06.157220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:07.158135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:08.158512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:09.159335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/28/24 13:46:10.023
  I0928 13:46:10.073375 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0928 13:46:10.123682 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0928 13:46:10.159769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:10.172622 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0928 13:46:10.223214 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0928 13:46:10.271933 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0928 13:46:10.322190 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0928 13:46:10.372014 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0928 13:46:10.422126 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0928 13:46:10.472050 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0928 13:46:10.522972 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0928 13:46:10.572925 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0928 13:46:10.622717 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0928 13:46:10.672746 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0928 13:46:10.724213 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0928 13:46:10.771862 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0928 13:46:10.823495 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0928 13:46:10.872401 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0928 13:46:10.922400 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0928 13:46:10.972481 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0928 13:46:11.022440 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0928 13:46:11.072045 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0928 13:46:11.122725 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0928 13:46:11.159829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:11.172534 18 chunking.go:98] Retrieved 17/17 results with rv 40631 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0928 13:46:11.221965 18 chunking.go:98] Retrieved 9/17 results with rv 40631 and continue 
  I0928 13:46:11.272938 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0928 13:46:11.323170 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0928 13:46:11.372068 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0928 13:46:11.422259 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0928 13:46:11.472163 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0928 13:46:11.521895 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0928 13:46:11.573463 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0928 13:46:11.622415 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0928 13:46:11.672246 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0928 13:46:11.722963 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0928 13:46:11.771879 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0928 13:46:11.822599 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0928 13:46:11.872898 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0928 13:46:11.922970 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0928 13:46:11.972478 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0928 13:46:12.022715 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0928 13:46:12.072634 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0928 13:46:12.123084 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0928 13:46:12.160324      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:12.172521 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0928 13:46:12.222427 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0928 13:46:12.271951 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0928 13:46:12.323299 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0928 13:46:12.372422 18 chunking.go:98] Retrieved 17/17 results with rv 40632 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0928 13:46:12.422090 18 chunking.go:98] Retrieved 9/17 results with rv 40632 and continue 
  I0928 13:46:12.473290 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0928 13:46:12.523255 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0928 13:46:12.571994 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0928 13:46:12.621952 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0928 13:46:12.671835 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0928 13:46:12.722554 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0928 13:46:12.772617 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0928 13:46:12.823485 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0928 13:46:12.872080 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0928 13:46:12.922056 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0928 13:46:12.971748 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0928 13:46:13.022434 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0928 13:46:13.072194 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0928 13:46:13.122267 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0928 13:46:13.160377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:13.172246 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0928 13:46:13.222725 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0928 13:46:13.272486 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0928 13:46:13.322273 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0928 13:46:13.373109 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0928 13:46:13.421434 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0928 13:46:13.472446 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0928 13:46:13.522528 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0928 13:46:13.572718 18 chunking.go:98] Retrieved 17/17 results with rv 40635 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0928 13:46:13.621813 18 chunking.go:98] Retrieved 9/17 results with rv 40635 and continue 
  STEP: retrieving those results all at once @ 09/28/24 13:46:13.621
  I0928 13:46:13.678933 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4776" for this suite. @ 09/28/24 13:46:13.722
â€¢ [21.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/28/24 13:46:13.775
  I0928 13:46:13.775860 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:46:13.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:13.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:13.799
  STEP: Creating a pod to test substitution in container's args @ 09/28/24 13:46:13.802
  E0928 13:46:14.160486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:15.160614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:16.160726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:17.160942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:46:17.823
  I0928 13:46:17.826938 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod var-expansion-ffa8353f-ffb4-4350-9e7a-7ee9b1769505 container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 13:46:17.833
  I0928 13:46:17.848327 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9587" for this suite. @ 09/28/24 13:46:17.852
â€¢ [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/28/24 13:46:17.858
  I0928 13:46:17.858401 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 13:46:17.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:17.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:17.881
  I0928 13:46:17.884047 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 13:46:18.161146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:19.161242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:20.161600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0928 13:46:20.420058      18 warnings.go:70] unknown field "alpha"
  W0928 13:46:20.420078      18 warnings.go:70] unknown field "beta"
  W0928 13:46:20.420081      18 warnings.go:70] unknown field "delta"
  W0928 13:46:20.420083      18 warnings.go:70] unknown field "epsilon"
  W0928 13:46:20.420086      18 warnings.go:70] unknown field "gamma"
  I0928 13:46:21.006269 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4516" for this suite. @ 09/28/24 13:46:21.009
â€¢ [3.157 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/28/24 13:46:21.015
  I0928 13:46:21.015781 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:46:21.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:21.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:21.04
  STEP: creating the pod @ 09/28/24 13:46:21.043
  I0928 13:46:21.043507 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 create -f -'
  I0928 13:46:21.126015 18 builder.go:146] stderr: ""
  I0928 13:46:21.126050 18 builder.go:147] stdout: "pod/pause created\n"
  E0928 13:46:21.161623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:22.161779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/28/24 13:46:23.134
  I0928 13:46:23.135068 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 label pods pause testing-label=testing-label-value'
  E0928 13:46:23.162942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:23.183351 18 builder.go:146] stderr: ""
  I0928 13:46:23.183381 18 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/28/24 13:46:23.183
  I0928 13:46:23.183445 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 get pod pause -L testing-label'
  I0928 13:46:23.225608 18 builder.go:146] stderr: ""
  I0928 13:46:23.225654 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/28/24 13:46:23.225
  I0928 13:46:23.225730 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 label pods pause testing-label-'
  I0928 13:46:23.275207 18 builder.go:146] stderr: ""
  I0928 13:46:23.275244 18 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/28/24 13:46:23.275
  I0928 13:46:23.275318 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 get pod pause -L testing-label'
  I0928 13:46:23.317198 18 builder.go:146] stderr: ""
  I0928 13:46:23.317234 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/28/24 13:46:23.317
  I0928 13:46:23.317354 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 delete --grace-period=0 --force -f -'
  I0928 13:46:23.373126 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 13:46:23.373166 18 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0928 13:46:23.373213 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 get rc,svc -l name=pause --no-headers'
  I0928 13:46:23.421267 18 builder.go:146] stderr: "No resources found in kubectl-4344 namespace.\n"
  I0928 13:46:23.421309 18 builder.go:147] stdout: ""
  I0928 13:46:23.421353 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4344 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0928 13:46:23.463409 18 builder.go:146] stderr: ""
  I0928 13:46:23.463449 18 builder.go:147] stdout: ""
  I0928 13:46:23.463675 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4344" for this suite. @ 09/28/24 13:46:23.468
â€¢ [2.460 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/28/24 13:46:23.475
  I0928 13:46:23.475445 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename limitrange @ 09/28/24 13:46:23.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:23.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:23.5
  STEP: Creating LimitRange "e2e-limitrange-cnk2h" in namespace "limitrange-8415" @ 09/28/24 13:46:23.504
  STEP: Creating another limitRange in another namespace @ 09/28/24 13:46:23.509
  I0928 13:46:23.525065 18 limit_range.go:299] Namespace "e2e-limitrange-cnk2h-6505" created
  I0928 13:46:23.525095 18 limit_range.go:300] Creating LimitRange "e2e-limitrange-cnk2h" in namespace "e2e-limitrange-cnk2h-6505"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-cnk2h" @ 09/28/24 13:46:23.531
  I0928 13:46:23.534252 18 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-cnk2h" in "limitrange-8415" namespace @ 09/28/24 13:46:23.534
  I0928 13:46:23.539757 18 limit_range.go:335] LimitRange "e2e-limitrange-cnk2h" has been patched
  STEP: Delete LimitRange "e2e-limitrange-cnk2h" by Collection with labelSelector: "e2e-limitrange-cnk2h=patched" @ 09/28/24 13:46:23.539
  STEP: Confirm that the limitRange "e2e-limitrange-cnk2h" has been deleted @ 09/28/24 13:46:23.547
  I0928 13:46:23.547800 18 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0928 13:46:23.551081 18 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-cnk2h=patched"
  I0928 13:46:23.551106 18 limit_range.go:344] LimitRange "e2e-limitrange-cnk2h" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-cnk2h" @ 09/28/24 13:46:23.551
  I0928 13:46:23.553825 18 limit_range.go:350] Found 1 limitRange
  I0928 13:46:23.553953 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8415" for this suite. @ 09/28/24 13:46:23.557
  STEP: Destroying namespace "e2e-limitrange-cnk2h-6505" for this suite. @ 09/28/24 13:46:23.564
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/28/24 13:46:23.569
  I0928 13:46:23.569985 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:46:23.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:23.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:23.593
  STEP: Creating a pod to test downward api env vars @ 09/28/24 13:46:23.596
  E0928 13:46:24.163138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:25.163318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:26.163459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:27.163603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:46:27.62
  I0928 13:46:27.623974 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downward-api-81d6148d-86f7-45d9-9282-0385726239c4 container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 13:46:27.63
  I0928 13:46:27.646499 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6700" for this suite. @ 09/28/24 13:46:27.65
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/28/24 13:46:27.658
  I0928 13:46:27.658851 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subpath @ 09/28/24 13:46:27.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:27.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:27.679
  STEP: Setting up data @ 09/28/24 13:46:27.682
  STEP: Creating pod pod-subpath-test-configmap-glc2 @ 09/28/24 13:46:27.691
  STEP: Creating a pod to test atomic-volume-subpath @ 09/28/24 13:46:27.691
  E0928 13:46:28.164572      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:29.164778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:30.164877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:31.164968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:32.165305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:33.166268      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:34.166720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:35.167788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:36.168670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:37.168880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:38.168978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:39.169083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:40.169197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:41.169395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:42.169636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:43.169939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:44.170180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:45.170317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:46.170381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:47.170622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:48.170700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:49.170822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:50.171430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:51.171586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:46:51.768
  I0928 13:46:51.772748 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-subpath-test-configmap-glc2 container test-container-subpath-configmap-glc2: <nil>
  STEP: delete the pod @ 09/28/24 13:46:51.779
  STEP: Deleting pod pod-subpath-test-configmap-glc2 @ 09/28/24 13:46:51.795
  I0928 13:46:51.795688 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-glc2" in namespace "subpath-2706"
  I0928 13:46:51.799649 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2706" for this suite. @ 09/28/24 13:46:51.803
â€¢ [24.152 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/28/24 13:46:51.81
  I0928 13:46:51.810992 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 13:46:51.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:51.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:51.832
  I0928 13:46:51.851074 18 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0928 13:46:51.851098 18 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0928 13:46:51.857974 18 service_accounts.go:253] created pod pod-service-account-mountsa
  I0928 13:46:51.857994 18 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0928 13:46:51.867173 18 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0928 13:46:51.867199 18 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0928 13:46:51.874147 18 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0928 13:46:51.874172 18 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0928 13:46:51.879276 18 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0928 13:46:51.879382 18 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0928 13:46:51.886950 18 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0928 13:46:51.886971 18 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0928 13:46:51.891685 18 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0928 13:46:51.891704 18 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0928 13:46:51.899716 18 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0928 13:46:51.899797 18 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0928 13:46:51.906447 18 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0928 13:46:51.906538 18 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0928 13:46:51.906752 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1145" for this suite. @ 09/28/24 13:46:51.915
â€¢ [0.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/28/24 13:46:51.927
  I0928 13:46:51.927616 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context @ 09/28/24 13:46:51.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:51.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:51.953
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/28/24 13:46:51.956
  E0928 13:46:52.173164      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:53.173999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:54.175023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:55.175216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:46:55.981
  I0928 13:46:55.985299 18 output.go:196] Trying to get logs from node ip-172-31-68-80 pod security-context-8f8aa64e-740d-4c1e-a647-46e44e38760b container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:46:56.001
  I0928 13:46:56.020270 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5483" for this suite. @ 09/28/24 13:46:56.023
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/28/24 13:46:56.03
  I0928 13:46:56.030591 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 13:46:56.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:56.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:56.051
  STEP: creating a collection of services @ 09/28/24 13:46:56.054
  I0928 13:46:56.054435 18 service.go:3655] Creating e2e-svc-a-88tgb
  I0928 13:46:56.063078 18 service.go:3655] Creating e2e-svc-b-qd4t5
  I0928 13:46:56.073167 18 service.go:3655] Creating e2e-svc-c-tm9qj
  STEP: deleting service collection @ 09/28/24 13:46:56.086
  I0928 13:46:56.111772 18 service.go:3690] Collection of services has been deleted
  I0928 13:46:56.111979 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7488" for this suite. @ 09/28/24 13:46:56.118
â€¢ [0.095 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/28/24 13:46:56.125
  I0928 13:46:56.125452 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:46:56.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:46:56.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:46:56.146
  STEP: Creating the pod @ 09/28/24 13:46:56.149
  E0928 13:46:56.175921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:57.180500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:46:58.176713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:46:58.690481 18 pod_client.go:173] Successfully updated pod "annotationupdate603cf48d-6d4e-434a-824c-171d8d13aaf3"
  E0928 13:46:59.176888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:00.176992      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:47:00.704927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5120" for this suite. @ 09/28/24 13:47:00.709
â€¢ [4.591 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/28/24 13:47:00.716
  I0928 13:47:00.716626 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:47:00.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:00.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:00.735
  STEP: Creating a pod to test downward API volume plugin @ 09/28/24 13:47:00.74
  E0928 13:47:01.177775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:02.178784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:03.179412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:04.179646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:47:04.766
  I0928 13:47:04.769977 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downwardapi-volume-c0c64e65-b8bb-4172-83f7-9e72d964bded container client-container: <nil>
  STEP: delete the pod @ 09/28/24 13:47:04.776
  I0928 13:47:04.793598 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7445" for this suite. @ 09/28/24 13:47:04.797
â€¢ [4.089 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/28/24 13:47:04.805
  I0928 13:47:04.805210 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 13:47:04.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:04.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:04.827
  STEP: Creating a job @ 09/28/24 13:47:04.831
  STEP: Ensuring active pods == parallelism @ 09/28/24 13:47:04.836
  E0928 13:47:05.180419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:06.180530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/28/24 13:47:06.841
  E0928 13:47:07.181383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:47:07.358662 18 pod_client.go:173] Successfully updated pod "adopt-release-kpw87"
  STEP: Checking that the Job readopts the Pod @ 09/28/24 13:47:07.358
  E0928 13:47:08.182007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:09.182136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/28/24 13:47:09.368
  I0928 13:47:09.880974 18 pod_client.go:173] Successfully updated pod "adopt-release-kpw87"
  STEP: Checking that the Job releases the Pod @ 09/28/24 13:47:09.881
  E0928 13:47:10.182791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:11.183068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:47:11.889717 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4762" for this suite. @ 09/28/24 13:47:11.893
â€¢ [7.095 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/28/24 13:47:11.9
  I0928 13:47:11.900237 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:47:11.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:11.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:11.921
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/28/24 13:47:11.925
  E0928 13:47:12.183117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:13.184170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:14.185190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:15.185296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:47:15.949
  I0928 13:47:15.953991 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-1f54dbe5-7231-43ce-b2a1-2e8934a46d78 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:47:15.96
  I0928 13:47:15.973854 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-986" for this suite. @ 09/28/24 13:47:15.977
â€¢ [4.087 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/28/24 13:47:15.987
  I0928 13:47:15.987609 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context-test @ 09/28/24 13:47:15.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:16.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:16.008
  E0928 13:47:16.185716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:17.185778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:18.186650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:19.186744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:47:20.041855 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6726" for this suite. @ 09/28/24 13:47:20.046
â€¢ [4.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/28/24 13:47:20.052
  I0928 13:47:20.052342 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:47:20.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:20.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:20.073
  STEP: starting the proxy server @ 09/28/24 13:47:20.076
  I0928 13:47:20.076595 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-1335 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/28/24 13:47:20.107
  I0928 13:47:20.114337 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0928 13:47:20.115601 18 kubectl.go:2229] kubectl proxy stderr: W0928 13:47:20.107513     781 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0928 13:47:20.115599 18 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:41345

  STEP: Destroying namespace "kubectl-1335" for this suite. @ 09/28/24 13:47:20.118
â€¢ [0.072 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/28/24 13:47:20.124
  I0928 13:47:20.124854 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename runtimeclass @ 09/28/24 13:47:20.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:20.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:20.145
  I0928 13:47:20.156359 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3082" for this suite. @ 09/28/24 13:47:20.159
â€¢ [0.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/28/24 13:47:20.167
  I0928 13:47:20.167596 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 13:47:20.168
  E0928 13:47:20.187176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:20.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:20.19
  STEP: Creating a test headless service @ 09/28/24 13:47:20.193
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8706 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8706;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8706 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8706;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8706.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8706.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8706.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8706.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8706.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8706.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8706.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8706.svc;check="$$(dig +notcp +noall +answer +search 218.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.218_udp@PTR;check="$$(dig +tcp +noall +answer +search 218.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.218_tcp@PTR;sleep 1; done
   @ 09/28/24 13:47:20.21
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8706 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8706;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8706 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8706;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8706.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8706.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8706.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8706.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8706.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8706.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8706.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8706.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8706.svc;check="$$(dig +notcp +noall +answer +search 218.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.218_udp@PTR;check="$$(dig +tcp +noall +answer +search 218.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.218_tcp@PTR;sleep 1; done
   @ 09/28/24 13:47:20.21
  STEP: creating a pod to probe DNS @ 09/28/24 13:47:20.21
  STEP: submitting the pod to kubernetes @ 09/28/24 13:47:20.21
  E0928 13:47:21.187348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:22.187468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 13:47:22.234
  STEP: looking for the results for each expected name from probers @ 09/28/24 13:47:22.237
  I0928 13:47:22.241787 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.245157 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.248457 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8706 from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.252118 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8706 from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.256970 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.260322 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.263266 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.267091 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.283443 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.286981 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.293062 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8706 from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.296254 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8706 from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.299696 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.304140 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.307440 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.311756 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8706.svc from pod dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17: the server could not find the requested resource (get pods dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17)
  I0928 13:47:22.327128 18 dns_common.go:489] Lookups using dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8706 wheezy_tcp@dns-test-service.dns-8706 wheezy_udp@dns-test-service.dns-8706.svc wheezy_tcp@dns-test-service.dns-8706.svc wheezy_udp@_http._tcp.dns-test-service.dns-8706.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8706.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8706 jessie_tcp@dns-test-service.dns-8706 jessie_udp@dns-test-service.dns-8706.svc jessie_tcp@dns-test-service.dns-8706.svc jessie_udp@_http._tcp.dns-test-service.dns-8706.svc jessie_tcp@_http._tcp.dns-test-service.dns-8706.svc]

  I0928 13:47:22.332975 18 dns_common.go:495] Pod client logs for webserver: 
  I0928 13:47:22.338003 18 dns_common.go:495] Pod client logs for querier: 
  I0928 13:47:22.343098 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0928 13:47:23.187951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:24.188171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:25.188381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:26.188608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:27.188856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:47:27.332997 18 dns_common.go:527] DNS probes using dns-8706/dns-test-bb93cd38-8e09-41de-95d3-57e0f1c1dd17 succeeded

  STEP: deleting the pod @ 09/28/24 13:47:27.333
  STEP: deleting the test service @ 09/28/24 13:47:27.349
  STEP: deleting the test headless service @ 09/28/24 13:47:27.365
  I0928 13:47:27.375478 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8706" for this suite. @ 09/28/24 13:47:27.379
â€¢ [7.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/28/24 13:47:27.386
  I0928 13:47:27.386544 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename ingressclass @ 09/28/24 13:47:27.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:27.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:27.405
  STEP: getting /apis @ 09/28/24 13:47:27.408
  STEP: getting /apis/networking.k8s.io @ 09/28/24 13:47:27.412
  STEP: getting /apis/networking.k8s.iov1 @ 09/28/24 13:47:27.413
  STEP: creating @ 09/28/24 13:47:27.415
  STEP: getting @ 09/28/24 13:47:27.428
  STEP: listing @ 09/28/24 13:47:27.431
  STEP: watching @ 09/28/24 13:47:27.434
  I0928 13:47:27.434318 18 ingressclass.go:348] starting watch
  STEP: patching @ 09/28/24 13:47:27.435
  STEP: updating @ 09/28/24 13:47:27.444
  I0928 13:47:27.451651 18 ingressclass.go:364] waiting for watch events with expected annotations
  I0928 13:47:27.451683 18 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/28/24 13:47:27.451
  STEP: deleting a collection @ 09/28/24 13:47:27.469
  I0928 13:47:27.487012 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4090" for this suite. @ 09/28/24 13:47:27.495
â€¢ [0.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/28/24 13:47:27.502
  I0928 13:47:27.502818 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svcaccounts @ 09/28/24 13:47:27.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:47:27.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:47:27.522
  I0928 13:47:27.541718 18 service_accounts.go:618] created pod
  E0928 13:47:28.189675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:29.189762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:30.189862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:31.189964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:47:31.559
  E0928 13:47:32.190858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:33.190919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:34.191110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:35.191401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:36.191548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:37.191753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:38.192232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:39.192446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:40.192577      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:41.192767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:42.192883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:43.193936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:44.194072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:45.194161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:46.194259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:47.194434      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:48.194996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:49.195183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:50.195340      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:51.195431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:52.195504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:53.196080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:54.196184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:55.196770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:56.197759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:57.198762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:58.199251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:47:59.199524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:00.199782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:01.200237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:01.559776 18 service_accounts.go:624] polling logs
  I0928 13:48:01.567645 18 service_accounts.go:634] Pod logs: 
  I0928 13:47:28.104985       1 log.go:245] OK: Got token
  I0928 13:47:28.105030       1 log.go:245] validating with in-cluster discovery
  I0928 13:47:28.105232       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0928 13:47:28.105365       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7230:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013710), NotBefore:(*jwt.NumericDate)(0xc000013800), IssuedAt:(*jwt.NumericDate)(0xc000013720), ID:"53205b00-ecf9-4c36-85b4-ffbdd7c423c1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7230", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b24e239c-fca0-46c2-b6fc-42892a25a5db"}}}
  I0928 13:47:28.112172       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0928 13:47:28.115835       1 log.go:245] OK: Validated signature on JWT
  I0928 13:47:28.115904       1 log.go:245] OK: Got valid claims from token!
  I0928 13:47:28.115922       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7230:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000127368), NotBefore:(*jwt.NumericDate)(0xc000127390), IssuedAt:(*jwt.NumericDate)(0xc000127370), ID:"53205b00-ecf9-4c36-85b4-ffbdd7c423c1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7230", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b24e239c-fca0-46c2-b6fc-42892a25a5db"}}}

  I0928 13:48:01.567682 18 service_accounts.go:638] completed pod
  I0928 13:48:01.574215 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7230" for this suite. @ 09/28/24 13:48:01.577
â€¢ [34.083 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/28/24 13:48:01.585
  I0928 13:48:01.585482 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-runtime @ 09/28/24 13:48:01.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:48:01.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:48:01.608
  STEP: create the container @ 09/28/24 13:48:01.611
  W0928 13:48:01.619924      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/28/24 13:48:01.62
  E0928 13:48:02.200370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:03.201078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:04.201198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/28/24 13:48:04.641
  STEP: the container should be terminated @ 09/28/24 13:48:04.645
  STEP: the termination message should be set @ 09/28/24 13:48:04.645
  I0928 13:48:04.645628 18 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/28/24 13:48:04.645
  I0928 13:48:04.662956 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1422" for this suite. @ 09/28/24 13:48:04.667
â€¢ [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:48:04.674
  I0928 13:48:04.674941 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pod-network-test @ 09/28/24 13:48:04.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:48:04.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:48:04.694
  STEP: Performing setup for networking test in namespace pod-network-test-8186 @ 09/28/24 13:48:04.697
  STEP: creating a selector @ 09/28/24 13:48:04.697
  STEP: Creating the service pods in kubernetes @ 09/28/24 13:48:04.697
  I0928 13:48:04.697893 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0928 13:48:05.201296      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:06.201604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:07.202238      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:08.202531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:09.202513      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:10.202688      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:11.202691      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:12.202897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:13.203799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:14.203896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:15.204383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:16.205377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/28/24 13:48:16.78
  E0928 13:48:17.206225      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:18.207014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:18.811697 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0928 13:48:18.811728 18 utils.go:496] Going to poll 192.168.38.87 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0928 13:48:18.815476 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.38.87 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8186 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:48:18.815498 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:48:18.815940 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:48:18.815986 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8186/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.38.87+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0928 13:48:19.207241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:19.858655 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0928 13:48:19.858704 18 utils.go:496] Going to poll 192.168.12.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0928 13:48:19.863453 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.12.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8186 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:48:19.863477 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:48:19.863892 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:48:19.863931 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8186/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.12.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0928 13:48:20.207718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:20.905679 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0928 13:48:20.905721 18 utils.go:496] Going to poll 192.168.107.220 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0928 13:48:20.911294 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.107.220 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8186 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:48:20.911313 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:48:20.911699 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:48:20.911737 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8186/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.107.220+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0928 13:48:21.208166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:21.953993 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0928 13:48:21.954115 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8186" for this suite. @ 09/28/24 13:48:21.959
â€¢ [17.291 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/28/24 13:48:21.966
  I0928 13:48:21.966186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:48:21.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:48:21.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:48:21.989
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/28/24 13:48:21.993
  E0928 13:48:22.208666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:23.209104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:24.209493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:25.209670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:48:26.02
  I0928 13:48:26.023410 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-a09ab98a-b05f-4920-8ac9-3eeb5e6c355f container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:48:26.029
  I0928 13:48:26.046406 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-53" for this suite. @ 09/28/24 13:48:26.05
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/28/24 13:48:26.059
  I0928 13:48:26.059658 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:48:26.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:48:26.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:48:26.081
  I0928 13:48:26.097513 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0928 13:48:26.209775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:27.209854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:28.209973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:29.210128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:30.210337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:31.101787 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 13:48:31.101
  STEP: Scaling up "test-rs" replicaset @ 09/28/24 13:48:31.101
  I0928 13:48:31.110124 18 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/28/24 13:48:31.11
  I0928 13:48:31.118621 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9371 with ReadyReplicas 1, AvailableReplicas 1
  I0928 13:48:31.135064 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9371 with ReadyReplicas 1, AvailableReplicas 1
  I0928 13:48:31.159049 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9371 with ReadyReplicas 1, AvailableReplicas 1
  I0928 13:48:31.168867 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9371 with ReadyReplicas 1, AvailableReplicas 1
  E0928 13:48:31.211088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:31.791240 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9371 with ReadyReplicas 2, AvailableReplicas 2
  I0928 13:48:32.104797 18 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9371 with ReadyReplicas 3 found true
  I0928 13:48:32.104924 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9371" for this suite. @ 09/28/24 13:48:32.109
â€¢ [6.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/28/24 13:48:32.117
  I0928 13:48:32.117255 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-probe @ 09/28/24 13:48:32.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:48:32.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:48:32.138
  STEP: Creating pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880 @ 09/28/24 13:48:32.141
  E0928 13:48:32.212097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:33.212224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/28/24 13:48:34.158
  I0928 13:48:34.162538 18 container_probe.go:1749] Initial restart count of pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 is 0
  I0928 13:48:34.166661 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:34.212944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:35.213143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:36.171193 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:36.213310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:37.213765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:38.176609 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:38.214801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:39.214897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:40.182103 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:40.215306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:41.216371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:42.187248 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:42.217338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:43.218115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:44.193547 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:44.218786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:45.219003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:46.198520 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:46.219714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:47.219945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:48.204138 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:48.220325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:49.220377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:50.209761 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:50.220891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:51.221499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:52.214837 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:52.221938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:53.222449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:54.220823 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:54.222903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:55.223209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:56.223439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:56.226209 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:57.223731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:48:58.224195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:48:58.230950 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:48:59.224739      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:00.225786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:00.236663 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:01.226643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:02.226710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:02.241845 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:03.227001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:04.227211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:04.247463 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:05.227312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:06.227431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:06.251843 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:07.227721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:08.228116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:08.257223 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:09.228253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:10.228842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:10.263185 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:11.229128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:12.229192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:12.267866 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:13.230021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:14.231014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:14.272954 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:15.231709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:16.231787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:16.278409 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:17.232461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:18.233447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:18.284002 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:19.233757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:20.233963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:20.288766 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:21.234718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:22.234820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:22.294158 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:23.234979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:24.235026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:24.299694 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:25.235338      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:26.235498      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:26.304985 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:27.235733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:28.236115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:28.309840 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:29.236722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:30.237771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:30.315213 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:31.237873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:32.237967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:32.321218 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:33.238991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:34.239079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:34.326346 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:35.239240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:36.239795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:36.331527 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:37.239885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:38.240061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:38.337217 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:39.240158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:40.240270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:40.341965 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:41.240923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:42.241081      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:42.347660 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:43.242054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:44.242187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:44.353227 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:45.242237      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:46.242523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:46.358489 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:47.243356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:48.244163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:48.363843 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:49.244322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:50.244475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:50.369786 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:51.244711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:52.245778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:52.374792 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:53.246776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:54.247093      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:54.380198 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:55.247788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:56.248045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:56.384919 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:57.248858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:49:58.249117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:49:58.390549 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:49:59.249341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:00.249584      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:00.395752 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:01.249748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:02.249941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:02.401366 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:03.250412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:04.250855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:04.407964 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:05.250866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:06.251142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:06.413284 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:07.251221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:08.251501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:08.418128 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:09.251653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:10.251832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:10.423332 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:11.251982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:12.252198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:12.429109 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:13.253173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:14.253763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:14.434307 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:15.254193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:16.254415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:16.439612 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:17.254750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:18.255831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:18.445206 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:19.256750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:20.257753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:20.450517 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:21.257888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:22.258010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:22.456309 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:23.259012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:24.259208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:24.462471 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:25.259771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:26.259896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:26.467432 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:27.260812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:28.261207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:28.472212 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:29.261689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:30.261791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:30.477738 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:31.262628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:32.262814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:32.483617 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:33.263016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:34.263205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:34.488494 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:35.263390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:36.263673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:36.494118 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:37.263901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:38.264025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:38.499470 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:39.264107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:40.264611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:40.505622 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:41.264704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:42.265756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:42.511578 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:43.265937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:44.266760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:44.517113 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:45.267816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:46.267871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:46.522205 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:47.268778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:48.268967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:48.527756 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:49.269065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:50.269246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:50.533497 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:51.269754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:52.269957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:52.539658 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:53.271015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:54.272042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:54.545390 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:55.272244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:56.272517      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:56.551050 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:57.272684      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:50:58.273061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:50:58.556095 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:50:59.273744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:00.273941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:00.562671 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:01.274817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:02.274915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:02.567883 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:03.275755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:04.276868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:04.573487 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:05.277877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:06.278765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:06.579055 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:07.278896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:08.279066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:08.583862 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:09.279658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:10.279930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:10.589362 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:11.280050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:12.280236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:12.594355 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:13.281100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:14.281435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:14.600302 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:15.281620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:16.281697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:16.605687 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:17.282395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:18.282840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:18.611517 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:19.282977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:20.283072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:20.617221 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:21.284000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:22.284200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:22.622350 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:23.285265      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:24.285535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:24.627224 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:25.285686      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:26.286084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:26.632111 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:27.286744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:28.286997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:28.636546 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:29.287762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:30.288000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:30.642301 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:31.288034      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:32.288252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:32.647496 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:33.289156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:34.289289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:34.654553 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:35.290342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:36.290534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:36.659658 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:37.291400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:38.292334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:38.664302 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:39.292696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:40.292881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:40.669988 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:41.293767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:42.293938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:42.675715 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:43.294155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:44.295062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:44.681056 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:45.295689      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:46.296776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:46.686175 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:47.297748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:48.298127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:48.691164 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:49.298761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:50.298996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:50.696416 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:51.299206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:52.299264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:52.700982 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:53.299750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:54.299942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:54.706325 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:55.300024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:56.300998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:56.711527 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:57.301116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:51:58.302072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:51:58.717077 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:51:59.302732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:00.303015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:00.721984 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:01.304043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:02.304343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:02.727789 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:03.304589      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:04.304784      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:04.732971 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:05.305683      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:06.305773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:06.737513 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:07.306752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:08.307083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:08.742259 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:09.306987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:10.307760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:10.747069 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:11.308752      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:12.308916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:12.752835 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:13.309717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:14.309935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:14.758313 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:15.310754      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:16.311620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:16.763588 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:17.311783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:18.311968      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:18.769763 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:19.312396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:20.312497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:20.774303 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:21.312956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:22.313157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:22.779860 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:23.313777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:24.313882      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:24.785169 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:25.314848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:26.314931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:26.790201 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:27.315749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:28.316128      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:28.796009 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:29.316231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:30.316914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:30.800788 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:31.317320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:32.317656      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:32.805434 18 container_probe.go:1759] Get pod test-grpc-6f4b4c9f-aab3-44f8-916c-a94c67f5d210 in namespace container-probe-2880
  E0928 13:52:33.318086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:34.318273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/28/24 13:52:34.805
  I0928 13:52:34.820613 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2880" for this suite. @ 09/28/24 13:52:34.83
â€¢ [242.721 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/28/24 13:52:34.837
  I0928 13:52:34.837960 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:52:34.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:34.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:34.86
  STEP: Setting up server cert @ 09/28/24 13:52:34.887
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:52:35.045
  STEP: Deploying the webhook pod @ 09/28/24 13:52:35.063
  STEP: Wait for the deployment to be ready @ 09/28/24 13:52:35.085
  I0928 13:52:35.091859 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0928 13:52:35.318332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:36.318552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:52:37.104
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:52:37.114
  E0928 13:52:37.319625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:38.115677 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/28/24 13:52:38.124
  STEP: create a pod that should be updated by the webhook @ 09/28/24 13:52:38.137
  I0928 13:52:38.195065 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1983" for this suite. @ 09/28/24 13:52:38.198
  STEP: Destroying namespace "webhook-markers-1141" for this suite. @ 09/28/24 13:52:38.204
â€¢ [3.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/28/24 13:52:38.21
  I0928 13:52:38.210226 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename tables @ 09/28/24 13:52:38.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:38.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:38.228
  I0928 13:52:38.234783 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-177" for this suite. @ 09/28/24 13:52:38.238
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/28/24 13:52:38.243
  I0928 13:52:38.243983 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename certificates @ 09/28/24 13:52:38.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:38.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:38.266
  E0928 13:52:38.320553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/28/24 13:52:38.919
  STEP: getting /apis/certificates.k8s.io @ 09/28/24 13:52:38.924
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/28/24 13:52:38.925
  STEP: creating @ 09/28/24 13:52:38.927
  STEP: getting @ 09/28/24 13:52:38.944
  STEP: listing @ 09/28/24 13:52:38.948
  STEP: watching @ 09/28/24 13:52:38.951
  I0928 13:52:38.951599 18 certificates.go:316] starting watch
  STEP: patching @ 09/28/24 13:52:38.953
  STEP: updating @ 09/28/24 13:52:38.96
  I0928 13:52:38.966657 18 certificates.go:332] waiting for watch events with expected annotations
  I0928 13:52:38.966694 18 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/28/24 13:52:38.966
  STEP: patching /approval @ 09/28/24 13:52:38.971
  STEP: updating /approval @ 09/28/24 13:52:38.977
  STEP: getting /status @ 09/28/24 13:52:38.983
  STEP: patching /status @ 09/28/24 13:52:38.987
  STEP: updating /status @ 09/28/24 13:52:38.994
  STEP: deleting @ 09/28/24 13:52:39.001
  STEP: deleting a collection @ 09/28/24 13:52:39.014
  I0928 13:52:39.031604 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4047" for this suite. @ 09/28/24 13:52:39.035
â€¢ [0.797 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/28/24 13:52:39.041
  I0928 13:52:39.041643 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 13:52:39.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:39.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:39.064
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/28/24 13:52:39.067
  E0928 13:52:39.320789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:40.320880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:41.321341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:42.321581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:52:43.09
  I0928 13:52:43.094773 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-1f238143-38d8-4948-8e29-e966de797753 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:52:43.108
  I0928 13:52:43.127381 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4190" for this suite. @ 09/28/24 13:52:43.131
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/28/24 13:52:43.138
  I0928 13:52:43.138887 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:52:43.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:43.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:43.162
  STEP: validating cluster-info @ 09/28/24 13:52:43.165
  I0928 13:52:43.165951 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-8472 cluster-info'
  I0928 13:52:43.210337 18 builder.go:146] stderr: ""
  I0928 13:52:43.210379 18 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0928 13:52:43.210499 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8472" for this suite. @ 09/28/24 13:52:43.214
â€¢ [0.082 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/28/24 13:52:43.22
  I0928 13:52:43.220540 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:52:43.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:43.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:43.244
  STEP: Discovering how many secrets are in namespace by default @ 09/28/24 13:52:43.247
  E0928 13:52:43.322086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:44.322921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:45.323188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:46.323685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:47.324682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/28/24 13:52:48.252
  E0928 13:52:48.324946      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:49.325574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:50.326520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:51.326673      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:52.326997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/28/24 13:52:53.257
  STEP: Ensuring resource quota status is calculated @ 09/28/24 13:52:53.264
  E0928 13:52:53.327091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:54.327127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/28/24 13:52:55.269
  STEP: Ensuring resource quota status captures secret creation @ 09/28/24 13:52:55.28
  E0928 13:52:55.327394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:56.327796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/28/24 13:52:57.284
  STEP: Ensuring resource quota status released usage @ 09/28/24 13:52:57.29
  E0928 13:52:57.327891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:52:58.328060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:52:59.295621 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3504" for this suite. @ 09/28/24 13:52:59.299
â€¢ [16.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/28/24 13:52:59.308
  I0928 13:52:59.308176 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename containers @ 09/28/24 13:52:59.308
  E0928 13:52:59.328480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:52:59.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:52:59.331
  STEP: Creating a pod to test override all @ 09/28/24 13:52:59.334
  E0928 13:53:00.328753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:01.328859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:02.329779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:03.329982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:53:03.359
  I0928 13:53:03.364343 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod client-containers-85568ef2-2109-4cdb-95e1-729a0fbb2af8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:53:03.371
  I0928 13:53:03.389411 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2399" for this suite. @ 09/28/24 13:53:03.393
â€¢ [4.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/28/24 13:53:03.4
  I0928 13:53:03.400367 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 13:53:03.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:03.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:03.421
  STEP: Setting up server cert @ 09/28/24 13:53:03.445
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 13:53:03.701
  STEP: Deploying the webhook pod @ 09/28/24 13:53:03.708
  STEP: Wait for the deployment to be ready @ 09/28/24 13:53:03.721
  I0928 13:53:03.728911 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 13:53:04.330191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:05.330425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 13:53:05.74
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 13:53:05.751
  E0928 13:53:06.330529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:06.752077 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/28/24 13:53:06.76
  STEP: create a namespace for the webhook @ 09/28/24 13:53:06.774
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/28/24 13:53:06.79
  I0928 13:53:06.866249 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2130" for this suite. @ 09/28/24 13:53:06.87
  STEP: Destroying namespace "webhook-markers-1215" for this suite. @ 09/28/24 13:53:06.877
  STEP: Destroying namespace "fail-closed-namespace-5828" for this suite. @ 09/28/24 13:53:06.883
â€¢ [3.490 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/28/24 13:53:06.89
  I0928 13:53:06.890628 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 13:53:06.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:06.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:06.909
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/28/24 13:53:06.912
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/28/24 13:53:06.912
  STEP: creating a pod to probe DNS @ 09/28/24 13:53:06.912
  STEP: submitting the pod to kubernetes @ 09/28/24 13:53:06.912
  E0928 13:53:07.331320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:08.332252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 13:53:08.929
  STEP: looking for the results for each expected name from probers @ 09/28/24 13:53:08.932
  I0928 13:53:08.948930 18 dns_common.go:527] DNS probes using dns-1792/dns-test-65f3cd6d-76af-4463-9b84-d30c1c0f4124 succeeded

  STEP: deleting the pod @ 09/28/24 13:53:08.949
  I0928 13:53:08.962231 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1792" for this suite. @ 09/28/24 13:53:08.965
â€¢ [2.081 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/28/24 13:53:08.972
  I0928 13:53:08.972243 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:53:08.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:08.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:08.993
  STEP: creating the pod @ 09/28/24 13:53:08.996
  STEP: submitting the pod to kubernetes @ 09/28/24 13:53:08.996
  STEP: verifying QOS class is set on the pod @ 09/28/24 13:53:09.004
  I0928 13:53:09.011093 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5906" for this suite. @ 09/28/24 13:53:09.017
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/28/24 13:53:09.023
  I0928 13:53:09.023868 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/28/24 13:53:09.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:09.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:09.044
  I0928 13:53:09.051669 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1205" for this suite. @ 09/28/24 13:53:09.055
â€¢ [0.039 seconds]
------------------------------
SS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/28/24 13:53:09.062
  I0928 13:53:09.062841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename svc-latency @ 09/28/24 13:53:09.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:09.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:09.081
  I0928 13:53:09.085162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3972 @ 09/28/24 13:53:09.085
  I0928 13:53:09.090873      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3972, replica count: 1
  E0928 13:53:09.332769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:10.141415      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0928 13:53:10.333863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:11.141689      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 13:53:11.255045 18 service_latency.go:356] Created: latency-svc-7szf9
  I0928 13:53:11.261982 18 service_latency.go:363] Got endpoints: latency-svc-7szf9 [19.891455ms]
  I0928 13:53:11.274499 18 service_latency.go:356] Created: latency-svc-bx8zp
  I0928 13:53:11.282676 18 service_latency.go:356] Created: latency-svc-rcbnw
  I0928 13:53:11.283348 18 service_latency.go:363] Got endpoints: latency-svc-bx8zp [21.143971ms]
  I0928 13:53:11.289375 18 service_latency.go:356] Created: latency-svc-gkkvk
  I0928 13:53:11.290308 18 service_latency.go:363] Got endpoints: latency-svc-rcbnw [28.154376ms]
  I0928 13:53:11.292228 18 service_latency.go:363] Got endpoints: latency-svc-gkkvk [29.988031ms]
  I0928 13:53:11.292872 18 service_latency.go:356] Created: latency-svc-jcm2f
  I0928 13:53:11.301369 18 service_latency.go:363] Got endpoints: latency-svc-jcm2f [39.088148ms]
  I0928 13:53:11.303974 18 service_latency.go:356] Created: latency-svc-ftqln
  I0928 13:53:11.309726 18 service_latency.go:356] Created: latency-svc-2zm8l
  I0928 13:53:11.310198 18 service_latency.go:363] Got endpoints: latency-svc-ftqln [47.346389ms]
  I0928 13:53:11.312771 18 service_latency.go:356] Created: latency-svc-jfwrm
  I0928 13:53:11.318696 18 service_latency.go:363] Got endpoints: latency-svc-jfwrm [56.38087ms]
  I0928 13:53:11.318930 18 service_latency.go:363] Got endpoints: latency-svc-2zm8l [56.297987ms]
  I0928 13:53:11.321850 18 service_latency.go:356] Created: latency-svc-jh9ll
  I0928 13:53:11.327070 18 service_latency.go:363] Got endpoints: latency-svc-jh9ll [64.132939ms]
  I0928 13:53:11.328410 18 service_latency.go:356] Created: latency-svc-x6rgg
  I0928 13:53:11.331498 18 service_latency.go:356] Created: latency-svc-qfqn7
  E0928 13:53:11.334646      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:11.337909 18 service_latency.go:363] Got endpoints: latency-svc-qfqn7 [75.516935ms]
  I0928 13:53:11.337922 18 service_latency.go:363] Got endpoints: latency-svc-x6rgg [75.574852ms]
  I0928 13:53:11.344658 18 service_latency.go:356] Created: latency-svc-bsdr7
  I0928 13:53:11.351044 18 service_latency.go:363] Got endpoints: latency-svc-bsdr7 [88.601265ms]
  I0928 13:53:11.351061 18 service_latency.go:356] Created: latency-svc-gz6nr
  I0928 13:53:11.356750 18 service_latency.go:363] Got endpoints: latency-svc-gz6nr [94.261113ms]
  I0928 13:53:11.357499 18 service_latency.go:356] Created: latency-svc-78slj
  I0928 13:53:11.363690 18 service_latency.go:363] Got endpoints: latency-svc-78slj [101.622375ms]
  I0928 13:53:11.366768 18 service_latency.go:356] Created: latency-svc-vwkpw
  I0928 13:53:11.369225 18 service_latency.go:356] Created: latency-svc-czxfd
  I0928 13:53:11.372257 18 service_latency.go:363] Got endpoints: latency-svc-vwkpw [109.448976ms]
  I0928 13:53:11.376333 18 service_latency.go:356] Created: latency-svc-v66zz
  I0928 13:53:11.376626 18 service_latency.go:363] Got endpoints: latency-svc-czxfd [114.210076ms]
  I0928 13:53:11.383966 18 service_latency.go:356] Created: latency-svc-8m899
  I0928 13:53:11.384326 18 service_latency.go:363] Got endpoints: latency-svc-v66zz [100.951072ms]
  I0928 13:53:11.388990 18 service_latency.go:363] Got endpoints: latency-svc-8m899 [98.662213ms]
  I0928 13:53:11.389466 18 service_latency.go:356] Created: latency-svc-ln8g2
  I0928 13:53:11.396001 18 service_latency.go:356] Created: latency-svc-5sx9p
  I0928 13:53:11.396237 18 service_latency.go:363] Got endpoints: latency-svc-ln8g2 [103.983451ms]
  I0928 13:53:11.401999 18 service_latency.go:363] Got endpoints: latency-svc-5sx9p [100.601323ms]
  I0928 13:53:11.404440 18 service_latency.go:356] Created: latency-svc-xzrxt
  I0928 13:53:11.408023 18 service_latency.go:363] Got endpoints: latency-svc-xzrxt [97.799656ms]
  I0928 13:53:11.410662 18 service_latency.go:356] Created: latency-svc-nffmh
  I0928 13:53:11.418526 18 service_latency.go:356] Created: latency-svc-ztbsm
  I0928 13:53:11.421111 18 service_latency.go:363] Got endpoints: latency-svc-nffmh [102.383527ms]
  I0928 13:53:11.424469 18 service_latency.go:363] Got endpoints: latency-svc-ztbsm [105.352545ms]
  I0928 13:53:11.431674 18 service_latency.go:356] Created: latency-svc-d4f75
  I0928 13:53:11.437046 18 service_latency.go:363] Got endpoints: latency-svc-d4f75 [109.952259ms]
  I0928 13:53:11.443898 18 service_latency.go:356] Created: latency-svc-25fwk
  I0928 13:53:11.443948 18 service_latency.go:363] Got endpoints: latency-svc-25fwk [106.011557ms]
  I0928 13:53:11.453321 18 service_latency.go:356] Created: latency-svc-vlksk
  I0928 13:53:11.455650 18 service_latency.go:363] Got endpoints: latency-svc-vlksk [117.712893ms]
  I0928 13:53:11.465278 18 service_latency.go:356] Created: latency-svc-bmnvl
  I0928 13:53:11.473155 18 service_latency.go:363] Got endpoints: latency-svc-bmnvl [122.079307ms]
  I0928 13:53:11.474680 18 service_latency.go:356] Created: latency-svc-vv62p
  I0928 13:53:11.480726 18 service_latency.go:363] Got endpoints: latency-svc-vv62p [123.935022ms]
  I0928 13:53:11.482278 18 service_latency.go:356] Created: latency-svc-nzklw
  I0928 13:53:11.489279 18 service_latency.go:363] Got endpoints: latency-svc-nzklw [125.559427ms]
  I0928 13:53:11.493898 18 service_latency.go:356] Created: latency-svc-lr54f
  I0928 13:53:11.501708 18 service_latency.go:363] Got endpoints: latency-svc-lr54f [129.420161ms]
  I0928 13:53:11.506484 18 service_latency.go:356] Created: latency-svc-nfrqg
  I0928 13:53:11.514704 18 service_latency.go:356] Created: latency-svc-8xmm4
  I0928 13:53:11.514949 18 service_latency.go:363] Got endpoints: latency-svc-nfrqg [138.306147ms]
  I0928 13:53:11.522800 18 service_latency.go:363] Got endpoints: latency-svc-8xmm4 [138.452739ms]
  I0928 13:53:11.527775 18 service_latency.go:356] Created: latency-svc-mfzfh
  I0928 13:53:11.530607 18 service_latency.go:356] Created: latency-svc-dbwzh
  I0928 13:53:11.537287 18 service_latency.go:363] Got endpoints: latency-svc-dbwzh [141.032628ms]
  I0928 13:53:11.537343 18 service_latency.go:363] Got endpoints: latency-svc-mfzfh [148.327425ms]
  I0928 13:53:11.542259 18 service_latency.go:356] Created: latency-svc-pckfz
  I0928 13:53:11.548504 18 service_latency.go:363] Got endpoints: latency-svc-pckfz [146.478429ms]
  I0928 13:53:11.551602 18 service_latency.go:356] Created: latency-svc-mcdtd
  I0928 13:53:11.557053 18 service_latency.go:356] Created: latency-svc-mz7m7
  I0928 13:53:11.564143 18 service_latency.go:363] Got endpoints: latency-svc-mcdtd [156.044967ms]
  I0928 13:53:11.566540 18 service_latency.go:356] Created: latency-svc-wgq7s
  I0928 13:53:11.572829 18 service_latency.go:356] Created: latency-svc-6q7x9
  I0928 13:53:11.577625 18 service_latency.go:356] Created: latency-svc-g67k7
  I0928 13:53:11.584009 18 service_latency.go:356] Created: latency-svc-t87dm
  I0928 13:53:11.587660 18 service_latency.go:356] Created: latency-svc-fw7zt
  I0928 13:53:11.599132 18 service_latency.go:356] Created: latency-svc-9m4rx
  I0928 13:53:11.603689 18 service_latency.go:356] Created: latency-svc-ddwv6
  I0928 13:53:11.608636 18 service_latency.go:363] Got endpoints: latency-svc-mz7m7 [187.496786ms]
  I0928 13:53:11.609018 18 service_latency.go:356] Created: latency-svc-85hqt
  I0928 13:53:11.614976 18 service_latency.go:356] Created: latency-svc-79rp9
  I0928 13:53:11.618553 18 service_latency.go:356] Created: latency-svc-z95pm
  I0928 13:53:11.625622 18 service_latency.go:356] Created: latency-svc-p6mbm
  I0928 13:53:11.630195 18 service_latency.go:356] Created: latency-svc-pnqhd
  I0928 13:53:11.634648 18 service_latency.go:356] Created: latency-svc-7r5pp
  I0928 13:53:11.638735 18 service_latency.go:356] Created: latency-svc-rk55c
  I0928 13:53:11.644146 18 service_latency.go:356] Created: latency-svc-vtzcp
  I0928 13:53:11.660971 18 service_latency.go:363] Got endpoints: latency-svc-wgq7s [236.473699ms]
  I0928 13:53:11.669461 18 service_latency.go:356] Created: latency-svc-cmdgz
  I0928 13:53:11.711256 18 service_latency.go:363] Got endpoints: latency-svc-6q7x9 [274.179334ms]
  I0928 13:53:11.722545 18 service_latency.go:356] Created: latency-svc-5mqln
  I0928 13:53:11.760741 18 service_latency.go:363] Got endpoints: latency-svc-g67k7 [316.775318ms]
  I0928 13:53:11.769920 18 service_latency.go:356] Created: latency-svc-fdfzl
  I0928 13:53:11.809644 18 service_latency.go:363] Got endpoints: latency-svc-t87dm [353.959766ms]
  I0928 13:53:11.820337 18 service_latency.go:356] Created: latency-svc-jstqj
  I0928 13:53:11.859342 18 service_latency.go:363] Got endpoints: latency-svc-fw7zt [386.149827ms]
  I0928 13:53:11.872060 18 service_latency.go:356] Created: latency-svc-29mvs
  I0928 13:53:11.909547 18 service_latency.go:363] Got endpoints: latency-svc-9m4rx [428.789601ms]
  I0928 13:53:11.919433 18 service_latency.go:356] Created: latency-svc-m4czb
  I0928 13:53:11.959730 18 service_latency.go:363] Got endpoints: latency-svc-ddwv6 [470.415792ms]
  I0928 13:53:11.968169 18 service_latency.go:356] Created: latency-svc-kqkpf
  I0928 13:53:12.010532 18 service_latency.go:363] Got endpoints: latency-svc-85hqt [508.783347ms]
  I0928 13:53:12.019896 18 service_latency.go:356] Created: latency-svc-pl4bf
  I0928 13:53:12.057420 18 service_latency.go:363] Got endpoints: latency-svc-79rp9 [542.440628ms]
  I0928 13:53:12.069871 18 service_latency.go:356] Created: latency-svc-z67nw
  I0928 13:53:12.109946 18 service_latency.go:363] Got endpoints: latency-svc-z95pm [587.113237ms]
  I0928 13:53:12.121357 18 service_latency.go:356] Created: latency-svc-x8n9n
  I0928 13:53:12.160880 18 service_latency.go:363] Got endpoints: latency-svc-p6mbm [623.553969ms]
  I0928 13:53:12.172858 18 service_latency.go:356] Created: latency-svc-nplnc
  I0928 13:53:12.208951 18 service_latency.go:363] Got endpoints: latency-svc-pnqhd [671.585738ms]
  I0928 13:53:12.221236 18 service_latency.go:356] Created: latency-svc-8m6kl
  I0928 13:53:12.260558 18 service_latency.go:363] Got endpoints: latency-svc-7r5pp [712.014806ms]
  I0928 13:53:12.270044 18 service_latency.go:356] Created: latency-svc-6h54b
  I0928 13:53:12.311496 18 service_latency.go:363] Got endpoints: latency-svc-rk55c [747.321649ms]
  I0928 13:53:12.321811 18 service_latency.go:356] Created: latency-svc-zxvq6
  E0928 13:53:12.334933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:12.360885 18 service_latency.go:363] Got endpoints: latency-svc-vtzcp [752.216418ms]
  I0928 13:53:12.372284 18 service_latency.go:356] Created: latency-svc-qjvwt
  I0928 13:53:12.409468 18 service_latency.go:363] Got endpoints: latency-svc-cmdgz [748.420959ms]
  I0928 13:53:12.420532 18 service_latency.go:356] Created: latency-svc-4hq9r
  I0928 13:53:12.462221 18 service_latency.go:363] Got endpoints: latency-svc-5mqln [750.818661ms]
  I0928 13:53:12.473043 18 service_latency.go:356] Created: latency-svc-965pd
  I0928 13:53:12.511292 18 service_latency.go:363] Got endpoints: latency-svc-fdfzl [750.498301ms]
  I0928 13:53:12.522632 18 service_latency.go:356] Created: latency-svc-m6qch
  I0928 13:53:12.560806 18 service_latency.go:363] Got endpoints: latency-svc-jstqj [750.926531ms]
  I0928 13:53:12.570149 18 service_latency.go:356] Created: latency-svc-rgjwq
  I0928 13:53:12.610890 18 service_latency.go:363] Got endpoints: latency-svc-29mvs [751.495711ms]
  I0928 13:53:12.621805 18 service_latency.go:356] Created: latency-svc-w6525
  I0928 13:53:12.661238 18 service_latency.go:363] Got endpoints: latency-svc-m4czb [751.624469ms]
  I0928 13:53:12.672125 18 service_latency.go:356] Created: latency-svc-wxbw2
  I0928 13:53:12.710844 18 service_latency.go:363] Got endpoints: latency-svc-kqkpf [751.061938ms]
  I0928 13:53:12.720159 18 service_latency.go:356] Created: latency-svc-mdhql
  I0928 13:53:12.760945 18 service_latency.go:363] Got endpoints: latency-svc-pl4bf [750.312634ms]
  I0928 13:53:12.773155 18 service_latency.go:356] Created: latency-svc-d6n98
  I0928 13:53:12.811165 18 service_latency.go:363] Got endpoints: latency-svc-z67nw [753.703593ms]
  I0928 13:53:12.821665 18 service_latency.go:356] Created: latency-svc-bhxxl
  I0928 13:53:12.859263 18 service_latency.go:363] Got endpoints: latency-svc-x8n9n [748.862408ms]
  I0928 13:53:12.870745 18 service_latency.go:356] Created: latency-svc-5pprx
  I0928 13:53:12.909304 18 service_latency.go:363] Got endpoints: latency-svc-nplnc [748.372432ms]
  I0928 13:53:12.919056 18 service_latency.go:356] Created: latency-svc-njmc4
  I0928 13:53:12.961425 18 service_latency.go:363] Got endpoints: latency-svc-8m6kl [752.420981ms]
  I0928 13:53:12.970157 18 service_latency.go:356] Created: latency-svc-kg8hz
  I0928 13:53:13.011165 18 service_latency.go:363] Got endpoints: latency-svc-6h54b [750.541856ms]
  I0928 13:53:13.019691 18 service_latency.go:356] Created: latency-svc-qt5n9
  I0928 13:53:13.061264 18 service_latency.go:363] Got endpoints: latency-svc-zxvq6 [749.666419ms]
  I0928 13:53:13.072804 18 service_latency.go:356] Created: latency-svc-sk7kb
  I0928 13:53:13.109595 18 service_latency.go:363] Got endpoints: latency-svc-qjvwt [748.653214ms]
  I0928 13:53:13.123458 18 service_latency.go:356] Created: latency-svc-s55pj
  I0928 13:53:13.159815 18 service_latency.go:363] Got endpoints: latency-svc-4hq9r [750.290533ms]
  I0928 13:53:13.169940 18 service_latency.go:356] Created: latency-svc-z5hvv
  I0928 13:53:13.210454 18 service_latency.go:363] Got endpoints: latency-svc-965pd [748.184912ms]
  I0928 13:53:13.221236 18 service_latency.go:356] Created: latency-svc-swdxd
  I0928 13:53:13.261587 18 service_latency.go:363] Got endpoints: latency-svc-m6qch [750.244784ms]
  I0928 13:53:13.271550 18 service_latency.go:356] Created: latency-svc-w7zn5
  I0928 13:53:13.311715 18 service_latency.go:363] Got endpoints: latency-svc-rgjwq [750.864392ms]
  I0928 13:53:13.322397 18 service_latency.go:356] Created: latency-svc-7lpkk
  E0928 13:53:13.335433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:13.359328 18 service_latency.go:363] Got endpoints: latency-svc-w6525 [748.370963ms]
  I0928 13:53:13.373114 18 service_latency.go:356] Created: latency-svc-xlg86
  I0928 13:53:13.410498 18 service_latency.go:363] Got endpoints: latency-svc-wxbw2 [749.193312ms]
  I0928 13:53:13.420137 18 service_latency.go:356] Created: latency-svc-jzwkm
  I0928 13:53:13.460907 18 service_latency.go:363] Got endpoints: latency-svc-mdhql [750.00764ms]
  I0928 13:53:13.469351 18 service_latency.go:356] Created: latency-svc-hpgwj
  I0928 13:53:13.513951 18 service_latency.go:363] Got endpoints: latency-svc-d6n98 [752.953204ms]
  I0928 13:53:13.527867 18 service_latency.go:356] Created: latency-svc-7sr9f
  I0928 13:53:13.559962 18 service_latency.go:363] Got endpoints: latency-svc-bhxxl [748.750956ms]
  I0928 13:53:13.575545 18 service_latency.go:356] Created: latency-svc-fsvnq
  I0928 13:53:13.610047 18 service_latency.go:363] Got endpoints: latency-svc-5pprx [750.714487ms]
  I0928 13:53:13.618795 18 service_latency.go:356] Created: latency-svc-h8wss
  I0928 13:53:13.663860 18 service_latency.go:363] Got endpoints: latency-svc-njmc4 [754.254353ms]
  I0928 13:53:13.674949 18 service_latency.go:356] Created: latency-svc-6hjpb
  I0928 13:53:13.711824 18 service_latency.go:363] Got endpoints: latency-svc-kg8hz [750.350258ms]
  I0928 13:53:13.722473 18 service_latency.go:356] Created: latency-svc-4vj22
  I0928 13:53:13.759403 18 service_latency.go:363] Got endpoints: latency-svc-qt5n9 [748.183843ms]
  I0928 13:53:13.769920 18 service_latency.go:356] Created: latency-svc-7mkk8
  I0928 13:53:13.809419 18 service_latency.go:363] Got endpoints: latency-svc-sk7kb [748.099764ms]
  I0928 13:53:13.821789 18 service_latency.go:356] Created: latency-svc-4cp28
  I0928 13:53:13.862766 18 service_latency.go:363] Got endpoints: latency-svc-s55pj [753.117175ms]
  I0928 13:53:13.874351 18 service_latency.go:356] Created: latency-svc-55fns
  I0928 13:53:13.912113 18 service_latency.go:363] Got endpoints: latency-svc-z5hvv [752.24955ms]
  I0928 13:53:13.921499 18 service_latency.go:356] Created: latency-svc-cqmbv
  I0928 13:53:13.961396 18 service_latency.go:363] Got endpoints: latency-svc-swdxd [750.888503ms]
  I0928 13:53:13.974809 18 service_latency.go:356] Created: latency-svc-n7fft
  I0928 13:53:14.013687 18 service_latency.go:363] Got endpoints: latency-svc-w7zn5 [752.036633ms]
  I0928 13:53:14.031301 18 service_latency.go:356] Created: latency-svc-qfc87
  I0928 13:53:14.061811 18 service_latency.go:363] Got endpoints: latency-svc-7lpkk [750.044168ms]
  I0928 13:53:14.073823 18 service_latency.go:356] Created: latency-svc-b7lg7
  I0928 13:53:14.110643 18 service_latency.go:363] Got endpoints: latency-svc-xlg86 [751.268578ms]
  I0928 13:53:14.122159 18 service_latency.go:356] Created: latency-svc-sgd62
  I0928 13:53:14.157737 18 service_latency.go:363] Got endpoints: latency-svc-jzwkm [747.192167ms]
  I0928 13:53:14.168084 18 service_latency.go:356] Created: latency-svc-dmc5z
  I0928 13:53:14.208785 18 service_latency.go:363] Got endpoints: latency-svc-hpgwj [747.814331ms]
  I0928 13:53:14.219423 18 service_latency.go:356] Created: latency-svc-9mdq4
  I0928 13:53:14.258538 18 service_latency.go:363] Got endpoints: latency-svc-7sr9f [744.418608ms]
  I0928 13:53:14.269658 18 service_latency.go:356] Created: latency-svc-hwbzp
  I0928 13:53:14.308019 18 service_latency.go:363] Got endpoints: latency-svc-fsvnq [747.998135ms]
  I0928 13:53:14.317291 18 service_latency.go:356] Created: latency-svc-5r4k5
  E0928 13:53:14.336393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:14.360902 18 service_latency.go:363] Got endpoints: latency-svc-h8wss [750.803282ms]
  I0928 13:53:14.371908 18 service_latency.go:356] Created: latency-svc-jthpx
  I0928 13:53:14.409848 18 service_latency.go:363] Got endpoints: latency-svc-6hjpb [745.941856ms]
  I0928 13:53:14.421486 18 service_latency.go:356] Created: latency-svc-slql4
  I0928 13:53:14.462313 18 service_latency.go:363] Got endpoints: latency-svc-4vj22 [750.429156ms]
  I0928 13:53:14.473043 18 service_latency.go:356] Created: latency-svc-qqvsq
  I0928 13:53:14.510888 18 service_latency.go:363] Got endpoints: latency-svc-7mkk8 [751.396956ms]
  I0928 13:53:14.520259 18 service_latency.go:356] Created: latency-svc-5l2p5
  I0928 13:53:14.560484 18 service_latency.go:363] Got endpoints: latency-svc-4cp28 [751.018437ms]
  I0928 13:53:14.570180 18 service_latency.go:356] Created: latency-svc-czp4m
  I0928 13:53:14.611752 18 service_latency.go:363] Got endpoints: latency-svc-55fns [748.932574ms]
  I0928 13:53:14.624313 18 service_latency.go:356] Created: latency-svc-qq6r4
  I0928 13:53:14.659094 18 service_latency.go:363] Got endpoints: latency-svc-cqmbv [746.905886ms]
  I0928 13:53:14.669281 18 service_latency.go:356] Created: latency-svc-pzsn9
  I0928 13:53:14.710020 18 service_latency.go:363] Got endpoints: latency-svc-n7fft [748.572629ms]
  I0928 13:53:14.719990 18 service_latency.go:356] Created: latency-svc-t257j
  I0928 13:53:14.761411 18 service_latency.go:363] Got endpoints: latency-svc-qfc87 [747.678705ms]
  I0928 13:53:14.772427 18 service_latency.go:356] Created: latency-svc-qp9br
  I0928 13:53:14.811131 18 service_latency.go:363] Got endpoints: latency-svc-b7lg7 [749.252327ms]
  I0928 13:53:14.821776 18 service_latency.go:356] Created: latency-svc-rmc4l
  I0928 13:53:14.859932 18 service_latency.go:363] Got endpoints: latency-svc-sgd62 [749.240071ms]
  I0928 13:53:14.871869 18 service_latency.go:356] Created: latency-svc-4scbz
  I0928 13:53:14.909847 18 service_latency.go:363] Got endpoints: latency-svc-dmc5z [752.067468ms]
  I0928 13:53:14.920189 18 service_latency.go:356] Created: latency-svc-r5knk
  I0928 13:53:14.965150 18 service_latency.go:363] Got endpoints: latency-svc-9mdq4 [756.301735ms]
  I0928 13:53:14.974793 18 service_latency.go:356] Created: latency-svc-f849g
  I0928 13:53:15.011262 18 service_latency.go:363] Got endpoints: latency-svc-hwbzp [752.661201ms]
  I0928 13:53:15.021357 18 service_latency.go:356] Created: latency-svc-rt2zn
  I0928 13:53:15.061354 18 service_latency.go:363] Got endpoints: latency-svc-5r4k5 [753.295257ms]
  I0928 13:53:15.073054 18 service_latency.go:356] Created: latency-svc-6srz7
  I0928 13:53:15.109413 18 service_latency.go:363] Got endpoints: latency-svc-jthpx [748.461914ms]
  I0928 13:53:15.121917 18 service_latency.go:356] Created: latency-svc-7r7rk
  I0928 13:53:15.159720 18 service_latency.go:363] Got endpoints: latency-svc-slql4 [749.793048ms]
  I0928 13:53:15.170044 18 service_latency.go:356] Created: latency-svc-l8pbc
  I0928 13:53:15.219101 18 service_latency.go:363] Got endpoints: latency-svc-qqvsq [756.739308ms]
  I0928 13:53:15.228259 18 service_latency.go:356] Created: latency-svc-zq8mk
  I0928 13:53:15.260425 18 service_latency.go:363] Got endpoints: latency-svc-5l2p5 [749.457687ms]
  I0928 13:53:15.273408 18 service_latency.go:356] Created: latency-svc-6q9ch
  I0928 13:53:15.309090 18 service_latency.go:363] Got endpoints: latency-svc-czp4m [748.346073ms]
  I0928 13:53:15.319959 18 service_latency.go:356] Created: latency-svc-llk68
  E0928 13:53:15.337129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:15.359474 18 service_latency.go:363] Got endpoints: latency-svc-qq6r4 [747.666522ms]
  I0928 13:53:15.370671 18 service_latency.go:356] Created: latency-svc-f66xh
  I0928 13:53:15.410668 18 service_latency.go:363] Got endpoints: latency-svc-pzsn9 [751.425185ms]
  I0928 13:53:15.420128 18 service_latency.go:356] Created: latency-svc-zcjtm
  I0928 13:53:15.460255 18 service_latency.go:363] Got endpoints: latency-svc-t257j [750.188748ms]
  I0928 13:53:15.470083 18 service_latency.go:356] Created: latency-svc-zzf25
  I0928 13:53:15.511046 18 service_latency.go:363] Got endpoints: latency-svc-qp9br [749.58179ms]
  I0928 13:53:15.522432 18 service_latency.go:356] Created: latency-svc-shkr4
  I0928 13:53:15.561285 18 service_latency.go:363] Got endpoints: latency-svc-rmc4l [750.055295ms]
  I0928 13:53:15.568934 18 service_latency.go:356] Created: latency-svc-lcrft
  I0928 13:53:15.611663 18 service_latency.go:363] Got endpoints: latency-svc-4scbz [751.680124ms]
  I0928 13:53:15.621151 18 service_latency.go:356] Created: latency-svc-kzhbb
  I0928 13:53:15.661442 18 service_latency.go:363] Got endpoints: latency-svc-r5knk [751.540928ms]
  I0928 13:53:15.672845 18 service_latency.go:356] Created: latency-svc-2flvd
  I0928 13:53:15.710096 18 service_latency.go:363] Got endpoints: latency-svc-f849g [744.884224ms]
  I0928 13:53:15.720481 18 service_latency.go:356] Created: latency-svc-54c86
  I0928 13:53:15.759684 18 service_latency.go:363] Got endpoints: latency-svc-rt2zn [748.371548ms]
  I0928 13:53:15.770621 18 service_latency.go:356] Created: latency-svc-c7l9x
  I0928 13:53:15.811067 18 service_latency.go:363] Got endpoints: latency-svc-6srz7 [749.636424ms]
  I0928 13:53:15.820964 18 service_latency.go:356] Created: latency-svc-xk4cl
  I0928 13:53:15.861646 18 service_latency.go:363] Got endpoints: latency-svc-7r7rk [752.182707ms]
  I0928 13:53:15.871279 18 service_latency.go:356] Created: latency-svc-kc6ww
  I0928 13:53:15.910707 18 service_latency.go:363] Got endpoints: latency-svc-l8pbc [750.878936ms]
  I0928 13:53:15.923308 18 service_latency.go:356] Created: latency-svc-8g5qw
  I0928 13:53:15.959994 18 service_latency.go:363] Got endpoints: latency-svc-zq8mk [740.844512ms]
  I0928 13:53:15.972667 18 service_latency.go:356] Created: latency-svc-wzhxv
  I0928 13:53:16.010663 18 service_latency.go:363] Got endpoints: latency-svc-6q9ch [750.180273ms]
  I0928 13:53:16.020502 18 service_latency.go:356] Created: latency-svc-mwn8x
  I0928 13:53:16.061497 18 service_latency.go:363] Got endpoints: latency-svc-llk68 [752.359975ms]
  I0928 13:53:16.071827 18 service_latency.go:356] Created: latency-svc-w8wtw
  I0928 13:53:16.111277 18 service_latency.go:363] Got endpoints: latency-svc-f66xh [751.754364ms]
  I0928 13:53:16.122317 18 service_latency.go:356] Created: latency-svc-s2t5x
  I0928 13:53:16.160265 18 service_latency.go:363] Got endpoints: latency-svc-zcjtm [749.553552ms]
  I0928 13:53:16.170752 18 service_latency.go:356] Created: latency-svc-jz5d8
  I0928 13:53:16.210579 18 service_latency.go:363] Got endpoints: latency-svc-zzf25 [750.245484ms]
  I0928 13:53:16.222149 18 service_latency.go:356] Created: latency-svc-m549g
  I0928 13:53:16.260973 18 service_latency.go:363] Got endpoints: latency-svc-shkr4 [749.870653ms]
  I0928 13:53:16.273676 18 service_latency.go:356] Created: latency-svc-2wc9m
  I0928 13:53:16.311129 18 service_latency.go:363] Got endpoints: latency-svc-lcrft [749.789322ms]
  I0928 13:53:16.320511 18 service_latency.go:356] Created: latency-svc-w2tvv
  E0928 13:53:16.337734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:16.358845 18 service_latency.go:363] Got endpoints: latency-svc-kzhbb [747.132671ms]
  I0928 13:53:16.370056 18 service_latency.go:356] Created: latency-svc-942jt
  I0928 13:53:16.410282 18 service_latency.go:363] Got endpoints: latency-svc-2flvd [748.79049ms]
  I0928 13:53:16.421507 18 service_latency.go:356] Created: latency-svc-tlsht
  I0928 13:53:16.460420 18 service_latency.go:363] Got endpoints: latency-svc-54c86 [750.276463ms]
  I0928 13:53:16.469692 18 service_latency.go:356] Created: latency-svc-rqkh2
  I0928 13:53:16.512531 18 service_latency.go:363] Got endpoints: latency-svc-c7l9x [752.772859ms]
  I0928 13:53:16.523170 18 service_latency.go:356] Created: latency-svc-s2vwg
  I0928 13:53:16.560921 18 service_latency.go:363] Got endpoints: latency-svc-xk4cl [749.813425ms]
  I0928 13:53:16.570554 18 service_latency.go:356] Created: latency-svc-cmlh8
  I0928 13:53:16.610888 18 service_latency.go:363] Got endpoints: latency-svc-kc6ww [749.188683ms]
  I0928 13:53:16.622058 18 service_latency.go:356] Created: latency-svc-5j5ch
  I0928 13:53:16.659505 18 service_latency.go:363] Got endpoints: latency-svc-8g5qw [748.727881ms]
  I0928 13:53:16.670618 18 service_latency.go:356] Created: latency-svc-dfwbx
  I0928 13:53:16.710982 18 service_latency.go:363] Got endpoints: latency-svc-wzhxv [750.934149ms]
  I0928 13:53:16.720270 18 service_latency.go:356] Created: latency-svc-g5zqv
  I0928 13:53:16.761582 18 service_latency.go:363] Got endpoints: latency-svc-mwn8x [750.877194ms]
  I0928 13:53:16.771477 18 service_latency.go:356] Created: latency-svc-ljq2t
  I0928 13:53:16.810979 18 service_latency.go:363] Got endpoints: latency-svc-w8wtw [749.415804ms]
  I0928 13:53:16.821606 18 service_latency.go:356] Created: latency-svc-rndbn
  I0928 13:53:16.860046 18 service_latency.go:363] Got endpoints: latency-svc-s2t5x [748.726526ms]
  I0928 13:53:16.873403 18 service_latency.go:356] Created: latency-svc-q4z85
  I0928 13:53:16.909535 18 service_latency.go:363] Got endpoints: latency-svc-jz5d8 [749.222739ms]
  I0928 13:53:16.919409 18 service_latency.go:356] Created: latency-svc-d9kqf
  I0928 13:53:16.959717 18 service_latency.go:363] Got endpoints: latency-svc-m549g [749.089237ms]
  I0928 13:53:16.970333 18 service_latency.go:356] Created: latency-svc-lkvkm
  I0928 13:53:17.010977 18 service_latency.go:363] Got endpoints: latency-svc-2wc9m [749.961149ms]
  I0928 13:53:17.021080 18 service_latency.go:356] Created: latency-svc-rhf9c
  I0928 13:53:17.060962 18 service_latency.go:363] Got endpoints: latency-svc-w2tvv [749.789645ms]
  I0928 13:53:17.071279 18 service_latency.go:356] Created: latency-svc-c2fpz
  I0928 13:53:17.109806 18 service_latency.go:363] Got endpoints: latency-svc-942jt [750.918657ms]
  I0928 13:53:17.123408 18 service_latency.go:356] Created: latency-svc-ggmh6
  I0928 13:53:17.160532 18 service_latency.go:363] Got endpoints: latency-svc-tlsht [750.184219ms]
  I0928 13:53:17.170577 18 service_latency.go:356] Created: latency-svc-rcjdc
  I0928 13:53:17.211263 18 service_latency.go:363] Got endpoints: latency-svc-rqkh2 [750.79319ms]
  I0928 13:53:17.221207 18 service_latency.go:356] Created: latency-svc-59kh7
  I0928 13:53:17.262143 18 service_latency.go:363] Got endpoints: latency-svc-s2vwg [749.542741ms]
  I0928 13:53:17.274670 18 service_latency.go:356] Created: latency-svc-dvfzb
  I0928 13:53:17.309430 18 service_latency.go:363] Got endpoints: latency-svc-cmlh8 [748.465955ms]
  I0928 13:53:17.321283 18 service_latency.go:356] Created: latency-svc-nfbh2
  E0928 13:53:17.338409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:17.359904 18 service_latency.go:363] Got endpoints: latency-svc-5j5ch [748.969743ms]
  I0928 13:53:17.371417 18 service_latency.go:356] Created: latency-svc-kd89f
  I0928 13:53:17.409890 18 service_latency.go:363] Got endpoints: latency-svc-dfwbx [750.332994ms]
  I0928 13:53:17.430076 18 service_latency.go:356] Created: latency-svc-nmf26
  I0928 13:53:17.461797 18 service_latency.go:363] Got endpoints: latency-svc-g5zqv [750.766161ms]
  I0928 13:53:17.471382 18 service_latency.go:356] Created: latency-svc-6jg5m
  I0928 13:53:17.510886 18 service_latency.go:363] Got endpoints: latency-svc-ljq2t [749.254829ms]
  I0928 13:53:17.523430 18 service_latency.go:356] Created: latency-svc-bzvls
  I0928 13:53:17.558598 18 service_latency.go:363] Got endpoints: latency-svc-rndbn [747.572037ms]
  I0928 13:53:17.571714 18 service_latency.go:356] Created: latency-svc-st7t6
  I0928 13:53:17.610197 18 service_latency.go:363] Got endpoints: latency-svc-q4z85 [750.106854ms]
  I0928 13:53:17.622654 18 service_latency.go:356] Created: latency-svc-2d8k5
  I0928 13:53:17.661527 18 service_latency.go:363] Got endpoints: latency-svc-d9kqf [751.930277ms]
  I0928 13:53:17.670288 18 service_latency.go:356] Created: latency-svc-pbmcf
  I0928 13:53:17.711524 18 service_latency.go:363] Got endpoints: latency-svc-lkvkm [751.75888ms]
  I0928 13:53:17.722812 18 service_latency.go:356] Created: latency-svc-4zkch
  I0928 13:53:17.761022 18 service_latency.go:363] Got endpoints: latency-svc-rhf9c [749.992122ms]
  I0928 13:53:17.774589 18 service_latency.go:356] Created: latency-svc-8sr2n
  I0928 13:53:17.809304 18 service_latency.go:363] Got endpoints: latency-svc-c2fpz [748.292683ms]
  I0928 13:53:17.821085 18 service_latency.go:356] Created: latency-svc-pqwlb
  I0928 13:53:17.860078 18 service_latency.go:363] Got endpoints: latency-svc-ggmh6 [750.208116ms]
  I0928 13:53:17.870174 18 service_latency.go:356] Created: latency-svc-q62xd
  I0928 13:53:17.911396 18 service_latency.go:363] Got endpoints: latency-svc-rcjdc [750.577831ms]
  I0928 13:53:17.923688 18 service_latency.go:356] Created: latency-svc-pwhhf
  I0928 13:53:17.961711 18 service_latency.go:363] Got endpoints: latency-svc-59kh7 [750.398579ms]
  I0928 13:53:17.971581 18 service_latency.go:356] Created: latency-svc-8dbmn
  I0928 13:53:18.011341 18 service_latency.go:363] Got endpoints: latency-svc-dvfzb [749.143534ms]
  I0928 13:53:18.021860 18 service_latency.go:356] Created: latency-svc-hl99h
  I0928 13:53:18.058760 18 service_latency.go:363] Got endpoints: latency-svc-nfbh2 [749.276396ms]
  I0928 13:53:18.071229 18 service_latency.go:356] Created: latency-svc-ltqzz
  I0928 13:53:18.109778 18 service_latency.go:363] Got endpoints: latency-svc-kd89f [749.838237ms]
  I0928 13:53:18.121302 18 service_latency.go:356] Created: latency-svc-mjnd5
  I0928 13:53:18.160118 18 service_latency.go:363] Got endpoints: latency-svc-nmf26 [750.140171ms]
  I0928 13:53:18.170163 18 service_latency.go:356] Created: latency-svc-fb799
  I0928 13:53:18.211139 18 service_latency.go:363] Got endpoints: latency-svc-6jg5m [749.256603ms]
  I0928 13:53:18.221653 18 service_latency.go:356] Created: latency-svc-bh7lh
  I0928 13:53:18.262001 18 service_latency.go:363] Got endpoints: latency-svc-bzvls [751.063967ms]
  I0928 13:53:18.275459 18 service_latency.go:356] Created: latency-svc-7lthc
  I0928 13:53:18.308522 18 service_latency.go:363] Got endpoints: latency-svc-st7t6 [749.879791ms]
  I0928 13:53:18.320201 18 service_latency.go:356] Created: latency-svc-j8t7h
  E0928 13:53:18.339429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:18.359978 18 service_latency.go:363] Got endpoints: latency-svc-2d8k5 [749.728776ms]
  I0928 13:53:18.369963 18 service_latency.go:356] Created: latency-svc-hv6h7
  I0928 13:53:18.411824 18 service_latency.go:363] Got endpoints: latency-svc-pbmcf [750.230838ms]
  I0928 13:53:18.422051 18 service_latency.go:356] Created: latency-svc-kdjrb
  I0928 13:53:18.461053 18 service_latency.go:363] Got endpoints: latency-svc-4zkch [749.461752ms]
  I0928 13:53:18.471088 18 service_latency.go:356] Created: latency-svc-lbs6l
  I0928 13:53:18.509456 18 service_latency.go:363] Got endpoints: latency-svc-8sr2n [748.238701ms]
  I0928 13:53:18.523454 18 service_latency.go:356] Created: latency-svc-4bm5z
  I0928 13:53:18.559284 18 service_latency.go:363] Got endpoints: latency-svc-pqwlb [749.945173ms]
  I0928 13:53:18.570865 18 service_latency.go:356] Created: latency-svc-w9p9p
  I0928 13:53:18.609975 18 service_latency.go:363] Got endpoints: latency-svc-q62xd [749.84819ms]
  I0928 13:53:18.620646 18 service_latency.go:356] Created: latency-svc-sckp7
  I0928 13:53:18.662248 18 service_latency.go:363] Got endpoints: latency-svc-pwhhf [750.807601ms]
  I0928 13:53:18.672540 18 service_latency.go:356] Created: latency-svc-rhkq9
  I0928 13:53:18.714629 18 service_latency.go:363] Got endpoints: latency-svc-8dbmn [752.707033ms]
  I0928 13:53:18.724266 18 service_latency.go:356] Created: latency-svc-8d2fx
  I0928 13:53:18.760858 18 service_latency.go:363] Got endpoints: latency-svc-hl99h [749.4686ms]
  I0928 13:53:18.774321 18 service_latency.go:356] Created: latency-svc-vrkhj
  I0928 13:53:18.811801 18 service_latency.go:363] Got endpoints: latency-svc-ltqzz [752.992517ms]
  I0928 13:53:18.823747 18 service_latency.go:356] Created: latency-svc-4c4qb
  I0928 13:53:18.862007 18 service_latency.go:363] Got endpoints: latency-svc-mjnd5 [752.186133ms]
  I0928 13:53:18.871040 18 service_latency.go:356] Created: latency-svc-9vbxf
  I0928 13:53:18.909910 18 service_latency.go:363] Got endpoints: latency-svc-fb799 [749.737645ms]
  I0928 13:53:18.920353 18 service_latency.go:356] Created: latency-svc-hws5h
  I0928 13:53:18.961654 18 service_latency.go:363] Got endpoints: latency-svc-bh7lh [750.457515ms]
  I0928 13:53:18.973356 18 service_latency.go:356] Created: latency-svc-k4phc
  I0928 13:53:19.010519 18 service_latency.go:363] Got endpoints: latency-svc-7lthc [748.346866ms]
  I0928 13:53:19.021016 18 service_latency.go:356] Created: latency-svc-hwhvh
  I0928 13:53:19.060020 18 service_latency.go:363] Got endpoints: latency-svc-j8t7h [751.463856ms]
  I0928 13:53:19.076428 18 service_latency.go:356] Created: latency-svc-fbszf
  I0928 13:53:19.109935 18 service_latency.go:363] Got endpoints: latency-svc-hv6h7 [749.90757ms]
  I0928 13:53:19.162189 18 service_latency.go:363] Got endpoints: latency-svc-kdjrb [750.32701ms]
  I0928 13:53:19.209411 18 service_latency.go:363] Got endpoints: latency-svc-lbs6l [748.311819ms]
  I0928 13:53:19.261369 18 service_latency.go:363] Got endpoints: latency-svc-4bm5z [751.860521ms]
  I0928 13:53:19.309130 18 service_latency.go:363] Got endpoints: latency-svc-w9p9p [749.797038ms]
  E0928 13:53:19.340543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:19.361875 18 service_latency.go:363] Got endpoints: latency-svc-sckp7 [751.865085ms]
  I0928 13:53:19.408841 18 service_latency.go:363] Got endpoints: latency-svc-rhkq9 [746.555524ms]
  I0928 13:53:19.458769 18 service_latency.go:363] Got endpoints: latency-svc-8d2fx [744.095942ms]
  I0928 13:53:19.511435 18 service_latency.go:363] Got endpoints: latency-svc-vrkhj [750.518577ms]
  I0928 13:53:19.559206 18 service_latency.go:363] Got endpoints: latency-svc-4c4qb [747.362903ms]
  I0928 13:53:19.613007 18 service_latency.go:363] Got endpoints: latency-svc-9vbxf [750.9514ms]
  I0928 13:53:19.659393 18 service_latency.go:363] Got endpoints: latency-svc-hws5h [749.443236ms]
  I0928 13:53:19.711336 18 service_latency.go:363] Got endpoints: latency-svc-k4phc [749.635793ms]
  I0928 13:53:19.759929 18 service_latency.go:363] Got endpoints: latency-svc-hwhvh [749.34387ms]
  I0928 13:53:19.811914 18 service_latency.go:363] Got endpoints: latency-svc-fbszf [751.849687ms]
  I0928 13:53:19.812003 18 service_latency.go:114] Latencies: [21.143971ms 28.154376ms 29.988031ms 39.088148ms 47.346389ms 56.297987ms 56.38087ms 64.132939ms 75.516935ms 75.574852ms 88.601265ms 94.261113ms 97.799656ms 98.662213ms 100.601323ms 100.951072ms 101.622375ms 102.383527ms 103.983451ms 105.352545ms 106.011557ms 109.448976ms 109.952259ms 114.210076ms 117.712893ms 122.079307ms 123.935022ms 125.559427ms 129.420161ms 138.306147ms 138.452739ms 141.032628ms 146.478429ms 148.327425ms 156.044967ms 187.496786ms 236.473699ms 274.179334ms 316.775318ms 353.959766ms 386.149827ms 428.789601ms 470.415792ms 508.783347ms 542.440628ms 587.113237ms 623.553969ms 671.585738ms 712.014806ms 740.844512ms 744.095942ms 744.418608ms 744.884224ms 745.941856ms 746.555524ms 746.905886ms 747.132671ms 747.192167ms 747.321649ms 747.362903ms 747.572037ms 747.666522ms 747.678705ms 747.814331ms 747.998135ms 748.099764ms 748.183843ms 748.184912ms 748.238701ms 748.292683ms 748.311819ms 748.346073ms 748.346866ms 748.370963ms 748.371548ms 748.372432ms 748.420959ms 748.461914ms 748.465955ms 748.572629ms 748.653214ms 748.726526ms 748.727881ms 748.750956ms 748.79049ms 748.862408ms 748.932574ms 748.969743ms 749.089237ms 749.143534ms 749.188683ms 749.193312ms 749.222739ms 749.240071ms 749.252327ms 749.254829ms 749.256603ms 749.276396ms 749.34387ms 749.415804ms 749.443236ms 749.457687ms 749.461752ms 749.4686ms 749.542741ms 749.553552ms 749.58179ms 749.635793ms 749.636424ms 749.666419ms 749.728776ms 749.737645ms 749.789322ms 749.789645ms 749.793048ms 749.797038ms 749.813425ms 749.838237ms 749.84819ms 749.870653ms 749.879791ms 749.90757ms 749.945173ms 749.961149ms 749.992122ms 750.00764ms 750.044168ms 750.055295ms 750.106854ms 750.140171ms 750.180273ms 750.184219ms 750.188748ms 750.208116ms 750.230838ms 750.244784ms 750.245484ms 750.276463ms 750.290533ms 750.312634ms 750.32701ms 750.332994ms 750.350258ms 750.398579ms 750.429156ms 750.457515ms 750.498301ms 750.518577ms 750.541856ms 750.577831ms 750.714487ms 750.766161ms 750.79319ms 750.803282ms 750.807601ms 750.818661ms 750.864392ms 750.877194ms 750.878936ms 750.888503ms 750.918657ms 750.926531ms 750.934149ms 750.9514ms 751.018437ms 751.061938ms 751.063967ms 751.268578ms 751.396956ms 751.425185ms 751.463856ms 751.495711ms 751.540928ms 751.624469ms 751.680124ms 751.754364ms 751.75888ms 751.849687ms 751.860521ms 751.865085ms 751.930277ms 752.036633ms 752.067468ms 752.182707ms 752.186133ms 752.216418ms 752.24955ms 752.359975ms 752.420981ms 752.661201ms 752.707033ms 752.772859ms 752.953204ms 752.992517ms 753.117175ms 753.295257ms 753.703593ms 754.254353ms 756.301735ms 756.739308ms]
  I0928 13:53:19.812014 18 service_latency.go:118] 50 %ile: 749.443236ms
  I0928 13:53:19.812020 18 service_latency.go:119] 90 %ile: 751.930277ms
  I0928 13:53:19.812026 18 service_latency.go:120] 99 %ile: 756.301735ms
  I0928 13:53:19.812031 18 service_latency.go:121] Total sample count: 200
  I0928 13:53:19.812109 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3972" for this suite. @ 09/28/24 13:53:19.816
â€¢ [10.760 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/28/24 13:53:19.823
  I0928 13:53:19.823448 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename security-context @ 09/28/24 13:53:19.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:19.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:19.844
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/28/24 13:53:19.847
  E0928 13:53:20.340600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:21.340808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:53:21.865
  I0928 13:53:21.869977 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod security-context-39920346-7131-4690-a0a5-204daec39ca3 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 13:53:21.876
  I0928 13:53:21.893688 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1332" for this suite. @ 09/28/24 13:53:21.897
â€¢ [2.082 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/28/24 13:53:21.905
  I0928 13:53:21.905094 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename watch @ 09/28/24 13:53:21.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:21.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:21.924
  STEP: creating a watch on configmaps with label A @ 09/28/24 13:53:21.927
  STEP: creating a watch on configmaps with label B @ 09/28/24 13:53:21.928
  STEP: creating a watch on configmaps with label A or B @ 09/28/24 13:53:21.93
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/28/24 13:53:21.931
  I0928 13:53:21.935818 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44182 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:21.935965 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44182 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/28/24 13:53:21.936
  I0928 13:53:21.944051 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44183 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:21.944130 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44183 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/28/24 13:53:21.944
  I0928 13:53:21.951823 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44184 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:21.951900 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44184 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/28/24 13:53:21.951
  I0928 13:53:21.957386 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44185 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:21.957411 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7715  5077e7ff-bdf2-451e-a258-c801536bfc32 44185 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/28/24 13:53:21.957
  I0928 13:53:21.963222 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7715  fa717a65-7e07-4425-b01c-8e674ab3dbcb 44186 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:21.963276 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7715  fa717a65-7e07-4425-b01c-8e674ab3dbcb 44186 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0928 13:53:22.340870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:23.340952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:24.341066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:25.341134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:26.341251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:27.341370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:28.342295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:29.342469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:30.342724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:31.343753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/28/24 13:53:31.963
  I0928 13:53:31.970867 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7715  fa717a65-7e07-4425-b01c-8e674ab3dbcb 45094 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0928 13:53:31.970915 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7715  fa717a65-7e07-4425-b01c-8e674ab3dbcb 45094 0 2024-09-28 13:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-28 13:53:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0928 13:53:32.344378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:33.345211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:34.345313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:35.345388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:36.345489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:37.345607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:38.346246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:39.346302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:40.346408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:41.346766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:41.971629 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7715" for this suite. @ 09/28/24 13:53:41.977
â€¢ [20.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/28/24 13:53:41.984
  I0928 13:53:41.984125 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:53:41.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:42.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:42.005
  I0928 13:53:42.047392 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9079" for this suite. @ 09/28/24 13:53:42.05
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/28/24 13:53:42.057
  I0928 13:53:42.057282 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:53:42.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:42.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:42.081
  STEP: Creating projection with secret that has name secret-emptykey-test-59d3fdf0-2770-4d25-90bd-84e981808f14 @ 09/28/24 13:53:42.084
  I0928 13:53:42.086628 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8309" for this suite. @ 09/28/24 13:53:42.09
â€¢ [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/28/24 13:53:42.096
  I0928 13:53:42.096314 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 13:53:42.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:53:42.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:53:42.115
  STEP: Creating service test in namespace statefulset-2220 @ 09/28/24 13:53:42.118
  STEP: Creating statefulset ss in namespace statefulset-2220 @ 09/28/24 13:53:42.13
  I0928 13:53:42.140924 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0928 13:53:42.347343      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:43.348150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:44.348361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:45.348554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:46.348759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:47.348922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:48.349137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:49.349356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:50.349447      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:51.349692      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:53:52.140086 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/28/24 13:53:52.147
  STEP: Getting /status @ 09/28/24 13:53:52.157
  I0928 13:53:52.161183 18 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/28/24 13:53:52.161
  I0928 13:53:52.170134 18 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/28/24 13:53:52.17
  I0928 13:53:52.172000 18 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0928 13:53:52.172028 18 statefulset.go:1111] Found Statefulset ss in namespace statefulset-2220 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 13:53:52.172037 18 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/28/24 13:53:52.172
  I0928 13:53:52.172063 18 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0928 13:53:52.179291 18 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/28/24 13:53:52.179
  I0928 13:53:52.181186 18 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0928 13:53:52.181262 18 statefulset.go:138] Deleting all statefulset in ns statefulset-2220
  I0928 13:53:52.184420 18 rest.go:150] Scaling statefulset ss to 0
  E0928 13:53:52.350253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:53.351160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:54.351384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:55.351603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:56.351839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:57.351956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:58.352001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:53:59.352192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:00.352468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:01.353361      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:54:02.200285 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:54:02.203612 18 rest.go:88] Deleting statefulset ss
  I0928 13:54:02.218104 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2220" for this suite. @ 09/28/24 13:54:02.222
â€¢ [20.132 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/28/24 13:54:02.227
  I0928 13:54:02.227886 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:54:02.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:54:02.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:54:02.249
  STEP: Creating a pod to test substitution in container's command @ 09/28/24 13:54:02.252
  E0928 13:54:02.354408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:03.355194      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:04.355674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:05.355722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:54:06.275
  I0928 13:54:06.279693 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod var-expansion-7739f693-3e1b-42b9-adc9-7fc0b91bbdfb container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 13:54:06.285
  I0928 13:54:06.304008 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2684" for this suite. @ 09/28/24 13:54:06.307
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/28/24 13:54:06.314
  I0928 13:54:06.314114 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/28/24 13:54:06.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:54:06.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:54:06.335
  I0928 13:54:06.338605 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 13:54:06.356721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:07.357811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:08.358459      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:09.358670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:10.358715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:11.358810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:12.359817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:13.360084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:14.360831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:15.361023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:16.361552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:17.361765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:18.362709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:19.362764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:20.363298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:21.363394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:22.363774      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:23.364111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:24.364621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:25.364707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:26.364923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:27.365001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:28.366020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:29.366109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:30.366818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:31.367753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:32.368594      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:33.368700      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:34.368790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:35.368947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:36.369824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:37.370098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:38.370362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:39.370546      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:40.370842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:41.371104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:42.371759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:43.371848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:44.372251      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:45.372410      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:46.372600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:47.372775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:48.373422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:49.373690      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:50.374583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:51.374724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:52.375749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:53.375834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:54.376001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:55.376109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:56.376543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:57.376715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:58.377601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:54:59.377723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:00.378180      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:01.378347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:02.378841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:03.379005      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:04.380369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:05.380087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:06.338848 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 13:55:06.343788 18 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/28/24 13:55:06.343
  E0928 13:55:06.380114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:06.564588 18 taints.go:463] Pod1 is running on ip-172-31-6-28. Tainting Node
  E0928 13:55:07.380230      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:08.381262      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:08.788355 18 taints.go:471] Pod2 is running on ip-172-31-6-28. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/28/24 13:55:08.788
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/28/24 13:55:08.799
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/28/24 13:55:08.802
  E0928 13:55:09.381307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:10.381527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:11.381666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:12.381886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:13.382198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:14.382273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:14.753757 18 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0928 13:55:15.382423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:16.382672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:17.382768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:18.382958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:19.383135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:20.383352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:21.383537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:22.383685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:23.383806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:24.383886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:25.384135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:26.384242      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:27.384336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:28.385087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:29.385929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:30.386030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:31.386786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:32.386969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:33.387823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:34.388530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:34.788611 18 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/28/24 13:55:34.798
  I0928 13:55:34.802205 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6140" for this suite. @ 09/28/24 13:55:34.805
â€¢ [88.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/28/24 13:55:34.812
  I0928 13:55:34.812841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename resourcequota @ 09/28/24 13:55:34.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:55:34.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:55:34.838
  STEP: Counting existing ResourceQuota @ 09/28/24 13:55:34.841
  E0928 13:55:35.388796      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:36.389710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:37.389735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:38.390643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:39.391381      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/28/24 13:55:39.845
  STEP: Ensuring resource quota status is calculated @ 09/28/24 13:55:39.849
  E0928 13:55:40.392458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:41.392597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:41.855104 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3565" for this suite. @ 09/28/24 13:55:41.859
â€¢ [7.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/28/24 13:55:41.866
  I0928 13:55:41.866822 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 13:55:41.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:55:41.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:55:41.887
  STEP: creating a replication controller @ 09/28/24 13:55:41.89
  I0928 13:55:41.890266 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 create -f -'
  I0928 13:55:41.970275 18 builder.go:146] stderr: ""
  I0928 13:55:41.970311 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/28/24 13:55:41.97
  I0928 13:55:41.970409 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 13:55:42.013730 18 builder.go:146] stderr: ""
  I0928 13:55:42.013764 18 builder.go:147] stdout: "update-demo-nautilus-5frx5 update-demo-nautilus-j7d24 "
  I0928 13:55:42.013802 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:42.055580 18 builder.go:146] stderr: ""
  I0928 13:55:42.055615 18 builder.go:147] stdout: ""
  I0928 13:55:42.055633 18 kubectl.go:2502] update-demo-nautilus-5frx5 is created but not running
  E0928 13:55:42.392711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:43.393147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:44.395063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:45.393719      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:46.393877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:47.056714 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 13:55:47.101523 18 builder.go:146] stderr: ""
  I0928 13:55:47.101579 18 builder.go:147] stdout: "update-demo-nautilus-5frx5 update-demo-nautilus-j7d24 "
  I0928 13:55:47.101622 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:47.142939 18 builder.go:146] stderr: ""
  I0928 13:55:47.142988 18 builder.go:147] stdout: "true"
  I0928 13:55:47.143033 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 13:55:47.185051 18 builder.go:146] stderr: ""
  I0928 13:55:47.185086 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 13:55:47.185098 18 kubectl.go:2393] validating pod update-demo-nautilus-5frx5
  I0928 13:55:47.191186 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 13:55:47.191240 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 13:55:47.191254 18 kubectl.go:2520] update-demo-nautilus-5frx5 is verified up and running
  I0928 13:55:47.191291 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-j7d24 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:47.233877 18 builder.go:146] stderr: ""
  I0928 13:55:47.233913 18 builder.go:147] stdout: "true"
  I0928 13:55:47.233971 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-j7d24 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 13:55:47.276802 18 builder.go:146] stderr: ""
  I0928 13:55:47.276837 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 13:55:47.276848 18 kubectl.go:2393] validating pod update-demo-nautilus-j7d24
  I0928 13:55:47.282799 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 13:55:47.282848 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 13:55:47.282859 18 kubectl.go:2520] update-demo-nautilus-j7d24 is verified up and running
  STEP: scaling down the replication controller @ 09/28/24 13:55:47.282
  I0928 13:55:47.283619 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0928 13:55:47.283648 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0928 13:55:47.394965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:48.341288 18 builder.go:146] stderr: ""
  I0928 13:55:48.341324 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/28/24 13:55:48.341
  I0928 13:55:48.341404 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 13:55:48.386207 18 builder.go:146] stderr: ""
  I0928 13:55:48.386244 18 builder.go:147] stdout: "update-demo-nautilus-5frx5 update-demo-nautilus-j7d24 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/28/24 13:55:48.386
  E0928 13:55:48.395264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:49.395372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:50.395484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:51.395591      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:52.395699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:53.386814 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0928 13:55:53.396229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:53.430345 18 builder.go:146] stderr: ""
  I0928 13:55:53.430378 18 builder.go:147] stdout: "update-demo-nautilus-5frx5 "
  I0928 13:55:53.430425 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:53.477145 18 builder.go:146] stderr: ""
  I0928 13:55:53.477189 18 builder.go:147] stdout: "true"
  I0928 13:55:53.477238 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 13:55:53.520241 18 builder.go:146] stderr: ""
  I0928 13:55:53.520277 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 13:55:53.520287 18 kubectl.go:2393] validating pod update-demo-nautilus-5frx5
  I0928 13:55:53.525509 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 13:55:53.525547 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 13:55:53.525572 18 kubectl.go:2520] update-demo-nautilus-5frx5 is verified up and running
  STEP: scaling up the replication controller @ 09/28/24 13:55:53.525
  I0928 13:55:53.526284 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0928 13:55:53.526310 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0928 13:55:54.397642      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:55:54.587928 18 builder.go:146] stderr: ""
  I0928 13:55:54.587971 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/28/24 13:55:54.587
  I0928 13:55:54.588052 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 13:55:54.659796 18 builder.go:146] stderr: ""
  I0928 13:55:54.659841 18 builder.go:147] stdout: "update-demo-nautilus-5frx5 update-demo-nautilus-jppvr "
  I0928 13:55:54.660136 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:54.728714 18 builder.go:146] stderr: ""
  I0928 13:55:54.728757 18 builder.go:147] stdout: "true"
  I0928 13:55:54.728802 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-5frx5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 13:55:54.797831 18 builder.go:146] stderr: ""
  I0928 13:55:54.798087 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 13:55:54.798134 18 kubectl.go:2393] validating pod update-demo-nautilus-5frx5
  I0928 13:55:54.802886 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 13:55:54.802934 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 13:55:54.802944 18 kubectl.go:2520] update-demo-nautilus-5frx5 is verified up and running
  I0928 13:55:54.802981 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-jppvr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 13:55:54.867863 18 builder.go:146] stderr: ""
  I0928 13:55:54.867911 18 builder.go:147] stdout: "true"
  I0928 13:55:54.867955 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods update-demo-nautilus-jppvr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 13:55:54.935057 18 builder.go:146] stderr: ""
  I0928 13:55:54.935116 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 13:55:54.935129 18 kubectl.go:2393] validating pod update-demo-nautilus-jppvr
  I0928 13:55:54.941014 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 13:55:54.941067 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 13:55:54.941079 18 kubectl.go:2520] update-demo-nautilus-jppvr is verified up and running
  STEP: using delete to clean up resources @ 09/28/24 13:55:54.941
  I0928 13:55:54.941143 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 delete --grace-period=0 --force -f -'
  I0928 13:55:55.007324 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 13:55:55.007415 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0928 13:55:55.007525 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get rc,svc -l name=update-demo --no-headers'
  I0928 13:55:55.069046 18 builder.go:146] stderr: "No resources found in kubectl-5090 namespace.\n"
  I0928 13:55:55.069084 18 builder.go:147] stdout: ""
  I0928 13:55:55.069186 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-5090 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0928 13:55:55.113763 18 builder.go:146] stderr: ""
  I0928 13:55:55.113813 18 builder.go:147] stdout: ""
  I0928 13:55:55.113920 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5090" for this suite. @ 09/28/24 13:55:55.118
â€¢ [13.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/28/24 13:55:55.124
  I0928 13:55:55.124938 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/28/24 13:55:55.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:55:55.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:55:55.178
  STEP: creating a target pod @ 09/28/24 13:55:55.181
  E0928 13:55:55.397672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:56.397793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:57.397892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:55:58.398120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/28/24 13:55:59.207
  E0928 13:55:59.398795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:00.398895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:01.399367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:02.399490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/28/24 13:56:03.23
  I0928 13:56:03.230124 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6244 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:56:03.230140 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:56:03.230539 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:56:03.230599 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6244/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0928 13:56:03.274355 18 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/28/24 13:56:03.286
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/28/24 13:56:03.291
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/28/24 13:56:03.301
  I0928 13:56:03.305220 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6244" for this suite. @ 09/28/24 13:56:03.311
â€¢ [8.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/28/24 13:56:03.318
  I0928 13:56:03.318949 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename replicaset @ 09/28/24 13:56:03.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:03.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:03.339
  STEP: Create a Replicaset @ 09/28/24 13:56:03.346
  STEP: Verify that the required pods have come up. @ 09/28/24 13:56:03.351
  I0928 13:56:03.354372 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0928 13:56:03.399838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:04.399966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:05.400070      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:06.400175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:07.400356      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:56:08.360751 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/28/24 13:56:08.36
  STEP: Getting /status @ 09/28/24 13:56:08.36
  I0928 13:56:08.363905 18 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/28/24 13:56:08.363
  I0928 13:56:08.372407 18 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/28/24 13:56:08.372
  I0928 13:56:08.374253 18 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0928 13:56:08.374331 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.374387 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.374546 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.374582 18 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1058 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0928 13:56:08.374595 18 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/28/24 13:56:08.374
  I0928 13:56:08.374673 18 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0928 13:56:08.381270 18 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/28/24 13:56:08.381
  I0928 13:56:08.382959 18 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0928 13:56:08.383011 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.383056 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.383097 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.383110 18 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1058 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0928 13:56:08.383155 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0928 13:56:08.383211 18 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1058 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0928 13:56:08.383223 18 replica_set.go:729] Replicaset test-rs has a patched status
  I0928 13:56:08.383343 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1058" for this suite. @ 09/28/24 13:56:08.386
â€¢ [5.074 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/28/24 13:56:08.392
  I0928 13:56:08.392988 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename var-expansion @ 09/28/24 13:56:08.393
  E0928 13:56:08.400765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:08.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:08.413
  STEP: Creating a pod to test substitution in volume subpath @ 09/28/24 13:56:08.417
  E0928 13:56:09.400999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:10.401288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:11.401413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:12.401766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:56:12.442
  I0928 13:56:12.445868 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod var-expansion-5b64044f-494c-4a3a-9404-1506f3df354e container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 13:56:12.462
  I0928 13:56:12.478441 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7720" for this suite. @ 09/28/24 13:56:12.482
â€¢ [4.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/28/24 13:56:12.489
  I0928 13:56:12.489922 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:56:12.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:12.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:12.511
  STEP: Creating secret with name secret-test-13a4aab8-a6e7-456f-bb5b-6b54481d4b11 @ 09/28/24 13:56:12.514
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:56:12.519
  E0928 13:56:13.401941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:14.402789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:15.403096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:16.403315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:56:16.544
  I0928 13:56:16.548552 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-secrets-2031637f-d223-49aa-9c34-eb4fbc53855a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:56:16.555
  I0928 13:56:16.571994 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-88" for this suite. @ 09/28/24 13:56:16.575
â€¢ [4.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/28/24 13:56:16.582
  I0928 13:56:16.582235 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-pred @ 09/28/24 13:56:16.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:16.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:16.606
  I0928 13:56:16.609829 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0928 13:56:16.616702 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0928 13:56:16.619296 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-43-233 before test
  I0928 13:56:16.628893 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hwx5d from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:50 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.628911 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:56:16.628917 18 predicates.go:957] calico-node-w4t86 from kube-system started at 2024-09-28 12:11:04 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.628928 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:56:16.628933 18 predicates.go:957] sonobuoy-e2e-job-3786396138ca4f60 from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:56:16.628938 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0928 13:56:16.628943 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:56:16.628948 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:56:16.628952 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:56:16.628956 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:56:16.628961 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-6-28 before test
  I0928 13:56:16.641379 18 predicates.go:957] ephemeral-containers-target-pod from ephemeral-containers-test-6244 started at 2024-09-28 13:55:55 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.641398 18 predicates.go:959] 	Container test-container-1 ready: true, restart count 0
  I0928 13:56:16.641404 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hsmqh from ingress-nginx-kubernetes-worker started at 2024-09-28 13:55:34 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.641409 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:56:16.641414 18 predicates.go:957] calico-node-5nq6s from kube-system started at 2024-09-28 12:10:43 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.641418 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:56:16.641423 18 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-28 12:16:46 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.641429 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0928 13:56:16.641434 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-rsrhj from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:56:16.641438 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:56:16.641442 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0928 13:56:16.641447 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-80 before test
  I0928 13:56:16.650966 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gxfnw from ingress-nginx-kubernetes-worker started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.650984 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0928 13:56:16.650992 18 predicates.go:957] calico-node-4k796 from kube-system started at 2024-09-28 12:10:53 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.650997 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0928 13:56:16.651005 18 predicates.go:957] coredns-5b4857d7c8-pb4s9 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.651011 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0928 13:56:16.651016 18 predicates.go:957] kube-state-metrics-5d7bdccd49-ltzpt from kube-system started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.651021 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0928 13:56:16.651026 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-64tv5 from kube-system started at 2024-09-28 12:08:45 +0000 UTC (2 container statuses recorded)
  I0928 13:56:16.651031 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0928 13:56:16.651037 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0928 13:56:16.651043 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-t64jl from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.651050 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0928 13:56:16.651055 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-cm655 from kubernetes-dashboard started at 2024-09-28 12:08:45 +0000 UTC (1 container statuses recorded)
  I0928 13:56:16.651060 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0928 13:56:16.651066 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-n5wgl from sonobuoy started at 2024-09-28 12:16:48 +0000 UTC (2 container statuses recorded)
  I0928 13:56:16.651071 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0928 13:56:16.651076 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-43-233 @ 09/28/24 13:56:16.672
  STEP: verifying the node has the label node ip-172-31-6-28 @ 09/28/24 13:56:16.686
  STEP: verifying the node has the label node ip-172-31-68-80 @ 09/28/24 13:56:16.702
  I0928 13:56:16.718183 18 predicates.go:372] Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node ip-172-31-6-28
  I0928 13:56:16.718207 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-gxfnw requesting resource cpu=0m on Node ip-172-31-68-80
  I0928 13:56:16.718211 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-hsmqh requesting resource cpu=0m on Node ip-172-31-6-28
  I0928 13:56:16.718216 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-hwx5d requesting resource cpu=0m on Node ip-172-31-43-233
  I0928 13:56:16.718221 18 predicates.go:372] Pod calico-node-4k796 requesting resource cpu=250m on Node ip-172-31-68-80
  I0928 13:56:16.718227 18 predicates.go:372] Pod calico-node-5nq6s requesting resource cpu=250m on Node ip-172-31-6-28
  I0928 13:56:16.718232 18 predicates.go:372] Pod calico-node-w4t86 requesting resource cpu=250m on Node ip-172-31-43-233
  I0928 13:56:16.718237 18 predicates.go:372] Pod coredns-5b4857d7c8-pb4s9 requesting resource cpu=100m on Node ip-172-31-68-80
  I0928 13:56:16.718243 18 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-ltzpt requesting resource cpu=0m on Node ip-172-31-68-80
  I0928 13:56:16.718247 18 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-64tv5 requesting resource cpu=5m on Node ip-172-31-68-80
  I0928 13:56:16.718252 18 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-t64jl requesting resource cpu=0m on Node ip-172-31-68-80
  I0928 13:56:16.718257 18 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-cm655 requesting resource cpu=0m on Node ip-172-31-68-80
  I0928 13:56:16.718261 18 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-6-28
  I0928 13:56:16.718266 18 predicates.go:372] Pod sonobuoy-e2e-job-3786396138ca4f60 requesting resource cpu=0m on Node ip-172-31-43-233
  I0928 13:56:16.718271 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-n5wgl requesting resource cpu=0m on Node ip-172-31-68-80
  I0928 13:56:16.718276 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-rsrhj requesting resource cpu=0m on Node ip-172-31-6-28
  I0928 13:56:16.718281 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-8c0a573978a74323-v6qld requesting resource cpu=0m on Node ip-172-31-43-233
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/28/24 13:56:16.718
  I0928 13:56:16.718311 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-6-28
  I0928 13:56:16.727190 18 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-68-80
  I0928 13:56:16.733916 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-43-233
  E0928 13:56:17.403417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:18.404085      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/28/24 13:56:18.756
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef.17f96cff8314dc80], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1730/filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef to ip-172-31-43-233] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef.17f96cff9fd227ab], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef.17f96cffa0642bf3], Reason = [Created], Message = [Created container filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef.17f96cffa282c9e2], Reason = [Started], Message = [Started container filler-pod-4f204ce9-8524-4e6d-85d4-14c1c1d881ef] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb.17f96cff82e1a09a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1730/filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb to ip-172-31-68-80] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb.17f96cff9ee163bd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb.17f96cff9fe67cc9], Reason = [Created], Message = [Created container filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb.17f96cffa21a4815], Reason = [Started], Message = [Started container filler-pod-57d84f2e-4b48-4289-ac7e-4a5fa5b075cb] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b.17f96cff8276a9ea], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1730/filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b to ip-172-31-6-28] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b.17f96cff9ff345ec], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b.17f96cffa0e31a8d], Reason = [Created], Message = [Created container filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b.17f96cffa3587fe1], Reason = [Started], Message = [Started container filler-pod-a82683d6-ec22-40ff-8318-bcd44202077b] @ 09/28/24 13:56:18.76
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f96cfffba4a553], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 09/28/24 13:56:18.774
  E0928 13:56:19.404219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-43-233 @ 09/28/24 13:56:19.772
  STEP: verifying the node doesn't have the label node @ 09/28/24 13:56:19.784
  STEP: removing the label node off the node ip-172-31-6-28 @ 09/28/24 13:56:19.787
  STEP: verifying the node doesn't have the label node @ 09/28/24 13:56:19.797
  STEP: removing the label node off the node ip-172-31-68-80 @ 09/28/24 13:56:19.802
  STEP: verifying the node doesn't have the label node @ 09/28/24 13:56:19.813
  I0928 13:56:19.818715 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1730" for this suite. @ 09/28/24 13:56:19.823
â€¢ [3.248 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/28/24 13:56:19.83
  I0928 13:56:19.830298 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:56:19.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:19.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:19.85
  STEP: Creating configMap configmap-8262/configmap-test-88b6444b-b7eb-4bf3-831f-1052453c9b2a @ 09/28/24 13:56:19.853
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:56:19.858
  E0928 13:56:20.404777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:21.405755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:22.405806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:23.406279      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:56:23.877
  I0928 13:56:23.881228 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-configmaps-24c85690-fcd3-442f-a27b-c67132e398c4 container env-test: <nil>
  STEP: delete the pod @ 09/28/24 13:56:23.887
  I0928 13:56:23.904944 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8262" for this suite. @ 09/28/24 13:56:23.908
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/28/24 13:56:23.92
  I0928 13:56:23.920954 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename runtimeclass @ 09/28/24 13:56:23.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:23.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:23.942
  E0928 13:56:24.406393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:25.406491      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:56:25.973841 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5480" for this suite. @ 09/28/24 13:56:25.977
â€¢ [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/28/24 13:56:25.982
  I0928 13:56:25.982915 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subpath @ 09/28/24 13:56:25.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:26.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:26.007
  STEP: Setting up data @ 09/28/24 13:56:26.01
  STEP: Creating pod pod-subpath-test-configmap-xs8t @ 09/28/24 13:56:26.02
  STEP: Creating a pod to test atomic-volume-subpath @ 09/28/24 13:56:26.02
  E0928 13:56:26.406593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:27.406799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:28.407282      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:29.407455      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:30.407704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:31.407782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:32.407888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:33.408586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:34.409145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:35.409280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:36.409374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:37.409529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:38.409729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:39.409947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:40.411024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:41.411241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:42.411341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:43.412187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:44.412318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:45.412523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:46.413438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:47.413664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:56:48.089
  I0928 13:56:48.093262 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-subpath-test-configmap-xs8t container test-container-subpath-configmap-xs8t: <nil>
  STEP: delete the pod @ 09/28/24 13:56:48.1
  STEP: Deleting pod pod-subpath-test-configmap-xs8t @ 09/28/24 13:56:48.116
  I0928 13:56:48.116496 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-xs8t" in namespace "subpath-9736"
  I0928 13:56:48.120163 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9736" for this suite. @ 09/28/24 13:56:48.124
â€¢ [22.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/28/24 13:56:48.132
  I0928 13:56:48.132070 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 13:56:48.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:56:48.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:56:48.152
  STEP: Creating service test in namespace statefulset-9836 @ 09/28/24 13:56:48.155
  STEP: Looking for a node to schedule stateful set and pod @ 09/28/24 13:56:48.16
  STEP: Creating pod with conflicting port in namespace statefulset-9836 @ 09/28/24 13:56:48.164
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9836 @ 09/28/24 13:56:48.172
  E0928 13:56:48.414009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:49.414110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-9836 @ 09/28/24 13:56:50.18
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9836 @ 09/28/24 13:56:50.188
  I0928 13:56:50.201963 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-9836, name: ss-0, uid: 380e3508-df17-46c4-9718-022779ee15c7, status phase: Pending. Waiting for statefulset controller to delete.
  I0928 13:56:50.219960 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-9836, name: ss-0, uid: 380e3508-df17-46c4-9718-022779ee15c7, status phase: Failed. Waiting for statefulset controller to delete.
  I0928 13:56:50.236162 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-9836, name: ss-0, uid: 380e3508-df17-46c4-9718-022779ee15c7, status phase: Failed. Waiting for statefulset controller to delete.
  I0928 13:56:50.240135 18 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-9836
  STEP: Removing pod with conflicting port in namespace statefulset-9836 @ 09/28/24 13:56:50.24
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9836 and will be in running state @ 09/28/24 13:56:50.259
  E0928 13:56:50.414788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:51.415773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:56:52.267177 18 statefulset.go:138] Deleting all statefulset in ns statefulset-9836
  I0928 13:56:52.271166 18 rest.go:150] Scaling statefulset ss to 0
  E0928 13:56:52.416697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:53.416795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:54.418191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:55.418924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:56.419169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:57.419294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:58.420311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:56:59.420685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:00.420834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:01.421029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:57:02.287935 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:57:02.292550 18 rest.go:88] Deleting statefulset ss
  I0928 13:57:02.306048 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9836" for this suite. @ 09/28/24 13:57:02.309
â€¢ [14.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/28/24 13:57:02.315
  I0928 13:57:02.315221 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename field-validation @ 09/28/24 13:57:02.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:57:02.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:57:02.336
  STEP: apply creating a deployment @ 09/28/24 13:57:02.339
  I0928 13:57:02.355014 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9869" for this suite. @ 09/28/24 13:57:02.358
â€¢ [0.054 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/28/24 13:57:02.369
  I0928 13:57:02.369483 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 13:57:02.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:57:02.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:57:02.391
  STEP: Creating configMap with name configmap-test-volume-map-8942043d-8b8f-4ba3-ab04-a48c65b76ad2 @ 09/28/24 13:57:02.394
  STEP: Creating a pod to test consume configMaps @ 09/28/24 13:57:02.399
  E0928 13:57:02.421948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:03.422345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:04.425120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:05.422675      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:06.423206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:57:06.43
  I0928 13:57:06.434353 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-configmaps-7e5a91e1-afa0-47a7-b789-8770f8e7226e container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 13:57:06.44
  I0928 13:57:06.455508 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-442" for this suite. @ 09/28/24 13:57:06.459
â€¢ [4.097 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/28/24 13:57:06.465
  I0928 13:57:06.465961 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption @ 09/28/24 13:57:06.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:57:06.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:57:06.486
  I0928 13:57:06.501240 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 13:57:07.423413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:08.424396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:09.424702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:10.424782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:11.424893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:12.424965      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:13.425087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:14.425173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:15.425717      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:16.425816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:17.425938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:18.426151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:19.426729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:20.426921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:21.427042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:22.427137      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:23.427869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:24.429189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:25.429291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:26.429436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:27.430490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:28.431215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:29.432134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:30.432778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:31.433590      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:32.433852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:33.434878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:34.434989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:35.435076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:36.435397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:37.435681      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:38.435894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:39.436674      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:40.436780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:41.436878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:42.437759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:43.438269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:44.438540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:45.438701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:46.438826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:47.439030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:48.439130      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:49.439695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:50.439969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:51.440215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:52.440368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:53.441398      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:54.441571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:55.441788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:56.442695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:57.442801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:58.443168      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:57:59.443755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:00.443853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:01.444698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:02.444788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:03.444890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:04.445748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:05.446747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:06.447764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:06.506264 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/28/24 13:58:06.509
  I0928 13:58:06.529153 18 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0928 13:58:06.536379 18 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0928 13:58:06.556229 18 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0928 13:58:06.564045 18 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0928 13:58:06.578383 18 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I0928 13:58:06.585544 18 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/28/24 13:58:06.585
  E0928 13:58:07.448045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:08.448335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/28/24 13:58:08.613
  E0928 13:58:09.448392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:10.448463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:11.448760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:12.448999      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:12.691905 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2737" for this suite. @ 09/28/24 13:58:12.695
â€¢ [66.236 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/28/24 13:58:12.702
  I0928 13:58:12.702473 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename daemonsets @ 09/28/24 13:58:12.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:58:12.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:58:12.725
  STEP: Creating simple DaemonSet "daemon-set" @ 09/28/24 13:58:12.749
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/28/24 13:58:12.755
  I0928 13:58:12.760948 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:12.760976 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:12.763744 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:58:12.763758 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:58:13.449725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:13.761083 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:13.761135 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:13.764513 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0928 13:58:13.764548 18 fixtures.go:130] Node ip-172-31-43-233 is running 0 daemon pod, expected 1
  E0928 13:58:14.450781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:14.761388 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-71-80 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:14.761419 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-94-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0928 13:58:14.764720 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0928 13:58:14.764745 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/28/24 13:58:14.767
  I0928 13:58:14.772188 18 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/28/24 13:58:14.772
  I0928 13:58:14.782773 18 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/28/24 13:58:14.782
  I0928 13:58:14.784544 18 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0928 13:58:14.784662 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.784787 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.784862 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.784970 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.785082 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.785122 18 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8925 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0928 13:58:14.785132 18 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/28/24 13:58:14.785
  STEP: watching for the daemon set status to be patched @ 09/28/24 13:58:14.791
  I0928 13:58:14.793044 18 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0928 13:58:14.793163 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793236 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793341 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793434 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793507 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793524 18 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8925 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0928 13:58:14.793594 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0928 13:58:14.793643 18 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8925 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0928 13:58:14.793654 18 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/28/24 13:58:14.799
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8925, will wait for the garbage collector to delete the pods @ 09/28/24 13:58:14.799
  I0928 13:58:14.860803 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.377325ms
  I0928 13:58:14.961139 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.327902ms
  E0928 13:58:15.451025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:16.166150 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0928 13:58:16.166182 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0928 13:58:16.169688 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46685"},"items":null}

  I0928 13:58:16.172992 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46685"},"items":null}

  I0928 13:58:16.186552 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8925" for this suite. @ 09/28/24 13:58:16.191
â€¢ [3.499 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/28/24 13:58:16.201
  I0928 13:58:16.201748 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 13:58:16.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:58:16.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:58:16.221
  STEP: Creating service test in namespace statefulset-9126 @ 09/28/24 13:58:16.224
  STEP: Creating stateful set ss in namespace statefulset-9126 @ 09/28/24 13:58:16.229
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9126 @ 09/28/24 13:58:16.235
  I0928 13:58:16.238770 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0928 13:58:16.451162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:17.451374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:18.451666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:19.451932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:20.452426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:21.452935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:22.453127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:23.453408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:24.453472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:25.453760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:26.241540 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/28/24 13:58:26.241
  I0928 13:58:26.246040 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:58:26.327399 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:58:26.327437 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:58:26.327451 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:58:26.331730 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0928 13:58:26.453928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:27.454101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:28.454322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:29.454453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:30.454886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:31.455779      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:32.455877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:33.456142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:34.456236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:35.456366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:36.333146 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:58:36.333189 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0928 13:58:36.348262 18 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0928 13:58:36.348306 18 resource.go:175] ss-0  ip-172-31-6-28  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC  }]
  I0928 13:58:36.348312 18 resource.go:178] 
  I0928 13:58:36.348317 18 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E0928 13:58:36.456476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:37.352829 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996165139s
  E0928 13:58:37.457022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:38.357112 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991557814s
  E0928 13:58:38.457313      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:39.362268 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.986904081s
  E0928 13:58:39.457400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:40.367150 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.982081218s
  E0928 13:58:40.458288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:41.372390 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.977270852s
  E0928 13:58:41.458589      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:42.377648 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.972039148s
  E0928 13:58:42.458919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:43.383718 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.965917065s
  E0928 13:58:43.459867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:44.389303 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.960745328s
  E0928 13:58:44.460620      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:45.394687 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 954.991881ms
  E0928 13:58:45.460951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9126 @ 09/28/24 13:58:46.394
  I0928 13:58:46.400539 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0928 13:58:46.460995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:46.473699 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0928 13:58:46.473732 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:58:46.473742 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:58:46.473784 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:58:46.555828 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0928 13:58:46.555865 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:58:46.555874 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:58:46.555919 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0928 13:58:46.638322 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0928 13:58:46.638361 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0928 13:58:46.638371 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0928 13:58:46.642753 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 13:58:46.642778 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0928 13:58:46.642786 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/28/24 13:58:46.642
  I0928 13:58:46.646870 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:58:46.721798 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:58:46.721836 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:58:46.721845 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:58:46.721889 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:58:46.811762 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:58:46.811799 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:58:46.811808 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:58:46.811850 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=statefulset-9126 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0928 13:58:46.899748 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0928 13:58:46.899785 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0928 13:58:46.899793 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0928 13:58:46.899802 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0928 13:58:46.903635 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0928 13:58:47.461298      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:48.462350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:49.462483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:50.462641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:51.462729      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:52.462847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:53.462926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:54.463009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:55.463299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:58:56.463497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:56.908784 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:58:56.908813 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:58:56.908820 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0928 13:58:56.921085 18 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0928 13:58:56.921130 18 resource.go:175] ss-0  ip-172-31-6-28    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC  }]
  I0928 13:58:56.921142 18 resource.go:175] ss-1  ip-172-31-68-80   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC  }]
  I0928 13:58:56.921151 18 resource.go:175] ss-2  ip-172-31-43-233  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC  }]
  I0928 13:58:56.921154 18 resource.go:178] 
  I0928 13:58:56.921158 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E0928 13:58:57.463614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:57.926824 18 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0928 13:58:57.926879 18 resource.go:175] ss-0  ip-172-31-6-28    Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:16 +0000 UTC  }]
  I0928 13:58:57.926894 18 resource.go:175] ss-2  ip-172-31-43-233  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:47 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-28 13:58:36 +0000 UTC  }]
  I0928 13:58:57.926899 18 resource.go:178] 
  I0928 13:58:57.926906 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  E0928 13:58:58.464644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:58.931790 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.990719644s
  E0928 13:58:59.465479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:58:59.936221 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.985723682s
  E0928 13:59:00.465718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:00.941259 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.981464683s
  E0928 13:59:01.465800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:01.946017 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.976368998s
  E0928 13:59:02.466801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:02.951240 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.97139111s
  E0928 13:59:03.467789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:03.956670 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.966285716s
  E0928 13:59:04.468329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:04.961390 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.960947647s
  E0928 13:59:05.468789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:05.966719 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 955.3232ms
  E0928 13:59:06.468925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9126 @ 09/28/24 13:59:06.967
  I0928 13:59:06.972380 18 rest.go:150] Scaling statefulset ss to 0
  I0928 13:59:06.979506 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:59:06.983285 18 statefulset.go:138] Deleting all statefulset in ns statefulset-9126
  I0928 13:59:06.987011 18 rest.go:150] Scaling statefulset ss to 0
  I0928 13:59:06.992271 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0928 13:59:06.996005 18 rest.go:88] Deleting statefulset ss
  I0928 13:59:07.008739 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9126" for this suite. @ 09/28/24 13:59:07.012
â€¢ [50.817 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/28/24 13:59:07.018
  I0928 13:59:07.018612 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename runtimeclass @ 09/28/24 13:59:07.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:07.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:07.037
  STEP: getting /apis @ 09/28/24 13:59:07.04
  STEP: getting /apis/node.k8s.io @ 09/28/24 13:59:07.043
  STEP: getting /apis/node.k8s.io/v1 @ 09/28/24 13:59:07.045
  STEP: creating @ 09/28/24 13:59:07.046
  STEP: watching @ 09/28/24 13:59:07.063
  I0928 13:59:07.063916 18 runtimeclass.go:275] starting watch
  STEP: getting @ 09/28/24 13:59:07.071
  STEP: listing @ 09/28/24 13:59:07.073
  STEP: patching @ 09/28/24 13:59:07.076
  STEP: updating @ 09/28/24 13:59:07.081
  I0928 13:59:07.085379 18 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/28/24 13:59:07.085
  STEP: deleting a collection @ 09/28/24 13:59:07.097
  I0928 13:59:07.111578 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7829" for this suite. @ 09/28/24 13:59:07.115
â€¢ [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/28/24 13:59:07.123
  I0928 13:59:07.123048 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pods @ 09/28/24 13:59:07.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:07.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:07.144
  STEP: Create set of pods @ 09/28/24 13:59:07.147
  I0928 13:59:07.154105 18 pods.go:871] created test-pod-1
  I0928 13:59:07.160597 18 pods.go:871] created test-pod-2
  I0928 13:59:07.168127 18 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/28/24 13:59:07.168
  E0928 13:59:07.468955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:08.469080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/28/24 13:59:09.195
  I0928 13:59:09.199500 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0928 13:59:09.469874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:10.200148 18 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E0928 13:59:10.470557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:11.201259 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9214" for this suite. @ 09/28/24 13:59:11.205
â€¢ [4.090 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/28/24 13:59:11.212
  I0928 13:59:11.212981 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename gc @ 09/28/24 13:59:11.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:11.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:11.23
  STEP: create the deployment @ 09/28/24 13:59:11.233
  W0928 13:59:11.238391      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/28/24 13:59:11.238
  E0928 13:59:11.471652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/28/24 13:59:11.747
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/28/24 13:59:11.755
  STEP: Gathering metrics @ 09/28/24 13:59:12.273
  W0928 13:59:12.278933      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0928 13:59:12.278964 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0928 13:59:12.279117 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8835" for this suite. @ 09/28/24 13:59:12.282
â€¢ [1.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/28/24 13:59:12.287
  I0928 13:59:12.287713 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 13:59:12.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:12.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:12.312
  STEP: Creating secret with name secret-test-dfc9f2fc-bf57-45e3-9899-ee436eef7023 @ 09/28/24 13:59:12.316
  STEP: Creating a pod to test consume secrets @ 09/28/24 13:59:12.32
  E0928 13:59:12.471857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:13.472443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:59:14.335
  I0928 13:59:14.340345 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-secrets-2a0a9e70-524f-4083-89e4-08555d96d941 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 13:59:14.357
  I0928 13:59:14.375268 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9925" for this suite. @ 09/28/24 13:59:14.38
â€¢ [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/28/24 13:59:14.388
  I0928 13:59:14.388847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 13:59:14.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:14.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:14.41
  STEP: Creating a pod to test downward api env vars @ 09/28/24 13:59:14.416
  E0928 13:59:14.472937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:15.473080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 13:59:16.436
  I0928 13:59:16.439231 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod downward-api-2b163d95-f8ce-4adc-992b-400f7c888a5d container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 13:59:16.445
  I0928 13:59:16.461814 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-907" for this suite. @ 09/28/24 13:59:16.465
â€¢ [2.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/28/24 13:59:16.47
  I0928 13:59:16.470971 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pod-network-test @ 09/28/24 13:59:16.471
  E0928 13:59:16.473794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:16.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:16.491
  STEP: Performing setup for networking test in namespace pod-network-test-2467 @ 09/28/24 13:59:16.494
  STEP: creating a selector @ 09/28/24 13:59:16.494
  STEP: Creating the service pods in kubernetes @ 09/28/24 13:59:16.494
  I0928 13:59:16.494539 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0928 13:59:17.474877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:18.474942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:19.475805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:20.475878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:21.475975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:22.476065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:23.476150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:24.476452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:25.476725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:26.477785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:27.477942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:28.478245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:29.478449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:30.478699      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:31.478814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:32.478984      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:33.479157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:34.479243      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:35.479375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:36.479618      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:37.480647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:38.480755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/28/24 13:59:38.602
  E0928 13:59:39.481112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:40.481215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:40.621026 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0928 13:59:40.621057 18 networking.go:42] Breadth first check of 192.168.38.119 on host 172.31.43.233...
  I0928 13:59:40.624501 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.73:9080/dial?request=hostname&protocol=http&host=192.168.38.119&port=8083&tries=1'] Namespace:pod-network-test-2467 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:59:40.624522 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:59:40.624927 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:59:40.624968 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2467/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.73%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.38.119%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:59:40.666426 18 utils.go:356] Waiting for responses: map[]
  I0928 13:59:40.666459 18 utils.go:360] reached 192.168.38.119 after 0/1 tries
  I0928 13:59:40.666468 18 networking.go:42] Breadth first check of 192.168.12.113 on host 172.31.6.28...
  I0928 13:59:40.670876 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.73:9080/dial?request=hostname&protocol=http&host=192.168.12.113&port=8083&tries=1'] Namespace:pod-network-test-2467 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:59:40.670897 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:59:40.671326 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:59:40.671364 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2467/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.73%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.12.113%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:59:40.710652 18 utils.go:356] Waiting for responses: map[]
  I0928 13:59:40.710688 18 utils.go:360] reached 192.168.12.113 after 0/1 tries
  I0928 13:59:40.710697 18 networking.go:42] Breadth first check of 192.168.107.222 on host 172.31.68.80...
  I0928 13:59:40.715374 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.12.73:9080/dial?request=hostname&protocol=http&host=192.168.107.222&port=8083&tries=1'] Namespace:pod-network-test-2467 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 13:59:40.715393 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 13:59:40.715765 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 13:59:40.715803 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2467/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.12.73%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.107.222%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0928 13:59:40.753316 18 utils.go:356] Waiting for responses: map[]
  I0928 13:59:40.753373 18 utils.go:360] reached 192.168.107.222 after 0/1 tries
  I0928 13:59:40.753383 18 networking.go:53] Going to retry 0 out of 3 pods....
  I0928 13:59:40.753475 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2467" for this suite. @ 09/28/24 13:59:40.757
â€¢ [24.294 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/28/24 13:59:40.765
  I0928 13:59:40.765552 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pv @ 09/28/24 13:59:40.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:40.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:40.796
  STEP: Creating initial PV and PVC @ 09/28/24 13:59:40.799
  I0928 13:59:40.799389 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8632" @ 09/28/24 13:59:40.812
  STEP: Listing PVCs in namespace "pv-8632" @ 09/28/24 13:59:40.818
  STEP: Patching the PV "pv-8632-nqgxf" @ 09/28/24 13:59:40.822
  STEP: Patching the PVC "pvc-2tdxd" @ 09/28/24 13:59:40.833
  STEP: Getting PV "pv-8632-nqgxf" @ 09/28/24 13:59:40.855
  STEP: Getting PVC "pvc-2tdxd" @ 09/28/24 13:59:40.86
  STEP: Deleting PVC "pvc-2tdxd" @ 09/28/24 13:59:40.863
  STEP: Confirm deletion of PVC "pvc-2tdxd" @ 09/28/24 13:59:40.873
  STEP: Deleting PV "pv-8632-nqgxf" @ 09/28/24 13:59:40.883
  STEP: Confirm deletion of PV "pv-8632-nqgxf" @ 09/28/24 13:59:40.892
  E0928 13:59:41.482177      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:42.482267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/28/24 13:59:42.901
  I0928 13:59:42.901317 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8632-9vjft" @ 09/28/24 13:59:42.911
  STEP: Updating the PVC "pvc-cnpn4" @ 09/28/24 13:59:42.923
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-cnpn4=updated" @ 09/28/24 13:59:42.931
  STEP: Deleting PVC "pvc-cnpn4" via DeleteCollection @ 09/28/24 13:59:42.935
  STEP: Confirm deletion of PVC "pvc-cnpn4" @ 09/28/24 13:59:42.95
  E0928 13:59:43.482403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:44.482713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8632-9vjft" via DeleteCollection @ 09/28/24 13:59:44.959
  STEP: Confirm deletion of PV "pv-8632-9vjft" @ 09/28/24 13:59:44.967
  E0928 13:59:45.482816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:46.482930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 13:59:46.975956 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0928 13:59:46.975992 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-cnpn4"
  I0928 13:59:46.979820 18 pv.go:193] Deleting PersistentVolume "pv-8632-9vjft"
  I0928 13:59:46.983089 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8632" for this suite. @ 09/28/24 13:59:46.986
â€¢ [6.226 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/28/24 13:59:46.991
  I0928 13:59:46.991998 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename pod-network-test @ 09/28/24 13:59:46.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 13:59:47.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 13:59:47.012
  STEP: Performing setup for networking test in namespace pod-network-test-6869 @ 09/28/24 13:59:47.015
  STEP: creating a selector @ 09/28/24 13:59:47.015
  STEP: Creating the service pods in kubernetes @ 09/28/24 13:59:47.015
  I0928 13:59:47.015229 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0928 13:59:47.483394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:48.483950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:49.484032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:50.484173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:51.484954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:52.485044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:53.485139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:54.485235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:55.486200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:56.486767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:57.487227      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 13:59:58.487329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/28/24 13:59:59.102
  E0928 13:59:59.488293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:00.488456      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:00:01.136131 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0928 14:00:01.136165 18 utils.go:496] Going to poll 192.168.38.99 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0928 14:00:01.139128 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.38.99:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:00:01.139149 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:00:01.139590 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:00:01.139639 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.38.99%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0928 14:00:01.179326 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0928 14:00:01.179465 18 utils.go:496] Going to poll 192.168.12.72 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0928 14:00:01.183763 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.12.72:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:00:01.183788 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:00:01.184172 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:00:01.184222 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.12.72%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0928 14:00:01.230168 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0928 14:00:01.230211 18 utils.go:496] Going to poll 192.168.107.244 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0928 14:00:01.234602 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.107.244:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:00:01.234624 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:00:01.234980 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:00:01.235021 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.107.244%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0928 14:00:01.275663 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0928 14:00:01.275793 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6869" for this suite. @ 09/28/24 14:00:01.28
â€¢ [14.296 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/28/24 14:00:01.288
  I0928 14:00:01.288514 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename webhook @ 09/28/24 14:00:01.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:00:01.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:00:01.31
  STEP: Setting up server cert @ 09/28/24 14:00:01.336
  E0928 14:00:01.489142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/28/24 14:00:01.59
  STEP: Deploying the webhook pod @ 09/28/24 14:00:01.599
  STEP: Wait for the deployment to be ready @ 09/28/24 14:00:01.612
  I0928 14:00:01.623204 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0928 14:00:02.489910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:03.490855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/28/24 14:00:03.636
  STEP: Verifying the service has paired with the endpoint @ 09/28/24 14:00:03.648
  E0928 14:00:04.491023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:00:04.649369 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0928 14:00:04.658306 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4603-crds.webhook.example.com via the AdmissionRegistration API @ 09/28/24 14:00:05.169
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/28/24 14:00:05.184
  E0928 14:00:05.491610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:06.491954      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:07.492374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:00:07.763983 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2771" for this suite. @ 09/28/24 14:00:07.768
  STEP: Destroying namespace "webhook-markers-5518" for this suite. @ 09/28/24 14:00:07.774
â€¢ [6.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/28/24 14:00:07.78
  I0928 14:00:07.780819 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename sched-preemption @ 09/28/24 14:00:07.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:00:07.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:00:07.803
  I0928 14:00:07.826724 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0928 14:00:08.493373      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:09.493816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:10.494713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:11.495278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:12.495685      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:13.496309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:14.496748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:15.497828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:16.498074      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:17.498329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:18.499258      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:19.499395      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:20.499595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:21.499720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:22.500787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:23.500898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:24.501054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:25.501240      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:26.501384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:27.501750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:28.501886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:29.502094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:30.502962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:31.503089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:32.503604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:33.503911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:34.504017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:35.505026      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:36.505756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:37.505830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:38.505936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:39.506760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:40.507762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:41.507865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:42.508751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:43.509234      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:44.509875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:45.510159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:46.511183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:47.511437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:48.512380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:49.512600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:50.512776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:51.512979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:52.513937      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:53.514216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:54.514348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:55.515285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:56.515746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:57.515848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:58.516749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:00:59.517759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:00.518635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:01.518839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:02.518943      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:03.519212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:04.519363      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:05.519889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:06.520511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:07.520727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:07.831942 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/28/24 14:01:07.835
  I0928 14:01:07.851664 18 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0928 14:01:07.858974 18 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0928 14:01:07.872871 18 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0928 14:01:07.879376 18 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0928 14:01:07.891498 18 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0928 14:01:07.898030 18 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/28/24 14:01:07.898
  E0928 14:01:08.521057      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:09.521852      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/28/24 14:01:09.923
  E0928 14:01:10.522452      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:11.522613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:12.522666      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:13.522898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:14.024384 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7584" for this suite. @ 09/28/24 14:01:14.029
â€¢ [66.255 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/28/24 14:01:14.036
  I0928 14:01:14.036046 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/28/24 14:01:14.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:14.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:14.056
  STEP: set up a multi version CRD @ 09/28/24 14:01:14.059
  I0928 14:01:14.059915 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 14:01:14.522975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:15.523806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:16.524551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/28/24 14:01:17.147
  STEP: check the unserved version gets removed @ 09/28/24 14:01:17.163
  E0928 14:01:17.525109      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/28/24 14:01:17.958
  E0928 14:01:18.533200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:19.533392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:20.423157 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3504" for this suite. @ 09/28/24 14:01:20.432
â€¢ [6.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/28/24 14:01:20.44
  I0928 14:01:20.440232 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename runtimeclass @ 09/28/24 14:01:20.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:20.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:20.456
  STEP: Deleting RuntimeClass runtimeclass-3144-delete-me @ 09/28/24 14:01:20.465
  STEP: Waiting for the RuntimeClass to disappear @ 09/28/24 14:01:20.47
  I0928 14:01:20.479422 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3144" for this suite. @ 09/28/24 14:01:20.483
â€¢ [0.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/28/24 14:01:20.488
  I0928 14:01:20.488538 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename proxy @ 09/28/24 14:01:20.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:20.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:20.511
  STEP: starting an echo server on multiple ports @ 09/28/24 14:01:20.521
  STEP: creating replication controller proxy-service-pr8cm in namespace proxy-3959 @ 09/28/24 14:01:20.521
  E0928 14:01:20.533988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:20.535275      18 runners.go:193] Created replication controller with name: proxy-service-pr8cm, namespace: proxy-3959, replica count: 1
  E0928 14:01:21.534601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:21.586778      18 runners.go:193] proxy-service-pr8cm Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0928 14:01:22.535184      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:22.587398      18 runners.go:193] proxy-service-pr8cm Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0928 14:01:22.591386 18 proxy.go:230] setup took 2.076396544s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/28/24 14:01:22.591
  I0928 14:01:22.602805 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 11.117248ms)
  I0928 14:01:22.602823 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 11.35274ms)
  I0928 14:01:22.602805 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 11.163095ms)
  I0928 14:01:22.602835 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 10.957406ms)
  I0928 14:01:22.603172 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 11.352011ms)
  I0928 14:01:22.603433 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 11.907931ms)
  I0928 14:01:22.603444 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 11.661954ms)
  I0928 14:01:22.603456 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 11.695943ms)
  I0928 14:01:22.603468 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 11.849091ms)
  I0928 14:01:22.603837 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 12.003185ms)
  I0928 14:01:22.603850 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 12.253046ms)
  I0928 14:01:22.603878 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 12.158528ms)
  I0928 14:01:22.603941 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 12.205803ms)
  I0928 14:01:22.603978 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 12.177741ms)
  I0928 14:01:22.603992 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 12.292855ms)
  I0928 14:01:22.604487 18 proxy.go:558] (0) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 12.643247ms)
  I0928 14:01:22.608698 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 4.190089ms)
  I0928 14:01:22.608730 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 4.144245ms)
  I0928 14:01:22.609019 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 4.227735ms)
  I0928 14:01:22.609153 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 4.50527ms)
  I0928 14:01:22.609541 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 4.848812ms)
  I0928 14:01:22.610061 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 5.382748ms)
  I0928 14:01:22.611125 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 6.460032ms)
  I0928 14:01:22.611274 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 6.672528ms)
  I0928 14:01:22.611274 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 6.466665ms)
  I0928 14:01:22.611419 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 6.663831ms)
  I0928 14:01:22.611485 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 6.709719ms)
  I0928 14:01:22.611938 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 7.39872ms)
  I0928 14:01:22.612049 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 7.309572ms)
  I0928 14:01:22.612379 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 7.670449ms)
  I0928 14:01:22.612385 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 7.662213ms)
  I0928 14:01:22.613090 18 proxy.go:558] (1) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 8.458425ms)
  I0928 14:01:22.622425 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.171788ms)
  I0928 14:01:22.623229 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.994271ms)
  I0928 14:01:22.623333 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.209441ms)
  I0928 14:01:22.623414 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.299543ms)
  I0928 14:01:22.623428 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 10.056989ms)
  I0928 14:01:22.623982 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 10.799451ms)
  I0928 14:01:22.627185 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 13.967608ms)
  I0928 14:01:22.627213 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 13.883574ms)
  I0928 14:01:22.627279 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 13.923574ms)
  I0928 14:01:22.627294 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 13.981047ms)
  I0928 14:01:22.628967 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 15.621452ms)
  I0928 14:01:22.628986 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 15.82151ms)
  I0928 14:01:22.628997 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 15.731415ms)
  I0928 14:01:22.629007 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 15.725581ms)
  I0928 14:01:22.629013 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 15.715368ms)
  I0928 14:01:22.629716 18 proxy.go:558] (2) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 16.327739ms)
  I0928 14:01:22.637236 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 7.374841ms)
  I0928 14:01:22.637236 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 7.411087ms)
  I0928 14:01:22.638399 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 8.523194ms)
  I0928 14:01:22.638399 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.437102ms)
  I0928 14:01:22.639699 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 9.921041ms)
  I0928 14:01:22.641135 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 11.332856ms)
  I0928 14:01:22.641425 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 11.433602ms)
  I0928 14:01:22.641539 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 11.532664ms)
  I0928 14:01:22.641719 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 11.773989ms)
  I0928 14:01:22.643481 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 13.64271ms)
  I0928 14:01:22.643500 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 13.612196ms)
  I0928 14:01:22.643510 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 13.536248ms)
  I0928 14:01:22.643513 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 13.609528ms)
  I0928 14:01:22.643522 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 13.496131ms)
  I0928 14:01:22.643528 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 13.602979ms)
  I0928 14:01:22.643533 18 proxy.go:558] (3) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 13.781676ms)
  I0928 14:01:22.653721 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 10.01584ms)
  I0928 14:01:22.653725 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 9.933736ms)
  I0928 14:01:22.653743 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 9.93038ms)
  I0928 14:01:22.653756 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 10.026861ms)
  I0928 14:01:22.653758 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 9.898305ms)
  I0928 14:01:22.653775 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.95176ms)
  I0928 14:01:22.653776 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.172556ms)
  I0928 14:01:22.653786 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.234653ms)
  I0928 14:01:22.653786 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 9.883009ms)
  I0928 14:01:22.653798 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 10.157183ms)
  I0928 14:01:22.653799 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 10.114841ms)
  I0928 14:01:22.653808 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 10.034093ms)
  I0928 14:01:22.654042 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 10.167627ms)
  I0928 14:01:22.654262 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.518257ms)
  I0928 14:01:22.654380 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.539895ms)
  I0928 14:01:22.655884 18 proxy.go:558] (4) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 11.992938ms)
  I0928 14:01:22.660695 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 4.767578ms)
  I0928 14:01:22.665020 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.840911ms)
  I0928 14:01:22.665066 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.953777ms)
  I0928 14:01:22.665085 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 8.948405ms)
  I0928 14:01:22.665105 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.95636ms)
  I0928 14:01:22.665133 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 8.865217ms)
  I0928 14:01:22.665136 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.942622ms)
  I0928 14:01:22.665230 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 9.185896ms)
  I0928 14:01:22.665412 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 9.330553ms)
  I0928 14:01:22.665463 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 9.226335ms)
  I0928 14:01:22.665605 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 9.318032ms)
  I0928 14:01:22.665634 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 9.426958ms)
  I0928 14:01:22.666416 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 10.194177ms)
  I0928 14:01:22.666420 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 10.167175ms)
  I0928 14:01:22.667431 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 11.408915ms)
  I0928 14:01:22.667448 18 proxy.go:558] (5) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 11.383534ms)
  I0928 14:01:22.672972 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 5.494308ms)
  I0928 14:01:22.672997 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 5.45592ms)
  I0928 14:01:22.679116 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 11.393514ms)
  I0928 14:01:22.679123 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 11.44903ms)
  I0928 14:01:22.679137 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 11.536645ms)
  I0928 14:01:22.679149 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 11.523512ms)
  I0928 14:01:22.679151 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 11.46101ms)
  I0928 14:01:22.679160 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 11.517645ms)
  I0928 14:01:22.679171 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 11.396413ms)
  I0928 14:01:22.679175 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 11.357116ms)
  I0928 14:01:22.679182 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 11.479902ms)
  I0928 14:01:22.679499 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 11.756306ms)
  I0928 14:01:22.680505 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 12.744992ms)
  I0928 14:01:22.680528 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 12.723927ms)
  I0928 14:01:22.680530 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 12.695786ms)
  I0928 14:01:22.680953 18 proxy.go:558] (6) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 13.164331ms)
  I0928 14:01:22.686074 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 5.10013ms)
  I0928 14:01:22.687696 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 6.682071ms)
  I0928 14:01:22.687715 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 6.537611ms)
  I0928 14:01:22.687722 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 6.514761ms)
  I0928 14:01:22.688946 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 7.702534ms)
  I0928 14:01:22.688963 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 7.693595ms)
  I0928 14:01:22.688948 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 7.786637ms)
  I0928 14:01:22.689136 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 8.039778ms)
  I0928 14:01:22.689546 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 8.422517ms)
  I0928 14:01:22.689631 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 8.5894ms)
  I0928 14:01:22.690012 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 8.951383ms)
  I0928 14:01:22.690767 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 9.482703ms)
  I0928 14:01:22.690775 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 9.630316ms)
  I0928 14:01:22.691253 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.029622ms)
  I0928 14:01:22.693211 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 12.018517ms)
  I0928 14:01:22.693219 18 proxy.go:558] (7) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 11.963852ms)
  I0928 14:01:22.699164 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 5.805093ms)
  I0928 14:01:22.700214 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 6.720677ms)
  I0928 14:01:22.700235 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 6.831485ms)
  I0928 14:01:22.700947 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 7.420253ms)
  I0928 14:01:22.701085 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 7.821942ms)
  I0928 14:01:22.701498 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 7.939776ms)
  I0928 14:01:22.701696 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 8.237166ms)
  I0928 14:01:22.701750 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 8.306497ms)
  I0928 14:01:22.702208 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.665187ms)
  I0928 14:01:22.702235 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 8.615426ms)
  I0928 14:01:22.702528 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 9.101313ms)
  I0928 14:01:22.702589 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 9.348489ms)
  I0928 14:01:22.702717 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 9.306912ms)
  I0928 14:01:22.703238 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 9.651311ms)
  I0928 14:01:22.703233 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.758079ms)
  I0928 14:01:22.703674 18 proxy.go:558] (8) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 10.300209ms)
  I0928 14:01:22.708063 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 4.369434ms)
  I0928 14:01:22.708375 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 4.614959ms)
  I0928 14:01:22.712079 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 8.183725ms)
  I0928 14:01:22.712419 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 8.478865ms)
  I0928 14:01:22.713432 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.56755ms)
  I0928 14:01:22.713471 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 9.634551ms)
  I0928 14:01:22.718530 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 14.740308ms)
  I0928 14:01:22.718579 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 14.699347ms)
  I0928 14:01:22.718586 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 14.856827ms)
  I0928 14:01:22.718595 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 14.77578ms)
  I0928 14:01:22.718602 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 14.646801ms)
  I0928 14:01:22.718604 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 14.755184ms)
  I0928 14:01:22.718613 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 14.691412ms)
  I0928 14:01:22.718613 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 14.643507ms)
  I0928 14:01:22.718622 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 14.714856ms)
  I0928 14:01:22.718967 18 proxy.go:558] (9) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 15.162975ms)
  I0928 14:01:22.724352 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 5.24952ms)
  I0928 14:01:22.725196 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 5.905491ms)
  I0928 14:01:22.726380 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 7.193773ms)
  I0928 14:01:22.726380 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 7.320185ms)
  I0928 14:01:22.726852 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 7.649907ms)
  I0928 14:01:22.727114 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 7.877233ms)
  I0928 14:01:22.727693 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 8.386975ms)
  I0928 14:01:22.727737 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.415625ms)
  I0928 14:01:22.728087 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.940704ms)
  I0928 14:01:22.728212 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 8.940716ms)
  I0928 14:01:22.728279 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 9.272198ms)
  I0928 14:01:22.728344 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.332701ms)
  I0928 14:01:22.729691 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 10.567567ms)
  I0928 14:01:22.729702 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.522013ms)
  I0928 14:01:22.729715 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 10.462337ms)
  I0928 14:01:22.729878 18 proxy.go:558] (10) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 10.658739ms)
  I0928 14:01:22.745026 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 14.886468ms)
  I0928 14:01:22.745025 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 15.127483ms)
  I0928 14:01:22.745058 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 14.835726ms)
  I0928 14:01:22.745062 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 15.088145ms)
  I0928 14:01:22.745070 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 15.008912ms)
  I0928 14:01:22.745072 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 15.060015ms)
  I0928 14:01:22.745079 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 14.96212ms)
  I0928 14:01:22.745081 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 15.05091ms)
  I0928 14:01:22.745087 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 14.924939ms)
  I0928 14:01:22.745090 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 14.992153ms)
  I0928 14:01:22.745096 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 14.942934ms)
  I0928 14:01:22.745099 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 14.893594ms)
  I0928 14:01:22.745105 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 15.152572ms)
  I0928 14:01:22.745107 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 14.917409ms)
  I0928 14:01:22.745323 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 15.248225ms)
  I0928 14:01:22.745609 18 proxy.go:558] (11) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 15.610703ms)
  I0928 14:01:22.753405 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 7.688021ms)
  I0928 14:01:22.753784 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 7.881718ms)
  I0928 14:01:22.754108 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 8.272645ms)
  I0928 14:01:22.754554 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 8.60618ms)
  I0928 14:01:22.754871 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 9.005266ms)
  I0928 14:01:22.755727 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 10.093894ms)
  I0928 14:01:22.756000 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 10.065968ms)
  I0928 14:01:22.756069 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 10.250146ms)
  I0928 14:01:22.756267 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 10.478627ms)
  I0928 14:01:22.756291 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 10.441588ms)
  I0928 14:01:22.756290 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 10.606083ms)
  I0928 14:01:22.756330 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.413393ms)
  I0928 14:01:22.756342 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.601609ms)
  I0928 14:01:22.756360 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 10.557507ms)
  I0928 14:01:22.756381 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.497643ms)
  I0928 14:01:22.757164 18 proxy.go:558] (12) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 11.390863ms)
  I0928 14:01:22.761803 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 4.619312ms)
  I0928 14:01:22.763207 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 5.938549ms)
  I0928 14:01:22.764482 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 7.211119ms)
  I0928 14:01:22.764527 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 7.094161ms)
  I0928 14:01:22.764720 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 7.529161ms)
  I0928 14:01:22.765018 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 7.633914ms)
  I0928 14:01:22.765032 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 7.698399ms)
  I0928 14:01:22.765058 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 7.69403ms)
  I0928 14:01:22.765069 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 7.670135ms)
  I0928 14:01:22.765683 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 8.457212ms)
  I0928 14:01:22.765762 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 8.413968ms)
  I0928 14:01:22.765761 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.347266ms)
  I0928 14:01:22.766324 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 9.082176ms)
  I0928 14:01:22.766324 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 9.002576ms)
  I0928 14:01:22.766663 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 9.359824ms)
  I0928 14:01:22.766696 18 proxy.go:558] (13) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 9.407503ms)
  I0928 14:01:22.771479 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 4.762155ms)
  I0928 14:01:22.771509 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 4.74242ms)
  I0928 14:01:22.773674 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 6.786383ms)
  I0928 14:01:22.774994 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.141939ms)
  I0928 14:01:22.774994 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 8.030898ms)
  I0928 14:01:22.775024 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.196843ms)
  I0928 14:01:22.775210 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 8.286805ms)
  I0928 14:01:22.775459 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 8.431738ms)
  I0928 14:01:22.775626 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 8.629244ms)
  I0928 14:01:22.776221 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 9.175184ms)
  I0928 14:01:22.778042 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 11.135834ms)
  I0928 14:01:22.782483 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 15.686322ms)
  I0928 14:01:22.783182 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 16.200123ms)
  I0928 14:01:22.783211 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 16.345635ms)
  I0928 14:01:22.783642 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 16.629734ms)
  I0928 14:01:22.783691 18 proxy.go:558] (14) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 16.744529ms)
  I0928 14:01:22.791777 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 8.041149ms)
  I0928 14:01:22.792428 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 8.548278ms)
  I0928 14:01:22.792465 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.514954ms)
  I0928 14:01:22.792731 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 8.898045ms)
  I0928 14:01:22.793067 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 9.212038ms)
  I0928 14:01:22.793445 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 9.645596ms)
  I0928 14:01:22.793459 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 9.523746ms)
  I0928 14:01:22.793462 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.434364ms)
  I0928 14:01:22.794014 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 10.283278ms)
  I0928 14:01:22.794043 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 10.079831ms)
  I0928 14:01:22.794414 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 10.406917ms)
  I0928 14:01:22.794411 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.432707ms)
  I0928 14:01:22.794434 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 10.53296ms)
  I0928 14:01:22.794437 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.522692ms)
  I0928 14:01:22.794445 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 10.629817ms)
  I0928 14:01:22.795327 18 proxy.go:558] (15) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 11.333896ms)
  I0928 14:01:22.802452 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 6.797468ms)
  I0928 14:01:22.802482 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 6.960773ms)
  I0928 14:01:22.803008 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 7.570633ms)
  I0928 14:01:22.803025 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 7.538087ms)
  I0928 14:01:22.803492 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 8.089023ms)
  I0928 14:01:22.803788 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.443253ms)
  I0928 14:01:22.804735 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 9.065587ms)
  I0928 14:01:22.804748 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 9.19567ms)
  I0928 14:01:22.805705 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 10.201463ms)
  I0928 14:01:22.805703 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 10.098764ms)
  I0928 14:01:22.805892 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 10.188465ms)
  I0928 14:01:22.805974 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.387969ms)
  I0928 14:01:22.805987 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 10.451731ms)
  I0928 14:01:22.805991 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 10.518241ms)
  I0928 14:01:22.805999 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.363217ms)
  I0928 14:01:22.806742 18 proxy.go:558] (16) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 11.124639ms)
  I0928 14:01:22.811779 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 5.010667ms)
  I0928 14:01:22.811801 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 4.997058ms)
  I0928 14:01:22.812975 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 5.939492ms)
  I0928 14:01:22.813038 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 6.174189ms)
  I0928 14:01:22.813054 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 6.161879ms)
  I0928 14:01:22.813467 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 6.417785ms)
  I0928 14:01:22.814681 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 7.722329ms)
  I0928 14:01:22.814855 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 7.881541ms)
  I0928 14:01:22.815027 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 8.019756ms)
  I0928 14:01:22.815050 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 8.107715ms)
  I0928 14:01:22.815050 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 8.212764ms)
  I0928 14:01:22.815068 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 8.005299ms)
  I0928 14:01:22.815308 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 8.317443ms)
  I0928 14:01:22.815471 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 8.449392ms)
  I0928 14:01:22.815855 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 8.940544ms)
  I0928 14:01:22.816829 18 proxy.go:558] (17) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 9.903376ms)
  I0928 14:01:22.824111 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 7.108476ms)
  I0928 14:01:22.824258 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 7.195254ms)
  I0928 14:01:22.824278 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 7.187811ms)
  I0928 14:01:22.824417 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 7.557088ms)
  I0928 14:01:22.827908 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 11.052456ms)
  I0928 14:01:22.827915 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 11.02223ms)
  I0928 14:01:22.827929 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 10.986661ms)
  I0928 14:01:22.827944 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 10.932234ms)
  I0928 14:01:22.827954 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 10.927261ms)
  I0928 14:01:22.827956 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 10.99547ms)
  I0928 14:01:22.827966 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 10.903899ms)
  I0928 14:01:22.827966 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.890393ms)
  I0928 14:01:22.827974 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 10.853315ms)
  I0928 14:01:22.827979 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 11.000569ms)
  I0928 14:01:22.828204 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 11.281319ms)
  I0928 14:01:22.828445 18 proxy.go:558] (18) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 11.33887ms)
  I0928 14:01:22.834374 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 5.909328ms)
  I0928 14:01:22.834381 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">test<... (200; 5.869447ms)
  I0928 14:01:22.834433 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:443/proxy/tlsrewritem... (200; 5.73587ms)
  I0928 14:01:22.835368 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:460/proxy/: tls baz (200; 6.832005ms)
  I0928 14:01:22.836284 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:162/proxy/: bar (200; 7.601369ms)
  I0928 14:01:22.836316 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf/proxy/rewriteme">test</a> (200; 7.647979ms)
  I0928 14:01:22.838130 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname2/proxy/: bar (200; 9.521666ms)
  I0928 14:01:22.838199 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:1080/proxy/rewriteme">... (200; 9.484925ms)
  I0928 14:01:22.838254 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/https:proxy-service-pr8cm-nqltf:462/proxy/: tls qux (200; 9.525449ms)
  I0928 14:01:22.838985 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname1/proxy/: foo (200; 10.391935ms)
  I0928 14:01:22.838992 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/http:proxy-service-pr8cm:portname2/proxy/: bar (200; 10.371604ms)
  I0928 14:01:22.839023 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/proxy-service-pr8cm:portname1/proxy/: foo (200; 10.468655ms)
  I0928 14:01:22.839316 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname1/proxy/: tls baz (200; 10.557369ms)
  I0928 14:01:22.839585 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/http:proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 10.812803ms)
  I0928 14:01:22.840072 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/services/https:proxy-service-pr8cm:tlsportname2/proxy/: tls qux (200; 11.431196ms)
  I0928 14:01:22.840087 18 proxy.go:558] (19) /api/v1/namespaces/proxy-3959/pods/proxy-service-pr8cm-nqltf:160/proxy/: foo (200; 11.343723ms)
  STEP: deleting ReplicationController proxy-service-pr8cm in namespace proxy-3959, will wait for the garbage collector to delete the pods @ 09/28/24 14:01:22.84
  I0928 14:01:22.901636 18 resources.go:139] Deleting ReplicationController proxy-service-pr8cm took: 7.094655ms
  I0928 14:01:23.002116 18 resources.go:163] Terminating ReplicationController proxy-service-pr8cm pods took: 100.475695ms
  E0928 14:01:23.535854      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:24.536488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:25.502504 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3959" for this suite. @ 09/28/24 14:01:25.506
â€¢ [5.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/28/24 14:01:25.516
  I0928 14:01:25.516540 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename emptydir @ 09/28/24 14:01:25.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:25.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:25.535
  E0928 14:01:25.537053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/28/24 14:01:25.538
  E0928 14:01:26.537773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:27.538007      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 14:01:27.559
  I0928 14:01:27.563333 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-bf13e13f-00a5-43de-93ef-bd8958a05453 container test-container: <nil>
  STEP: delete the pod @ 09/28/24 14:01:27.576
  I0928 14:01:27.596791 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6336" for this suite. @ 09/28/24 14:01:27.601
â€¢ [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/28/24 14:01:27.608
  I0928 14:01:27.608120 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename csi-storageclass @ 09/28/24 14:01:27.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:27.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:27.632
  STEP: Creating a StorageClass @ 09/28/24 14:01:27.635
  STEP: Get StorageClass "e2e-7hp7m" @ 09/28/24 14:01:27.643
  STEP: Patching the StorageClass "e2e-7hp7m" @ 09/28/24 14:01:27.646
  STEP: Delete StorageClass "e2e-7hp7m" @ 09/28/24 14:01:27.652
  STEP: Confirm deletion of StorageClass "e2e-7hp7m" @ 09/28/24 14:01:27.658
  STEP: Create a replacement StorageClass @ 09/28/24 14:01:27.663
  STEP: Updating StorageClass "e2e-v2-4bmrd" @ 09/28/24 14:01:27.669
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-4bmrd=updated" @ 09/28/24 14:01:27.693
  STEP: Deleting StorageClass "e2e-v2-4bmrd" via DeleteCollection @ 09/28/24 14:01:27.697
  STEP: Confirm deletion of StorageClass "e2e-v2-4bmrd" @ 09/28/24 14:01:27.706
  I0928 14:01:27.709769 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3266" for this suite. @ 09/28/24 14:01:27.713
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/28/24 14:01:27.722
  I0928 14:01:27.722841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubelet-test @ 09/28/24 14:01:27.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:27.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:27.752
  E0928 14:01:28.538370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:29.538598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:29.794733 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7088" for this suite. @ 09/28/24 14:01:29.797
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/28/24 14:01:29.805
  I0928 14:01:29.805736 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename proxy @ 09/28/24 14:01:29.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:29.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:29.822
  I0928 14:01:29.826100 18 proxy.go:293] Creating pod...
  E0928 14:01:30.538696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:31.538844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:01:31.840689 18 proxy.go:317] Creating service...
  I0928 14:01:31.852724 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/DELETE
  I0928 14:01:31.859452 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0928 14:01:31.859483 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/GET
  I0928 14:01:31.863219 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0928 14:01:31.863247 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/HEAD
  I0928 14:01:31.867437 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0928 14:01:31.867455 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/OPTIONS
  I0928 14:01:31.870815 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0928 14:01:31.870840 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/PATCH
  I0928 14:01:31.874715 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0928 14:01:31.874735 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/POST
  I0928 14:01:31.878863 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0928 14:01:31.878888 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/pods/agnhost/proxy/some/path/with/PUT
  I0928 14:01:31.882225 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0928 14:01:31.882250 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/DELETE
  I0928 14:01:31.887316 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0928 14:01:31.887349 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/GET
  I0928 14:01:31.891892 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0928 14:01:31.891924 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/HEAD
  I0928 14:01:31.897118 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0928 14:01:31.897138 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/OPTIONS
  I0928 14:01:31.902248 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0928 14:01:31.902288 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/PATCH
  I0928 14:01:31.907358 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0928 14:01:31.907385 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/POST
  I0928 14:01:31.911760 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0928 14:01:31.911790 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2935/services/test-service/proxy/some/path/with/PUT
  I0928 14:01:31.917309 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0928 14:01:31.917446 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2935" for this suite. @ 09/28/24 14:01:31.921
â€¢ [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/28/24 14:01:31.93
  I0928 14:01:31.930553 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename downward-api @ 09/28/24 14:01:31.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:31.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:31.947
  STEP: Creating a pod to test downward api env vars @ 09/28/24 14:01:31.95
  E0928 14:01:32.538964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:33.539056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:34.539768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:35.539910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 14:01:35.977
  I0928 14:01:35.980899 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod downward-api-8d2e4867-79e1-4971-87d0-7bea852b769f container dapi-container: <nil>
  STEP: delete the pod @ 09/28/24 14:01:35.996
  I0928 14:01:36.015072 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4333" for this suite. @ 09/28/24 14:01:36.018
â€¢ [4.094 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/28/24 14:01:36.024
  I0928 14:01:36.024860 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 14:01:36.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:36.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:36.042
  I0928 14:01:36.046572 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-2138 version'
  I0928 14:01:36.083431 18 builder.go:146] stderr: ""
  I0928 14:01:36.083466 18 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I0928 14:01:36.083660 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2138" for this suite. @ 09/28/24 14:01:36.087
â€¢ [0.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/28/24 14:01:36.093
  I0928 14:01:36.093340 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/28/24 14:01:36.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:36.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:36.114
  STEP: getting /apis @ 09/28/24 14:01:36.117
  STEP: getting /apis/storage.k8s.io @ 09/28/24 14:01:36.121
  STEP: getting /apis/storage.k8s.io/v1 @ 09/28/24 14:01:36.122
  STEP: creating @ 09/28/24 14:01:36.123
  STEP: watching @ 09/28/24 14:01:36.137
  I0928 14:01:36.137993 18 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/28/24 14:01:36.144
  STEP: listing in namespace @ 09/28/24 14:01:36.147
  STEP: listing across namespaces @ 09/28/24 14:01:36.15
  STEP: patching @ 09/28/24 14:01:36.154
  STEP: updating @ 09/28/24 14:01:36.158
  I0928 14:01:36.164694 18 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0928 14:01:36.164763 18 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/28/24 14:01:36.164
  STEP: deleting a collection @ 09/28/24 14:01:36.176
  I0928 14:01:36.192072 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-126" for this suite. @ 09/28/24 14:01:36.196
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/28/24 14:01:36.202
  I0928 14:01:36.202453 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename secrets @ 09/28/24 14:01:36.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:36.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:36.218
  STEP: Creating secret with name secret-test-29533bfe-dce4-4535-8542-f130cea85da3 @ 09/28/24 14:01:36.221
  STEP: Creating a pod to test consume secrets @ 09/28/24 14:01:36.226
  E0928 14:01:36.540042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:37.540150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:38.541235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:39.541445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 14:01:40.248
  I0928 14:01:40.252454 18 output.go:196] Trying to get logs from node ip-172-31-43-233 pod pod-secrets-427382cb-a337-480d-a61d-c04aae240b2d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/28/24 14:01:40.258
  I0928 14:01:40.275861 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4321" for this suite. @ 09/28/24 14:01:40.279
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/28/24 14:01:40.286
  I0928 14:01:40.286340 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename containers @ 09/28/24 14:01:40.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:40.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:40.303
  STEP: Creating a pod to test override arguments @ 09/28/24 14:01:40.307
  E0928 14:01:40.541667      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:41.541897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:42.542938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:43.543247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 14:01:44.327
  I0928 14:01:44.332064 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod client-containers-78219594-449a-43ba-9728-3049f5a86480 container agnhost-container: <nil>
  STEP: delete the pod @ 09/28/24 14:01:44.338
  I0928 14:01:44.353233 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3858" for this suite. @ 09/28/24 14:01:44.356
â€¢ [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/28/24 14:01:44.363
  I0928 14:01:44.363776 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename dns @ 09/28/24 14:01:44.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:44.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:44.381
  STEP: Creating a test headless service @ 09/28/24 14:01:44.385
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2443.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2443.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/28/24 14:01:44.392
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2443.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2443.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/28/24 14:01:44.392
  STEP: creating a pod to probe DNS @ 09/28/24 14:01:44.392
  STEP: submitting the pod to kubernetes @ 09/28/24 14:01:44.392
  E0928 14:01:44.543542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:45.543615      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/28/24 14:01:46.41
  STEP: looking for the results for each expected name from probers @ 09/28/24 14:01:46.413
  I0928 14:01:46.430722 18 dns_common.go:527] DNS probes using dns-2443/dns-test-425e3f72-bb63-42e3-be74-f8061f9022fe succeeded

  STEP: deleting the pod @ 09/28/24 14:01:46.43
  STEP: deleting the test headless service @ 09/28/24 14:01:46.443
  I0928 14:01:46.457896 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2443" for this suite. @ 09/28/24 14:01:46.461
â€¢ [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/28/24 14:01:46.469
  I0928 14:01:46.469023 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename projected @ 09/28/24 14:01:46.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:01:46.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:01:46.488
  STEP: Creating configMap with name cm-test-opt-del-426765c6-0e12-458a-8e32-7f664153da62 @ 09/28/24 14:01:46.496
  STEP: Creating configMap with name cm-test-opt-upd-9f0ab9ff-578f-4b36-9809-15fa90b5bf3a @ 09/28/24 14:01:46.5
  STEP: Creating the pod @ 09/28/24 14:01:46.504
  E0928 14:01:46.543773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:47.544370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:48.544460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-426765c6-0e12-458a-8e32-7f664153da62 @ 09/28/24 14:01:48.546
  STEP: Updating configmap cm-test-opt-upd-9f0ab9ff-578f-4b36-9809-15fa90b5bf3a @ 09/28/24 14:01:48.56
  STEP: Creating configMap with name cm-test-opt-create-78af0910-3a13-4e02-bb3b-5aeca43d2380 @ 09/28/24 14:01:48.573
  STEP: waiting to observe update in volume @ 09/28/24 14:01:48.578
  E0928 14:01:49.544705      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:50.545844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:51.546764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:52.546878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:53.546982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:54.547127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:55.547763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:56.547925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:57.548756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:58.549293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:01:59.550054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:00.550291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:01.550704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:02.551672      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:03.552009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:04.552182      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:05.552412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:06.552540      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:07.552843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:08.553135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:09.553961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:10.553998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:11.554781      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:12.554884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:13.555000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:14.555975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:15.556101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:16.556211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:17.556766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:18.556871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:19.557770      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:20.558553      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:21.559379      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:22.559607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:23.560316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:24.560612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:25.560817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:26.561033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:27.561750      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:28.561874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:29.562134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:30.562541      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:31.563549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:32.563706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:33.563817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:34.564016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:35.564138      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:36.564236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:37.564725      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:38.564819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:39.565682      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:40.565722      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:41.565820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:42.565923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:43.566017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:44.566117      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:45.566759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:46.566880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:47.567374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:48.567457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:49.567638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:50.567735      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:02:50.866845 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2088" for this suite. @ 09/28/24 14:02:50.871
â€¢ [64.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/28/24 14:02:50.878
  I0928 14:02:50.878975 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename init-container @ 09/28/24 14:02:50.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:02:50.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:02:50.894
  STEP: creating the pod @ 09/28/24 14:02:50.897
  I0928 14:02:50.897950 18 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0928 14:02:51.568150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:52.568490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:02:53.565970 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0928 14:02:53.568910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "init-container-1384" for this suite. @ 09/28/24 14:02:53.569
â€¢ [2.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/28/24 14:02:53.584
  I0928 14:02:53.584072 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/28/24 14:02:53.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:02:53.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:02:53.601
  STEP: create the container to handle the HTTPGet hook request. @ 09/28/24 14:02:53.608
  E0928 14:02:54.569753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:55.570060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/28/24 14:02:55.628
  E0928 14:02:56.570172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:57.570326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/28/24 14:02:57.648
  E0928 14:02:58.570830      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:02:59.571052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/28/24 14:02:59.665
  I0928 14:02:59.672242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1965" for this suite. @ 09/28/24 14:02:59.675
â€¢ [6.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/28/24 14:02:59.682
  I0928 14:02:59.682247 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename statefulset @ 09/28/24 14:02:59.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:02:59.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:02:59.696
  STEP: Creating service test in namespace statefulset-4076 @ 09/28/24 14:02:59.7
  I0928 14:02:59.713598 18 wait.go:40] Found 0 stateful pods, waiting for 1
  E0928 14:03:00.571157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:01.572063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:02.572160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:03.572490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:04.572612      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:05.572776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:06.573778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:07.573997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:08.575006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:09.575206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:09.715309 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/28/24 14:03:09.721
  I0928 14:03:09.740915 18 wait.go:40] Found 1 stateful pods, waiting for 2
  E0928 14:03:10.575776      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:11.576786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:12.576874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:13.577788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:14.577868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:15.578091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:16.578293      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:17.578494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:18.578817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:19.579020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:19.740339 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0928 14:03:19.740371 18 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/28/24 14:03:19.748
  STEP: Delete all of the StatefulSets @ 09/28/24 14:03:19.751
  STEP: Verify that StatefulSets have been deleted @ 09/28/24 14:03:19.76
  I0928 14:03:19.763063 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4076
  I0928 14:03:19.779623 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4076" for this suite. @ 09/28/24 14:03:19.784
â€¢ [20.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/28/24 14:03:19.79
  I0928 14:03:19.790824 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename watch @ 09/28/24 14:03:19.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:19.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:19.808
  STEP: getting a starting resourceVersion @ 09/28/24 14:03:19.811
  STEP: starting a background goroutine to produce watch events @ 09/28/24 14:03:19.814
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/28/24 14:03:19.815
  E0928 14:03:20.579679      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:21.580171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:22.581187      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:22.598876 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2155" for this suite. @ 09/28/24 14:03:22.647
â€¢ [2.910 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/28/24 14:03:22.7
  I0928 14:03:22.700477 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename job @ 09/28/24 14:03:22.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:22.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:22.721
  STEP: Looking for a node to schedule job pod @ 09/28/24 14:03:22.724
  STEP: Creating a job @ 09/28/24 14:03:22.727
  STEP: Ensuring job fails @ 09/28/24 14:03:22.731
  E0928 14:03:23.582165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:24.582322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:25.582551      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:26.582727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:26.739283 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5521" for this suite. @ 09/28/24 14:03:26.743
â€¢ [4.050 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/28/24 14:03:26.75
  I0928 14:03:26.750961 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/28/24 14:03:26.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:26.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:26.769
  I0928 14:03:26.772965 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  E0928 14:03:27.582842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:27.795751 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-51" for this suite. @ 09/28/24 14:03:27.801
â€¢ [1.057 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/28/24 14:03:27.808
  I0928 14:03:27.808458 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename namespaces @ 09/28/24 14:03:27.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:27.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:27.825
  STEP: Read namespace status @ 09/28/24 14:03:27.829
  I0928 14:03:27.833487 18 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/28/24 14:03:27.833
  I0928 14:03:27.839874 18 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/28/24 14:03:27.839
  I0928 14:03:27.847708 18 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0928 14:03:27.847786 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8164" for this suite. @ 09/28/24 14:03:27.85
â€¢ [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/28/24 14:03:27.857
  I0928 14:03:27.857230 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename container-runtime @ 09/28/24 14:03:27.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:27.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:27.871
  STEP: create the container @ 09/28/24 14:03:27.875
  W0928 14:03:27.883283      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/28/24 14:03:27.883
  E0928 14:03:28.583006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:29.583171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/28/24 14:03:29.898
  STEP: the container should be terminated @ 09/28/24 14:03:29.902
  STEP: the termination message should be set @ 09/28/24 14:03:29.902
  I0928 14:03:29.902269 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/28/24 14:03:29.902
  I0928 14:03:29.918677 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1439" for this suite. @ 09/28/24 14:03:29.922
â€¢ [2.071 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/28/24 14:03:29.928
  I0928 14:03:29.928718 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename subpath @ 09/28/24 14:03:29.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:29.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:29.946
  STEP: Setting up data @ 09/28/24 14:03:29.95
  STEP: Creating pod pod-subpath-test-secret-7d7k @ 09/28/24 14:03:29.96
  STEP: Creating a pod to test atomic-volume-subpath @ 09/28/24 14:03:29.96
  E0928 14:03:30.583224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:31.583964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:32.584504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:33.584858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:34.584927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:35.585470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:36.585782      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:37.586749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:38.587614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:39.587758      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:40.587957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:41.588761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:42.589480      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:43.590429      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:44.590698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:45.590802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:46.590897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:47.591767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:48.592329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:49.592768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:50.592933      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:51.593129      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/28/24 14:03:52.034
  I0928 14:03:52.038001 18 output.go:196] Trying to get logs from node ip-172-31-6-28 pod pod-subpath-test-secret-7d7k container test-container-subpath-secret-7d7k: <nil>
  STEP: delete the pod @ 09/28/24 14:03:52.048
  STEP: Deleting pod pod-subpath-test-secret-7d7k @ 09/28/24 14:03:52.064
  I0928 14:03:52.064402 18 delete.go:62] Deleting pod "pod-subpath-test-secret-7d7k" in namespace "subpath-863"
  I0928 14:03:52.067150 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-863" for this suite. @ 09/28/24 14:03:52.07
â€¢ [22.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/28/24 14:03:52.076
  I0928 14:03:52.076953 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename ingress @ 09/28/24 14:03:52.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:52.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:52.094
  STEP: getting /apis @ 09/28/24 14:03:52.097
  STEP: getting /apis/networking.k8s.io @ 09/28/24 14:03:52.1
  STEP: getting /apis/networking.k8s.iov1 @ 09/28/24 14:03:52.102
  STEP: creating @ 09/28/24 14:03:52.103
  STEP: getting @ 09/28/24 14:03:52.12
  STEP: listing @ 09/28/24 14:03:52.124
  STEP: watching @ 09/28/24 14:03:52.129
  I0928 14:03:52.129389 18 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/28/24 14:03:52.13
  STEP: cluster-wide watching @ 09/28/24 14:03:52.133
  I0928 14:03:52.133487 18 ingress.go:198] starting watch
  STEP: patching @ 09/28/24 14:03:52.134
  STEP: updating @ 09/28/24 14:03:52.14
  I0928 14:03:52.151598 18 ingress.go:221] waiting for watch events with expected annotations
  I0928 14:03:52.151629 18 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/28/24 14:03:52.151
  STEP: updating /status @ 09/28/24 14:03:52.157
  STEP: get /status @ 09/28/24 14:03:52.165
  STEP: deleting @ 09/28/24 14:03:52.17
  STEP: deleting a collection @ 09/28/24 14:03:52.188
  I0928 14:03:52.206034 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2092" for this suite. @ 09/28/24 14:03:52.21
â€¢ [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/28/24 14:03:52.216
  I0928 14:03:52.216634 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename configmap @ 09/28/24 14:03:52.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:52.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:52.236
  I0928 14:03:52.276362 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3181" for this suite. @ 09/28/24 14:03:52.283
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/28/24 14:03:52.288
  I0928 14:03:52.288956 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/28/24 14:03:52.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:52.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:52.305
  STEP: Setting up the test @ 09/28/24 14:03:52.309
  STEP: Creating hostNetwork=false pod @ 09/28/24 14:03:52.309
  E0928 14:03:52.593883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:53.594004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/28/24 14:03:54.332
  E0928 14:03:54.594934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:55.595036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/28/24 14:03:56.351
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/28/24 14:03:56.351
  I0928 14:03:56.351888 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.351906 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.352314 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.352349 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0928 14:03:56.396237 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.396293 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.396303 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.396735 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.396787 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0928 14:03:56.432704 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.432753 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.432764 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.433207 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.433259 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0928 14:03:56.471608 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.471658 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.471668 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.472115 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.472161 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0928 14:03:56.505360 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/28/24 14:03:56.505
  I0928 14:03:56.505435 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.505442 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.505897 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.505941 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0928 14:03:56.540836 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.540892 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.540905 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.541311 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.541353 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0928 14:03:56.580771 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/28/24 14:03:56.58
  I0928 14:03:56.580840 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.580847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.581220 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.581258 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0928 14:03:56.595851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:03:56.625026 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.625085 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.625094 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.625496 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.625621 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0928 14:03:56.661800 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.661877 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.661886 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.662285 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.662326 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0928 14:03:56.697706 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.697750 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3073 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0928 14:03:56.697763 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  I0928 14:03:56.698165 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0928 14:03:56.698202 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3073/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0928 14:03:56.735633 18 exec_util.go:111] Exec stderr: ""
  I0928 14:03:56.735799 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3073" for this suite. @ 09/28/24 14:03:56.74
â€¢ [4.458 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/28/24 14:03:56.747
  I0928 14:03:56.747050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename kubectl @ 09/28/24 14:03:56.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:03:56.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:03:56.765
  STEP: creating a replication controller @ 09/28/24 14:03:56.768
  I0928 14:03:56.769012 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 create -f -'
  I0928 14:03:56.850604 18 builder.go:146] stderr: ""
  I0928 14:03:56.850642 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/28/24 14:03:56.85
  I0928 14:03:56.850729 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 14:03:56.896641 18 builder.go:146] stderr: ""
  I0928 14:03:56.896678 18 builder.go:147] stdout: "update-demo-nautilus-dlzg9 update-demo-nautilus-tbrvn "
  I0928 14:03:56.896716 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods update-demo-nautilus-dlzg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 14:03:56.937851 18 builder.go:146] stderr: ""
  I0928 14:03:56.937888 18 builder.go:147] stdout: ""
  I0928 14:03:56.937895 18 kubectl.go:2502] update-demo-nautilus-dlzg9 is created but not running
  E0928 14:03:57.596270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:58.596302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:03:59.596383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:00.596476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:01.596599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:01.938112 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0928 14:04:01.986954 18 builder.go:146] stderr: ""
  I0928 14:04:01.986990 18 builder.go:147] stdout: "update-demo-nautilus-dlzg9 update-demo-nautilus-tbrvn "
  I0928 14:04:01.987031 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods update-demo-nautilus-dlzg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 14:04:02.031816 18 builder.go:146] stderr: ""
  I0928 14:04:02.031851 18 builder.go:147] stdout: "true"
  I0928 14:04:02.031897 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods update-demo-nautilus-dlzg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 14:04:02.073811 18 builder.go:146] stderr: ""
  I0928 14:04:02.073858 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 14:04:02.073872 18 kubectl.go:2393] validating pod update-demo-nautilus-dlzg9
  I0928 14:04:02.079576 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 14:04:02.079623 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 14:04:02.079633 18 kubectl.go:2520] update-demo-nautilus-dlzg9 is verified up and running
  I0928 14:04:02.079691 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods update-demo-nautilus-tbrvn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0928 14:04:02.122409 18 builder.go:146] stderr: ""
  I0928 14:04:02.122458 18 builder.go:147] stdout: "true"
  I0928 14:04:02.122506 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods update-demo-nautilus-tbrvn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0928 14:04:02.167867 18 builder.go:146] stderr: ""
  I0928 14:04:02.167904 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0928 14:04:02.167915 18 kubectl.go:2393] validating pod update-demo-nautilus-tbrvn
  I0928 14:04:02.173020 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0928 14:04:02.173066 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0928 14:04:02.173077 18 kubectl.go:2520] update-demo-nautilus-tbrvn is verified up and running
  STEP: using delete to clean up resources @ 09/28/24 14:04:02.173
  I0928 14:04:02.173159 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 delete --grace-period=0 --force -f -'
  I0928 14:04:02.220441 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0928 14:04:02.220475 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0928 14:04:02.220517 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get rc,svc -l name=update-demo --no-headers'
  I0928 14:04:02.283167 18 builder.go:146] stderr: "No resources found in kubectl-4554 namespace.\n"
  I0928 14:04:02.283213 18 builder.go:147] stdout: ""
  I0928 14:04:02.283259 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=kubectl-4554 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0928 14:04:02.350396 18 builder.go:146] stderr: ""
  I0928 14:04:02.350472 18 builder.go:147] stdout: ""
  I0928 14:04:02.351070 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4554" for this suite. @ 09/28/24 14:04:02.355
â€¢ [5.614 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/28/24 14:04:02.361
  I0928 14:04:02.361081 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename services @ 09/28/24 14:04:02.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:04:02.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:04:02.388
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6298 @ 09/28/24 14:04:02.391
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/28/24 14:04:02.406
  STEP: creating service externalsvc in namespace services-6298 @ 09/28/24 14:04:02.406
  STEP: creating replication controller externalsvc in namespace services-6298 @ 09/28/24 14:04:02.42
  I0928 14:04:02.428781      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6298, replica count: 2
  E0928 14:04:02.597086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:03.597192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:04.597297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:05.479614      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/28/24 14:04:05.484
  I0928 14:04:05.503516 18 resource.go:361] Creating new exec pod
  E0928 14:04:05.598368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:06.598621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:07.519400 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3328231860 --namespace=services-6298 exec execpod2lm4w -- /bin/sh -x -c nslookup nodeport-service.services-6298.svc.cluster.local'
  E0928 14:04:07.598847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:07.611736 18 builder.go:146] stderr: "+ nslookup nodeport-service.services-6298.svc.cluster.local\n"
  I0928 14:04:07.611838 18 builder.go:147] stdout: "Server:\t\t10.152.183.146\nAddress:\t10.152.183.146#53\n\nnodeport-service.services-6298.svc.cluster.local\tcanonical name = externalsvc.services-6298.svc.cluster.local.\nName:\texternalsvc.services-6298.svc.cluster.local\nAddress: 10.152.183.179\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6298, will wait for the garbage collector to delete the pods @ 09/28/24 14:04:07.611
  I0928 14:04:07.673083 18 resources.go:139] Deleting ReplicationController externalsvc took: 6.876213ms
  I0928 14:04:07.773839 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.751754ms
  E0928 14:04:08.599136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:09.599432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:10.599629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:10.790911 18 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0928 14:04:10.800859 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6298" for this suite. @ 09/28/24 14:04:10.805
â€¢ [8.450 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/28/24 14:04:10.811
  I0928 14:04:10.811325 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3328231860
  STEP: Building a namespace api object, basename limitrange @ 09/28/24 14:04:10.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/28/24 14:04:10.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/28/24 14:04:10.828
  STEP: Creating a LimitRange @ 09/28/24 14:04:10.831
  STEP: Setting up watch @ 09/28/24 14:04:10.831
  STEP: Submitting a LimitRange @ 09/28/24 14:04:10.933
  STEP: Verifying LimitRange creation was observed @ 09/28/24 14:04:10.94
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/28/24 14:04:10.94
  I0928 14:04:10.944287 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0928 14:04:10.944319 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/28/24 14:04:10.944
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/28/24 14:04:10.95
  I0928 14:04:10.954127 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0928 14:04:10.954149 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/28/24 14:04:10.954
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/28/24 14:04:10.959
  I0928 14:04:10.963666 18 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0928 14:04:10.963690 18 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/28/24 14:04:10.963
  STEP: Failing to create a Pod with more than max resources @ 09/28/24 14:04:10.965
  STEP: Updating a LimitRange @ 09/28/24 14:04:10.968
  STEP: Verifying LimitRange updating is effective @ 09/28/24 14:04:10.971
  E0928 14:04:11.599886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:12.600217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/28/24 14:04:12.978
  STEP: Failing to create a Pod with more than max resources @ 09/28/24 14:04:12.985
  STEP: Deleting a LimitRange @ 09/28/24 14:04:12.988
  STEP: Verifying the LimitRange was deleted @ 09/28/24 14:04:12.994
  E0928 14:04:13.600414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:14.600515      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:15.600698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:16.600821      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0928 14:04:17.601043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0928 14:04:17.998349 18 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/28/24 14:04:17.998
  I0928 14:04:18.006801 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8400" for this suite. @ 09/28/24 14:04:18.011
â€¢ [7.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0928 14:04:18.018033 18 suites.go:34] Running AfterSuite actions on node 1
  I0928 14:04:18.018067 18 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.042 seconds]
------------------------------

Ran 404 of 6603 Specs in 6439.742 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h47m20.535344381s
Test Suite Passed
