  I1012 12:12:46.219790      19 e2e.go:109] Starting e2e run "ac297cd5-b86b-4448-8b12-55e3a6149588" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1728735165 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1012 12:12:46.452209 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:12:46.453297 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1012 12:12:46.490806 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1012 12:12:46.495460 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1012 12:12:46.495513 19 e2e.go:245] e2e test version: v1.31.1
  I1012 12:12:46.496820 19 e2e.go:254] kube-apiserver version: v1.31.1
  I1012 12:12:46.497020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:12:46.504691 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/12/24 12:12:46.732
  I1012 12:12:46.732146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/12/24 12:12:46.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:12:46.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:12:46.756
  STEP: creating a policy with variables @ 10/12/24 12:12:46.767
  STEP: waiting until the marker is denied @ 10/12/24 12:12:46.787
  STEP: testing a replicated Deployment to be allowed @ 10/12/24 12:12:46.999
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/12/24 12:12:47.014
  I1012 12:12:47.059298 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6252" for this suite. @ 10/12/24 12:12:47.067
• [0.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/12/24 12:12:47.078
  I1012 12:12:47.078517 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/12/24 12:12:47.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:12:47.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:12:47.098
  I1012 12:12:47.105268 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9345" for this suite. @ 10/12/24 12:12:47.108
• [0.036 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 10/12/24 12:12:47.114
  I1012 12:12:47.114743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption @ 10/12/24 12:12:47.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:12:47.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:12:47.133
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/12/24 12:12:47.136
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:12:47.142
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/12/24 12:12:47.152
  STEP: Waiting for all pods to be running @ 10/12/24 12:12:47.152
  I1012 12:12:47.154942 19 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 10/12/24 12:12:49.157
  STEP: Updating the pdb to allow a pod to be evicted @ 10/12/24 12:12:49.169
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:12:49.18
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/12/24 12:12:51.185
  STEP: Waiting for all pods to be running @ 10/12/24 12:12:51.185
  STEP: Waiting for the pdb to observed all healthy pods @ 10/12/24 12:12:51.19
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/12/24 12:12:51.226
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:12:51.245
  STEP: Waiting for all pods to be running @ 10/12/24 12:12:51.253
  I1012 12:12:51.274124 19 disruption.go:691] running pods: 2 < 3
  I1012 12:12:53.260630 19 disruption.go:691] running pods: 2 < 3
  STEP: locating a running pod @ 10/12/24 12:12:55.258
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/12/24 12:12:55.269
  STEP: Waiting for the pdb to be deleted @ 10/12/24 12:12:55.276
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/12/24 12:12:55.28
  STEP: Waiting for all pods to be running @ 10/12/24 12:12:55.28
  I1012 12:12:55.300525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8757" for this suite. @ 10/12/24 12:12:55.307
• [8.204 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 10/12/24 12:12:55.318
  I1012 12:12:55.318957 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:12:55.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:12:55.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:12:55.342
  STEP: creating service multiprotocol-test in namespace services-4511 @ 10/12/24 12:12:55.345
  STEP: creating pod pod1 in namespace services-4511 @ 10/12/24 12:12:55.354
  STEP: Creating pod pod1 in namespace services-4511 @ 10/12/24 12:12:55.354
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4511 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/12/24 12:13:01.393
  I1012 12:13:01.405348 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-4511 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/12/24 12:13:01.405
  I1012 12:13:01.405416 19 resource.go:361] Creating new exec pod
  I1012 12:13:05.428217 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1012 12:13:05.544270 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [tcp/http] succeeded!\n"
  I1012 12:13:05.544317 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:13:05.544390 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.200 80'
  I1012 12:13:09.642808 19 builder.go:146] stderr: "+ + ncecho -v hostName -u\n -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [udp/*] succeeded!\n"
  I1012 12:13:09.642854 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/12/24 12:13:09.642
  I1012 12:13:09.653163 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1012 12:13:09.749849 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [tcp/http] succeeded!\n"
  I1012 12:13:09.749892 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:13:09.750023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.200 80'
  I1012 12:13:13.834223 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [udp/*] succeeded!\n"
  I1012 12:13:13.834275 19 builder.go:147] stdout: ""
  I1012 12:13:13.834342 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.200 80'
  I1012 12:13:17.924678 19 builder.go:146] stderr: "+ + nc -v -u -w 2 10.152.183.200 80\necho hostName\nConnection to 10.152.183.200 80 port [udp/*] succeeded!\n"
  I1012 12:13:17.924740 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 10/12/24 12:13:17.924
  I1012 12:13:17.935152 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.200 80'
  I1012 12:13:22.038630 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [udp/*] succeeded!\n"
  I1012 12:13:22.038672 19 builder.go:147] stdout: "pod1"
  I1012 12:13:22.038819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1012 12:13:24.130207 19 builder.go:135] rc: 1
  I1012 12:13:24.130319 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80:
  Command stdout:

  stderr:
  + + echo hostName
  nc -v -t -w 2 10.152.183.200 80
  nc: connect to 10.152.183.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1012 12:13:24.130399 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1012 12:13:26.221599 19 builder.go:135] rc: 1
  I1012 12:13:26.221661 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.200 80
  nc: connect to 10.152.183.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1012 12:13:26.221732 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1012 12:13:28.319379 19 builder.go:135] rc: 1
  I1012 12:13:28.319449 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4511 exec execpod9dpkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName -t
   -w 2 10.152.183.200 80
  nc: connect to 10.152.183.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1012 12:13:28.319674 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4511" for this suite. @ 10/12/24 12:13:28.327
• [33.016 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 10/12/24 12:13:28.335
  I1012 12:13:28.335245 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 12:13:28.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:28.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:28.359
  STEP: Creating a test headless service @ 10/12/24 12:13:28.366
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2350.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2350.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/12/24 12:13:28.374
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2350.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2350.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/12/24 12:13:28.374
  STEP: creating a pod to probe DNS @ 10/12/24 12:13:28.374
  STEP: submitting the pod to kubernetes @ 10/12/24 12:13:28.374
  STEP: retrieving the pod @ 10/12/24 12:13:34.407
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:13:34.411
  I1012 12:13:34.428448 19 dns_common.go:527] DNS probes using dns-2350/dns-test-dff558d0-4c20-4869-97d8-b9b4dd86cc3f succeeded

  STEP: deleting the pod @ 10/12/24 12:13:34.428
  STEP: deleting the test headless service @ 10/12/24 12:13:34.445
  I1012 12:13:34.455793 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2350" for this suite. @ 10/12/24 12:13:34.461
• [6.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/12/24 12:13:34.467
  I1012 12:13:34.467891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 12:13:34.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:34.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:34.488
  STEP: Create a Replicaset @ 10/12/24 12:13:34.495
  STEP: Verify that the required pods have come up. @ 10/12/24 12:13:34.5
  I1012 12:13:34.503593 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1012 12:13:39.510418 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 12:13:39.51
  STEP: Getting /status @ 10/12/24 12:13:39.51
  I1012 12:13:39.515209 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/12/24 12:13:39.515
  I1012 12:13:39.524171 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/12/24 12:13:39.524
  I1012 12:13:39.525891 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1012 12:13:39.525957 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.526063 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.526200 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.526227 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-2619 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1012 12:13:39.526239 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/12/24 12:13:39.526
  I1012 12:13:39.526277 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1012 12:13:39.532938 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/12/24 12:13:39.532
  I1012 12:13:39.534680 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1012 12:13:39.534741 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.534793 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.534918 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.534933 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-2619 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 12:13:39.534987 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1012 12:13:39.535007 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-2619 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1012 12:13:39.535020 19 replica_set.go:729] Replicaset test-rs has a patched status
  I1012 12:13:39.535133 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2619" for this suite. @ 10/12/24 12:13:39.538
• [5.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 10/12/24 12:13:39.544
  I1012 12:13:39.544841 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 12:13:39.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:39.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:39.563
  I1012 12:13:39.603567 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"61ea90c1-ddfc-4cf8-ab10-c989e1e40991", Controller:(*bool)(0xc00111240e), BlockOwnerDeletion:(*bool)(0xc00111240f)}}
  I1012 12:13:39.610943 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"3280afb4-4709-457c-9aa0-a35c87a2f7a1", Controller:(*bool)(0xc00107fbb6), BlockOwnerDeletion:(*bool)(0xc00107fbb7)}}
  I1012 12:13:39.625629 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b7ad2c7d-cb66-4a7a-a5da-38b352e9f621", Controller:(*bool)(0xc00107fe76), BlockOwnerDeletion:(*bool)(0xc00107fe77)}}
  I1012 12:13:44.640142 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9535" for this suite. @ 10/12/24 12:13:44.644
• [5.106 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 10/12/24 12:13:44.65
  I1012 12:13:44.650782 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:13:44.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:44.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:44.671
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 12:13:44.674
  STEP: Saw pod success @ 10/12/24 12:13:48.701
  I1012 12:13:48.705197 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-ff75f545-6f5c-45b7-ade4-af519cafd75b container client-container: <nil>
  STEP: delete the pod @ 10/12/24 12:13:48.717
  I1012 12:13:48.737315 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5332" for this suite. @ 10/12/24 12:13:48.741
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 10/12/24 12:13:48.748
  I1012 12:13:48.748688 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/12/24 12:13:48.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:48.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:48.771
  STEP: getting /apis @ 10/12/24 12:13:48.782
  STEP: getting /apis/admissionregistration.k8s.io @ 10/12/24 12:13:48.786
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/12/24 12:13:48.787
  STEP: creating @ 10/12/24 12:13:48.792
  STEP: getting @ 10/12/24 12:13:48.813
  STEP: listing @ 10/12/24 12:13:48.818
  STEP: watching @ 10/12/24 12:13:48.822
  I1012 12:13:48.822563 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 10/12/24 12:13:48.823
  STEP: updating @ 10/12/24 12:13:48.829
  I1012 12:13:48.861690 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 10/12/24 12:13:48.861
  STEP: patching /status @ 10/12/24 12:13:48.866
  STEP: updating /status @ 10/12/24 12:13:48.872
  STEP: deleting @ 10/12/24 12:13:48.883
  STEP: deleting a collection @ 10/12/24 12:13:48.905
  I1012 12:13:48.925950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6842" for this suite. @ 10/12/24 12:13:48.929
• [0.188 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 10/12/24 12:13:48.936
  I1012 12:13:48.936920 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pv @ 10/12/24 12:13:48.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:48.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:48.955
  STEP: Creating initial PV and PVC @ 10/12/24 12:13:48.959
  I1012 12:13:48.959141 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8163" @ 10/12/24 12:13:48.973
  STEP: Listing PVCs in namespace "pv-8163" @ 10/12/24 12:13:48.977
  STEP: Patching the PV "pv-8163-67f6z" @ 10/12/24 12:13:48.981
  STEP: Patching the PVC "pvc-f8dv5" @ 10/12/24 12:13:48.99
  STEP: Getting PV "pv-8163-67f6z" @ 10/12/24 12:13:48.998
  STEP: Getting PVC "pvc-f8dv5" @ 10/12/24 12:13:49.003
  STEP: Deleting PVC "pvc-f8dv5" @ 10/12/24 12:13:49.008
  STEP: Confirm deletion of PVC "pvc-f8dv5" @ 10/12/24 12:13:49.022
  STEP: Deleting PV "pv-8163-67f6z" @ 10/12/24 12:13:51.031
  STEP: Confirm deletion of PV "pv-8163-67f6z" @ 10/12/24 12:13:51.038
  STEP: Recreating another PV & PVC @ 10/12/24 12:13:53.049
  I1012 12:13:53.049303 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8163-qpf9g" @ 10/12/24 12:13:53.059
  STEP: Updating the PVC "pvc-k5tfc" @ 10/12/24 12:13:53.09
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-k5tfc=updated" @ 10/12/24 12:13:53.099
  STEP: Deleting PVC "pvc-k5tfc" via DeleteCollection @ 10/12/24 12:13:53.102
  STEP: Confirm deletion of PVC "pvc-k5tfc" @ 10/12/24 12:13:53.113
  STEP: Deleting PV "pv-8163-qpf9g" via DeleteCollection @ 10/12/24 12:13:55.122
  STEP: Confirm deletion of PV "pv-8163-qpf9g" @ 10/12/24 12:13:55.132
  I1012 12:13:57.141676 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1012 12:13:57.141705 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-k5tfc"
  I1012 12:13:57.145151 19 pv.go:193] Deleting PersistentVolume "pv-8163-qpf9g"
  I1012 12:13:57.149371 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8163" for this suite. @ 10/12/24 12:13:57.153
• [8.224 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 10/12/24 12:13:57.161
  I1012 12:13:57.161639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:13:57.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:57.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:57.178
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/12/24 12:13:57.181
  I1012 12:13:57.181884 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-9830 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1012 12:13:57.234230 19 builder.go:146] stderr: ""
  I1012 12:13:57.234276 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/12/24 12:13:57.234
  I1012 12:13:57.234386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-9830 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1012 12:13:57.287380 19 builder.go:146] stderr: ""
  I1012 12:13:57.287419 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/12/24 12:13:57.287
  I1012 12:13:57.291662 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-9830 delete pods e2e-test-httpd-pod'
  I1012 12:13:59.149223 19 builder.go:146] stderr: ""
  I1012 12:13:59.149261 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1012 12:13:59.149403 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9830" for this suite. @ 10/12/24 12:13:59.153
• [2.000 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/12/24 12:13:59.161
  I1012 12:13:59.161688 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 12:13:59.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:13:59.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:13:59.181
  I1012 12:13:59.185242 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I1012 12:13:59.205312 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 10/12/24 12:14:01.222
  STEP: updating a scale subresource @ 10/12/24 12:14:01.226
  STEP: verifying the deployment Spec.Replicas was modified @ 10/12/24 12:14:01.232
  STEP: Patch a scale subresource @ 10/12/24 12:14:01.236
  I1012 12:14:01.258384 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18d894f7-c07c-433d-bdf0-e05f6b6db746",
      ResourceVersion: (string) (len=4) "5758",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 12:14:01.265874 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97e83e08-54b0-4a88-b0ea-9deb18dd7766",
      ResourceVersion: (string) (len=4) "5765",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "18d894f7-c07c-433d-bdf0-e05f6b6db746",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 38 64 38 39 34  66 37 2d 63 30 37 63 2d  |\"18d894f7-c07c-|
              00000120  34 33 33 64 2d 62 64 66  30 2d 65 30 35 66 36 62  |433d-bdf0-e05f6b|
              00000130  36 64 62 37 34 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6db746\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:14:01.273739 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-mdr9w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-mdr9w",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e246d6c-74c7-408a-873f-da04ef69e88f",
      ResourceVersion: (string) (len=4) "5761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332041,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "97e83e08-54b0-4a88-b0ea-9deb18dd7766",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  65 38 33 65 30 38 2d 35  |d\":\"97e83e08-5|
              00000090  34 62 30 2d 34 61 38 38  2d 62 30 65 61 2d 39 64  |4b0-4a88-b0ea-9d|
              000000a0  65 62 31 38 64 64 37 37  36 36 5c 22 7d 22 3a 7b  |eb18dd7766\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5ft5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5ft5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:14:01.275253 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-xrwmt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-xrwmt",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a44e8411-37d1-46f8-9e50-b8ed4e9308a1",
      ResourceVersion: (string) (len=4) "5752",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "97e83e08-54b0-4a88-b0ea-9deb18dd7766",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  65 38 33 65 30 38 2d 35  |d\":\"97e83e08-5|
              00000090  34 62 30 2d 34 61 38 38  2d 62 30 65 61 2d 39 64  |4b0-4a88-b0ea-9d|
              000000a0  65 62 31 38 64 64 37 37  36 36 5c 22 7d 22 3a 7b  |eb18dd7766\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 37 31 5c 22 7d 22 3a  |2.168.61.71\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jt2v4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jt2v4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864332039,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://34b2ef7ad8541c58911afb019ad69530d802c4d77e9c89687d816ebf8c2722b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jt2v4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:14:01.276716 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5384" for this suite. @ 10/12/24 12:14:01.28
• [2.130 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 10/12/24 12:14:01.291
  I1012 12:14:01.291977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:14:01.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:14:01.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:14:01.321
  STEP: Creating pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924 @ 10/12/24 12:14:01.324
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 12:14:03.342
  I1012 12:14:03.346695 19 container_probe.go:1749] Initial restart count of pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 is 0
  I1012 12:14:03.349936 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:05.356194 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:07.360377 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:09.366502 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:11.372653 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:13.378143 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:15.383239 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:17.389369 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:19.394469 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:21.400123 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:23.405977 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:25.412223 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:27.417292 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:29.422820 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:31.428324 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:33.433719 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:35.438322 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:37.444142 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:39.448561 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:41.454509 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:43.458493 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:45.464607 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:47.471948 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:49.476729 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:51.482577 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:53.487032 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:55.492454 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:57.497989 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:14:59.504583 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:01.509428 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:03.517274 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:05.522669 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:07.527982 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:09.535044 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:11.541174 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:13.546425 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:15.552746 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:17.558888 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:19.565544 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:21.572516 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:23.578556 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:25.584127 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:27.590409 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:29.595965 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:31.603631 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:33.611770 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:35.618595 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:37.624032 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:39.630433 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:41.636071 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:43.642993 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:45.652518 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:47.658278 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:49.664059 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:51.669934 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:53.675206 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:55.680230 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:57.685518 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:15:59.691820 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:01.698232 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:03.705349 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:05.711359 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:07.717503 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:09.724639 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:11.729260 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:13.736171 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:15.743452 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:17.749378 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:19.755028 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:21.761063 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:23.767954 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:25.773467 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:27.778459 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:29.784552 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:31.789943 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:33.794814 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:35.801635 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:37.808084 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:39.816342 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:41.821678 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:43.827732 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:45.834420 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:47.842431 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:49.848339 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:51.853650 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:53.859381 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:55.865636 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:57.871281 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:16:59.877684 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:01.883037 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:03.889589 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:05.895627 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:07.901929 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:09.908581 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:11.913874 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:13.919882 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:15.926191 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:17.932357 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:19.937596 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:21.942660 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:23.948972 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:25.954636 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:27.959998 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:29.965584 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:31.971814 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:33.978534 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:35.985065 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:37.989736 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:39.995673 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:42.000526 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:44.006023 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:46.011647 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:48.017764 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:50.023558 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:52.029740 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:54.035760 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:56.041574 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:17:58.047021 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:18:00.052843 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  I1012 12:18:02.057762 19 container_probe.go:1759] Get pod busybox-62cb12bf-b15f-41c9-8efb-cf97c2b9c0d1 in namespace container-probe-924
  STEP: deleting the pod @ 10/12/24 12:18:04.058
  I1012 12:18:04.075505 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-924" for this suite. @ 10/12/24 12:18:04.08
• [242.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/12/24 12:18:04.087
  I1012 12:18:04.087926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename endpointslice @ 10/12/24 12:18:04.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:18:04.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:18:04.107
  STEP: getting /apis @ 10/12/24 12:18:04.111
  STEP: getting /apis/discovery.k8s.io @ 10/12/24 12:18:04.114
  STEP: getting /apis/discovery.k8s.iov1 @ 10/12/24 12:18:04.116
  STEP: creating @ 10/12/24 12:18:04.117
  STEP: getting @ 10/12/24 12:18:04.132
  STEP: listing @ 10/12/24 12:18:04.135
  STEP: watching @ 10/12/24 12:18:04.139
  I1012 12:18:04.139573 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/12/24 12:18:04.141
  STEP: cluster-wide watching @ 10/12/24 12:18:04.146
  I1012 12:18:04.146418 19 endpointslice.go:459] starting watch
  STEP: patching @ 10/12/24 12:18:04.147
  STEP: updating @ 10/12/24 12:18:04.154
  I1012 12:18:04.164372 19 endpointslice.go:482] waiting for watch events with expected annotations
  I1012 12:18:04.164417 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/12/24 12:18:04.164
  STEP: deleting a collection @ 10/12/24 12:18:04.176
  I1012 12:18:04.194125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4050" for this suite. @ 10/12/24 12:18:04.198
• [0.117 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 10/12/24 12:18:04.204
  I1012 12:18:04.204791 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:18:04.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:18:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:18:04.223
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/12/24 12:18:04.226
  STEP: Saw pod success @ 10/12/24 12:18:08.255
  I1012 12:18:08.259064 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-f722148a-73a7-47c3-8eaf-f8fb355fec7e container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:18:08.27
  I1012 12:18:08.289932 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1297" for this suite. @ 10/12/24 12:18:08.294
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 10/12/24 12:18:08.301
  I1012 12:18:08.301155 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:18:08.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:18:08.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:18:08.321
  STEP: Creating configMap with name cm-test-opt-del-fc909870-3726-437d-8b5e-ec70c38a5a13 @ 10/12/24 12:18:08.327
  STEP: Creating configMap with name cm-test-opt-upd-870f5193-dc05-412a-b93e-2051c503916f @ 10/12/24 12:18:08.333
  STEP: Creating the pod @ 10/12/24 12:18:08.337
  STEP: Deleting configmap cm-test-opt-del-fc909870-3726-437d-8b5e-ec70c38a5a13 @ 10/12/24 12:18:10.381
  STEP: Updating configmap cm-test-opt-upd-870f5193-dc05-412a-b93e-2051c503916f @ 10/12/24 12:18:10.389
  STEP: Creating configMap with name cm-test-opt-create-4f0f5ce0-b7aa-4c3e-a116-0efe13d39a90 @ 10/12/24 12:18:10.393
  STEP: waiting to observe update in volume @ 10/12/24 12:18:10.4
  I1012 12:19:24.759435 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-309" for this suite. @ 10/12/24 12:19:24.763
• [76.472 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/12/24 12:19:24.772
  I1012 12:19:24.773020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 12:19:24.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:24.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:24.793
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/12/24 12:19:24.816
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 12:19:24.823
  I1012 12:19:24.828709 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:24.828742 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:24.832727 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 12:19:24.832748 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 12:19:25.829796 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:25.829847 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:25.834771 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 12:19:25.834809 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 12:19:26.828187 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:26.828228 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:26.832537 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 12:19:26.832677 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 12:19:27.829559 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:27.829603 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:27.833226 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 12:19:27.833251 19 fixtures.go:130] Node ip-172-31-46-196 is running 0 daemon pod, expected 1
  I1012 12:19:28.829944 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:28.829981 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:28.833840 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 12:19:28.833858 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/12/24 12:19:28.837
  I1012 12:19:28.851957 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:28.851996 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:28.857590 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 12:19:28.857618 19 fixtures.go:130] Node ip-172-31-91-95 is running 0 daemon pod, expected 1
  I1012 12:19:29.853294 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:29.853333 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 12:19:29.856431 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 12:19:29.856454 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/12/24 12:19:29.856
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 12:19:29.864
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3637, will wait for the garbage collector to delete the pods @ 10/12/24 12:19:29.864
  I1012 12:19:29.925707 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.344727ms
  I1012 12:19:30.026489 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.778648ms
  I1012 12:19:32.332381 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 12:19:32.332420 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 12:19:32.336842 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6703"},"items":null}

  I1012 12:19:32.340433 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6703"},"items":null}

  I1012 12:19:32.354348 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3637" for this suite. @ 10/12/24 12:19:32.357
• [7.591 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 10/12/24 12:19:32.364
  I1012 12:19:32.364394 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 12:19:32.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:32.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:32.383
  STEP: Creating a test externalName service @ 10/12/24 12:19:32.386
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:32.394
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:32.394
  STEP: creating a pod to probe DNS @ 10/12/24 12:19:32.394
  STEP: submitting the pod to kubernetes @ 10/12/24 12:19:32.395
  STEP: retrieving the pod @ 10/12/24 12:19:34.417
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:19:34.421
  I1012 12:19:34.431461 19 dns_common.go:552] DNS probes using dns-test-66976374-4408-46c0-81ce-69a889dc0364 succeeded

  STEP: changing the externalName to bar.example.com @ 10/12/24 12:19:34.431
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:34.441
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:34.441
  STEP: creating a second pod to probe DNS @ 10/12/24 12:19:34.441
  STEP: submitting the pod to kubernetes @ 10/12/24 12:19:34.441
  STEP: retrieving the pod @ 10/12/24 12:19:40.47
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:19:40.474
  I1012 12:19:40.485851 19 dns_common.go:552] DNS probes using dns-test-25b44f2f-0a8d-4aff-9674-92aada0fcc5b succeeded

  STEP: changing the service to type=ClusterIP @ 10/12/24 12:19:40.485
  W1012 12:19:40.500244      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:40.5
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3791.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3791.svc.cluster.local; sleep 1; done
   @ 10/12/24 12:19:40.5
  STEP: creating a third pod to probe DNS @ 10/12/24 12:19:40.5
  STEP: submitting the pod to kubernetes @ 10/12/24 12:19:40.505
  STEP: retrieving the pod @ 10/12/24 12:19:42.525
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:19:42.529
  I1012 12:19:42.539707 19 dns_common.go:552] DNS probes using dns-test-504366f6-b1d4-46e9-9f4c-4670ded0f25b succeeded

  STEP: deleting the pod @ 10/12/24 12:19:42.539
  STEP: deleting the pod @ 10/12/24 12:19:42.553
  STEP: deleting the pod @ 10/12/24 12:19:42.566
  STEP: deleting the test externalName service @ 10/12/24 12:19:42.581
  I1012 12:19:42.594717 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3791" for this suite. @ 10/12/24 12:19:42.601
• [10.246 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 10/12/24 12:19:42.61
  I1012 12:19:42.610398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:19:42.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:42.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:42.629
  STEP: creating Agnhost RC @ 10/12/24 12:19:42.632
  I1012 12:19:42.633018 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-3867 create -f -'
  I1012 12:19:42.739950 19 builder.go:146] stderr: ""
  I1012 12:19:42.739992 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/12/24 12:19:42.74
  I1012 12:19:43.744377 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 12:19:43.744409 19 framework.go:733] Found 1 / 1
  I1012 12:19:43.744425 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/12/24 12:19:43.744
  I1012 12:19:43.748489 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 12:19:43.748521 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1012 12:19:43.748568 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-3867 patch pod agnhost-primary-7wh56 -p {"metadata":{"annotations":{"x":"y"}}}'
  I1012 12:19:43.804237 19 builder.go:146] stderr: ""
  I1012 12:19:43.804277 19 builder.go:147] stdout: "pod/agnhost-primary-7wh56 patched\n"
  STEP: checking annotations @ 10/12/24 12:19:43.804
  I1012 12:19:43.808825 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 12:19:43.808846 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1012 12:19:43.808947 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3867" for this suite. @ 10/12/24 12:19:43.813
• [1.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/12/24 12:19:43.821
  I1012 12:19:43.821920 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:19:43.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:43.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:43.84
  STEP: Creating configMap configmap-6011/configmap-test-a2ab48e8-07a4-4d13-9724-fb9ccde355bf @ 10/12/24 12:19:43.843
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:19:43.847
  STEP: Saw pod success @ 10/12/24 12:19:47.87
  I1012 12:19:47.874037 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-configmaps-b881a938-e72a-44de-96f1-a1a54a4a8ce9 container env-test: <nil>
  STEP: delete the pod @ 10/12/24 12:19:47.889
  I1012 12:19:47.906724 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6011" for this suite. @ 10/12/24 12:19:47.912
• [4.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/12/24 12:19:47.92
  I1012 12:19:47.920644 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename watch @ 10/12/24 12:19:47.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:47.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:47.939
  STEP: creating a watch on configmaps @ 10/12/24 12:19:47.942
  STEP: creating a new configmap @ 10/12/24 12:19:47.943
  STEP: modifying the configmap once @ 10/12/24 12:19:47.948
  STEP: closing the watch once it receives two notifications @ 10/12/24 12:19:47.958
  I1012 12:19:47.958192 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1526  dd32e313-cccb-4431-9f48-d7f2d2f9e07e 6948 0 2024-10-12 12:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-12 12:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:19:47.958331 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1526  dd32e313-cccb-4431-9f48-d7f2d2f9e07e 6951 0 2024-10-12 12:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-12 12:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/12/24 12:19:47.958
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/12/24 12:19:47.967
  STEP: deleting the configmap @ 10/12/24 12:19:47.969
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/12/24 12:19:47.975
  I1012 12:19:47.975170 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1526  dd32e313-cccb-4431-9f48-d7f2d2f9e07e 6952 0 2024-10-12 12:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-12 12:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:19:47.975394 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1526  dd32e313-cccb-4431-9f48-d7f2d2f9e07e 6953 0 2024-10-12 12:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-12 12:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:19:47.975574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1526" for this suite. @ 10/12/24 12:19:47.979
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/12/24 12:19:47.985
  I1012 12:19:47.985312 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sysctl @ 10/12/24 12:19:47.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:48.003
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/12/24 12:19:48.006
  STEP: Watching for error events or started pod @ 10/12/24 12:19:48.015
  STEP: Waiting for pod completion @ 10/12/24 12:19:50.02
  STEP: Checking that the pod succeeded @ 10/12/24 12:19:52.035
  STEP: Getting logs from the pod @ 10/12/24 12:19:52.035
  STEP: Checking that the sysctl is actually updated @ 10/12/24 12:19:52.044
  I1012 12:19:52.044761 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1045" for this suite. @ 10/12/24 12:19:52.049
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 10/12/24 12:19:52.057
  I1012 12:19:52.057960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 12:19:52.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:52.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:52.079
  STEP: Creating ServiceAccount "e2e-sa-95vwr"  @ 10/12/24 12:19:52.082
  I1012 12:19:52.089585 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-95vwr"  @ 10/12/24 12:19:52.089
  I1012 12:19:52.098415 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I1012 12:19:52.098537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8551" for this suite. @ 10/12/24 12:19:52.101
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/12/24 12:19:52.108
  I1012 12:19:52.108454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pod-network-test @ 10/12/24 12:19:52.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:19:52.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:19:52.129
  STEP: Performing setup for networking test in namespace pod-network-test-6943 @ 10/12/24 12:19:52.132
  STEP: creating a selector @ 10/12/24 12:19:52.132
  STEP: Creating the service pods in kubernetes @ 10/12/24 12:19:52.132
  I1012 12:19:52.132603 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/12/24 12:20:14.251
  I1012 12:20:16.273277 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1012 12:20:16.273311 19 networking.go:42] Breadth first check of 192.168.127.136 on host 172.31.23.48...
  I1012 12:20:16.277681 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.81:9080/dial?request=hostname&protocol=udp&host=192.168.127.136&port=8081&tries=1'] Namespace:pod-network-test-6943 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:20:16.277707 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:20:16.278299 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:20:16.278348 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6943/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.81%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.127.136%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 12:20:16.324645 19 utils.go:356] Waiting for responses: map[]
  I1012 12:20:16.324682 19 utils.go:360] reached 192.168.127.136 after 0/1 tries
  I1012 12:20:16.324692 19 networking.go:42] Breadth first check of 192.168.195.201 on host 172.31.46.196...
  I1012 12:20:16.328912 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.81:9080/dial?request=hostname&protocol=udp&host=192.168.195.201&port=8081&tries=1'] Namespace:pod-network-test-6943 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:20:16.328940 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:20:16.329445 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:20:16.329505 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6943/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.81%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.195.201%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 12:20:16.374779 19 utils.go:356] Waiting for responses: map[]
  I1012 12:20:16.374824 19 utils.go:360] reached 192.168.195.201 after 0/1 tries
  I1012 12:20:16.374835 19 networking.go:42] Breadth first check of 192.168.61.80 on host 172.31.91.95...
  I1012 12:20:16.379436 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.81:9080/dial?request=hostname&protocol=udp&host=192.168.61.80&port=8081&tries=1'] Namespace:pod-network-test-6943 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:20:16.379459 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:20:16.379941 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:20:16.379990 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6943/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.81%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.61.80%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 12:20:16.423731 19 utils.go:356] Waiting for responses: map[]
  I1012 12:20:16.423774 19 utils.go:360] reached 192.168.61.80 after 0/1 tries
  I1012 12:20:16.423790 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1012 12:20:16.423914 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6943" for this suite. @ 10/12/24 12:20:16.429
• [24.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/12/24 12:20:16.438
  I1012 12:20:16.438860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:20:16.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:16.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:16.466
  STEP: Creating secret with name secret-test-de320f74-0b89-4da3-8121-d60332ccf201 @ 10/12/24 12:20:16.494
  STEP: Creating a pod to test consume secrets @ 10/12/24 12:20:16.5
  STEP: Saw pod success @ 10/12/24 12:20:20.523
  I1012 12:20:20.527477 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-7abeed41-b849-439d-8f40-5cf0903125b0 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:20:20.534
  I1012 12:20:20.552786 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9966" for this suite. @ 10/12/24 12:20:20.557
  STEP: Destroying namespace "secret-namespace-358" for this suite. @ 10/12/24 12:20:20.564
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/12/24 12:20:20.572
  I1012 12:20:20.572981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubelet-test @ 10/12/24 12:20:20.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:20.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:20.589
  STEP: Waiting for pod completion @ 10/12/24 12:20:20.6
  I1012 12:20:24.627803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6751" for this suite. @ 10/12/24 12:20:24.633
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/12/24 12:20:24.641
  I1012 12:20:24.641125 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 12:20:24.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:24.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:24.659
  STEP: creating pod @ 10/12/24 12:20:24.662
  I1012 12:20:26.689907 19 pods.go:83] Pod pod-hostip-15ef4083-8121-4ac1-a109-03848876759e has hostIP: 172.31.91.95
  I1012 12:20:26.690045 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6375" for this suite. @ 10/12/24 12:20:26.694
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/12/24 12:20:26.7
  I1012 12:20:26.700477 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sysctl @ 10/12/24 12:20:26.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:26.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:26.719
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/12/24 12:20:26.722
  I1012 12:20:26.726473 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8125" for this suite. @ 10/12/24 12:20:26.729
• [0.035 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/12/24 12:20:26.735
  I1012 12:20:26.735771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:20:26.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:26.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:26.757
  STEP: Creating configMap that has name configmap-test-emptyKey-0f5bd3bc-adb3-4393-956c-fa7a06a5eaa9 @ 10/12/24 12:20:26.761
  I1012 12:20:26.763200 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9971" for this suite. @ 10/12/24 12:20:26.766
• [0.036 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 10/12/24 12:20:26.772
  I1012 12:20:26.772322 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 12:20:26.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:26.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:26.79
  I1012 12:20:26.810891 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1012 12:20:26.810923 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1012 12:20:26.817593 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I1012 12:20:26.817625 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1012 12:20:26.824168 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1012 12:20:26.824196 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1012 12:20:26.833090 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1012 12:20:26.833137 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1012 12:20:26.838861 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1012 12:20:26.838893 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1012 12:20:26.846639 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1012 12:20:26.846669 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1012 12:20:26.855031 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1012 12:20:26.855073 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1012 12:20:26.861949 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1012 12:20:26.862390 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1012 12:20:26.869716 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1012 12:20:26.869756 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1012 12:20:26.869863 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8090" for this suite. @ 10/12/24 12:20:26.877
• [0.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 10/12/24 12:20:26.885
  I1012 12:20:26.885319 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 12:20:26.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:26.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:26.914
  I1012 12:20:26.917934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  W1012 12:20:26.919978      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000f58dd0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1012 12:20:29.463131      19 warnings.go:70] unknown field "alpha"
  W1012 12:20:29.463153      19 warnings.go:70] unknown field "beta"
  W1012 12:20:29.463157      19 warnings.go:70] unknown field "delta"
  W1012 12:20:29.463160      19 warnings.go:70] unknown field "epsilon"
  W1012 12:20:29.463163      19 warnings.go:70] unknown field "gamma"
  I1012 12:20:30.018024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1235" for this suite. @ 10/12/24 12:20:30.022
• [3.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 10/12/24 12:20:30.031
  I1012 12:20:30.031842 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:20:30.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:20:30.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:20:30.058
  STEP: Creating configMap with name cm-test-opt-del-5d84281d-4f8f-40d1-805f-74d1d69a2df4 @ 10/12/24 12:20:30.065
  STEP: Creating configMap with name cm-test-opt-upd-5bf52f02-990b-41e5-ab46-b567c22e6c38 @ 10/12/24 12:20:30.07
  STEP: Creating the pod @ 10/12/24 12:20:30.075
  STEP: Deleting configmap cm-test-opt-del-5d84281d-4f8f-40d1-805f-74d1d69a2df4 @ 10/12/24 12:20:32.12
  STEP: Updating configmap cm-test-opt-upd-5bf52f02-990b-41e5-ab46-b567c22e6c38 @ 10/12/24 12:20:32.128
  STEP: Creating configMap with name cm-test-opt-create-419ba739-7e84-4ba2-b20e-986191e9d43e @ 10/12/24 12:20:32.133
  STEP: waiting to observe update in volume @ 10/12/24 12:20:32.139
  I1012 12:21:34.438408 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3741" for this suite. @ 10/12/24 12:21:34.443
• [64.418 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 10/12/24 12:21:34.449
  I1012 12:21:34.449704 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:21:34.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:34.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:34.472
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/12/24 12:21:34.475
  STEP: Saw pod success @ 10/12/24 12:21:38.502
  I1012 12:21:38.506948 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-83e3f0ce-3055-4f95-943d-217266207f5a container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:21:38.514
  I1012 12:21:38.532532 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3197" for this suite. @ 10/12/24 12:21:38.536
• [4.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 10/12/24 12:21:38.543
  I1012 12:21:38.543820 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 12:21:38.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:38.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:38.567
  STEP: creating a Deployment @ 10/12/24 12:21:38.574
  I1012 12:21:38.574948 19 deployment.go:507] Creating simple deployment test-deployment-nf58f
  I1012 12:21:38.595218 19 deployment.go:222] deployment "test-deployment-nf58f" doesn't have the required revision set
  STEP: Getting /status @ 10/12/24 12:21:40.611
  I1012 12:21:40.615573 19 deployment.go:532] Deployment test-deployment-nf58f has Conditions: [{Available True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:39 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nf58f-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/12/24 12:21:40.615
  I1012 12:21:40.625683 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 12, 21, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 12, 21, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 12, 21, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 12, 21, 38, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-nf58f-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/12/24 12:21:40.625
  I1012 12:21:40.627566 19 deployment.go:579] Observed &Deployment event: ADDED
  I1012 12:21:40.627595 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nf58f-f4dbbbf74"}
  I1012 12:21:40.627670 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1012 12:21:40.627741 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nf58f-f4dbbbf74"}
  I1012 12:21:40.627752 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1012 12:21:40.627821 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1012 12:21:40.627834 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1012 12:21:40.627844 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nf58f-f4dbbbf74" is progressing.}
  I1012 12:21:40.627956 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1012 12:21:40.627969 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:39 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1012 12:21:40.627979 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nf58f-f4dbbbf74" has successfully progressed.}
  I1012 12:21:40.628044 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1012 12:21:40.628056 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:39 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1012 12:21:40.628066 19 deployment.go:575] Observed Deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nf58f-f4dbbbf74" has successfully progressed.}
  I1012 12:21:40.628078 19 deployment.go:572] Found Deployment test-deployment-nf58f in namespace deployment-8355 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 12:21:40.628087 19 deployment.go:583] Deployment test-deployment-nf58f has an updated status
  STEP: patching the Statefulset Status @ 10/12/24 12:21:40.628
  I1012 12:21:40.628133 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1012 12:21:40.634938 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/12/24 12:21:40.634
  I1012 12:21:40.636919 19 deployment.go:616] Observed &Deployment event: ADDED
  I1012 12:21:40.636949 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nf58f-f4dbbbf74"}
  I1012 12:21:40.637162 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1012 12:21:40.637181 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nf58f-f4dbbbf74"}
  I1012 12:21:40.637255 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1012 12:21:40.637386 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1012 12:21:40.637421 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1012 12:21:40.637435 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:38 +0000 UTC 2024-10-12 12:21:38 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nf58f-f4dbbbf74" is progressing.}
  I1012 12:21:40.637558 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1012 12:21:40.637576 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:39 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1012 12:21:40.637659 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nf58f-f4dbbbf74" has successfully progressed.}
  I1012 12:21:40.637745 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1012 12:21:40.637757 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:39 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1012 12:21:40.637775 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-12 12:21:39 +0000 UTC 2024-10-12 12:21:38 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nf58f-f4dbbbf74" has successfully progressed.}
  I1012 12:21:40.637800 19 deployment.go:612] Observed deployment test-deployment-nf58f in namespace deployment-8355 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 12:21:40.637907 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1012 12:21:40.637925 19 deployment.go:609] Found deployment test-deployment-nf58f in namespace deployment-8355 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1012 12:21:40.637935 19 deployment.go:620] Deployment test-deployment-nf58f has a patched status
  I1012 12:21:40.641836 19 deployment.go:633] Deployment "test-deployment-nf58f":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-nf58f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "010d497a-45a2-4924-9b46-c4a596ac9331",
      ResourceVersion: (string) (len=4) "7767",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-nf58f-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 12:21:40.646034 19 deployment.go:39] New ReplicaSet "test-deployment-nf58f-f4dbbbf74" of Deployment "test-deployment-nf58f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-nf58f-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d907cdf2-ff92-44d8-a59a-8cb74419468b",
      ResourceVersion: (string) (len=4) "7747",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-nf58f",
          UID: (types.UID) (len=36) "010d497a-45a2-4924-9b46-c4a596ac9331",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 31 30  |k:{\"uid\":\"010|
              00000120  64 34 39 37 61 2d 34 35  61 32 2d 34 39 32 34 2d  |d497a-45a2-4924-|
              00000130  39 62 34 36 2d 63 34 61  35 39 36 61 63 39 33 33  |9b46-c4a596ac933|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:21:40.650529 19 deployment.go:67] Pod "test-deployment-nf58f-f4dbbbf74-kmlpg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-nf58f-f4dbbbf74-kmlpg",
      GenerateName: (string) (len=32) "test-deployment-nf58f-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-8355",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21d663b9-240e-45f2-ad21-d13c4b7e40e4",
      ResourceVersion: (string) (len=4) "7746",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-nf58f-f4dbbbf74",
          UID: (types.UID) (len=36) "d907cdf2-ff92-44d8-a59a-8cb74419468b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 39 30 37 63 64 66  32 2d 66 66 39 32 2d 34  |"d907cdf2-ff92-4|
              000000a0  34 64 38 2d 61 35 39 61  2d 38 63 62 37 34 34 31  |4d8-a59a-8cb7441|
              000000b0  39 34 36 38 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |9468b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 30 36 5c 22 7d  |2.168.195.206\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mrq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mrq5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864332499,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e72cbfc01829519fc6e9f13d9c84339ea153ddf1b8732f5c4cb2090f683b49f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mrq5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:21:40.651613 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8355" for this suite. @ 10/12/24 12:21:40.656
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 10/12/24 12:21:40.662
  I1012 12:21:40.662926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:21:40.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:40.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:40.684
  STEP: Creating configMap with name projected-configmap-test-volume-a060ac35-aec1-4124-8f89-58105271022f @ 10/12/24 12:21:40.688
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:21:40.693
  STEP: Saw pod success @ 10/12/24 12:21:44.718
  I1012 12:21:44.721158 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-c163cfa1-55f3-4028-a98f-945280661e01 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:21:44.727
  I1012 12:21:44.743002 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1551" for this suite. @ 10/12/24 12:21:44.746
• [4.090 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 10/12/24 12:21:44.752
  I1012 12:21:44.752672 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename runtimeclass @ 10/12/24 12:21:44.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:44.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:44.77
  STEP: Deleting RuntimeClass runtimeclass-2002-delete-me @ 10/12/24 12:21:44.78
  STEP: Waiting for the RuntimeClass to disappear @ 10/12/24 12:21:44.785
  I1012 12:21:44.794642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2002" for this suite. @ 10/12/24 12:21:44.798
• [0.052 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/12/24 12:21:44.804
  I1012 12:21:44.804755 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 12:21:44.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:44.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:44.822
  STEP: creating the pod @ 10/12/24 12:21:44.826
  STEP: setting up watch @ 10/12/24 12:21:44.826
  STEP: submitting the pod to kubernetes @ 10/12/24 12:21:44.93
  STEP: verifying the pod is in kubernetes @ 10/12/24 12:21:44.941
  STEP: verifying pod creation was observed @ 10/12/24 12:21:44.947
  STEP: deleting the pod gracefully @ 10/12/24 12:21:46.961
  STEP: verifying pod deletion was observed @ 10/12/24 12:21:46.969
  I1012 12:21:47.944856 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8395" for this suite. @ 10/12/24 12:21:47.948
• [3.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 10/12/24 12:21:47.956
  I1012 12:21:47.956223 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:21:47.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:47.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:47.974
  STEP: creating a replication controller @ 10/12/24 12:21:47.978
  I1012 12:21:47.978444 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 create -f -'
  I1012 12:21:48.070966 19 builder.go:146] stderr: ""
  I1012 12:21:48.071011 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/12/24 12:21:48.071
  I1012 12:21:48.071124 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:21:48.122173 19 builder.go:146] stderr: ""
  I1012 12:21:48.122213 19 builder.go:147] stdout: "update-demo-nautilus-8pn87 update-demo-nautilus-nxjdf "
  I1012 12:21:48.122267 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods update-demo-nautilus-8pn87 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:21:48.170793 19 builder.go:146] stderr: ""
  I1012 12:21:48.170831 19 builder.go:147] stdout: ""
  I1012 12:21:48.170842 19 kubectl.go:2502] update-demo-nautilus-8pn87 is created but not running
  I1012 12:21:53.171202 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:21:53.221250 19 builder.go:146] stderr: ""
  I1012 12:21:53.221287 19 builder.go:147] stdout: "update-demo-nautilus-8pn87 update-demo-nautilus-nxjdf "
  I1012 12:21:53.221388 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods update-demo-nautilus-8pn87 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:21:53.274618 19 builder.go:146] stderr: ""
  I1012 12:21:53.274658 19 builder.go:147] stdout: "true"
  I1012 12:21:53.274719 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods update-demo-nautilus-8pn87 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:21:53.322294 19 builder.go:146] stderr: ""
  I1012 12:21:53.322332 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:21:53.322344 19 kubectl.go:2393] validating pod update-demo-nautilus-8pn87
  I1012 12:21:53.328172 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:21:53.328234 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:21:53.328247 19 kubectl.go:2520] update-demo-nautilus-8pn87 is verified up and running
  I1012 12:21:53.328295 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods update-demo-nautilus-nxjdf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:21:53.375856 19 builder.go:146] stderr: ""
  I1012 12:21:53.375898 19 builder.go:147] stdout: "true"
  I1012 12:21:53.375951 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods update-demo-nautilus-nxjdf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:21:53.424221 19 builder.go:146] stderr: ""
  I1012 12:21:53.424263 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:21:53.424275 19 kubectl.go:2393] validating pod update-demo-nautilus-nxjdf
  I1012 12:21:53.430803 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:21:53.430855 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:21:53.430869 19 kubectl.go:2520] update-demo-nautilus-nxjdf is verified up and running
  STEP: using delete to clean up resources @ 10/12/24 12:21:53.43
  I1012 12:21:53.430941 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 delete --grace-period=0 --force -f -'
  I1012 12:21:53.483384 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 12:21:53.483434 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1012 12:21:53.483492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get rc,svc -l name=update-demo --no-headers'
  I1012 12:21:53.554114 19 builder.go:146] stderr: "No resources found in kubectl-202 namespace.\n"
  I1012 12:21:53.554168 19 builder.go:147] stdout: ""
  I1012 12:21:53.554261 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-202 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1012 12:21:53.613249 19 builder.go:146] stderr: ""
  I1012 12:21:53.613298 19 builder.go:147] stdout: ""
  I1012 12:21:53.613574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-202" for this suite. @ 10/12/24 12:21:53.618
• [5.670 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/12/24 12:21:53.626
  I1012 12:21:53.626760 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:21:53.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:53.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:53.647
  STEP: Creating projection with secret that has name projected-secret-test-a3145bf3-61c5-464e-9921-66e721640476 @ 10/12/24 12:21:53.65
  STEP: Creating a pod to test consume secrets @ 10/12/24 12:21:53.655
  STEP: Saw pod success @ 10/12/24 12:21:57.68
  I1012 12:21:57.684371 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-bfadd6ae-00d0-4a9f-be0d-fa1be1f63a83 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:21:57.691
  I1012 12:21:57.709388 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1571" for this suite. @ 10/12/24 12:21:57.713
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 10/12/24 12:21:57.72
  I1012 12:21:57.720951 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 12:21:57.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:21:57.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:21:57.744
  STEP: Counting existing ResourceQuota @ 10/12/24 12:21:57.747
  STEP: Creating a ResourceQuota @ 10/12/24 12:22:02.751
  STEP: Ensuring resource quota status is calculated @ 10/12/24 12:22:02.758
  STEP: Creating a Service @ 10/12/24 12:22:04.765
  STEP: Creating a NodePort Service @ 10/12/24 12:22:04.782
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/12/24 12:22:04.805
  STEP: Ensuring resource quota status captures service creation @ 10/12/24 12:22:04.826
  STEP: Deleting Services @ 10/12/24 12:22:06.83
  STEP: Ensuring resource quota status released usage @ 10/12/24 12:22:06.866
  I1012 12:22:08.872382 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-664" for this suite. @ 10/12/24 12:22:08.877
• [11.163 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/12/24 12:22:08.883
  I1012 12:22:08.883992 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/12/24 12:22:08.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:22:08.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:22:08.907
  STEP: create the container to handle the HTTPGet hook request. @ 10/12/24 12:22:08.913
  STEP: create the pod with lifecycle hook @ 10/12/24 12:22:10.94
  STEP: delete the pod with lifecycle hook @ 10/12/24 12:22:12.962
  STEP: check prestop hook @ 10/12/24 12:22:14.984
  I1012 12:22:14.991300 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2348" for this suite. @ 10/12/24 12:22:14.995
• [6.118 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/12/24 12:22:15.002
  I1012 12:22:15.002021 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-pred @ 10/12/24 12:22:15.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:22:15.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:22:15.02
  I1012 12:22:15.024252 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1012 12:22:15.031273 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 12:22:15.034626 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-23-48 before test
  I1012 12:22:15.040403 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hkx2j from ingress-nginx-kubernetes-worker started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040431 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 12:22:15.040437 19 predicates.go:957] calico-node-8fbzw from kube-system started at 2024-10-12 12:10:08 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040441 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 12:22:15.040445 19 predicates.go:957] coredns-5b4857d7c8-2prp4 from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040449 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1012 12:22:15.040453 19 predicates.go:957] kube-state-metrics-5d7bdccd49-fdm9v from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040456 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1012 12:22:15.040460 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-7gfhl from kube-system started at 2024-10-12 11:58:56 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.040463 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1012 12:22:15.040467 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1012 12:22:15.040470 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-52gtn from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040474 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1012 12:22:15.040477 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-jg7q5 from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.040481 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1012 12:22:15.040484 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.040488 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 12:22:15.040493 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 12:22:15.040499 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-46-196 before test
  I1012 12:22:15.046081 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mtf2j from ingress-nginx-kubernetes-worker started at 2024-10-12 12:08:07 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.046139 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 12:22:15.046147 19 predicates.go:957] calico-node-z2z5r from kube-system started at 2024-10-12 12:09:19 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.046151 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 12:22:15.046157 19 predicates.go:957] sonobuoy-e2e-job-f6ba430c2ee44c56 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.046161 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1012 12:22:15.046166 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 12:22:15.046171 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-lg8hq from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.046176 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 12:22:15.046181 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 12:22:15.046188 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-91-95 before test
  I1012 12:22:15.051238 19 predicates.go:957] pod-handle-http-request from container-lifecycle-hook-2348 started at 2024-10-12 12:22:08 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.051256 19 predicates.go:959] 	Container container-handle-http-request ready: true, restart count 0
  I1012 12:22:15.051262 19 predicates.go:959] 	Container container-handle-https-request ready: true, restart count 0
  I1012 12:22:15.051269 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-2gclp from ingress-nginx-kubernetes-worker started at 2024-10-12 12:03:50 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.051273 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 12:22:15.051279 19 predicates.go:957] calico-node-2k2cp from kube-system started at 2024-10-12 12:10:19 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.051285 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 12:22:15.051290 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-12 12:12:34 +0000 UTC (1 container statuses recorded)
  I1012 12:22:15.051295 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1012 12:22:15.051301 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-6zbrj from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 12:22:15.051306 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 12:22:15.051311 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/12/24 12:22:15.051
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/12/24 12:22:17.076
  STEP: Trying to apply a random label on the found node. @ 10/12/24 12:22:17.093
  STEP: verifying the node has the label kubernetes.io/e2e-33667f51-da9b-4342-b8d6-c77eda4f53a1 95 @ 10/12/24 12:22:17.102
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/12/24 12:22:17.109
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.46.196 on the node which pod4 resides and expect not scheduled @ 10/12/24 12:22:19.133
  STEP: removing the label kubernetes.io/e2e-33667f51-da9b-4342-b8d6-c77eda4f53a1 off the node ip-172-31-46-196 @ 10/12/24 12:27:19.141
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-33667f51-da9b-4342-b8d6-c77eda4f53a1 @ 10/12/24 12:27:19.156
  I1012 12:27:19.161705 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5714" for this suite. @ 10/12/24 12:27:19.166
• [304.172 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/12/24 12:27:19.174
  I1012 12:27:19.174811 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 12:27:19.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:19.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:19.198
  I1012 12:27:19.205085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: creating the pod @ 10/12/24 12:27:19.205
  STEP: submitting the pod to kubernetes @ 10/12/24 12:27:19.206
  I1012 12:27:21.250371 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-609" for this suite. @ 10/12/24 12:27:21.255
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 10/12/24 12:27:21.262
  I1012 12:27:21.262576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:27:21.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:21.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:21.282
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 12:27:21.286
  STEP: Saw pod success @ 10/12/24 12:27:25.315
  I1012 12:27:25.319240 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-c8d4a8e1-9c2e-462d-9365-1780931d6732 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 12:27:25.325
  I1012 12:27:25.345594 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6295" for this suite. @ 10/12/24 12:27:25.348
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/12/24 12:27:25.355
  I1012 12:27:25.355255 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subpath @ 10/12/24 12:27:25.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:25.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:25.375
  STEP: Setting up data @ 10/12/24 12:27:25.379
  STEP: Creating pod pod-subpath-test-downwardapi-dbnr @ 10/12/24 12:27:25.388
  STEP: Creating a pod to test atomic-volume-subpath @ 10/12/24 12:27:25.388
  STEP: Saw pod success @ 10/12/24 12:27:47.464
  I1012 12:27:47.468520 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-subpath-test-downwardapi-dbnr container test-container-subpath-downwardapi-dbnr: <nil>
  STEP: delete the pod @ 10/12/24 12:27:47.489
  STEP: Deleting pod pod-subpath-test-downwardapi-dbnr @ 10/12/24 12:27:47.506
  I1012 12:27:47.506221 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-dbnr" in namespace "subpath-7313"
  I1012 12:27:47.510314 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7313" for this suite. @ 10/12/24 12:27:47.514
• [22.167 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/12/24 12:27:47.522
  I1012 12:27:47.522783 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename proxy @ 10/12/24 12:27:47.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:47.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:47.544
  I1012 12:27:47.548126 19 proxy.go:387] Creating pod...
  I1012 12:27:49.564778 19 proxy.go:411] Creating service...
  I1012 12:27:49.576460 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=DELETE
  I1012 12:27:49.581957 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1012 12:27:49.582011 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=OPTIONS
  I1012 12:27:49.586662 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1012 12:27:49.586702 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=PATCH
  I1012 12:27:49.591703 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1012 12:27:49.591750 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=POST
  I1012 12:27:49.595782 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1012 12:27:49.595820 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=PUT
  I1012 12:27:49.600374 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1012 12:27:49.600414 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=DELETE
  I1012 12:27:49.606075 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1012 12:27:49.606131 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1012 12:27:49.611679 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1012 12:27:49.611713 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=PATCH
  I1012 12:27:49.617424 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1012 12:27:49.617446 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=POST
  I1012 12:27:49.623615 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1012 12:27:49.623672 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=PUT
  I1012 12:27:49.629330 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1012 12:27:49.629379 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=GET
  I1012 12:27:49.633079 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1012 12:27:49.633156 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=GET
  I1012 12:27:49.639342 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1012 12:27:49.639393 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/pods/agnhost/proxy?method=HEAD
  I1012 12:27:49.642386 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1012 12:27:49.642427 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9556/services/e2e-proxy-test-service/proxy?method=HEAD
  I1012 12:27:49.647999 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1012 12:27:49.648230 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9556" for this suite. @ 10/12/24 12:27:49.653
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 10/12/24 12:27:49.663
  I1012 12:27:49.664012 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:27:49.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:49.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:49.687
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/12/24 12:27:49.69
  STEP: Saw pod success @ 10/12/24 12:27:51.711
  I1012 12:27:51.715259 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-fe4a3c80-6ab5-4bb1-9a77-8e298bc4286d container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:27:51.722
  I1012 12:27:51.742058 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2691" for this suite. @ 10/12/24 12:27:51.745
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 10/12/24 12:27:51.754
  I1012 12:27:51.754897 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 12:27:51.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:51.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:51.774
  STEP: Setting up server cert @ 10/12/24 12:27:51.799
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 12:27:51.941
  STEP: Deploying the webhook pod @ 10/12/24 12:27:51.95
  STEP: Wait for the deployment to be ready @ 10/12/24 12:27:51.962
  I1012 12:27:51.969890 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 12:27:53.983
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:27:53.995
  I1012 12:27:54.995298 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/12/24 12:27:55.004
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/12/24 12:27:55.02
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/12/24 12:27:55.026
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/12/24 12:27:55.038
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/12/24 12:27:55.05
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/12/24 12:27:55.058
  I1012 12:27:55.106147 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3658" for this suite. @ 10/12/24 12:27:55.112
  STEP: Destroying namespace "webhook-markers-9089" for this suite. @ 10/12/24 12:27:55.119
• [3.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 10/12/24 12:27:55.128
  I1012 12:27:55.128085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 12:27:55.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:55.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:55.149
  STEP: Updating Namespace "namespaces-3294" @ 10/12/24 12:27:55.152
  I1012 12:27:55.160767 19 namespace.go:389] Namespace "namespaces-3294" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ac297cd5-b86b-4448-8b12-55e3a6149588", "kubernetes.io/metadata.name":"namespaces-3294", "namespaces-3294":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1012 12:27:55.160892 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3294" for this suite. @ 10/12/24 12:27:55.165
• [0.044 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 10/12/24 12:27:55.171
  I1012 12:27:55.172003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:27:55.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:27:55.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:27:55.19
  STEP: Creating pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651 @ 10/12/24 12:27:55.193
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 12:27:57.21
  I1012 12:27:57.215084 19 container_probe.go:1749] Initial restart count of pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab is 0
  I1012 12:27:57.219014 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:27:59.225372 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:01.231703 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:03.238494 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:05.244273 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:07.250823 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:09.256952 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:11.261957 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:13.267210 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:15.272025 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:17.277465 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:19.284415 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:21.290973 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:23.296603 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:25.301720 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:27.307591 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:29.313374 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:31.319952 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:33.327082 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:35.332066 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:37.337599 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:39.343493 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:41.348987 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:43.354698 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:45.360160 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:47.364807 19 container_probe.go:1759] Get pod busybox-9167f697-190a-4842-bcba-3dbb2906f2ab in namespace container-probe-651
  I1012 12:28:47.364845 19 container_probe.go:1763] Restart count of pod container-probe-651/busybox-9167f697-190a-4842-bcba-3dbb2906f2ab is now 1 (50.149710541s elapsed)
  STEP: deleting the pod @ 10/12/24 12:28:47.364
  I1012 12:28:47.382011 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-651" for this suite. @ 10/12/24 12:28:47.385
• [52.222 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/12/24 12:28:47.394
  I1012 12:28:47.394443 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/12/24 12:28:47.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:28:47.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:28:47.415
  I1012 12:28:47.419019 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:28:53.641687 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3247" for this suite. @ 10/12/24 12:28:53.647
• [6.261 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/12/24 12:28:53.655
  I1012 12:28:53.655872 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename endpointslice @ 10/12/24 12:28:53.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:28:53.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:28:53.677
  I1012 12:28:55.726177 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-697" for this suite. @ 10/12/24 12:28:55.73
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/12/24 12:28:55.738
  I1012 12:28:55.738947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 12:28:55.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:28:55.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:28:55.756
  I1012 12:28:55.759338 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1012 12:28:55.765024 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1012 12:28:55.776069 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1012 12:28:57.786513 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1012 12:28:57.789952 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1012 12:28:57.802193 19 deployment.go:313] Updating deployment test-recreate-deployment
  I1012 12:28:57.802234 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1012 12:28:57.884460 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f492816-4aeb-47db-9b97-dc64178eff28",
      ResourceVersion: (string) (len=4) "9429",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 12:28:57.889077 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a14bbb09-bb84-4503-97d3-a37fbe28c522",
      ResourceVersion: (string) (len=4) "9427",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9f492816-4aeb-47db-9b97-dc64178eff28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 34 39 32 38  31 36 2d 34 61 65 62 2d  |\"9f492816-4aeb-|
              00000120  34 37 64 62 2d 39 62 39  37 2d 64 63 36 34 31 37  |47db-9b97-dc6417|
              00000130  38 65 66 66 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8eff28\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:28:57.889591 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1012 12:28:57.889810 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "816727d3-7c96-4b9c-8145-7d33e8803a8b",
      ResourceVersion: (string) (len=4) "9418",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9f492816-4aeb-47db-9b97-dc64178eff28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 34 39 32 38  31 36 2d 34 61 65 62 2d  |\"9f492816-4aeb-|
              00000120  34 37 64 62 2d 39 62 39  37 2d 64 63 36 34 31 37  |47db-9b97-dc6417|
              00000130  38 65 66 66 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8eff28\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:28:57.895507 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-hmm72" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-hmm72",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-5351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "087ab52f-b838-483e-b1cd-7628fc73dbed",
      ResourceVersion: (string) (len=4) "9430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "a14bbb09-bb84-4503-97d3-a37fbe28c522",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  34 62 62 62 30 39 2d 62  |d\":\"a14bbb09-b|
              00000090  62 38 34 2d 34 35 30 33  2d 39 37 64 33 2d 61 33  |b84-4503-97d3-a3|
              000000a0  37 66 62 65 32 38 63 35  32 32 5c 22 7d 22 3a 7b  |7fbe28c522\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbswt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbswt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864332937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864332937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tbswt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:28:57.897048 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5351" for this suite. @ 10/12/24 12:28:57.901
• [2.170 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 10/12/24 12:28:57.909
  I1012 12:28:57.909226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:28:57.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:28:57.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:28:57.932
  STEP: starting the proxy server @ 10/12/24 12:28:57.935
  I1012 12:28:57.935734 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-7807 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/12/24 12:28:57.968
  I1012 12:28:57.975562 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1012 12:28:57.977071 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:43053

  I1012 12:28:57.977072 19 kubectl.go:2229] kubectl proxy stderr: W1012 12:28:57.968183     146 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7807" for this suite. @ 10/12/24 12:28:57.979
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 10/12/24 12:28:57.987
  I1012 12:28:57.987461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 12:28:57.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:28:58.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:28:58.009
  I1012 12:28:58.012816 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:29:01.099644 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-943" for this suite. @ 10/12/24 12:29:01.103
• [3.122 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 10/12/24 12:29:01.109
  I1012 12:29:01.109494 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption @ 10/12/24 12:29:01.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:29:01.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:29:01.129
  I1012 12:29:01.148768 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1012 12:30:01.155797 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/12/24 12:30:01.159
  I1012 12:30:01.159588 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/12/24 12:30:01.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:30:01.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:30:01.183
  STEP: Finding an available node @ 10/12/24 12:30:01.187
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/12/24 12:30:01.187
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/12/24 12:30:03.211
  I1012 12:30:03.225319 19 preemption.go:585] found a healthy node: ip-172-31-91-95
  I1012 12:30:09.296362 19 preemption.go:708] pods created so far: [1 1 1]
  I1012 12:30:09.296393 19 preemption.go:709] length of pods created so far: 3
  I1012 12:30:11.308267 19 preemption.go:726] pods created so far: [2 2 1]
  I1012 12:30:18.383803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3087" for this suite. @ 10/12/24 12:30:18.387
  I1012 12:30:18.394142 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-942" for this suite. @ 10/12/24 12:30:18.397
• [77.295 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/12/24 12:30:18.405
  I1012 12:30:18.405388 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename podtemplate @ 10/12/24 12:30:18.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:30:18.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:30:18.424
  I1012 12:30:18.468642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5854" for this suite. @ 10/12/24 12:30:18.473
• [0.077 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/12/24 12:30:18.482
  I1012 12:30:18.482793 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename cronjob @ 10/12/24 12:30:18.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:30:18.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:30:18.508
  STEP: Creating a cronjob @ 10/12/24 12:30:18.511
  STEP: Ensuring more than one job is running at a time @ 10/12/24 12:30:18.519
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/12/24 12:32:00.524
  STEP: Removing cronjob @ 10/12/24 12:32:00.533
  I1012 12:32:00.544360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9657" for this suite. @ 10/12/24 12:32:00.548
• [102.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/12/24 12:32:00.557
  I1012 12:32:00.557560 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename limitrange @ 10/12/24 12:32:00.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:00.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:00.59
  STEP: Creating LimitRange "e2e-limitrange-bwhss" in namespace "limitrange-9123" @ 10/12/24 12:32:00.594
  STEP: Creating another limitRange in another namespace @ 10/12/24 12:32:00.599
  I1012 12:32:00.618001 19 limit_range.go:299] Namespace "e2e-limitrange-bwhss-4094" created
  I1012 12:32:00.618040 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-bwhss" in namespace "e2e-limitrange-bwhss-4094"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bwhss" @ 10/12/24 12:32:00.623
  I1012 12:32:00.627305 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bwhss" in "limitrange-9123" namespace @ 10/12/24 12:32:00.627
  I1012 12:32:00.633308 19 limit_range.go:335] LimitRange "e2e-limitrange-bwhss" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bwhss" by Collection with labelSelector: "e2e-limitrange-bwhss=patched" @ 10/12/24 12:32:00.633
  STEP: Confirm that the limitRange "e2e-limitrange-bwhss" has been deleted @ 10/12/24 12:32:00.644
  I1012 12:32:00.644395 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1012 12:32:00.648561 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-bwhss=patched"
  I1012 12:32:00.648600 19 limit_range.go:344] LimitRange "e2e-limitrange-bwhss" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bwhss" @ 10/12/24 12:32:00.648
  I1012 12:32:00.652457 19 limit_range.go:350] Found 1 limitRange
  I1012 12:32:00.652578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9123" for this suite. @ 10/12/24 12:32:00.655
  STEP: Destroying namespace "e2e-limitrange-bwhss-4094" for this suite. @ 10/12/24 12:32:00.661
• [0.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/12/24 12:32:00.668
  I1012 12:32:00.668347 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 12:32:00.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:00.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:00.686
  I1012 12:32:00.689836 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1012 12:32:00.701205 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1012 12:32:05.706137 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 12:32:05.706
  I1012 12:32:05.706235 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1012 12:32:05.711787 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1012 12:32:05.718444 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1012 12:32:07.727146 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1012 12:32:07.730512 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1012 12:32:07.742358 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e529e21b-dcce-44f6-b744-714f95dc88ca",
      ResourceVersion: (string) (len=5) "10238",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 12:32:07.748172 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ab2814c-1c4a-43fa-8971-36212b73b422",
      ResourceVersion: (string) (len=5) "10228",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e529e21b-dcce-44f6-b744-714f95dc88ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 32 39 65 32  31 62 2d 64 63 63 65 2d  |\"e529e21b-dcce-|
              00000120  34 34 66 36 2d 62 37 34  34 2d 37 31 34 66 39 35  |44f6-b744-714f95|
              00000130  64 63 38 38 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dc88ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:32:07.748652 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1012 12:32:07.748818 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebabc0b8-ecbe-402f-bd9a-8f5ce8b9dcb5",
      ResourceVersion: (string) (len=5) "10237",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e529e21b-dcce-44f6-b744-714f95dc88ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 35 32 39 65 32 31  |"uid\":\"e529e21|
              000000b0  62 2d 64 63 63 65 2d 34  34 66 36 2d 62 37 34 34  |b-dcce-44f6-b744|
              000000c0  2d 37 31 34 66 39 35 64  63 38 38 63 61 5c 22 7d  |-714f95dc88ca\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:32:07.753706 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-t5fgw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-t5fgw",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=14) "deployment-963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c497bcad-f33d-44cd-ae0a-04a66c365dc7",
      ResourceVersion: (string) (len=5) "10226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "6ab2814c-1c4a-43fa-8971-36212b73b422",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 61  62 32 38 31 34 63 2d 31  |d\":\"6ab2814c-1|
              00000090  63 34 61 2d 34 33 66 61  2d 38 39 37 31 2d 33 36  |c4a-43fa-8971-36|
              000000a0  32 31 32 62 37 33 62 34  32 32 5c 22 7d 22 3a 7b  |212b73b422\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 31 30 34 5c 22 7d 22  |2.168.61.104\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5r52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5r52",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864333126,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://cca6a254ed73dd14e6ea373526ca7b5826af6173a83b943325e80fb44c3a100c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s5r52",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:32:07.754899 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-963" for this suite. @ 10/12/24 12:32:07.759
• [7.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/12/24 12:32:07.767
  I1012 12:32:07.767165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context-test @ 10/12/24 12:32:07.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:07.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:07.786
  I1012 12:32:11.825379 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2007" for this suite. @ 10/12/24 12:32:11.829
• [4.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/12/24 12:32:11.836
  I1012 12:32:11.836279 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:32:11.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:11.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:11.859
  I1012 12:32:11.908247 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2732" for this suite. @ 10/12/24 12:32:11.912
• [0.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/12/24 12:32:11.919
  I1012 12:32:11.919771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:32:11.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:11.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:11.941
  STEP: Creating secret with name s-test-opt-del-bddbf71a-6e10-424e-ab25-9d788d5be185 @ 10/12/24 12:32:11.948
  STEP: Creating secret with name s-test-opt-upd-7e855a41-5aba-4032-b683-6564aaafda53 @ 10/12/24 12:32:11.953
  STEP: Creating the pod @ 10/12/24 12:32:11.959
  STEP: Deleting secret s-test-opt-del-bddbf71a-6e10-424e-ab25-9d788d5be185 @ 10/12/24 12:32:14.005
  STEP: Updating secret s-test-opt-upd-7e855a41-5aba-4032-b683-6564aaafda53 @ 10/12/24 12:32:14.011
  STEP: Creating secret with name s-test-opt-create-028f8131-41d5-4c6b-836c-6e8cd168d5c9 @ 10/12/24 12:32:14.016
  STEP: waiting to observe update in volume @ 10/12/24 12:32:14.022
  I1012 12:32:18.062619 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-128" for this suite. @ 10/12/24 12:32:18.066
• [6.154 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 10/12/24 12:32:18.073
  I1012 12:32:18.073650 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:32:18.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:18.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:18.092
  STEP: validating cluster-info @ 10/12/24 12:32:18.095
  I1012 12:32:18.095991 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-9497 cluster-info'
  I1012 12:32:18.144189 19 builder.go:146] stderr: ""
  I1012 12:32:18.144230 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1012 12:32:18.144413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9497" for this suite. @ 10/12/24 12:32:18.148
• [0.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/12/24 12:32:18.155
  I1012 12:32:18.155460 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:32:18.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:18.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:18.176
  STEP: Creating projection with secret that has name secret-emptykey-test-37ae81d1-dd3d-4cfb-bd98-182a4eabd22c @ 10/12/24 12:32:18.179
  I1012 12:32:18.182339 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7591" for this suite. @ 10/12/24 12:32:18.186
• [0.040 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 10/12/24 12:32:18.195
  I1012 12:32:18.195254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context @ 10/12/24 12:32:18.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:18.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:18.214
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/12/24 12:32:18.217
  STEP: Saw pod success @ 10/12/24 12:32:20.237
  I1012 12:32:20.242655 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod security-context-be068faf-c5f2-4051-b6f5-fc71298675e9 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:32:20.252
  I1012 12:32:20.272274 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4997" for this suite. @ 10/12/24 12:32:20.276
• [2.095 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 10/12/24 12:32:20.291
  I1012 12:32:20.291703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:32:20.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:20.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:20.319
  STEP: create deployment with httpd image @ 10/12/24 12:32:20.323
  I1012 12:32:20.323966 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5370 create -f -'
  I1012 12:32:20.408414 19 builder.go:146] stderr: ""
  I1012 12:32:20.408458 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/12/24 12:32:20.408
  I1012 12:32:20.408554 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5370 diff -f -'
  I1012 12:32:20.497322 19 builder.go:135] rc: 1
  I1012 12:32:20.497420 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5370 delete -f -'
  I1012 12:32:20.549597 19 builder.go:146] stderr: ""
  I1012 12:32:20.549644 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1012 12:32:20.549774 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5370" for this suite. @ 10/12/24 12:32:20.554
• [0.274 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 10/12/24 12:32:20.566
  I1012 12:32:20.566091 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 12:32:20.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:20.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:20.587
  I1012 12:32:20.591153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/12/24 12:32:22.037
  I1012 12:32:22.037754 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-4889 --namespace=crd-publish-openapi-4889 create -f -'
  I1012 12:32:22.109427 19 builder.go:146] stderr: ""
  I1012 12:32:22.109465 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5395-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1012 12:32:22.109514 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-4889 --namespace=crd-publish-openapi-4889 delete e2e-test-crd-publish-openapi-5395-crds test-cr'
  I1012 12:32:22.171467 19 builder.go:146] stderr: ""
  I1012 12:32:22.171511 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5395-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1012 12:32:22.171561 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-4889 --namespace=crd-publish-openapi-4889 apply -f -'
  I1012 12:32:22.232595 19 builder.go:146] stderr: ""
  I1012 12:32:22.232632 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5395-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1012 12:32:22.232688 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-4889 --namespace=crd-publish-openapi-4889 delete e2e-test-crd-publish-openapi-5395-crds test-cr'
  I1012 12:32:22.287870 19 builder.go:146] stderr: ""
  I1012 12:32:22.287909 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5395-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/12/24 12:32:22.287
  I1012 12:32:22.287996 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-4889 explain e2e-test-crd-publish-openapi-5395-crds'
  I1012 12:32:22.335059 19 builder.go:146] stderr: ""
  I1012 12:32:22.335137 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5395-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1012 12:32:23.583209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4889" for this suite. @ 10/12/24 12:32:23.591
• [3.035 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 10/12/24 12:32:23.6
  I1012 12:32:23.600855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:32:23.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:23.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:23.618
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 12:32:23.622
  STEP: Saw pod success @ 10/12/24 12:32:27.649
  I1012 12:32:27.654012 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod downwardapi-volume-85ab9631-68f3-446b-8a70-79c403f08878 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 12:32:27.664
  I1012 12:32:27.679306 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7795" for this suite. @ 10/12/24 12:32:27.683
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/12/24 12:32:27.69
  I1012 12:32:27.690138 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename chunking @ 10/12/24 12:32:27.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:32:27.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:32:27.705
  STEP: creating a large number of resources @ 10/12/24 12:32:27.708
  STEP: retrieving the first page @ 10/12/24 12:32:45.398
  I1012 12:32:45.447353 19 chunking.go:163] Retrieved 40/40 results with rv 11019 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 10/12/24 12:32:45.447
  I1012 12:33:05.456019 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:33:25.455414 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:33:45.456293 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:34:05.457036 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:34:25.454487 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:34:45.455739 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:35:05.456872 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:35:25.455708 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:35:45.457429 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:36:05.455468 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:36:25.457351 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:36:45.456531 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:37:05.452542 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:37:25.454892 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:37:45.456216 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:38:05.457301 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:38:25.456195 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1012 12:38:45.456381 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1012 12:38:45.456421 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/12/24 12:38:45.456
  STEP: retrieving all remaining pages @ 10/12/24 12:38:45.46
  I1012 12:38:45.464403 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1012 12:38:45.469422 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1012 12:38:45.474008 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1012 12:38:45.477668 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1012 12:38:45.482545 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1012 12:38:45.487310 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1012 12:38:45.490600 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE3MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1012 12:38:45.495223 19 chunking.go:221] Retrieved 40/40 results with rv 11705 and continue 
  I1012 12:38:45.495415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8223" for this suite. @ 10/12/24 12:38:45.499
• [377.821 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 10/12/24 12:38:45.511
  I1012 12:38:45.511595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 12:38:45.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:38:45.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:38:45.53
  STEP: Counting existing ResourceQuota @ 10/12/24 12:39:02.538
  STEP: Creating a ResourceQuota @ 10/12/24 12:39:07.543
  STEP: Ensuring resource quota status is calculated @ 10/12/24 12:39:07.549
  STEP: Creating a ConfigMap @ 10/12/24 12:39:09.556
  STEP: Ensuring resource quota status captures configMap creation @ 10/12/24 12:39:09.566
  STEP: Deleting a ConfigMap @ 10/12/24 12:39:11.573
  STEP: Ensuring resource quota status released usage @ 10/12/24 12:39:11.58
  I1012 12:39:13.585486 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4626" for this suite. @ 10/12/24 12:39:13.59
• [28.086 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 10/12/24 12:39:13.597
  I1012 12:39:13.597578 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 12:39:13.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:13.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:13.612
  STEP: create the rc @ 10/12/24 12:39:13.616
  W1012 12:39:13.621379      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/12/24 12:39:18.627
  STEP: wait for all pods to be garbage collected @ 10/12/24 12:39:18.633
  STEP: Gathering metrics @ 10/12/24 12:39:23.644
  W1012 12:39:23.650248      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 12:39:23.650285 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 12:39:23.650460 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2947" for this suite. @ 10/12/24 12:39:23.653
• [10.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 10/12/24 12:39:23.66
  I1012 12:39:23.660783 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:39:23.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:23.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:23.687
  STEP: Creating pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269 @ 10/12/24 12:39:23.691
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 12:39:25.713
  I1012 12:39:25.717969 19 container_probe.go:1749] Initial restart count of pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c is 0
  I1012 12:39:25.721027 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:27.726747 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:29.732034 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:31.736749 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:33.742122 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:35.747175 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:37.753679 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:39.757366 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:41.762852 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:43.767932 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:45.774042 19 container_probe.go:1759] Get pod liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c in namespace container-probe-8269
  I1012 12:39:45.774080 19 container_probe.go:1763] Restart count of pod container-probe-8269/liveness-a09bde3e-de51-4bc2-962f-aef2dc1dc18c is now 1 (20.056078583s elapsed)
  STEP: deleting the pod @ 10/12/24 12:39:45.774
  I1012 12:39:45.788776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8269" for this suite. @ 10/12/24 12:39:45.793
• [22.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/12/24 12:39:45.8
  I1012 12:39:45.800594 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:39:45.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:45.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:45.824
  STEP: Creating a pod to test substitution in container's command @ 10/12/24 12:39:45.827
  STEP: Saw pod success @ 10/12/24 12:39:49.852
  I1012 12:39:49.856718 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod var-expansion-7e25036e-1a76-4aa3-ba41-de6de7379c38 container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 12:39:49.869
  I1012 12:39:49.887005 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6601" for this suite. @ 10/12/24 12:39:49.89
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 10/12/24 12:39:49.899
  I1012 12:39:49.899698 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:39:49.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:49.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:49.924
  STEP: creating Agnhost RC @ 10/12/24 12:39:49.93
  I1012 12:39:49.930758 19 kubectl.go:1537] namespace kubectl-4218
  I1012 12:39:49.930812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4218 create -f -'
  I1012 12:39:50.018606 19 builder.go:146] stderr: ""
  I1012 12:39:50.018646 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/12/24 12:39:50.018
  I1012 12:39:51.023496 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 12:39:51.023533 19 framework.go:733] Found 1 / 1
  I1012 12:39:51.023552 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1012 12:39:51.027955 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 12:39:51.027990 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1012 12:39:51.027997 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-4218 
  I1012 12:39:51.028054 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4218 logs agnhost-primary-xkq6s agnhost-primary'
  I1012 12:39:51.081890 19 builder.go:146] stderr: ""
  I1012 12:39:51.081940 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/12/24 12:39:51.081
  I1012 12:39:51.082091 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4218 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1012 12:39:51.146380 19 builder.go:146] stderr: ""
  I1012 12:39:51.146651 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I1012 12:39:51.152190 19 utils.go:1203] Service rm2 in namespace kubectl-4218 found.
  STEP: exposing service @ 10/12/24 12:39:53.161
  I1012 12:39:53.161527 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4218 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1012 12:39:53.224672 19 builder.go:146] stderr: ""
  I1012 12:39:53.224721 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I1012 12:39:53.230738 19 utils.go:1203] Service rm3 in namespace kubectl-4218 found.
  I1012 12:39:55.241908 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4218" for this suite. @ 10/12/24 12:39:55.246
• [5.355 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/12/24 12:39:55.255
  I1012 12:39:55.255034 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:39:55.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:55.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:55.271
  STEP: creating a secret @ 10/12/24 12:39:55.277
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/12/24 12:39:55.281
  STEP: patching the secret @ 10/12/24 12:39:55.286
  STEP: deleting the secret using a LabelSelector @ 10/12/24 12:39:55.295
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/12/24 12:39:55.304
  I1012 12:39:55.308287 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3122" for this suite. @ 10/12/24 12:39:55.311
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/12/24 12:39:55.318
  I1012 12:39:55.318839 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:39:55.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:55.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:55.336
  STEP: Creating a pod to test downward api env vars @ 10/12/24 12:39:55.34
  STEP: Saw pod success @ 10/12/24 12:39:59.362
  I1012 12:39:59.365467 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downward-api-57f3eee4-b4f9-4d65-a210-59b2f20f44fe container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 12:39:59.373
  I1012 12:39:59.391334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-606" for this suite. @ 10/12/24 12:39:59.395
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 10/12/24 12:39:59.402
  I1012 12:39:59.402860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:39:59.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:39:59.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:39:59.419
  STEP: Creating configMap with name configmap-test-volume-map-deb142c6-c827-436d-adc1-46be0b5b2f75 @ 10/12/24 12:39:59.422
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:39:59.427
  STEP: Saw pod success @ 10/12/24 12:40:03.452
  I1012 12:40:03.456380 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-53d0e562-61e6-450a-9324-8d0b9b6dfcb6 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:40:03.464
  I1012 12:40:03.479308 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8922" for this suite. @ 10/12/24 12:40:03.483
• [4.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 10/12/24 12:40:03.49
  I1012 12:40:03.490635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 12:40:03.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:03.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:03.507
  STEP: creating a ServiceAccount @ 10/12/24 12:40:03.511
  STEP: watching for the ServiceAccount to be added @ 10/12/24 12:40:03.518
  STEP: patching the ServiceAccount @ 10/12/24 12:40:03.52
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/12/24 12:40:03.526
  STEP: deleting the ServiceAccount @ 10/12/24 12:40:03.53
  I1012 12:40:03.545053 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3827" for this suite. @ 10/12/24 12:40:03.549
• [0.065 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 10/12/24 12:40:03.555
  I1012 12:40:03.555481 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 12:40:03.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:03.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:03.571
  STEP: create the deployment @ 10/12/24 12:40:03.574
  W1012 12:40:03.580271      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/12/24 12:40:03.58
  STEP: delete the deployment @ 10/12/24 12:40:04.086
  STEP: wait for all rs to be garbage collected @ 10/12/24 12:40:04.095
  STEP: expected 0 rs, got 1 rs @ 10/12/24 12:40:04.102
  STEP: expected 0 pods, got 2 pods @ 10/12/24 12:40:04.107
  STEP: Gathering metrics @ 10/12/24 12:40:04.608
  W1012 12:40:04.613857      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 12:40:04.613893 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 12:40:04.614197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2749" for this suite. @ 10/12/24 12:40:04.618
• [1.070 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 10/12/24 12:40:04.625
  I1012 12:40:04.625781 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 12:40:04.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:04.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:04.64
  STEP: Creating a suspended job @ 10/12/24 12:40:04.647
  STEP: Patching the Job @ 10/12/24 12:40:04.652
  STEP: Watching for Job to be patched @ 10/12/24 12:40:04.667
  I1012 12:40:04.669402 19 job.go:1330] Event ADDED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-job-label:e2e-7n7zk] and annotations: map[]
  I1012 12:40:04.669433 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-job-label:e2e-7n7zk] and annotations: map[]
  I1012 12:40:04.669464 19 job.go:1333] Event MODIFIED found for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[]
  STEP: Updating the job @ 10/12/24 12:40:04.669
  STEP: Watching for Job to be updated @ 10/12/24 12:40:04.679
  I1012 12:40:04.681800 19 job.go:1333] Event MODIFIED found for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:04.681855 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/12/24 12:40:04.681
  I1012 12:40:04.684929 19 job.go:1233] Job: e2e-7n7zk as labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk]
  STEP: Waiting for job to complete @ 10/12/24 12:40:04.684
  STEP: Delete a job collection with a labelselector @ 10/12/24 12:40:14.696
  STEP: Watching for Job to be deleted @ 10/12/24 12:40:14.705
  I1012 12:40:14.707532 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707714 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707730 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707823 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707838 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707849 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707933 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707948 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.707959 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.708016 19 job.go:1330] Event MODIFIED observed for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  I1012 12:40:14.708028 19 job.go:1333] Event DELETED found for Job e2e-7n7zk in namespace job-8825 with labels: map[e2e-7n7zk:patched e2e-job-label:e2e-7n7zk] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/12/24 12:40:14.708
  I1012 12:40:14.711177 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8825" for this suite. @ 10/12/24 12:40:14.721
• [10.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/12/24 12:40:14.729
  I1012 12:40:14.729593 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/12/24 12:40:14.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:14.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:14.746
  I1012 12:40:14.749473 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:40:17.804263 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5539" for this suite. @ 10/12/24 12:40:17.808
• [3.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 10/12/24 12:40:17.814
  I1012 12:40:17.814964 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:40:17.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:17.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:17.834
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 12:40:17.837
  STEP: Saw pod success @ 10/12/24 12:40:21.858
  I1012 12:40:21.863615 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-6efb2b8e-041e-4fa8-a951-607d32be47df container client-container: <nil>
  STEP: delete the pod @ 10/12/24 12:40:21.871
  I1012 12:40:21.886799 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7756" for this suite. @ 10/12/24 12:40:21.891
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 10/12/24 12:40:21.897
  I1012 12:40:21.897890 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:40:21.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:21.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:21.916
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5298 @ 10/12/24 12:40:21.919
  STEP: changing the ExternalName service to type=NodePort @ 10/12/24 12:40:21.924
  STEP: creating replication controller externalname-service in namespace services-5298 @ 10/12/24 12:40:21.942
  I1012 12:40:21.949494      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5298, replica count: 2
  I1012 12:40:25.001168      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 12:40:25.001202 19 resource.go:361] Creating new exec pod
  I1012 12:40:28.019238 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1012 12:40:28.115786 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1012 12:40:28.115837 19 builder.go:147] stdout: ""
  I1012 12:40:29.019386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1012 12:40:29.108749 19 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1012 12:40:29.108791 19 builder.go:147] stdout: ""
  I1012 12:40:30.019492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1012 12:40:30.106935 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1012 12:40:30.106975 19 builder.go:147] stdout: "externalname-service-7bxnp"
  I1012 12:40:30.107058 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  I1012 12:40:30.189579 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.184 80\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  I1012 12:40:30.189619 19 builder.go:147] stdout: "externalname-service-7bxnp"
  I1012 12:40:30.189736 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.91.95 31398'
  I1012 12:40:30.276777 19 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.91.95 31398\necho hostName\nConnection to 172.31.91.95 31398 port [tcp/*] succeeded!\n"
  I1012 12:40:30.276832 19 builder.go:147] stdout: ""
  I1012 12:40:31.190725 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.91.95 31398'
  I1012 12:40:31.279634 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.91.95 31398\nConnection to 172.31.91.95 31398 port [tcp/*] succeeded!\n"
  I1012 12:40:31.279695 19 builder.go:147] stdout: ""
  I1012 12:40:32.189879 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.91.95 31398'
  I1012 12:40:32.275588 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.91.95 31398\nConnection to 172.31.91.95 31398 port [tcp/*] succeeded!\n"
  I1012 12:40:32.275633 19 builder.go:147] stdout: "externalname-service-m5gtj"
  I1012 12:40:32.275725 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5298 exec execpodxgpw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.48 31398'
  I1012 12:40:32.374203 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.23.48 31398\n+ echo hostName\nConnection to 172.31.23.48 31398 port [tcp/*] succeeded!\n"
  I1012 12:40:32.374246 19 builder.go:147] stdout: "externalname-service-7bxnp"
  I1012 12:40:32.374354 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1012 12:40:32.399971 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5298" for this suite. @ 10/12/24 12:40:32.405
• [10.514 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 10/12/24 12:40:32.412
  I1012 12:40:32.412240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:40:32.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:40:32.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:40:32.427
  STEP: Creating pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565 @ 10/12/24 12:40:32.43
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 12:40:34.449
  I1012 12:40:34.453039 19 container_probe.go:1749] Initial restart count of pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d is 0
  I1012 12:40:34.457165 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:36.462521 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:38.467705 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:40.472557 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:42.477685 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:44.483410 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:46.489291 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:48.494248 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:50.499606 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:52.505460 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:54.510347 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:56.515741 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:40:58.520190 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:00.526322 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:02.531751 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:04.536847 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:06.543732 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:08.549225 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:10.555629 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:12.560705 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:14.566280 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:16.571656 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:18.577085 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:20.582662 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:22.587513 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:24.594244 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:26.599644 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:28.604856 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:30.610404 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:32.616705 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:34.622589 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:36.628444 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:38.633430 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:40.639388 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:42.644167 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:44.649446 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:46.655302 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:48.660331 19 container_probe.go:1759] Get pod test-grpc-15e319e5-635b-4e38-864c-2aac907a026d in namespace container-probe-8565
  I1012 12:41:48.660369 19 container_probe.go:1763] Restart count of pod container-probe-8565/test-grpc-15e319e5-635b-4e38-864c-2aac907a026d is now 1 (1m14.207305246s elapsed)
  STEP: deleting the pod @ 10/12/24 12:41:48.66
  I1012 12:41:48.676576 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8565" for this suite. @ 10/12/24 12:41:48.681
• [76.277 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 10/12/24 12:41:48.689
  I1012 12:41:48.689971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 12:41:48.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:41:48.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:41:48.714
  STEP: Creating a job @ 10/12/24 12:41:48.718
  STEP: Ensuring active pods == parallelism @ 10/12/24 12:41:48.725
  STEP: Orphaning one of the Job's Pods @ 10/12/24 12:41:50.73
  I1012 12:41:51.248368 19 pod_client.go:173] Successfully updated pod "adopt-release-b92cv"
  STEP: Checking that the Job readopts the Pod @ 10/12/24 12:41:51.248
  STEP: Removing the labels from the Job's Pod @ 10/12/24 12:41:53.264
  I1012 12:41:53.777218 19 pod_client.go:173] Successfully updated pod "adopt-release-b92cv"
  STEP: Checking that the Job releases the Pod @ 10/12/24 12:41:53.777
  I1012 12:41:55.786407 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8038" for this suite. @ 10/12/24 12:41:55.789
• [7.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 10/12/24 12:41:55.797
  I1012 12:41:55.797915 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:41:55.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:41:55.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:41:55.814
  STEP: validating api versions @ 10/12/24 12:41:55.818
  I1012 12:41:55.818431 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-8785 api-versions'
  I1012 12:41:55.864628 19 builder.go:146] stderr: ""
  I1012 12:41:55.864680 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1012 12:41:55.864798 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8785" for this suite. @ 10/12/24 12:41:55.869
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/12/24 12:41:55.877
  I1012 12:41:55.877373 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 12:41:55.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:41:55.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:41:55.893
  I1012 12:41:55.905018 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1012 12:42:00.912412 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 12:42:00.912
  I1012 12:42:00.912500 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/12/24 12:42:00.922
  I1012 12:42:00.934483 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-919",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbeffec9-3826-4bdf-bcf4-cc7c6a3d3e94",
      ResourceVersion: (string) (len=5) "13300",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333720,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 12:42:00.940379 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-919",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b49bb6bf-29c0-49cc-aaf1-71ffb6ad2320",
      ResourceVersion: (string) (len=5) "13304",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333720,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "fbeffec9-3826-4bdf-bcf4-cc7c6a3d3e94",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 65 66 66 65  63 39 2d 33 38 32 36 2d  |\"fbeffec9-3826-|
              00000120  34 62 64 66 2d 62 63 66  34 2d 63 63 37 63 36 61  |4bdf-bcf4-cc7c6a|
              00000130  33 64 33 65 39 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3d3e94\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:42:00.942533 19 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1012 12:42:00.942989 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-919",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83bfc4be-d642-4339-a082-10610f4c949e",
      ResourceVersion: (string) (len=5) "13302",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "fbeffec9-3826-4bdf-bcf4-cc7c6a3d3e94",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 66 62 65 66 66 65 63  |"uid\":\"fbeffec|
              00000040  39 2d 33 38 32 36 2d 34  62 64 66 2d 62 63 66 34  |9-3826-4bdf-bcf4|
              00000050  2d 63 63 37 63 36 61 33  64 33 65 39 34 5c 22 7d  |-cc7c6a3d3e94\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 12:42:00.950220 19 deployment.go:67] Pod "test-cleanup-controller-42mdm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-42mdm",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-919",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6ee3153-700f-48f6-a016-f1d0f86ed540",
      ResourceVersion: (string) (len=5) "13281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "83bfc4be-d642-4339-a082-10610f4c949e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  38 33 62 66 63 34 62 65  |uid\":\"83bfc4be|
              00000080  2d 64 36 34 32 2d 34 33  33 39 2d 61 30 38 32 2d  |-d642-4339-a082-|
              00000090  31 30 36 31 30 66 34 63  39 34 39 65 5c 22 7d 22  |10610f4c949e\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 31 32 30 5c 22 7d 22  |2.168.61.120\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dd7wg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dd7wg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864333716,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e78edcfb572fb81ffe95371583a9a74532f5039c56bc05ab2734eaa872e8f89c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dd7wg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:42:00.952048 19 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-zdjbf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-zdjbf",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=14) "deployment-919",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c44043a2-1d73-4c9f-b9ce-4f8826f1cea0",
      ResourceVersion: (string) (len=5) "13308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864333720,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "b49bb6bf-29c0-49cc-aaf1-71ffb6ad2320",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864333720,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  39 62 62 36 62 66 2d 32  |d\":\"b49bb6bf-2|
              00000090  39 63 30 2d 34 39 63 63  2d 61 61 66 31 2d 37 31  |9c0-49cc-aaf1-71|
              000000a0  66 66 62 36 61 64 32 33  32 30 5c 22 7d 22 3a 7b  |ffb6ad2320\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ntw5l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ntw5l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 12:42:00.955011 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-919" for this suite. @ 10/12/24 12:42:00.964
• [5.095 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/12/24 12:42:00.972
  I1012 12:42:00.972795 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-runtime @ 10/12/24 12:42:00.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:00.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:00.992
  STEP: create the container @ 10/12/24 12:42:01.011
  W1012 12:42:01.026645      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/12/24 12:42:01.026
  STEP: get the container status @ 10/12/24 12:42:04.049
  STEP: the container should be terminated @ 10/12/24 12:42:04.052
  STEP: the termination message should be set @ 10/12/24 12:42:04.052
  I1012 12:42:04.052639 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/12/24 12:42:04.052
  I1012 12:42:04.067377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-45" for this suite. @ 10/12/24 12:42:04.07
• [3.106 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 10/12/24 12:42:04.079
  I1012 12:42:04.079187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:42:04.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:04.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:04.094
  STEP: creating service endpoint-test2 in namespace services-650 @ 10/12/24 12:42:04.101
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-650 to expose endpoints map[] @ 10/12/24 12:42:04.111
  I1012 12:42:04.122183 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-650 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-650 @ 10/12/24 12:42:04.122
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-650 to expose endpoints map[pod1:[80]] @ 10/12/24 12:42:06.142
  I1012 12:42:06.155944 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-650 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/12/24 12:42:06.155
  I1012 12:42:06.156020 19 resource.go:361] Creating new exec pod
  I1012 12:42:09.174026 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1012 12:42:09.264470 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1012 12:42:09.264520 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:42:09.264606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  I1012 12:42:09.362186 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.197 80\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n"
  I1012 12:42:09.362232 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-650 @ 10/12/24 12:42:09.362
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-650 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/12/24 12:42:11.386
  I1012 12:42:11.402675 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-650 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/12/24 12:42:11.402
  I1012 12:42:12.402997 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1012 12:42:12.488319 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1012 12:42:12.488364 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:42:12.488448 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  I1012 12:42:12.573152 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.197 80\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n"
  I1012 12:42:12.573194 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-650 @ 10/12/24 12:42:12.573
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-650 to expose endpoints map[pod2:[80]] @ 10/12/24 12:42:12.592
  I1012 12:42:12.606501 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-650 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/12/24 12:42:12.606
  I1012 12:42:13.607601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1012 12:42:13.699549 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1012 12:42:13.699594 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:42:13.699756 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-650 exec execpodddhkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  I1012 12:42:13.800832 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.197 80\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n"
  I1012 12:42:13.800874 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-650 @ 10/12/24 12:42:13.8
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-650 to expose endpoints map[] @ 10/12/24 12:42:13.82
  I1012 12:42:13.832355 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-650 exposes endpoints map[]
  I1012 12:42:13.847147 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-650" for this suite. @ 10/12/24 12:42:13.85
• [9.777 seconds]
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 10/12/24 12:42:13.856
  I1012 12:42:13.856215 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:42:13.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:13.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:13.875
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 12:42:13.879
  STEP: Saw pod success @ 10/12/24 12:42:17.903
  I1012 12:42:17.907635 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-f0ebd420-6350-47d3-9570-33a93ef95073 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 12:42:17.919
  I1012 12:42:17.936067 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-89" for this suite. @ 10/12/24 12:42:17.94
• [4.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 10/12/24 12:42:17.947
  I1012 12:42:17.947843 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 12:42:17.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:17.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:17.964
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/12/24 12:42:17.968
  I1012 12:42:17.968537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:42:19.289212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:42:24.216062 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9800" for this suite. @ 10/12/24 12:42:24.23
• [6.296 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/12/24 12:42:24.244
  I1012 12:42:24.244141 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-runtime @ 10/12/24 12:42:24.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:24.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:24.265
  STEP: create the container @ 10/12/24 12:42:24.27
  W1012 12:42:24.279684      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/12/24 12:42:24.279
  STEP: get the container status @ 10/12/24 12:42:26.297
  STEP: the container should be terminated @ 10/12/24 12:42:26.301
  STEP: the termination message should be set @ 10/12/24 12:42:26.301
  I1012 12:42:26.301752 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/12/24 12:42:26.301
  I1012 12:42:26.320578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6178" for this suite. @ 10/12/24 12:42:26.324
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 10/12/24 12:42:26.335
  I1012 12:42:26.335741 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 12:42:26.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:26.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:26.358
  STEP: Creating a ResourceQuota @ 10/12/24 12:42:26.361
  STEP: Getting a ResourceQuota @ 10/12/24 12:42:26.366
  STEP: Updating a ResourceQuota @ 10/12/24 12:42:26.369
  STEP: Verifying a ResourceQuota was modified @ 10/12/24 12:42:26.375
  STEP: Deleting a ResourceQuota @ 10/12/24 12:42:26.381
  STEP: Verifying the deleted ResourceQuota @ 10/12/24 12:42:26.388
  I1012 12:42:26.392337 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6813" for this suite. @ 10/12/24 12:42:26.396
• [0.070 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 10/12/24 12:42:26.405
  I1012 12:42:26.405557 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/12/24 12:42:26.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:26.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:26.424
  STEP: getting /apis @ 10/12/24 12:42:26.434
  STEP: getting /apis/admissionregistration.k8s.io @ 10/12/24 12:42:26.438
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/12/24 12:42:26.439
  STEP: creating @ 10/12/24 12:42:26.441
  STEP: getting @ 10/12/24 12:42:26.458
  STEP: listing @ 10/12/24 12:42:26.462
  STEP: watching @ 10/12/24 12:42:26.466
  I1012 12:42:26.466964 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 10/12/24 12:42:26.468
  STEP: updating @ 10/12/24 12:42:26.475
  I1012 12:42:26.484653 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 10/12/24 12:42:26.484
  STEP: deleting a collection @ 10/12/24 12:42:26.496
  I1012 12:42:26.516661 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5149" for this suite. @ 10/12/24 12:42:26.519
• [0.121 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/12/24 12:42:26.526
  I1012 12:42:26.526572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:42:26.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:26.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:26.544
  STEP: Creating a pod to test substitution in volume subpath @ 10/12/24 12:42:26.547
  STEP: Saw pod success @ 10/12/24 12:42:30.574
  I1012 12:42:30.578919 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod var-expansion-826a3df1-2912-4a8a-9518-758798cd4029 container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 12:42:30.588
  I1012 12:42:30.613469 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2789" for this suite. @ 10/12/24 12:42:30.618
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 10/12/24 12:42:30.628
  I1012 12:42:30.628144 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 12:42:30.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:30.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:30.651
  STEP: Setting up server cert @ 10/12/24 12:42:30.68
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 12:42:30.905
  STEP: Deploying the webhook pod @ 10/12/24 12:42:30.916
  STEP: Wait for the deployment to be ready @ 10/12/24 12:42:30.931
  I1012 12:42:30.943041 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 12:42:32.956
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:42:32.966
  I1012 12:42:33.967170 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/12/24 12:42:33.977
  STEP: create a configmap that should be updated by the webhook @ 10/12/24 12:42:33.991
  I1012 12:42:34.045969 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3324" for this suite. @ 10/12/24 12:42:34.049
  STEP: Destroying namespace "webhook-markers-4062" for this suite. @ 10/12/24 12:42:34.058
• [3.437 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 10/12/24 12:42:34.065
  I1012 12:42:34.065187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 12:42:34.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:34.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:34.083
  STEP: Given a ReplicationController is created @ 10/12/24 12:42:34.086
  STEP: When the matched label of one of its pods change @ 10/12/24 12:42:34.092
  I1012 12:42:34.095470 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I1012 12:42:39.099344 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/12/24 12:42:39.11
  I1012 12:42:40.122190 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8549" for this suite. @ 10/12/24 12:42:40.126
• [6.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 10/12/24 12:42:40.133
  I1012 12:42:40.133821 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:42:40.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:40.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:40.155
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/12/24 12:42:40.159
  STEP: Saw pod success @ 10/12/24 12:42:44.184
  I1012 12:42:44.189303 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-bbec0788-ed5c-4967-8bb4-80b06f77a3f6 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:42:44.195
  I1012 12:42:44.215284 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-426" for this suite. @ 10/12/24 12:42:44.219
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 10/12/24 12:42:44.227
  I1012 12:42:44.227503 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 12:42:44.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:44.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:44.249
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1754.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1754.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/12/24 12:42:44.252
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1754.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1754.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/12/24 12:42:44.252
  STEP: creating a pod to probe /etc/hosts @ 10/12/24 12:42:44.252
  STEP: submitting the pod to kubernetes @ 10/12/24 12:42:44.252
  STEP: retrieving the pod @ 10/12/24 12:42:46.274
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:42:46.277
  I1012 12:42:46.293755 19 dns_common.go:527] DNS probes using dns-1754/dns-test-7ad46439-3e40-46e8-8bef-214397164b66 succeeded

  STEP: deleting the pod @ 10/12/24 12:42:46.293
  I1012 12:42:46.316212 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1754" for this suite. @ 10/12/24 12:42:46.319
• [2.109 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 10/12/24 12:42:46.336
  I1012 12:42:46.336968 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 12:42:46.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:46.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:46.36
  STEP: Creating a ResourceQuota @ 10/12/24 12:42:46.364
  STEP: Getting a ResourceQuota @ 10/12/24 12:42:46.369
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/12/24 12:42:46.374
  STEP: Patching the ResourceQuota @ 10/12/24 12:42:46.377
  STEP: Deleting a Collection of ResourceQuotas @ 10/12/24 12:42:46.383
  STEP: Verifying the deleted ResourceQuota @ 10/12/24 12:42:46.393
  I1012 12:42:46.397120 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3997" for this suite. @ 10/12/24 12:42:46.4
• [0.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/12/24 12:42:46.406
  I1012 12:42:46.406387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subpath @ 10/12/24 12:42:46.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:42:46.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:42:46.426
  STEP: Setting up data @ 10/12/24 12:42:46.429
  STEP: Creating pod pod-subpath-test-secret-bhls @ 10/12/24 12:42:46.44
  STEP: Creating a pod to test atomic-volume-subpath @ 10/12/24 12:42:46.44
  STEP: Saw pod success @ 10/12/24 12:43:10.529
  I1012 12:43:10.533579 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-subpath-test-secret-bhls container test-container-subpath-secret-bhls: <nil>
  STEP: delete the pod @ 10/12/24 12:43:10.541
  STEP: Deleting pod pod-subpath-test-secret-bhls @ 10/12/24 12:43:10.56
  I1012 12:43:10.560684 19 delete.go:62] Deleting pod "pod-subpath-test-secret-bhls" in namespace "subpath-7561"
  I1012 12:43:10.564068 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7561" for this suite. @ 10/12/24 12:43:10.568
• [24.172 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/12/24 12:43:10.579
  I1012 12:43:10.579141 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename watch @ 10/12/24 12:43:10.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:10.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:10.599
  STEP: creating a new configmap @ 10/12/24 12:43:10.603
  STEP: modifying the configmap once @ 10/12/24 12:43:10.608
  STEP: modifying the configmap a second time @ 10/12/24 12:43:10.617
  STEP: deleting the configmap @ 10/12/24 12:43:10.625
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/12/24 12:43:10.631
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/12/24 12:43:10.633
  I1012 12:43:10.633419 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4889  95f42d50-e7b8-4119-bb23-e1b48ce51748 14083 0 2024-10-12 12:43:10 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-12 12:43:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:43:10.633534 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4889  95f42d50-e7b8-4119-bb23-e1b48ce51748 14084 0 2024-10-12 12:43:10 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-12 12:43:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:43:10.633615 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4889" for this suite. @ 10/12/24 12:43:10.637
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 10/12/24 12:43:10.642
  I1012 12:43:10.643000 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption @ 10/12/24 12:43:10.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:10.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:10.664
  STEP: creating the pdb @ 10/12/24 12:43:10.668
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:43:10.674
  STEP: updating the pdb @ 10/12/24 12:43:12.68
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:43:12.69
  STEP: patching the pdb @ 10/12/24 12:43:14.695
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:43:14.706
  STEP: Waiting for the pdb to be deleted @ 10/12/24 12:43:14.719
  I1012 12:43:14.723265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8378" for this suite. @ 10/12/24 12:43:14.727
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/12/24 12:43:14.734
  I1012 12:43:14.734472 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:43:14.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:14.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:14.754
  I1012 12:43:16.775523 19 delete.go:62] Deleting pod "var-expansion-a23ee31d-3e1b-4254-9068-d3fcc60fefaa" in namespace "var-expansion-9943"
  I1012 12:43:16.785126 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-a23ee31d-3e1b-4254-9068-d3fcc60fefaa" to be fully deleted
  I1012 12:43:18.793240 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9943" for this suite. @ 10/12/24 12:43:18.798
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 10/12/24 12:43:18.805
  I1012 12:43:18.805995 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:43:18.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:18.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:18.826
  STEP: Creating the pod @ 10/12/24 12:43:18.829
  I1012 12:43:21.374998 19 pod_client.go:173] Successfully updated pod "annotationupdate4fab367c-3a9b-435c-a02a-00417e952aa0"
  I1012 12:43:23.393590 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4265" for this suite. @ 10/12/24 12:43:23.397
• [4.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 10/12/24 12:43:23.405
  I1012 12:43:23.405137 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 12:43:23.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:23.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:23.425
  STEP: creating a replication controller @ 10/12/24 12:43:23.428
  I1012 12:43:23.428461 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 create -f -'
  I1012 12:43:23.518281 19 builder.go:146] stderr: ""
  I1012 12:43:23.518324 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/12/24 12:43:23.518
  I1012 12:43:23.518417 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:43:23.574053 19 builder.go:146] stderr: ""
  I1012 12:43:23.574118 19 builder.go:147] stdout: "update-demo-nautilus-qjx86 update-demo-nautilus-qwxh5 "
  I1012 12:43:23.574170 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qjx86 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:23.623419 19 builder.go:146] stderr: ""
  I1012 12:43:23.623585 19 builder.go:147] stdout: ""
  I1012 12:43:23.623597 19 kubectl.go:2502] update-demo-nautilus-qjx86 is created but not running
  I1012 12:43:28.625196 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:43:28.674995 19 builder.go:146] stderr: ""
  I1012 12:43:28.675049 19 builder.go:147] stdout: "update-demo-nautilus-qjx86 update-demo-nautilus-qwxh5 "
  I1012 12:43:28.675114 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qjx86 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:28.720686 19 builder.go:146] stderr: ""
  I1012 12:43:28.720735 19 builder.go:147] stdout: "true"
  I1012 12:43:28.720804 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qjx86 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:43:28.768558 19 builder.go:146] stderr: ""
  I1012 12:43:28.768598 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:43:28.768610 19 kubectl.go:2393] validating pod update-demo-nautilus-qjx86
  I1012 12:43:28.775313 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:43:28.775377 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:43:28.775389 19 kubectl.go:2520] update-demo-nautilus-qjx86 is verified up and running
  I1012 12:43:28.775439 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:28.821996 19 builder.go:146] stderr: ""
  I1012 12:43:28.822040 19 builder.go:147] stdout: "true"
  I1012 12:43:28.822091 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:43:28.869425 19 builder.go:146] stderr: ""
  I1012 12:43:28.869490 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:43:28.869506 19 kubectl.go:2393] validating pod update-demo-nautilus-qwxh5
  I1012 12:43:28.876799 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:43:28.876856 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:43:28.876867 19 kubectl.go:2520] update-demo-nautilus-qwxh5 is verified up and running
  STEP: scaling down the replication controller @ 10/12/24 12:43:28.876
  I1012 12:43:28.877700 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1012 12:43:28.877736 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1012 12:43:29.942654 19 builder.go:146] stderr: ""
  I1012 12:43:29.942700 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/12/24 12:43:29.942
  I1012 12:43:29.942796 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:43:29.991295 19 builder.go:146] stderr: ""
  I1012 12:43:29.991340 19 builder.go:147] stdout: "update-demo-nautilus-qwxh5 "
  I1012 12:43:29.991478 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:30.039757 19 builder.go:146] stderr: ""
  I1012 12:43:30.039797 19 builder.go:147] stdout: "true"
  I1012 12:43:30.039853 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:43:30.086435 19 builder.go:146] stderr: ""
  I1012 12:43:30.086474 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:43:30.086489 19 kubectl.go:2393] validating pod update-demo-nautilus-qwxh5
  I1012 12:43:30.091970 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:43:30.092020 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:43:30.092032 19 kubectl.go:2520] update-demo-nautilus-qwxh5 is verified up and running
  STEP: scaling up the replication controller @ 10/12/24 12:43:30.092
  I1012 12:43:30.092763 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1012 12:43:30.092791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1012 12:43:31.162068 19 builder.go:146] stderr: ""
  I1012 12:43:31.162128 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/12/24 12:43:31.162
  I1012 12:43:31.162235 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1012 12:43:31.210807 19 builder.go:146] stderr: ""
  I1012 12:43:31.210847 19 builder.go:147] stdout: "update-demo-nautilus-qwxh5 update-demo-nautilus-vjm6j "
  I1012 12:43:31.210898 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:31.257938 19 builder.go:146] stderr: ""
  I1012 12:43:31.257979 19 builder.go:147] stdout: "true"
  I1012 12:43:31.258120 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-qwxh5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:43:31.305557 19 builder.go:146] stderr: ""
  I1012 12:43:31.305595 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:43:31.305608 19 kubectl.go:2393] validating pod update-demo-nautilus-qwxh5
  I1012 12:43:31.309956 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:43:31.310025 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:43:31.310038 19 kubectl.go:2520] update-demo-nautilus-qwxh5 is verified up and running
  I1012 12:43:31.310082 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-vjm6j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1012 12:43:31.357367 19 builder.go:146] stderr: ""
  I1012 12:43:31.357405 19 builder.go:147] stdout: "true"
  I1012 12:43:31.357461 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods update-demo-nautilus-vjm6j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1012 12:43:31.404542 19 builder.go:146] stderr: ""
  I1012 12:43:31.404581 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1012 12:43:31.404593 19 kubectl.go:2393] validating pod update-demo-nautilus-vjm6j
  I1012 12:43:31.410285 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1012 12:43:31.410336 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1012 12:43:31.410348 19 kubectl.go:2520] update-demo-nautilus-vjm6j is verified up and running
  STEP: using delete to clean up resources @ 10/12/24 12:43:31.41
  I1012 12:43:31.410520 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 delete --grace-period=0 --force -f -'
  I1012 12:43:31.463592 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 12:43:31.463641 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1012 12:43:31.463702 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get rc,svc -l name=update-demo --no-headers'
  I1012 12:43:31.532630 19 builder.go:146] stderr: "No resources found in kubectl-6432 namespace.\n"
  I1012 12:43:31.532688 19 builder.go:147] stdout: ""
  I1012 12:43:31.532758 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-6432 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1012 12:43:31.607491 19 builder.go:146] stderr: ""
  I1012 12:43:31.607546 19 builder.go:147] stdout: ""
  I1012 12:43:31.607680 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6432" for this suite. @ 10/12/24 12:43:31.614
• [8.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/12/24 12:43:31.624
  I1012 12:43:31.624389 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-watch @ 10/12/24 12:43:31.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:43:31.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:43:31.652
  I1012 12:43:31.665242 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Creating first CR  @ 10/12/24 12:43:34.212
  I1012 12:43:34.218311 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:34Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:43:34Z]] name:name1 resourceVersion:14336 uid:7b544eb4-6496-4dfb-9cbe-a7d3e834161f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/12/24 12:43:44.22
  I1012 12:43:44.228040 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:44Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:43:44Z]] name:name2 resourceVersion:14380 uid:e2fa0dd8-173f-47a2-96cf-e36256f8d8d5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/12/24 12:43:54.23
  I1012 12:43:54.236608 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:43:54Z]] name:name1 resourceVersion:14402 uid:7b544eb4-6496-4dfb-9cbe-a7d3e834161f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/12/24 12:44:04.239
  I1012 12:44:04.247453 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:44:04Z]] name:name2 resourceVersion:14422 uid:e2fa0dd8-173f-47a2-96cf-e36256f8d8d5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/12/24 12:44:14.247
  I1012 12:44:14.256664 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:43:54Z]] name:name1 resourceVersion:14442 uid:7b544eb4-6496-4dfb-9cbe-a7d3e834161f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/12/24 12:44:24.259
  I1012 12:44:24.267639 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-12T12:43:44Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-12T12:44:04Z]] name:name2 resourceVersion:14462 uid:e2fa0dd8-173f-47a2-96cf-e36256f8d8d5] num:map[num1:9223372036854775807 num2:1000000]]}
  I1012 12:44:34.785209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2087" for this suite. @ 10/12/24 12:44:34.79
• [63.175 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/12/24 12:44:34.8
  I1012 12:44:34.800072 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subjectreview @ 10/12/24 12:44:34.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:44:34.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:44:34.827
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1144" @ 10/12/24 12:44:34.831
  I1012 12:44:34.836472 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1144:e2e"
  I1012 12:44:34.836511 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1144"}
  I1012 12:44:34.836518 19 subjectreviews.go:71] saUID: "c5eb1aaf-5301-4d5d-bc84-4b1655c783e0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1144:e2e" @ 10/12/24 12:44:34.836
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1144:e2e" @ 10/12/24 12:44:34.836
  I1012 12:44:34.838617 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1144:e2e" api 'list' configmaps in "subjectreview-1144" namespace @ 10/12/24 12:44:34.838
  I1012 12:44:34.840127 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1144:e2e" @ 10/12/24 12:44:34.84
  I1012 12:44:34.842072 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1012 12:44:34.842116 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1012 12:44:34.842212 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1144" for this suite. @ 10/12/24 12:44:34.846
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/12/24 12:44:34.854
  I1012 12:44:34.854161 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/12/24 12:44:34.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:44:34.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:44:34.873
  STEP: Setting up the test @ 10/12/24 12:44:34.877
  STEP: Creating hostNetwork=false pod @ 10/12/24 12:44:34.877
  STEP: Creating hostNetwork=true pod @ 10/12/24 12:44:36.903
  STEP: Running the test @ 10/12/24 12:44:38.927
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/12/24 12:44:38.927
  I1012 12:44:38.927546 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:38.927565 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:38.928050 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:38.928117 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1012 12:44:38.963361 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:38.963432 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:38.963445 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:38.963936 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:38.963983 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1012 12:44:39.004778 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.004837 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.004846 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.005399 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.005448 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1012 12:44:39.041949 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.042008 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.042017 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.042520 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.042572 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1012 12:44:39.079073 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/12/24 12:44:39.079
  I1012 12:44:39.079183 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.079192 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.079622 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.079668 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1012 12:44:39.114742 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.114817 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.114827 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.115466 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.115522 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1012 12:44:39.148830 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/12/24 12:44:39.148
  I1012 12:44:39.148944 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.148960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.149487 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.149541 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1012 12:44:39.187516 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.187591 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.187602 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.188078 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.188203 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1012 12:44:39.229048 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.229147 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.229157 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.229711 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.229764 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1012 12:44:39.271413 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.271471 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6618 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:39.271480 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:39.271948 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:39.272001 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6618/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1012 12:44:39.316276 19 exec_util.go:111] Exec stderr: ""
  I1012 12:44:39.316416 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6618" for this suite. @ 10/12/24 12:44:39.32
• [4.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/12/24 12:44:39.327
  I1012 12:44:39.327421 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:44:39.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:44:39.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:44:39.35
  STEP: creating the pod @ 10/12/24 12:44:39.354
  STEP: waiting for pod running @ 10/12/24 12:44:39.361
  STEP: creating a file in subpath @ 10/12/24 12:44:41.372
  I1012 12:44:41.376662 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8575 PodName:var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:41.376691 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:41.377177 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:41.377221 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8575/pods/var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/12/24 12:44:41.42
  I1012 12:44:41.424137 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8575 PodName:var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:44:41.424168 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:44:41.424641 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:44:41.424720 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8575/pods/var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/12/24 12:44:41.472
  I1012 12:44:41.987000 19 pod_client.go:173] Successfully updated pod "var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85"
  STEP: waiting for annotated pod running @ 10/12/24 12:44:41.987
  STEP: deleting the pod gracefully @ 10/12/24 12:44:41.991
  I1012 12:44:41.991164 19 delete.go:62] Deleting pod "var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85" in namespace "var-expansion-8575"
  I1012 12:44:42.000069 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-10675b8c-1732-4caf-8ce6-51d9da816d85" to be fully deleted
  I1012 12:45:14.098443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8575" for this suite. @ 10/12/24 12:45:14.102
• [34.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 10/12/24 12:45:14.109
  I1012 12:45:14.109703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:45:14.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:14.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:14.13
  STEP: fetching services @ 10/12/24 12:45:14.133
  I1012 12:45:14.137499 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3013" for this suite. @ 10/12/24 12:45:14.142
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 10/12/24 12:45:14.149
  I1012 12:45:14.149221 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 12:45:14.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:14.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:14.167
  I1012 12:45:14.171070 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/12/24 12:45:15.402
  I1012 12:45:15.402664 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 create -f -'
  I1012 12:45:17.476167 19 builder.go:146] stderr: ""
  I1012 12:45:17.476208 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8435-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1012 12:45:17.476266 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 delete e2e-test-crd-publish-openapi-8435-crds test-cr'
  I1012 12:45:17.540652 19 builder.go:146] stderr: ""
  I1012 12:45:17.540701 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8435-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1012 12:45:17.540751 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 apply -f -'
  I1012 12:45:17.601004 19 builder.go:146] stderr: ""
  I1012 12:45:17.601043 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8435-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1012 12:45:17.601119 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 delete e2e-test-crd-publish-openapi-8435-crds test-cr'
  I1012 12:45:17.656912 19 builder.go:146] stderr: ""
  I1012 12:45:17.656959 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8435-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/12/24 12:45:17.656
  I1012 12:45:17.657046 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-6609 explain e2e-test-crd-publish-openapi-8435-crds'
  I1012 12:45:17.703948 19 builder.go:146] stderr: ""
  I1012 12:45:17.704005 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8435-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1012 12:45:18.984964 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6609" for this suite. @ 10/12/24 12:45:18.992
• [4.850 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/12/24 12:45:18.999
  I1012 12:45:18.999303 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:45:18.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:19.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:19.017
  STEP: Creating projection with secret that has name projected-secret-test-map-66e4f82f-7159-4e44-a734-6ded096d905d @ 10/12/24 12:45:19.02
  STEP: Creating a pod to test consume secrets @ 10/12/24 12:45:19.026
  STEP: Saw pod success @ 10/12/24 12:45:23.05
  I1012 12:45:23.053236 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-7fb4b659-af0e-47a2-b1e9-e381e6167d77 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:45:23.067
  I1012 12:45:23.085873 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9195" for this suite. @ 10/12/24 12:45:23.09
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 10/12/24 12:45:23.096
  I1012 12:45:23.096912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 12:45:23.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:23.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:23.113
  STEP: Creating a test headless service @ 10/12/24 12:45:23.116
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1133.svc.cluster.local;sleep 1; done
   @ 10/12/24 12:45:23.122
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1133.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1133.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1133.svc.cluster.local;sleep 1; done
   @ 10/12/24 12:45:23.122
  STEP: creating a pod to probe DNS @ 10/12/24 12:45:23.122
  STEP: submitting the pod to kubernetes @ 10/12/24 12:45:23.122
  STEP: retrieving the pod @ 10/12/24 12:45:25.144
  STEP: looking for the results for each expected name from probers @ 10/12/24 12:45:25.149
  I1012 12:45:25.153822 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.158183 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.162182 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.165712 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.169701 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.174346 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.177927 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.182654 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-1133.svc.cluster.local from pod dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63: the server could not find the requested resource (get pods dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63)
  I1012 12:45:25.182688 19 dns_common.go:489] Lookups using dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1133.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1133.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1133.svc.cluster.local jessie_udp@dns-test-service-2.dns-1133.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1133.svc.cluster.local]

  I1012 12:45:25.189945 19 dns_common.go:495] Pod client logs for webserver: 
  I1012 12:45:25.195967 19 dns_common.go:495] Pod client logs for querier: 
  I1012 12:45:25.203312 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1012 12:45:30.189248 19 dns_common.go:527] DNS probes using dns-1133/dns-test-c9dd2dd6-8f93-448c-8943-35f94b8bed63 succeeded

  STEP: deleting the pod @ 10/12/24 12:45:30.189
  STEP: deleting the test headless service @ 10/12/24 12:45:30.206
  I1012 12:45:30.222735 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1133" for this suite. @ 10/12/24 12:45:30.226
• [7.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 10/12/24 12:45:30.233
  I1012 12:45:30.233671 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename volumeattachment @ 10/12/24 12:45:30.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:30.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:30.251
  STEP: Create VolumeAttachment "va-e2e-8z2jh" on node "ip-172-31-91-95" @ 10/12/24 12:45:30.258
  STEP: Get VolumeAttachment "va-e2e-8z2jh" on node "ip-172-31-91-95" @ 10/12/24 12:45:30.264
  STEP: Patch VolumeAttachment "va-e2e-8z2jh" on node "ip-172-31-91-95" @ 10/12/24 12:45:30.269
  STEP: List VolumeAttachments with "va-e2e-8z2jh=patched" label @ 10/12/24 12:45:30.275
  STEP: Delete VolumeAttachment "va-e2e-8z2jh" on node "ip-172-31-91-95" @ 10/12/24 12:45:30.281
  STEP: Confirm deletion of VolumeAttachment "va-e2e-8z2jh" on node "ip-172-31-91-95" @ 10/12/24 12:45:30.29
  STEP: Create VolumeAttachment "va-e2e-6mwpd" on node "ip-172-31-90-139" @ 10/12/24 12:45:30.303
  STEP: Update the VolumeAttachment "va-e2e-6mwpd" on node "ip-172-31-90-139" with label "va-e2e=updated" @ 10/12/24 12:45:30.311
  STEP: Create VolumeAttachment "va-e2e-s9pln" on node "ip-172-31-23-48" @ 10/12/24 12:45:30.325
  STEP: Update the VolumeAttachment "va-e2e-s9pln" on node "ip-172-31-23-48" with label "va-e2e=updated" @ 10/12/24 12:45:30.331
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/12/24 12:45:30.339
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/12/24 12:45:30.352
  I1012 12:45:30.357170 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9505" for this suite. @ 10/12/24 12:45:30.361
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/12/24 12:45:30.369
  I1012 12:45:30.369126 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/12/24 12:45:30.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:30.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:30.383
  STEP: create the container to handle the HTTPGet hook request. @ 10/12/24 12:45:30.39
  STEP: create the pod with lifecycle hook @ 10/12/24 12:45:32.412
  STEP: check poststart hook @ 10/12/24 12:45:34.433
  STEP: delete the pod with lifecycle hook @ 10/12/24 12:45:34.448
  I1012 12:45:36.464010 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5198" for this suite. @ 10/12/24 12:45:36.468
• [6.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/12/24 12:45:36.474
  I1012 12:45:36.474639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubelet-test @ 10/12/24 12:45:36.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:36.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:36.491
  I1012 12:45:38.524821 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-208" for this suite. @ 10/12/24 12:45:38.528
• [2.063 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/12/24 12:45:38.537
  I1012 12:45:38.537295 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pod-network-test @ 10/12/24 12:45:38.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:45:38.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:45:38.555
  STEP: Performing setup for networking test in namespace pod-network-test-4829 @ 10/12/24 12:45:38.558
  STEP: creating a selector @ 10/12/24 12:45:38.558
  STEP: Creating the service pods in kubernetes @ 10/12/24 12:45:38.558
  I1012 12:45:38.558541 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/12/24 12:46:00.675
  I1012 12:46:02.714781 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1012 12:46:02.714820 19 utils.go:496] Going to poll 192.168.127.140 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:46:02.719688 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.127.140 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:46:02.719725 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:46:02.720217 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:46:02.720272 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.127.140+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:46:03.761670 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1012 12:46:03.761716 19 utils.go:496] Going to poll 192.168.195.229 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:46:03.765488 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.195.229 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:46:03.765520 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:46:03.766024 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:46:03.766119 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.195.229+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:46:04.808028 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1012 12:46:04.808071 19 utils.go:496] Going to poll 192.168.61.77 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:46:04.812710 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.61.77 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:46:04.812735 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:46:04.813217 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:46:04.813294 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.61.77+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:46:05.848084 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1012 12:46:05.848242 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4829" for this suite. @ 10/12/24 12:46:05.853
• [27.324 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/12/24 12:46:05.861
  I1012 12:46:05.861316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/12/24 12:46:05.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:05.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:05.878
  STEP: create the container to handle the HTTPGet hook request. @ 10/12/24 12:46:05.885
  STEP: create the pod with lifecycle hook @ 10/12/24 12:46:07.909
  STEP: delete the pod with lifecycle hook @ 10/12/24 12:46:09.931
  STEP: check prestop hook @ 10/12/24 12:46:11.95
  I1012 12:46:11.957731 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4169" for this suite. @ 10/12/24 12:46:11.962
• [6.109 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 10/12/24 12:46:11.97
  I1012 12:46:11.970802 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 12:46:11.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:11.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:11.987
  STEP: Counting existing ResourceQuota @ 10/12/24 12:46:11.991
  STEP: Creating a ResourceQuota @ 10/12/24 12:46:16.995
  STEP: Ensuring resource quota status is calculated @ 10/12/24 12:46:17.002
  STEP: Creating a Pod that fits quota @ 10/12/24 12:46:19.008
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/12/24 12:46:19.022
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/12/24 12:46:21.026
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/12/24 12:46:21.028
  STEP: Ensuring a pod cannot update its resource requirements @ 10/12/24 12:46:21.031
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/12/24 12:46:21.036
  STEP: Deleting the pod @ 10/12/24 12:46:23.041
  STEP: Ensuring resource quota status released the pod usage @ 10/12/24 12:46:23.056
  I1012 12:46:25.060643 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6561" for this suite. @ 10/12/24 12:46:25.065
• [13.102 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 10/12/24 12:46:25.072
  I1012 12:46:25.072535 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 12:46:25.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:25.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:25.091
  STEP: Creating service test in namespace statefulset-5004 @ 10/12/24 12:46:25.094
  STEP: Creating statefulset ss in namespace statefulset-5004 @ 10/12/24 12:46:25.106
  I1012 12:46:25.115150 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1012 12:46:35.117732 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/12/24 12:46:35.124
  STEP: Getting /status @ 10/12/24 12:46:35.134
  I1012 12:46:35.139733 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/12/24 12:46:35.139
  I1012 12:46:35.149229 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/12/24 12:46:35.149
  I1012 12:46:35.151079 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1012 12:46:35.151127 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-5004 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 12:46:35.151137 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/12/24 12:46:35.151
  I1012 12:46:35.151162 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1012 12:46:35.159409 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/12/24 12:46:35.159
  I1012 12:46:35.161459 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1012 12:46:35.161522 19 statefulset.go:138] Deleting all statefulset in ns statefulset-5004
  I1012 12:46:35.164459 19 rest.go:150] Scaling statefulset ss to 0
  I1012 12:46:45.181201 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 12:46:45.185807 19 rest.go:88] Deleting statefulset ss
  I1012 12:46:45.199868 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5004" for this suite. @ 10/12/24 12:46:45.205
• [20.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 10/12/24 12:46:45.214
  I1012 12:46:45.214195 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 12:46:45.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:45.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:45.231
  STEP: Creating namespace "e2e-ns-wtkqh" @ 10/12/24 12:46:45.234
  I1012 12:46:45.247508 19 namespace.go:411] Namespace "e2e-ns-wtkqh-6747" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wtkqh-6747" @ 10/12/24 12:46:45.247
  I1012 12:46:45.255201 19 namespace.go:434] Namespace "e2e-ns-wtkqh-6747" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wtkqh-6747" @ 10/12/24 12:46:45.255
  I1012 12:46:45.265961 19 namespace.go:463] Namespace "e2e-ns-wtkqh-6747" has []v1.FinalizerName{"kubernetes"}
  I1012 12:46:45.266092 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2213" for this suite. @ 10/12/24 12:46:45.27
  STEP: Destroying namespace "e2e-ns-wtkqh-6747" for this suite. @ 10/12/24 12:46:45.277
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 10/12/24 12:46:45.284
  I1012 12:46:45.284480 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 12:46:45.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:45.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:45.3
  I1012 12:46:45.303586 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/12/24 12:46:46.566
  I1012 12:46:46.566984 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 create -f -'
  I1012 12:46:48.644507 19 builder.go:146] stderr: ""
  I1012 12:46:48.644550 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6912-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1012 12:46:48.644605 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 delete e2e-test-crd-publish-openapi-6912-crds test-foo'
  I1012 12:46:48.700549 19 builder.go:146] stderr: ""
  I1012 12:46:48.700590 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6912-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1012 12:46:48.700642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 apply -f -'
  I1012 12:46:48.762332 19 builder.go:146] stderr: ""
  I1012 12:46:48.762371 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6912-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1012 12:46:48.762425 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 delete e2e-test-crd-publish-openapi-6912-crds test-foo'
  I1012 12:46:48.823980 19 builder.go:146] stderr: ""
  I1012 12:46:48.824033 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6912-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/12/24 12:46:48.824
  I1012 12:46:48.824142 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 create -f -'
  I1012 12:46:48.875757 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/12/24 12:46:48.875
  I1012 12:46:48.875877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 create -f -'
  I1012 12:46:48.923291 19 builder.go:135] rc: 1
  I1012 12:46:48.923392 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 apply -f -'
  I1012 12:46:48.980912 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/12/24 12:46:48.98
  I1012 12:46:48.981039 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 create -f -'
  I1012 12:46:49.030041 19 builder.go:135] rc: 1
  I1012 12:46:49.030145 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 --namespace=crd-publish-openapi-5498 apply -f -'
  I1012 12:46:49.087249 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/12/24 12:46:49.087
  I1012 12:46:49.087401 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 explain e2e-test-crd-publish-openapi-6912-crds'
  I1012 12:46:49.134576 19 builder.go:146] stderr: ""
  I1012 12:46:49.134631 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6912-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/12/24 12:46:49.134
  I1012 12:46:49.134954 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 explain e2e-test-crd-publish-openapi-6912-crds.metadata'
  I1012 12:46:49.183939 19 builder.go:146] stderr: ""
  I1012 12:46:49.184054 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6912-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1012 12:46:49.184266 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 explain e2e-test-crd-publish-openapi-6912-crds.spec'
  I1012 12:46:49.230759 19 builder.go:146] stderr: ""
  I1012 12:46:49.230803 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6912-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1012 12:46:49.230990 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 explain e2e-test-crd-publish-openapi-6912-crds.spec.bars'
  I1012 12:46:49.278860 19 builder.go:146] stderr: ""
  I1012 12:46:49.278928 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6912-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/12/24 12:46:49.279
  I1012 12:46:49.279206 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-5498 explain e2e-test-crd-publish-openapi-6912-crds.spec.bars2'
  I1012 12:46:49.324464 19 builder.go:135] rc: 1
  I1012 12:46:50.561067 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5498" for this suite. @ 10/12/24 12:46:50.567
• [5.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/12/24 12:46:50.574
  I1012 12:46:50.574962 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:46:50.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:50.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:50.592
  STEP: Creating secret with name projected-secret-test-76a54def-a1dc-4e0b-a2d1-cf9da2789253 @ 10/12/24 12:46:50.595
  STEP: Creating a pod to test consume secrets @ 10/12/24 12:46:50.599
  STEP: Saw pod success @ 10/12/24 12:46:54.627
  I1012 12:46:54.631288 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-99bb474e-1cf7-4fab-9598-0d2b190a6f9f container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:46:54.638
  I1012 12:46:54.656126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1397" for this suite. @ 10/12/24 12:46:54.66
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 10/12/24 12:46:54.667
  I1012 12:46:54.667500 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:46:54.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:54.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:54.688
  STEP: Creating configMap with name projected-configmap-test-volume-75728516-7ddf-49c6-959e-57ce410a5213 @ 10/12/24 12:46:54.691
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:46:54.695
  STEP: Saw pod success @ 10/12/24 12:46:56.716
  I1012 12:46:56.719699 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-42bc288f-6fc2-41e9-a7c8-461bff4c866c container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:46:56.725
  I1012 12:46:56.743182 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2553" for this suite. @ 10/12/24 12:46:56.747
• [2.088 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/12/24 12:46:56.755
  I1012 12:46:56.755943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename containers @ 10/12/24 12:46:56.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:56.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:56.772
  I1012 12:46:58.806275 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-553" for this suite. @ 10/12/24 12:46:58.809
• [2.060 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/12/24 12:46:58.816
  I1012 12:46:58.816375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename containers @ 10/12/24 12:46:58.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:46:58.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:46:58.832
  STEP: Creating a pod to test override arguments @ 10/12/24 12:46:58.836
  STEP: Saw pod success @ 10/12/24 12:47:02.858
  I1012 12:47:02.863257 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod client-containers-aadc27e4-3981-4421-8b43-a195a666dd14 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:47:02.885
  I1012 12:47:02.899013 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3707" for this suite. @ 10/12/24 12:47:02.903
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/12/24 12:47:02.91
  I1012 12:47:02.911003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pod-network-test @ 10/12/24 12:47:02.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:02.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:02.932
  STEP: Performing setup for networking test in namespace pod-network-test-9006 @ 10/12/24 12:47:02.936
  STEP: creating a selector @ 10/12/24 12:47:02.936
  STEP: Creating the service pods in kubernetes @ 10/12/24 12:47:02.936
  I1012 12:47:02.936309 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/12/24 12:47:15.038
  I1012 12:47:17.074901 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1012 12:47:17.074939 19 utils.go:496] Going to poll 192.168.127.142 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:47:17.077676 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.127.142:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9006 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:47:17.077696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:47:17.078200 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:47:17.078279 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9006/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.127.142%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:47:17.131254 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1012 12:47:17.131298 19 utils.go:496] Going to poll 192.168.195.232 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:47:17.135877 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.195.232:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9006 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:47:17.135901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:47:17.136371 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:47:17.136428 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9006/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.195.232%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:47:17.180406 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1012 12:47:17.180449 19 utils.go:496] Going to poll 192.168.61.83 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1012 12:47:17.183703 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.61.83:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9006 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:47:17.183731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:47:17.184202 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:47:17.184254 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9006/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.61.83%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 12:47:17.234210 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1012 12:47:17.234355 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9006" for this suite. @ 10/12/24 12:47:17.238
• [14.334 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 10/12/24 12:47:17.245
  I1012 12:47:17.245173 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 12:47:17.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:17.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:17.261
  STEP: Setting up server cert @ 10/12/24 12:47:17.286
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 12:47:17.502
  STEP: Deploying the webhook pod @ 10/12/24 12:47:17.511
  STEP: Wait for the deployment to be ready @ 10/12/24 12:47:17.525
  I1012 12:47:17.535878 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/12/24 12:47:19.548
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:47:19.559
  I1012 12:47:20.560678 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/12/24 12:47:20.569
  STEP: create a namespace for the webhook @ 10/12/24 12:47:20.584
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/12/24 12:47:20.595
  I1012 12:47:20.670489 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9889" for this suite. @ 10/12/24 12:47:20.677
  STEP: Destroying namespace "webhook-markers-9236" for this suite. @ 10/12/24 12:47:20.682
  STEP: Destroying namespace "fail-closed-namespace-9629" for this suite. @ 10/12/24 12:47:20.691
• [3.453 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 10/12/24 12:47:20.698
  I1012 12:47:20.698728 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-webhook @ 10/12/24 12:47:20.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:20.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:20.715
  STEP: Setting up server cert @ 10/12/24 12:47:20.719
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/12/24 12:47:21.005
  STEP: Deploying the custom resource conversion webhook pod @ 10/12/24 12:47:21.012
  STEP: Wait for the deployment to be ready @ 10/12/24 12:47:21.026
  I1012 12:47:21.039632 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 12:47:23.052
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:47:23.064
  I1012 12:47:24.064186 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1012 12:47:24.073220 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Creating a v1 custom resource @ 10/12/24 12:47:26.628
  STEP: Create a v2 custom resource @ 10/12/24 12:47:26.645
  STEP: List CRs in v1 @ 10/12/24 12:47:26.668
  STEP: List CRs in v2 @ 10/12/24 12:47:26.674
  I1012 12:47:27.235459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-329" for this suite. @ 10/12/24 12:47:27.242
• [6.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 10/12/24 12:47:27.25
  I1012 12:47:27.250176 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:47:27.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:27.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:27.269
  STEP: Creating Pod @ 10/12/24 12:47:27.272
  STEP: Reading file content from the nginx-container @ 10/12/24 12:47:29.294
  I1012 12:47:29.294379 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2536 PodName:pod-sharedvolume-26a04fdc-19ec-41d3-be32-4369f976dbcc ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:47:29.294400 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:47:29.294828 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:47:29.294872 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-2536/pods/pod-sharedvolume-26a04fdc-19ec-41d3-be32-4369f976dbcc/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1012 12:47:29.336299 19 exec_util.go:111] Exec stderr: ""
  I1012 12:47:29.336446 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2536" for this suite. @ 10/12/24 12:47:29.341
• [2.098 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 10/12/24 12:47:29.347
  I1012 12:47:29.347914 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:47:29.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:29.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:29.364
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6785 @ 10/12/24 12:47:29.368
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/12/24 12:47:29.384
  STEP: creating service externalsvc in namespace services-6785 @ 10/12/24 12:47:29.384
  STEP: creating replication controller externalsvc in namespace services-6785 @ 10/12/24 12:47:29.395
  I1012 12:47:29.402544      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6785, replica count: 2
  I1012 12:47:32.453822      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/12/24 12:47:32.457
  I1012 12:47:32.473221 19 resource.go:361] Creating new exec pod
  I1012 12:47:34.489223 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6785 exec execpodqn9jw -- /bin/sh -x -c nslookup nodeport-service.services-6785.svc.cluster.local'
  I1012 12:47:34.605631 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-6785.svc.cluster.local\n"
  I1012 12:47:34.605675 19 builder.go:147] stdout: "Server:\t\t10.152.183.169\nAddress:\t10.152.183.169#53\n\nnodeport-service.services-6785.svc.cluster.local\tcanonical name = externalsvc.services-6785.svc.cluster.local.\nName:\texternalsvc.services-6785.svc.cluster.local\nAddress: 10.152.183.177\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6785, will wait for the garbage collector to delete the pods @ 10/12/24 12:47:34.605
  I1012 12:47:34.668058 19 resources.go:139] Deleting ReplicationController externalsvc took: 8.676431ms
  I1012 12:47:34.768824 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.762157ms
  I1012 12:47:37.787303 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1012 12:47:37.798072 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6785" for this suite. @ 10/12/24 12:47:37.804
• [8.462 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/12/24 12:47:37.81
  I1012 12:47:37.810465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename ingressclass @ 10/12/24 12:47:37.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:37.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:37.828
  STEP: getting /apis @ 10/12/24 12:47:37.831
  STEP: getting /apis/networking.k8s.io @ 10/12/24 12:47:37.834
  STEP: getting /apis/networking.k8s.iov1 @ 10/12/24 12:47:37.836
  STEP: creating @ 10/12/24 12:47:37.837
  STEP: getting @ 10/12/24 12:47:37.85
  STEP: listing @ 10/12/24 12:47:37.853
  STEP: watching @ 10/12/24 12:47:37.857
  I1012 12:47:37.857451 19 ingressclass.go:348] starting watch
  STEP: patching @ 10/12/24 12:47:37.858
  STEP: updating @ 10/12/24 12:47:37.864
  I1012 12:47:37.870078 19 ingressclass.go:364] waiting for watch events with expected annotations
  I1012 12:47:37.870155 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/12/24 12:47:37.87
  STEP: deleting a collection @ 10/12/24 12:47:37.884
  I1012 12:47:37.900213 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1200" for this suite. @ 10/12/24 12:47:37.903
• [0.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/12/24 12:47:37.91
  I1012 12:47:37.910300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/12/24 12:47:37.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:37.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:37.928
  I1012 12:47:37.931850 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:47:38.956241 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8546" for this suite. @ 10/12/24 12:47:38.96
• [1.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 10/12/24 12:47:38.967
  I1012 12:47:38.967302 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 12:47:38.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:38.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:38.983
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/12/24 12:47:38.987
  STEP: Saw pod success @ 10/12/24 12:47:41.007
  I1012 12:47:41.010661 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-efe71e47-51ba-4a46-ba61-342e8f7142eb container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:47:41.019
  I1012 12:47:41.037385 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3056" for this suite. @ 10/12/24 12:47:41.04
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 10/12/24 12:47:41.048
  I1012 12:47:41.048513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 12:47:41.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:41.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:41.072
  STEP: Setting up server cert @ 10/12/24 12:47:41.104
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 12:47:41.299
  STEP: Deploying the webhook pod @ 10/12/24 12:47:41.308
  STEP: Wait for the deployment to be ready @ 10/12/24 12:47:41.32
  I1012 12:47:41.335406 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 12:47:43.347
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:47:43.359
  I1012 12:47:44.360031 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/12/24 12:47:44.368
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/12/24 12:47:44.368
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/12/24 12:47:44.386
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/12/24 12:47:45.397
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/12/24 12:47:45.397
  STEP: Having no error when timeout is longer than webhook latency @ 10/12/24 12:47:46.428
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/12/24 12:47:46.428
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/12/24 12:47:51.461
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/12/24 12:47:51.461
  I1012 12:47:56.548459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2672" for this suite. @ 10/12/24 12:47:56.552
  STEP: Destroying namespace "webhook-markers-7953" for this suite. @ 10/12/24 12:47:56.558
• [15.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/12/24 12:47:56.564
  I1012 12:47:56.564999 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename containers @ 10/12/24 12:47:56.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:47:56.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:47:56.581
  STEP: Creating a pod to test override command @ 10/12/24 12:47:56.584
  STEP: Saw pod success @ 10/12/24 12:48:00.607
  I1012 12:48:00.610485 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod client-containers-df87a690-6904-49e6-85af-c1c204ec99e6 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:48:00.618
  I1012 12:48:00.638314 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4522" for this suite. @ 10/12/24 12:48:00.641
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 10/12/24 12:48:00.649
  I1012 12:48:00.649769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/12/24 12:48:00.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:48:00.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:48:00.668
  I1012 12:48:00.671139 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1012 12:49:00.672261 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 12:49:00.676578 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 10/12/24 12:49:00.676
  I1012 12:49:00.895043 19 taints.go:463] Pod1 is running on ip-172-31-91-95. Tainting Node
  I1012 12:49:03.120048 19 taints.go:471] Pod2 is running on ip-172-31-91-95. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/12/24 12:49:03.12
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/12/24 12:49:03.131
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/12/24 12:49:03.135
  I1012 12:49:08.835706 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1012 12:49:28.876612 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/12/24 12:49:28.887
  I1012 12:49:28.891326 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2425" for this suite. @ 10/12/24 12:49:28.895
• [88.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 10/12/24 12:49:28.905
  I1012 12:49:28.905843 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:49:28.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:28.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:28.928
  STEP: Creating the pod @ 10/12/24 12:49:28.931
  I1012 12:49:31.489199 19 pod_client.go:173] Successfully updated pod "labelsupdate5ec97341-8fa6-4d84-92d8-7bea978c4efd"
  I1012 12:49:33.541301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4611" for this suite. @ 10/12/24 12:49:33.546
• [4.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/12/24 12:49:33.552
  I1012 12:49:33.552768 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:49:33.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:33.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:33.57
  STEP: Creating a pod to test substitution in container's args @ 10/12/24 12:49:33.573
  STEP: Saw pod success @ 10/12/24 12:49:35.588
  I1012 12:49:35.592607 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod var-expansion-696c6bfa-447d-4f05-96b9-5179bd46d136 container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 12:49:35.605
  I1012 12:49:35.620184 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3091" for this suite. @ 10/12/24 12:49:35.624
• [2.078 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 10/12/24 12:49:35.63
  I1012 12:49:35.630913 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:49:35.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:35.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:35.647
  STEP: Creating the pod @ 10/12/24 12:49:35.65
  I1012 12:49:38.193919 19 pod_client.go:173] Successfully updated pod "annotationupdate20d6aab6-10d5-47c0-a6bb-cf680a5de670"
  I1012 12:49:42.219602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8198" for this suite. @ 10/12/24 12:49:42.223
• [6.600 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/12/24 12:49:42.231
  I1012 12:49:42.231218 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 12:49:42.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:42.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:42.248
  I1012 12:49:42.263620 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1012 12:49:47.268952 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 12:49:47.268
  STEP: Scaling up "test-rs" replicaset @ 10/12/24 12:49:47.269
  I1012 12:49:47.278185 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/12/24 12:49:47.278
  I1012 12:49:47.288087 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5506 with ReadyReplicas 1, AvailableReplicas 1
  I1012 12:49:47.297482 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5506 with ReadyReplicas 1, AvailableReplicas 1
  I1012 12:49:47.311251 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5506 with ReadyReplicas 1, AvailableReplicas 1
  I1012 12:49:47.326898 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5506 with ReadyReplicas 1, AvailableReplicas 1
  I1012 12:49:48.445479 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5506 with ReadyReplicas 2, AvailableReplicas 2
  I1012 12:49:48.657063 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-5506 with ReadyReplicas 3 found true
  I1012 12:49:48.657232 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5506" for this suite. @ 10/12/24 12:49:48.662
• [6.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/12/24 12:49:48.671
  I1012 12:49:48.671150 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:49:48.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:48.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:48.685
  I1012 12:49:50.707800 19 delete.go:62] Deleting pod "var-expansion-c79c8abd-1b1a-4dc4-8d5b-b4e3d26d9ee9" in namespace "var-expansion-4772"
  I1012 12:49:50.718174 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-c79c8abd-1b1a-4dc4-8d5b-b4e3d26d9ee9" to be fully deleted
  I1012 12:49:52.727428 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4772" for this suite. @ 10/12/24 12:49:52.73
• [4.066 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 10/12/24 12:49:52.737
  I1012 12:49:52.737428 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 12:49:52.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:52.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:52.754
  STEP: Setting up server cert @ 10/12/24 12:49:52.777
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 12:49:52.923
  STEP: Deploying the webhook pod @ 10/12/24 12:49:52.933
  STEP: Wait for the deployment to be ready @ 10/12/24 12:49:52.947
  I1012 12:49:52.955850 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 12:49:54.966
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 12:49:54.977
  I1012 12:49:55.977625 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/12/24 12:49:55.986
  I1012 12:49:56.033425 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7691" for this suite. @ 10/12/24 12:49:56.04
  STEP: Destroying namespace "webhook-markers-663" for this suite. @ 10/12/24 12:49:56.048
• [3.317 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 10/12/24 12:49:56.055
  I1012 12:49:56.055034 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:49:56.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:49:56.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:49:56.071
  STEP: Creating configMap with name projected-configmap-test-volume-map-da7b104c-f00a-4366-8b5f-0d87378984e6 @ 10/12/24 12:49:56.074
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:49:56.079
  STEP: Saw pod success @ 10/12/24 12:50:00.106
  I1012 12:50:00.111240 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-472a9b7e-65f0-4f53-b939-4447ee943dce container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:50:00.118
  I1012 12:50:00.137646 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6721" for this suite. @ 10/12/24 12:50:00.141
• [4.095 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/12/24 12:50:00.15
  I1012 12:50:00.150299 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename csi-storageclass @ 10/12/24 12:50:00.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:00.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:00.174
  STEP: Creating a StorageClass @ 10/12/24 12:50:00.178
  STEP: Get StorageClass "e2e-rxj2b" @ 10/12/24 12:50:00.183
  STEP: Patching the StorageClass "e2e-rxj2b" @ 10/12/24 12:50:00.187
  STEP: Delete StorageClass "e2e-rxj2b" @ 10/12/24 12:50:00.194
  STEP: Confirm deletion of StorageClass "e2e-rxj2b" @ 10/12/24 12:50:00.2
  STEP: Create a replacement StorageClass @ 10/12/24 12:50:00.205
  STEP: Updating StorageClass "e2e-v2-g588q" @ 10/12/24 12:50:00.209
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-g588q=updated" @ 10/12/24 12:50:00.219
  STEP: Deleting StorageClass "e2e-v2-g588q" via DeleteCollection @ 10/12/24 12:50:00.222
  STEP: Confirm deletion of StorageClass "e2e-v2-g588q" @ 10/12/24 12:50:00.231
  I1012 12:50:00.235304 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2303" for this suite. @ 10/12/24 12:50:00.24
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 10/12/24 12:50:00.25
  I1012 12:50:00.250179 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:50:00.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:00.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:00.267
  STEP: creating service in namespace services-3705 @ 10/12/24 12:50:00.276
  STEP: creating service affinity-nodeport-transition in namespace services-3705 @ 10/12/24 12:50:00.276
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3705 @ 10/12/24 12:50:00.293
  I1012 12:50:00.312289      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3705, replica count: 3
  I1012 12:50:03.363768      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 12:50:03.376834 19 resource.go:361] Creating new exec pod
  I1012 12:50:06.396646 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1012 12:50:06.484598 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1012 12:50:06.484657 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:50:06.484750 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  I1012 12:50:06.566534 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  I1012 12:50:06.566583 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:50:06.566674 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.91.95 31789'
  I1012 12:50:06.657204 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.91.95 31789\nConnection to 172.31.91.95 31789 port [tcp/*] succeeded!\n"
  I1012 12:50:06.657249 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:50:06.657352 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.48 31789'
  I1012 12:50:06.750632 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.48 31789\nConnection to 172.31.23.48 31789 port [tcp/*] succeeded!\n"
  I1012 12:50:06.750683 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 12:50:06.763129 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.48:31789/ ; done'
  I1012 12:50:06.929830 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n"
  I1012 12:50:06.929896 19 builder.go:147] stdout: "\naffinity-nodeport-transition-qjzgs\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-d2n9h\naffinity-nodeport-transition-qjzgs\naffinity-nodeport-transition-d2n9h\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-d2n9h\naffinity-nodeport-transition-qjzgs\naffinity-nodeport-transition-qjzgs\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-qjzgs\naffinity-nodeport-transition-d2n9h"
  I1012 12:50:06.929909 19 service.go:242] Received response from host: affinity-nodeport-transition-qjzgs
  I1012 12:50:06.929918 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.929941 19 service.go:242] Received response from host: affinity-nodeport-transition-d2n9h
  I1012 12:50:06.929954 19 service.go:242] Received response from host: affinity-nodeport-transition-qjzgs
  I1012 12:50:06.929961 19 service.go:242] Received response from host: affinity-nodeport-transition-d2n9h
  I1012 12:50:06.929967 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.929972 19 service.go:242] Received response from host: affinity-nodeport-transition-d2n9h
  I1012 12:50:06.929979 19 service.go:242] Received response from host: affinity-nodeport-transition-qjzgs
  I1012 12:50:06.929986 19 service.go:242] Received response from host: affinity-nodeport-transition-qjzgs
  I1012 12:50:06.929993 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.930017 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.930023 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.930029 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.930035 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:06.930041 19 service.go:242] Received response from host: affinity-nodeport-transition-qjzgs
  I1012 12:50:06.930047 19 service.go:242] Received response from host: affinity-nodeport-transition-d2n9h
  I1012 12:50:06.939984 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3705 exec execpod-affinity9k4mw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.48:31789/ ; done'
  I1012 12:50:07.119050 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:31789/\n"
  I1012 12:50:07.119142 19 builder.go:147] stdout: "\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7\naffinity-nodeport-transition-hklx7"
  I1012 12:50:07.119156 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119165 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119172 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119177 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119185 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119191 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119197 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119202 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119211 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119217 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119222 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119228 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119233 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119239 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119246 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119254 19 service.go:242] Received response from host: affinity-nodeport-transition-hklx7
  I1012 12:50:07.119350 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3705, will wait for the garbage collector to delete the pods @ 10/12/24 12:50:07.135
  I1012 12:50:07.198130 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.19162ms
  I1012 12:50:07.298837 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.705425ms
  I1012 12:50:10.023932 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3705" for this suite. @ 10/12/24 12:50:10.027
• [9.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/12/24 12:50:10.034
  I1012 12:50:10.034369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-runtime @ 10/12/24 12:50:10.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:10.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:10.051
  STEP: create the container @ 10/12/24 12:50:10.054
  W1012 12:50:10.062607      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/12/24 12:50:10.062
  STEP: get the container status @ 10/12/24 12:50:13.081
  STEP: the container should be terminated @ 10/12/24 12:50:13.084
  STEP: the termination message should be set @ 10/12/24 12:50:13.084
  I1012 12:50:13.084962 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/12/24 12:50:13.085
  I1012 12:50:13.100659 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7522" for this suite. @ 10/12/24 12:50:13.105
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/12/24 12:50:13.112
  I1012 12:50:13.112593 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/12/24 12:50:13.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:13.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:13.13
  STEP: creating @ 10/12/24 12:50:13.133
  STEP: getting @ 10/12/24 12:50:13.151
  STEP: listing in namespace @ 10/12/24 12:50:13.155
  STEP: patching @ 10/12/24 12:50:13.161
  STEP: deleting @ 10/12/24 12:50:13.168
  I1012 12:50:13.179782 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3791" for this suite. @ 10/12/24 12:50:13.183
• [0.078 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 10/12/24 12:50:13.19
  I1012 12:50:13.190891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context @ 10/12/24 12:50:13.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:13.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:13.204
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/12/24 12:50:13.207
  STEP: Saw pod success @ 10/12/24 12:50:17.231
  I1012 12:50:17.235003 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod security-context-c2f4f7ea-2c39-41dc-938a-ef6cd20ede33 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 12:50:17.243
  I1012 12:50:17.260834 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2686" for this suite. @ 10/12/24 12:50:17.265
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 10/12/24 12:50:17.272
  I1012 12:50:17.272208 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 12:50:17.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:17.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:17.29
  I1012 12:50:17.294204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  W1012 12:50:19.830596      19 warnings.go:70] unknown field "alpha"
  W1012 12:50:19.830629      19 warnings.go:70] unknown field "beta"
  W1012 12:50:19.830633      19 warnings.go:70] unknown field "delta"
  W1012 12:50:19.830636      19 warnings.go:70] unknown field "epsilon"
  W1012 12:50:19.830639      19 warnings.go:70] unknown field "gamma"
  I1012 12:50:20.380903 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2312" for this suite. @ 10/12/24 12:50:20.384
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/12/24 12:50:20.393
  I1012 12:50:20.393034 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/12/24 12:50:20.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:20.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:20.409
  I1012 12:50:20.412302 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:50:23.465288 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8905" for this suite. @ 10/12/24 12:50:23.47
• [3.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 10/12/24 12:50:23.482
  I1012 12:50:23.482995 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 12:50:23.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:23.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:23.5
  STEP: Creating a test namespace @ 10/12/24 12:50:23.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:23.524
  STEP: Creating a pod in the namespace @ 10/12/24 12:50:23.527
  STEP: Waiting for the pod to have running status @ 10/12/24 12:50:23.535
  STEP: Deleting the namespace @ 10/12/24 12:50:25.546
  STEP: Waiting for the namespace to be removed. @ 10/12/24 12:50:25.559
  STEP: Recreating the namespace @ 10/12/24 12:50:36.564
  STEP: Verifying there are no pods in the namespace @ 10/12/24 12:50:36.578
  I1012 12:50:36.582513 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3331" for this suite. @ 10/12/24 12:50:36.588
  STEP: Destroying namespace "nsdeletetest-8755" for this suite. @ 10/12/24 12:50:36.594
  I1012 12:50:36.598557 19 framework.go:370] Namespace nsdeletetest-8755 was already deleted
  STEP: Destroying namespace "nsdeletetest-1739" for this suite. @ 10/12/24 12:50:36.598
• [13.122 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 10/12/24 12:50:36.605
  I1012 12:50:36.605280 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 12:50:36.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:36.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:36.622
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3188 @ 10/12/24 12:50:36.627
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/12/24 12:50:36.637
  STEP: creating service externalsvc in namespace services-3188 @ 10/12/24 12:50:36.637
  STEP: creating replication controller externalsvc in namespace services-3188 @ 10/12/24 12:50:36.649
  I1012 12:50:36.656389      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3188, replica count: 2
  I1012 12:50:39.707174      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/12/24 12:50:39.712
  I1012 12:50:39.729759 19 resource.go:361] Creating new exec pod
  I1012 12:50:41.744971 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-3188 exec execpod2hkpd -- /bin/sh -x -c nslookup clusterip-service.services-3188.svc.cluster.local'
  I1012 12:50:41.839016 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-3188.svc.cluster.local\n"
  I1012 12:50:41.839069 19 builder.go:147] stdout: "Server:\t\t10.152.183.169\nAddress:\t10.152.183.169#53\n\nclusterip-service.services-3188.svc.cluster.local\tcanonical name = externalsvc.services-3188.svc.cluster.local.\nName:\texternalsvc.services-3188.svc.cluster.local\nAddress: 10.152.183.192\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3188, will wait for the garbage collector to delete the pods @ 10/12/24 12:50:41.839
  I1012 12:50:41.901624 19 resources.go:139] Deleting ReplicationController externalsvc took: 8.253488ms
  I1012 12:50:42.002151 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.5071ms
  I1012 12:50:45.117675 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1012 12:50:45.128784 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3188" for this suite. @ 10/12/24 12:50:45.133
• [8.535 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/12/24 12:50:45.14
  I1012 12:50:45.140716 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subpath @ 10/12/24 12:50:45.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:50:45.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:50:45.157
  STEP: Setting up data @ 10/12/24 12:50:45.16
  STEP: Creating pod pod-subpath-test-configmap-dmpd @ 10/12/24 12:50:45.169
  STEP: Creating a pod to test atomic-volume-subpath @ 10/12/24 12:50:45.169
  STEP: Saw pod success @ 10/12/24 12:51:09.248
  I1012 12:51:09.252456 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-subpath-test-configmap-dmpd container test-container-subpath-configmap-dmpd: <nil>
  STEP: delete the pod @ 10/12/24 12:51:09.259
  STEP: Deleting pod pod-subpath-test-configmap-dmpd @ 10/12/24 12:51:09.275
  I1012 12:51:09.275174 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-dmpd" in namespace "subpath-5880"
  I1012 12:51:09.279222 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5880" for this suite. @ 10/12/24 12:51:09.283
• [24.151 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/12/24 12:51:09.291
  I1012 12:51:09.291750 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:51:09.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:09.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:09.307
  STEP: Creating configMap configmap-3441/configmap-test-80f87a6f-d722-4436-b4a7-3666b9589024 @ 10/12/24 12:51:09.31
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:51:09.314
  STEP: Saw pod success @ 10/12/24 12:51:11.332
  I1012 12:51:11.336961 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-4cc1f4e9-afb6-4298-a1b4-1bb4a3dd3a02 container env-test: <nil>
  STEP: delete the pod @ 10/12/24 12:51:11.349
  I1012 12:51:11.365289 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3441" for this suite. @ 10/12/24 12:51:11.368
• [2.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/12/24 12:51:11.377
  I1012 12:51:11.377229 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/12/24 12:51:11.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:11.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:11.395
  STEP: creating the policy @ 10/12/24 12:51:11.403
  STEP: waiting until the marker is denied @ 10/12/24 12:51:11.417
  STEP: testing a replicated Deployment to be allowed @ 10/12/24 12:51:11.925
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/12/24 12:51:11.941
  I1012 12:51:11.989587 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8278" for this suite. @ 10/12/24 12:51:12.001
• [0.631 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 10/12/24 12:51:12.008
  I1012 12:51:12.008086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 12:51:12.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:12.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:12.024
  STEP: Creating a test namespace @ 10/12/24 12:51:12.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:12.04
  STEP: Creating a service in the namespace @ 10/12/24 12:51:12.043
  STEP: Deleting the namespace @ 10/12/24 12:51:12.052
  STEP: Waiting for the namespace to be removed. @ 10/12/24 12:51:12.06
  STEP: Recreating the namespace @ 10/12/24 12:51:18.066
  STEP: Verifying there is no service in the namespace @ 10/12/24 12:51:18.079
  I1012 12:51:18.084339 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4024" for this suite. @ 10/12/24 12:51:18.088
  STEP: Destroying namespace "nsdeletetest-4228" for this suite. @ 10/12/24 12:51:18.095
  I1012 12:51:18.099076 19 framework.go:370] Namespace nsdeletetest-4228 was already deleted
  STEP: Destroying namespace "nsdeletetest-238" for this suite. @ 10/12/24 12:51:18.099
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/12/24 12:51:18.104
  I1012 12:51:18.104901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 12:51:18.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:18.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:18.119
  STEP: Creating secret with name secret-test-dcbb0464-405e-47ee-8fee-13901db12dd3 @ 10/12/24 12:51:18.123
  STEP: Creating a pod to test consume secrets @ 10/12/24 12:51:18.127
  STEP: Saw pod success @ 10/12/24 12:51:22.154
  I1012 12:51:22.159227 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-452edabd-a05a-42bb-90c3-22f3981babc4 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:51:22.165
  I1012 12:51:22.179943 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9398" for this suite. @ 10/12/24 12:51:22.184
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 10/12/24 12:51:22.192
  I1012 12:51:22.192715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:51:22.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:22.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:22.208
  I1012 12:51:44.297012 19 container_probe.go:92] Container started at 2024-10-12 12:51:22 +0000 UTC, pod became ready at 2024-10-12 12:51:42 +0000 UTC
  I1012 12:51:44.297178 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-34" for this suite. @ 10/12/24 12:51:44.301
• [22.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 10/12/24 12:51:44.308
  I1012 12:51:44.308300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:51:44.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:44.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:44.325
  STEP: Creating configMap with name configmap-test-volume-ee0ec79c-e028-45f5-803e-172f989858fb @ 10/12/24 12:51:44.328
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:51:44.333
  STEP: Saw pod success @ 10/12/24 12:51:46.354
  I1012 12:51:46.358716 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-f8684691-be0e-4a5a-9e05-4fd418aceebc container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:51:46.364
  I1012 12:51:46.387829 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1110" for this suite. @ 10/12/24 12:51:46.392
• [2.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/12/24 12:51:46.4
  I1012 12:51:46.400378 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename prestop @ 10/12/24 12:51:46.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:46.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:46.429
  STEP: Creating server pod server in namespace prestop-5939 @ 10/12/24 12:51:46.432
  STEP: Waiting for pods to come up. @ 10/12/24 12:51:46.448
  STEP: Creating tester pod tester in namespace prestop-5939 @ 10/12/24 12:51:48.461
  STEP: Deleting pre-stop pod @ 10/12/24 12:51:50.477
  I1012 12:51:55.496524 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/12/24 12:51:55.496
  I1012 12:51:55.507163 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-5939" for this suite. @ 10/12/24 12:51:55.512
• [9.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/12/24 12:51:55.519
  I1012 12:51:55.519601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/12/24 12:51:55.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:55.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:55.535
  STEP: Creating two CSIDrivers @ 10/12/24 12:51:55.538
  STEP: Getting "inline-driver-e0e484eb-f596-4f58-bfe8-f8ca317d4143" & "inline-driver-531cae80-010c-4de7-93e6-65c8a88d5b28" @ 10/12/24 12:51:55.554
  STEP: Patching the CSIDriver "inline-driver-531cae80-010c-4de7-93e6-65c8a88d5b28" @ 10/12/24 12:51:55.562
  STEP: Updating the CSIDriver "inline-driver-531cae80-010c-4de7-93e6-65c8a88d5b28" @ 10/12/24 12:51:55.567
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5273" @ 10/12/24 12:51:55.576
  STEP: Deleting CSIDriver "inline-driver-e0e484eb-f596-4f58-bfe8-f8ca317d4143" @ 10/12/24 12:51:55.578
  STEP: Confirm deletion of CSIDriver "inline-driver-e0e484eb-f596-4f58-bfe8-f8ca317d4143" @ 10/12/24 12:51:55.585
  STEP: Deleting CSIDriver "inline-driver-531cae80-010c-4de7-93e6-65c8a88d5b28" via DeleteCollection @ 10/12/24 12:51:55.588
  STEP: Confirm deletion of CSIDriver "inline-driver-531cae80-010c-4de7-93e6-65c8a88d5b28" @ 10/12/24 12:51:55.597
  I1012 12:51:55.600765 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5273" for this suite. @ 10/12/24 12:51:55.604
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 10/12/24 12:51:55.613
  I1012 12:51:55.613595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption @ 10/12/24 12:51:55.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:51:55.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:51:55.631
  I1012 12:51:55.654439 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1012 12:52:55.661618 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/12/24 12:52:55.664
  I1012 12:52:55.681426 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1012 12:52:55.689495 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1012 12:52:55.706789 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1012 12:52:55.714695 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1012 12:52:55.735361 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1012 12:52:55.742507 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/12/24 12:52:55.742
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/12/24 12:52:57.768
  I1012 12:53:01.856360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7457" for this suite. @ 10/12/24 12:53:01.859
• [66.253 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/12/24 12:53:01.867
  I1012 12:53:01.867151 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename certificates @ 10/12/24 12:53:01.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:53:01.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:53:01.885
  STEP: getting /apis @ 10/12/24 12:53:02.267
  STEP: getting /apis/certificates.k8s.io @ 10/12/24 12:53:02.271
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/12/24 12:53:02.272
  STEP: creating @ 10/12/24 12:53:02.274
  STEP: getting @ 10/12/24 12:53:02.292
  STEP: listing @ 10/12/24 12:53:02.296
  STEP: watching @ 10/12/24 12:53:02.3
  I1012 12:53:02.300343 19 certificates.go:316] starting watch
  STEP: patching @ 10/12/24 12:53:02.301
  STEP: updating @ 10/12/24 12:53:02.306
  I1012 12:53:02.313775 19 certificates.go:332] waiting for watch events with expected annotations
  I1012 12:53:02.313839 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/12/24 12:53:02.314
  STEP: patching /approval @ 10/12/24 12:53:02.318
  STEP: updating /approval @ 10/12/24 12:53:02.323
  STEP: getting /status @ 10/12/24 12:53:02.331
  STEP: patching /status @ 10/12/24 12:53:02.337
  STEP: updating /status @ 10/12/24 12:53:02.344
  STEP: deleting @ 10/12/24 12:53:02.351
  STEP: deleting a collection @ 10/12/24 12:53:02.365
  I1012 12:53:02.381727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2135" for this suite. @ 10/12/24 12:53:02.386
• [0.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 10/12/24 12:53:02.395
  I1012 12:53:02.395204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 12:53:02.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:53:02.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:53:02.413
  STEP: Creating pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655 @ 10/12/24 12:53:02.416
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 12:53:04.437
  I1012 12:53:04.442285 19 container_probe.go:1749] Initial restart count of pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e is 0
  I1012 12:53:04.445275 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:06.450760 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:08.455173 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:10.460541 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:12.465319 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:14.471219 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:16.476121 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:18.481495 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:20.487792 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:22.492878 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:24.498184 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:26.503731 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:28.509373 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:30.515039 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:32.520549 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:34.525425 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:36.530529 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:38.535087 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:40.541243 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:42.546362 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:44.553041 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:46.558476 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:48.563417 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:50.569082 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:52.574516 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:54.579077 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:56.585263 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:53:58.590379 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:00.596611 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:02.602771 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:04.608128 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:06.613625 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:08.619637 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:10.625454 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:12.632227 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:14.637340 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:16.643153 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:18.648845 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:20.654833 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:22.660612 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:24.665195 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:26.671416 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:28.677904 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:30.683759 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:32.690648 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:34.695420 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:36.701706 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:38.707264 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:40.712632 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:42.717794 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:44.725625 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:46.731147 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:48.736310 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:50.742679 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:52.747914 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:54.752453 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:56.757682 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:54:58.762245 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:00.768452 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:02.773502 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:04.779307 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:06.785619 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:08.791063 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:10.797547 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:12.802969 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:14.808651 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:16.815300 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:18.820909 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:20.825865 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:22.830984 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:24.836091 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:26.841078 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:28.847201 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:30.852815 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:32.858459 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:34.865304 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:36.871589 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:38.877571 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:40.881599 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:42.888142 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:44.893774 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:46.898298 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:48.904914 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:50.910657 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:52.915407 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:54.921190 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:56.925515 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:55:58.930635 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:00.935409 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:02.942000 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:04.948423 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:06.953034 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:08.959213 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:10.964491 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:12.970293 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:14.975421 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:16.980788 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:18.985847 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:20.992178 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:22.998493 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:25.002609 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:27.008155 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:29.014673 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:31.020232 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:33.026606 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:35.031613 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:37.037016 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:39.043307 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:41.049796 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:43.055326 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:45.060550 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:47.066590 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:49.071806 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:51.076389 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:53.081675 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:55.086280 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:57.092400 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:56:59.098041 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:57:01.103484 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  I1012 12:57:03.109709 19 container_probe.go:1759] Get pod test-webserver-cba75b09-1421-47fb-a4f7-ca6931b19c4e in namespace container-probe-4655
  STEP: deleting the pod @ 10/12/24 12:57:05.11
  I1012 12:57:05.126123 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4655" for this suite. @ 10/12/24 12:57:05.131
• [242.744 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 10/12/24 12:57:05.14
  I1012 12:57:05.140935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 12:57:05.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:05.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:05.16
  STEP: Creating configMap with name projected-configmap-test-volume-55ee157d-38f7-472d-ae33-39e95c5eb7e5 @ 10/12/24 12:57:05.164
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:57:05.169
  STEP: Saw pod success @ 10/12/24 12:57:09.193
  I1012 12:57:09.197315 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-10684dc5-fc7b-47d4-834e-5afde30e8b18 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 12:57:09.213
  I1012 12:57:09.228334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2407" for this suite. @ 10/12/24 12:57:09.231
• [4.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 10/12/24 12:57:09.24
  I1012 12:57:09.240179 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption @ 10/12/24 12:57:09.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:09.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:09.256
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:57:09.265
  STEP: Updating PodDisruptionBudget status @ 10/12/24 12:57:11.269
  STEP: Waiting for all pods to be running @ 10/12/24 12:57:11.279
  I1012 12:57:11.285700 19 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 10/12/24 12:57:13.285
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:57:13.298
  STEP: Patching PodDisruptionBudget status @ 10/12/24 12:57:13.305
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:57:13.316
  I1012 12:57:13.321432 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7361" for this suite. @ 10/12/24 12:57:13.325
• [4.091 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 10/12/24 12:57:13.331
  I1012 12:57:13.331476 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 12:57:13.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:13.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:13.349
  STEP: Creating configMap with name configmap-test-volume-map-4d4eb6c0-f649-4aff-aee9-12eaba15dfd2 @ 10/12/24 12:57:13.352
  STEP: Creating a pod to test consume configMaps @ 10/12/24 12:57:13.358
  STEP: Saw pod success @ 10/12/24 12:57:17.382
  I1012 12:57:17.386606 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-2cdb60f6-58de-48ed-853c-d54d239d7745 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 12:57:17.393
  I1012 12:57:17.408900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7350" for this suite. @ 10/12/24 12:57:17.412
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 10/12/24 12:57:17.418
  I1012 12:57:17.418610 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 12:57:17.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:17.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:17.436
  STEP: Creating service test in namespace statefulset-3554 @ 10/12/24 12:57:17.439
  I1012 12:57:17.459301 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1012 12:57:27.456991 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/12/24 12:57:27.466
  I1012 12:57:27.485295 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 12:57:27.485333 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I1012 12:57:37.483887 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 12:57:37.483925 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/12/24 12:57:37.492
  STEP: Delete all of the StatefulSets @ 10/12/24 12:57:37.496
  STEP: Verify that StatefulSets have been deleted @ 10/12/24 12:57:37.505
  I1012 12:57:37.508715 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3554
  I1012 12:57:37.526747 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3554" for this suite. @ 10/12/24 12:57:37.534
• [20.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 10/12/24 12:57:37.541
  I1012 12:57:37.541532 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption @ 10/12/24 12:57:37.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:37.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:37.556
  STEP: Waiting for the pdb to be processed @ 10/12/24 12:57:37.566
  STEP: Waiting for all pods to be running @ 10/12/24 12:57:37.595
  I1012 12:57:37.603429 19 disruption.go:691] running pods: 0 < 3
  I1012 12:57:39.605835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5819" for this suite. @ 10/12/24 12:57:39.61
• [2.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/12/24 12:57:39.617
  I1012 12:57:39.617902 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename limitrange @ 10/12/24 12:57:39.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:39.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:39.635
  STEP: Creating a LimitRange @ 10/12/24 12:57:39.638
  STEP: Setting up watch @ 10/12/24 12:57:39.638
  STEP: Submitting a LimitRange @ 10/12/24 12:57:39.742
  STEP: Verifying LimitRange creation was observed @ 10/12/24 12:57:39.748
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/12/24 12:57:39.748
  I1012 12:57:39.752146 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1012 12:57:39.752180 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/12/24 12:57:39.752
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/12/24 12:57:39.758
  I1012 12:57:39.763349 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1012 12:57:39.763384 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/12/24 12:57:39.763
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/12/24 12:57:39.767
  I1012 12:57:39.772262 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1012 12:57:39.772294 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/12/24 12:57:39.772
  STEP: Failing to create a Pod with more than max resources @ 10/12/24 12:57:39.774
  STEP: Updating a LimitRange @ 10/12/24 12:57:39.776
  STEP: Verifying LimitRange updating is effective @ 10/12/24 12:57:39.781
  STEP: Creating a Pod with less than former min resources @ 10/12/24 12:57:41.786
  STEP: Failing to create a Pod with more than max resources @ 10/12/24 12:57:41.793
  STEP: Deleting a LimitRange @ 10/12/24 12:57:41.795
  STEP: Verifying the LimitRange was deleted @ 10/12/24 12:57:41.804
  I1012 12:57:46.810870 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/12/24 12:57:46.81
  I1012 12:57:46.819172 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6995" for this suite. @ 10/12/24 12:57:46.824
• [7.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/12/24 12:57:46.83
  I1012 12:57:46.830970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename watch @ 10/12/24 12:57:46.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:46.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:46.847
  STEP: creating a watch on configmaps with a certain label @ 10/12/24 12:57:46.85
  STEP: creating a new configmap @ 10/12/24 12:57:46.852
  STEP: modifying the configmap once @ 10/12/24 12:57:46.858
  STEP: changing the label value of the configmap @ 10/12/24 12:57:46.866
  STEP: Expecting to observe a delete notification for the watched object @ 10/12/24 12:57:46.874
  I1012 12:57:46.875028 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19484 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:57:46.875224 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19485 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:57:46.875278 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19486 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/12/24 12:57:46.875
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/12/24 12:57:46.883
  STEP: changing the label value of the configmap back @ 10/12/24 12:57:56.883
  STEP: modifying the configmap a third time @ 10/12/24 12:57:56.893
  STEP: deleting the configmap @ 10/12/24 12:57:56.903
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/12/24 12:57:56.908
  I1012 12:57:56.908718 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19534 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:57:56.908895 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19535 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:57:56.908965 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9693  2cf0c778-0fa6-4c3c-9db6-ed346dddcfb8 19536 0 2024-10-12 12:57:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-12 12:57:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:57:56.909092 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9693" for this suite. @ 10/12/24 12:57:56.913
• [10.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 10/12/24 12:57:56.922
  I1012 12:57:56.922037 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 12:57:56.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:56.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:56.937
  STEP: Creating a pod to test downward api env vars @ 10/12/24 12:57:56.94
  STEP: Saw pod success @ 10/12/24 12:57:58.959
  I1012 12:57:58.962991 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downward-api-ba9374eb-9d43-4987-b79b-feaae03965ae container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 12:57:58.97
  I1012 12:57:58.985013 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8672" for this suite. @ 10/12/24 12:57:58.988
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/12/24 12:57:58.997
  I1012 12:57:58.997920 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 12:57:58.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:57:59.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:57:59.014
  I1012 12:57:59.019378 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-858f532a-c0b5-431d-a9ba-a062a49ccfff
  I1012 12:57:59.027190 19 resource.go:87] Pod name my-hostname-basic-858f532a-c0b5-431d-a9ba-a062a49ccfff: Found 0 pods out of 1
  I1012 12:58:04.033057 19 resource.go:87] Pod name my-hostname-basic-858f532a-c0b5-431d-a9ba-a062a49ccfff: Found 1 pods out of 1
  I1012 12:58:04.033111 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-858f532a-c0b5-431d-a9ba-a062a49ccfff" is running
  I1012 12:58:04.035656 19 replica_set.go:220] Pod "my-hostname-basic-858f532a-c0b5-431d-a9ba-a062a49ccfff-2vkll" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 12:57:59 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 12:57:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 12:57:59 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 12:57:59 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 12:57:59 +0000 UTC Reason: Message:}])
  I1012 12:58:04.035679 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/12/24 12:58:04.035
  I1012 12:58:04.048011 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6100" for this suite. @ 10/12/24 12:58:04.051
• [5.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/12/24 12:58:04.056
  I1012 12:58:04.056780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename watch @ 10/12/24 12:58:04.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:58:04.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:58:04.072
  STEP: creating a watch on configmaps with label A @ 10/12/24 12:58:04.075
  STEP: creating a watch on configmaps with label B @ 10/12/24 12:58:04.077
  STEP: creating a watch on configmaps with label A or B @ 10/12/24 12:58:04.078
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/12/24 12:58:04.079
  I1012 12:58:04.083714 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19611 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:04.083826 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19611 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/12/24 12:58:04.083
  I1012 12:58:04.094494 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19614 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:04.094593 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19614 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/12/24 12:58:04.094
  I1012 12:58:04.102859 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19615 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:04.102950 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19615 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/12/24 12:58:04.102
  I1012 12:58:04.107751 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19616 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:04.107794 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7479  96589902-7e10-4dd2-a85d-e4f963913dc2 19616 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/12/24 12:58:04.107
  I1012 12:58:04.112742 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7479  f63efca9-508c-450a-85ce-8283cffcd422 19617 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:04.112823 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7479  f63efca9-508c-450a-85ce-8283cffcd422 19617 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/12/24 12:58:14.114
  I1012 12:58:14.123115 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7479  f63efca9-508c-450a-85ce-8283cffcd422 19661 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:14.123168 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7479  f63efca9-508c-450a-85ce-8283cffcd422 19661 0 2024-10-12 12:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-12 12:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1012 12:58:24.125265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7479" for this suite. @ 10/12/24 12:58:24.131
• [20.082 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/12/24 12:58:24.139
  I1012 12:58:24.139191 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/12/24 12:58:24.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:58:24.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:58:24.156
  I1012 12:58:24.159774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:58:24.701327 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7274" for this suite. @ 10/12/24 12:58:24.704
• [0.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/12/24 12:58:24.711
  I1012 12:58:24.711337 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename runtimeclass @ 10/12/24 12:58:24.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:58:24.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:58:24.73
  I1012 12:58:24.739535 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3040" for this suite. @ 10/12/24 12:58:24.743
• [0.039 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/12/24 12:58:24.75
  I1012 12:58:24.750213 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename podtemplate @ 10/12/24 12:58:24.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:58:24.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:58:24.766
  STEP: Create set of pod templates @ 10/12/24 12:58:24.769
  I1012 12:58:24.775366 19 podtemplates.go:143] created test-podtemplate-1
  I1012 12:58:24.781268 19 podtemplates.go:143] created test-podtemplate-2
  I1012 12:58:24.786834 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/12/24 12:58:24.786
  STEP: delete collection of pod templates @ 10/12/24 12:58:24.79
  I1012 12:58:24.790808 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/12/24 12:58:24.805
  I1012 12:58:24.805406 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1012 12:58:24.808935 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1070" for this suite. @ 10/12/24 12:58:24.813
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 10/12/24 12:58:24.819
  I1012 12:58:24.820013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption @ 10/12/24 12:58:24.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:58:24.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:58:24.836
  I1012 12:58:24.854381 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1012 12:59:24.859933 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 10/12/24 12:59:24.864
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 10/12/24 12:59:24.872
  I1012 12:59:24.885608 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 10/12/24 12:59:24.885
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 10/12/24 12:59:26.895
  I1012 12:59:26.900862 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 10/12/24 12:59:26.9
  STEP: Verifying the pod has the pod disruption condition @ 10/12/24 12:59:28.909
  I1012 12:59:28.914391 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1012 12:59:29.428068 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I1012 12:59:29.487893 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5915" for this suite. @ 10/12/24 12:59:29.492
• [64.679 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/12/24 12:59:29.499
  I1012 12:59:29.499379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/12/24 12:59:29.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:59:29.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:59:29.522
  STEP: creating a target pod @ 10/12/24 12:59:29.529
  STEP: adding an ephemeral container @ 10/12/24 12:59:31.548
  STEP: checking pod container endpoints @ 10/12/24 12:59:33.568
  I1012 12:59:33.568783 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6685 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 12:59:33.568808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 12:59:33.569369 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 12:59:33.569437 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6685/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1012 12:59:33.614901 19 exec_util.go:111] Exec stderr: ""
  I1012 12:59:33.627153 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6685" for this suite. @ 10/12/24 12:59:33.632
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/12/24 12:59:33.639
  I1012 12:59:33.639732 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 12:59:33.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 12:59:33.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 12:59:33.659
  STEP: creating the pod with failed condition @ 10/12/24 12:59:33.664
  STEP: updating the pod @ 10/12/24 13:01:33.675
  I1012 13:01:34.189434 19 pod_client.go:173] Successfully updated pod "var-expansion-c40bdc32-6819-4f26-8f71-347b1294f14c"
  STEP: waiting for pod running @ 10/12/24 13:01:34.189
  STEP: deleting the pod gracefully @ 10/12/24 13:01:36.2
  I1012 13:01:36.200324 19 delete.go:62] Deleting pod "var-expansion-c40bdc32-6819-4f26-8f71-347b1294f14c" in namespace "var-expansion-8419"
  I1012 13:01:36.209278 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-c40bdc32-6819-4f26-8f71-347b1294f14c" to be fully deleted
  I1012 13:02:08.304475 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8419" for this suite. @ 10/12/24 13:02:08.308
• [154.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 10/12/24 13:02:08.318
  I1012 13:02:08.318421 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:02:08.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:08.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:08.343
  STEP: Creating service test in namespace statefulset-955 @ 10/12/24 13:02:08.346
  STEP: Looking for a node to schedule stateful set and pod @ 10/12/24 13:02:08.35
  STEP: Creating pod with conflicting port in namespace statefulset-955 @ 10/12/24 13:02:08.358
  STEP: Waiting until pod test-pod will start running in namespace statefulset-955 @ 10/12/24 13:02:08.367
  STEP: Creating statefulset with conflicting port in namespace statefulset-955 @ 10/12/24 13:02:10.374
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-955 @ 10/12/24 13:02:10.381
  I1012 13:02:10.389200 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-955, name: ss-0, uid: 4b0bbe82-7224-4941-a145-95d251e421bf, status phase: Pending. Waiting for statefulset controller to delete.
  I1012 13:02:10.406793 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-955, name: ss-0, uid: 4b0bbe82-7224-4941-a145-95d251e421bf, status phase: Failed. Waiting for statefulset controller to delete.
  I1012 13:02:10.413383 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-955, name: ss-0, uid: 4b0bbe82-7224-4941-a145-95d251e421bf, status phase: Failed. Waiting for statefulset controller to delete.
  I1012 13:02:10.416992 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-955
  STEP: Removing pod with conflicting port in namespace statefulset-955 @ 10/12/24 13:02:10.417
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-955 and will be in running state @ 10/12/24 13:02:10.432
  I1012 13:02:12.445778 19 statefulset.go:138] Deleting all statefulset in ns statefulset-955
  I1012 13:02:12.450342 19 rest.go:150] Scaling statefulset ss to 0
  I1012 13:02:22.466700 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:02:22.471147 19 rest.go:88] Deleting statefulset ss
  I1012 13:02:22.485950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-955" for this suite. @ 10/12/24 13:02:22.489
• [14.177 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 10/12/24 13:02:22.495
  I1012 13:02:22.495694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 13:02:22.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:22.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:22.512
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/12/24 13:02:22.514
  I1012 13:02:22.515375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:02:23.736316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:02:28.710990 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5463" for this suite. @ 10/12/24 13:02:28.718
• [6.233 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 10/12/24 13:02:28.728
  I1012 13:02:28.728653 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:02:28.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:28.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:28.749
  STEP: Setting up server cert @ 10/12/24 13:02:28.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:02:28.963
  STEP: Deploying the webhook pod @ 10/12/24 13:02:28.972
  STEP: Wait for the deployment to be ready @ 10/12/24 13:02:28.986
  I1012 13:02:28.994139 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:02:31.007
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:02:31.019
  I1012 13:02:32.020073 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/12/24 13:02:32.029
  STEP: create a pod @ 10/12/24 13:02:32.042
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/12/24 13:02:34.063
  I1012 13:02:34.063207 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=webhook-4830 attach --namespace=webhook-4830 to-be-attached-pod -i -c=container1'
  I1012 13:02:34.126539 19 builder.go:135] rc: 1
  I1012 13:02:34.179787 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4830" for this suite. @ 10/12/24 13:02:34.183
  STEP: Destroying namespace "webhook-markers-6063" for this suite. @ 10/12/24 13:02:34.192
• [5.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/12/24 13:02:34.2
  I1012 13:02:34.200340 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename server-version @ 10/12/24 13:02:34.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:34.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:34.216
  STEP: Request ServerVersion @ 10/12/24 13:02:34.219
  STEP: Confirm major version @ 10/12/24 13:02:34.221
  I1012 13:02:34.221122 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/12/24 13:02:34.221
  I1012 13:02:34.221154 19 server_version.go:58] cleanMinorVersion: 31
  I1012 13:02:34.221190 19 server_version.go:62] Minor version: 31
  I1012 13:02:34.221334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2432" for this suite. @ 10/12/24 13:02:34.225
• [0.032 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/12/24 13:02:34.232
  I1012 13:02:34.232035 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename podtemplate @ 10/12/24 13:02:34.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:34.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:34.251
  STEP: Create a pod template @ 10/12/24 13:02:34.254
  STEP: Replace a pod template @ 10/12/24 13:02:34.261
  I1012 13:02:34.269812 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1012 13:02:34.269962 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4605" for this suite. @ 10/12/24 13:02:34.273
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/12/24 13:02:34.281
  I1012 13:02:34.281420 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svc-latency @ 10/12/24 13:02:34.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:34.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:34.301
  I1012 13:02:34.305129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1612 @ 10/12/24 13:02:34.305
  I1012 13:02:34.314133      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1612, replica count: 1
  I1012 13:02:35.364850      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:02:35.477379 19 service_latency.go:356] Created: latency-svc-ww2ts
  I1012 13:02:35.485295 19 service_latency.go:363] Got endpoints: latency-svc-ww2ts [19.776667ms]
  I1012 13:02:35.498488 19 service_latency.go:356] Created: latency-svc-kxrj4
  I1012 13:02:35.504788 19 service_latency.go:356] Created: latency-svc-spp54
  I1012 13:02:35.505327 19 service_latency.go:363] Got endpoints: latency-svc-kxrj4 [19.736399ms]
  I1012 13:02:35.509689 19 service_latency.go:363] Got endpoints: latency-svc-spp54 [24.135045ms]
  I1012 13:02:35.514629 19 service_latency.go:356] Created: latency-svc-rv5xk
  I1012 13:02:35.517002 19 service_latency.go:363] Got endpoints: latency-svc-rv5xk [31.318943ms]
  I1012 13:02:35.518437 19 service_latency.go:356] Created: latency-svc-r8l7r
  I1012 13:02:35.524233 19 service_latency.go:363] Got endpoints: latency-svc-r8l7r [38.756559ms]
  I1012 13:02:35.527888 19 service_latency.go:356] Created: latency-svc-lspfr
  I1012 13:02:35.533827 19 service_latency.go:363] Got endpoints: latency-svc-lspfr [48.200378ms]
  I1012 13:02:35.537410 19 service_latency.go:356] Created: latency-svc-6jhxz
  I1012 13:02:35.542313 19 service_latency.go:363] Got endpoints: latency-svc-6jhxz [56.501636ms]
  I1012 13:02:35.545972 19 service_latency.go:356] Created: latency-svc-mhkq8
  I1012 13:02:35.548746 19 service_latency.go:363] Got endpoints: latency-svc-mhkq8 [62.901182ms]
  I1012 13:02:35.552177 19 service_latency.go:356] Created: latency-svc-vjcwr
  I1012 13:02:35.557866 19 service_latency.go:363] Got endpoints: latency-svc-vjcwr [72.006358ms]
  I1012 13:02:35.561231 19 service_latency.go:356] Created: latency-svc-dvnfm
  I1012 13:02:35.565766 19 service_latency.go:363] Got endpoints: latency-svc-dvnfm [79.87435ms]
  I1012 13:02:35.567039 19 service_latency.go:356] Created: latency-svc-hxjr6
  I1012 13:02:35.570702 19 service_latency.go:363] Got endpoints: latency-svc-hxjr6 [84.986606ms]
  I1012 13:02:35.575225 19 service_latency.go:356] Created: latency-svc-vd5nw
  I1012 13:02:35.578698 19 service_latency.go:363] Got endpoints: latency-svc-vd5nw [92.791851ms]
  I1012 13:02:35.580248 19 service_latency.go:356] Created: latency-svc-jnfcm
  I1012 13:02:35.584146 19 service_latency.go:363] Got endpoints: latency-svc-jnfcm [98.378173ms]
  I1012 13:02:35.586860 19 service_latency.go:356] Created: latency-svc-g9s2t
  I1012 13:02:35.591828 19 service_latency.go:363] Got endpoints: latency-svc-g9s2t [106.029082ms]
  I1012 13:02:35.595402 19 service_latency.go:356] Created: latency-svc-nmbwd
  I1012 13:02:35.601332 19 service_latency.go:363] Got endpoints: latency-svc-nmbwd [115.398788ms]
  I1012 13:02:35.605578 19 service_latency.go:356] Created: latency-svc-2n8b7
  I1012 13:02:35.608726 19 service_latency.go:363] Got endpoints: latency-svc-2n8b7 [123.314791ms]
  I1012 13:02:35.613226 19 service_latency.go:356] Created: latency-svc-fdnl6
  I1012 13:02:35.614990 19 service_latency.go:363] Got endpoints: latency-svc-fdnl6 [109.63201ms]
  I1012 13:02:35.619768 19 service_latency.go:356] Created: latency-svc-c4wg9
  I1012 13:02:35.625308 19 service_latency.go:363] Got endpoints: latency-svc-c4wg9 [115.584439ms]
  I1012 13:02:35.699070 19 service_latency.go:356] Created: latency-svc-z9pq7
  I1012 13:02:35.702183 19 service_latency.go:356] Created: latency-svc-sg4zf
  I1012 13:02:35.702299 19 service_latency.go:356] Created: latency-svc-2dvgc
  I1012 13:02:35.705882 19 service_latency.go:356] Created: latency-svc-scfjg
  I1012 13:02:35.707663 19 service_latency.go:356] Created: latency-svc-j47tb
  I1012 13:02:35.708049 19 service_latency.go:356] Created: latency-svc-zkvpz
  I1012 13:02:35.708137 19 service_latency.go:356] Created: latency-svc-vtxnq
  I1012 13:02:35.708167 19 service_latency.go:356] Created: latency-svc-z8nn5
  I1012 13:02:35.708218 19 service_latency.go:356] Created: latency-svc-n2g96
  I1012 13:02:35.708237 19 service_latency.go:356] Created: latency-svc-cbhfn
  I1012 13:02:35.708298 19 service_latency.go:356] Created: latency-svc-z6tmx
  I1012 13:02:35.708306 19 service_latency.go:356] Created: latency-svc-wbc4p
  I1012 13:02:35.708374 19 service_latency.go:356] Created: latency-svc-6xkrx
  I1012 13:02:35.708045 19 service_latency.go:356] Created: latency-svc-6lxb8
  I1012 13:02:35.708385 19 service_latency.go:356] Created: latency-svc-c8drj
  I1012 13:02:35.713404 19 service_latency.go:363] Got endpoints: latency-svc-z6tmx [147.592867ms]
  I1012 13:02:35.713989 19 service_latency.go:363] Got endpoints: latency-svc-z9pq7 [180.133883ms]
  I1012 13:02:35.713989 19 service_latency.go:363] Got endpoints: latency-svc-vtxnq [105.226034ms]
  I1012 13:02:35.717385 19 service_latency.go:363] Got endpoints: latency-svc-2dvgc [175.045995ms]
  I1012 13:02:35.718128 19 service_latency.go:363] Got endpoints: latency-svc-sg4zf [103.106444ms]
  I1012 13:02:35.719588 19 service_latency.go:363] Got endpoints: latency-svc-cbhfn [202.55722ms]
  I1012 13:02:35.725977 19 service_latency.go:363] Got endpoints: latency-svc-6xkrx [100.640947ms]
  I1012 13:02:35.725977 19 service_latency.go:363] Got endpoints: latency-svc-wbc4p [201.714238ms]
  I1012 13:02:35.726446 19 service_latency.go:363] Got endpoints: latency-svc-j47tb [177.666982ms]
  I1012 13:02:35.728314 19 service_latency.go:363] Got endpoints: latency-svc-zkvpz [149.50145ms]
  I1012 13:02:35.731209 19 service_latency.go:363] Got endpoints: latency-svc-c8drj [139.288249ms]
  I1012 13:02:35.735774 19 service_latency.go:363] Got endpoints: latency-svc-6lxb8 [165.043346ms]
  I1012 13:02:35.736644 19 service_latency.go:356] Created: latency-svc-bznsr
  I1012 13:02:35.738377 19 service_latency.go:363] Got endpoints: latency-svc-scfjg [154.195311ms]
  I1012 13:02:35.738427 19 service_latency.go:363] Got endpoints: latency-svc-n2g96 [180.193815ms]
  I1012 13:02:35.744404 19 service_latency.go:363] Got endpoints: latency-svc-bznsr [30.970472ms]
  I1012 13:02:35.744397 19 service_latency.go:363] Got endpoints: latency-svc-z8nn5 [143.012298ms]
  I1012 13:02:35.818798 19 service_latency.go:356] Created: latency-svc-v6rt6
  I1012 13:02:35.818799 19 service_latency.go:356] Created: latency-svc-ghvtd
  I1012 13:02:35.819725 19 service_latency.go:356] Created: latency-svc-kv894
  I1012 13:02:35.819725 19 service_latency.go:356] Created: latency-svc-7p2j4
  I1012 13:02:35.819792 19 service_latency.go:356] Created: latency-svc-dczjv
  I1012 13:02:35.825395 19 service_latency.go:363] Got endpoints: latency-svc-v6rt6 [107.841058ms]
  I1012 13:02:35.825801 19 service_latency.go:356] Created: latency-svc-tkljc
  I1012 13:02:35.826379 19 service_latency.go:356] Created: latency-svc-wn5dc
  I1012 13:02:35.826693 19 service_latency.go:363] Got endpoints: latency-svc-ghvtd [107.078654ms]
  I1012 13:02:35.826752 19 service_latency.go:356] Created: latency-svc-w2vgs
  I1012 13:02:35.826379 19 service_latency.go:356] Created: latency-svc-sbrzx
  I1012 13:02:35.826457 19 service_latency.go:356] Created: latency-svc-w8hzb
  I1012 13:02:35.826530 19 service_latency.go:356] Created: latency-svc-qsmkx
  I1012 13:02:35.828382 19 service_latency.go:356] Created: latency-svc-fhf8j
  I1012 13:02:35.828394 19 service_latency.go:356] Created: latency-svc-djvsl
  I1012 13:02:35.828473 19 service_latency.go:356] Created: latency-svc-gvnx2
  I1012 13:02:35.828493 19 service_latency.go:356] Created: latency-svc-lhmg4
  I1012 13:02:35.833801 19 service_latency.go:363] Got endpoints: latency-svc-lhmg4 [95.395248ms]
  I1012 13:02:35.837974 19 service_latency.go:356] Created: latency-svc-rr2k8
  I1012 13:02:35.842469 19 service_latency.go:356] Created: latency-svc-fpvzg
  I1012 13:02:35.856174 19 service_latency.go:356] Created: latency-svc-cdg67
  I1012 13:02:35.884011 19 service_latency.go:363] Got endpoints: latency-svc-gvnx2 [169.95513ms]
  I1012 13:02:35.894984 19 service_latency.go:356] Created: latency-svc-gzqlc
  I1012 13:02:35.932776 19 service_latency.go:363] Got endpoints: latency-svc-7p2j4 [201.534393ms]
  I1012 13:02:35.947007 19 service_latency.go:356] Created: latency-svc-pvgmg
  I1012 13:02:35.982170 19 service_latency.go:363] Got endpoints: latency-svc-w8hzb [256.151599ms]
  I1012 13:02:35.997581 19 service_latency.go:356] Created: latency-svc-frmzj
  I1012 13:02:36.034684 19 service_latency.go:363] Got endpoints: latency-svc-sbrzx [290.165812ms]
  I1012 13:02:36.045638 19 service_latency.go:356] Created: latency-svc-cvhkz
  I1012 13:02:36.083553 19 service_latency.go:363] Got endpoints: latency-svc-tkljc [339.10537ms]
  I1012 13:02:36.095037 19 service_latency.go:356] Created: latency-svc-mz466
  I1012 13:02:36.133640 19 service_latency.go:363] Got endpoints: latency-svc-qsmkx [415.483726ms]
  I1012 13:02:36.147699 19 service_latency.go:356] Created: latency-svc-vd276
  I1012 13:02:36.183216 19 service_latency.go:363] Got endpoints: latency-svc-djvsl [456.719609ms]
  I1012 13:02:36.194622 19 service_latency.go:356] Created: latency-svc-j7rcr
  I1012 13:02:36.232290 19 service_latency.go:363] Got endpoints: latency-svc-kv894 [506.267663ms]
  I1012 13:02:36.243532 19 service_latency.go:356] Created: latency-svc-m864l
  I1012 13:02:36.284907 19 service_latency.go:363] Got endpoints: latency-svc-wn5dc [546.45628ms]
  I1012 13:02:36.296272 19 service_latency.go:356] Created: latency-svc-czfdq
  I1012 13:02:36.334035 19 service_latency.go:363] Got endpoints: latency-svc-fhf8j [620.014449ms]
  I1012 13:02:36.345994 19 service_latency.go:356] Created: latency-svc-mh8hb
  I1012 13:02:36.382272 19 service_latency.go:363] Got endpoints: latency-svc-dczjv [646.459303ms]
  I1012 13:02:36.395268 19 service_latency.go:356] Created: latency-svc-q4krz
  I1012 13:02:36.432890 19 service_latency.go:363] Got endpoints: latency-svc-w2vgs [704.54623ms]
  I1012 13:02:36.445361 19 service_latency.go:356] Created: latency-svc-b4l6f
  I1012 13:02:36.483774 19 service_latency.go:363] Got endpoints: latency-svc-rr2k8 [658.334539ms]
  I1012 13:02:36.494035 19 service_latency.go:356] Created: latency-svc-92gp4
  I1012 13:02:36.532390 19 service_latency.go:363] Got endpoints: latency-svc-fpvzg [705.669547ms]
  I1012 13:02:36.543986 19 service_latency.go:356] Created: latency-svc-whjqm
  I1012 13:02:36.584615 19 service_latency.go:363] Got endpoints: latency-svc-cdg67 [750.782551ms]
  I1012 13:02:36.595629 19 service_latency.go:356] Created: latency-svc-kpc25
  I1012 13:02:36.632618 19 service_latency.go:363] Got endpoints: latency-svc-gzqlc [748.554273ms]
  I1012 13:02:36.645711 19 service_latency.go:356] Created: latency-svc-s56zs
  I1012 13:02:36.682309 19 service_latency.go:363] Got endpoints: latency-svc-pvgmg [749.48532ms]
  I1012 13:02:36.693051 19 service_latency.go:356] Created: latency-svc-8bzw6
  I1012 13:02:36.734443 19 service_latency.go:363] Got endpoints: latency-svc-frmzj [752.220715ms]
  I1012 13:02:36.746067 19 service_latency.go:356] Created: latency-svc-6jlss
  I1012 13:02:36.784510 19 service_latency.go:363] Got endpoints: latency-svc-cvhkz [749.775531ms]
  I1012 13:02:36.795019 19 service_latency.go:356] Created: latency-svc-bqthw
  I1012 13:02:36.833670 19 service_latency.go:363] Got endpoints: latency-svc-mz466 [750.06089ms]
  I1012 13:02:36.845452 19 service_latency.go:356] Created: latency-svc-shqfq
  I1012 13:02:36.882986 19 service_latency.go:363] Got endpoints: latency-svc-vd276 [749.285117ms]
  I1012 13:02:36.895924 19 service_latency.go:356] Created: latency-svc-nsf9g
  I1012 13:02:36.932624 19 service_latency.go:363] Got endpoints: latency-svc-j7rcr [749.280131ms]
  I1012 13:02:36.944837 19 service_latency.go:356] Created: latency-svc-v5ht5
  I1012 13:02:36.983216 19 service_latency.go:363] Got endpoints: latency-svc-m864l [750.874459ms]
  I1012 13:02:36.994259 19 service_latency.go:356] Created: latency-svc-8rdv5
  I1012 13:02:37.034084 19 service_latency.go:363] Got endpoints: latency-svc-czfdq [749.097561ms]
  I1012 13:02:37.046796 19 service_latency.go:356] Created: latency-svc-9ttcr
  I1012 13:02:37.082838 19 service_latency.go:363] Got endpoints: latency-svc-mh8hb [748.744323ms]
  I1012 13:02:37.094826 19 service_latency.go:356] Created: latency-svc-mvvhw
  I1012 13:02:37.131406 19 service_latency.go:363] Got endpoints: latency-svc-q4krz [749.08024ms]
  I1012 13:02:37.143251 19 service_latency.go:356] Created: latency-svc-jgv8v
  I1012 13:02:37.182165 19 service_latency.go:363] Got endpoints: latency-svc-b4l6f [749.218ms]
  I1012 13:02:37.192547 19 service_latency.go:356] Created: latency-svc-xgm5w
  I1012 13:02:37.233828 19 service_latency.go:363] Got endpoints: latency-svc-92gp4 [749.988916ms]
  I1012 13:02:37.245459 19 service_latency.go:356] Created: latency-svc-82p8z
  I1012 13:02:37.284475 19 service_latency.go:363] Got endpoints: latency-svc-whjqm [752.036777ms]
  I1012 13:02:37.296170 19 service_latency.go:356] Created: latency-svc-gw9hb
  I1012 13:02:37.333515 19 service_latency.go:363] Got endpoints: latency-svc-kpc25 [748.846031ms]
  I1012 13:02:37.347454 19 service_latency.go:356] Created: latency-svc-xqpcv
  I1012 13:02:37.382391 19 service_latency.go:363] Got endpoints: latency-svc-s56zs [749.71506ms]
  I1012 13:02:37.393888 19 service_latency.go:356] Created: latency-svc-29lgl
  I1012 13:02:37.433588 19 service_latency.go:363] Got endpoints: latency-svc-8bzw6 [751.226915ms]
  I1012 13:02:37.445252 19 service_latency.go:356] Created: latency-svc-5tkvq
  I1012 13:02:37.484041 19 service_latency.go:363] Got endpoints: latency-svc-6jlss [749.544742ms]
  I1012 13:02:37.496032 19 service_latency.go:356] Created: latency-svc-8xlrq
  I1012 13:02:37.532496 19 service_latency.go:363] Got endpoints: latency-svc-bqthw [747.93072ms]
  I1012 13:02:37.545126 19 service_latency.go:356] Created: latency-svc-8wwj4
  I1012 13:02:37.582012 19 service_latency.go:363] Got endpoints: latency-svc-shqfq [748.292771ms]
  I1012 13:02:37.592299 19 service_latency.go:356] Created: latency-svc-wjvkz
  I1012 13:02:37.633871 19 service_latency.go:363] Got endpoints: latency-svc-nsf9g [750.671134ms]
  I1012 13:02:37.646568 19 service_latency.go:356] Created: latency-svc-tvjwt
  I1012 13:02:37.684903 19 service_latency.go:363] Got endpoints: latency-svc-v5ht5 [752.221864ms]
  I1012 13:02:37.696469 19 service_latency.go:356] Created: latency-svc-956bq
  I1012 13:02:37.732465 19 service_latency.go:363] Got endpoints: latency-svc-8rdv5 [749.194481ms]
  I1012 13:02:37.744229 19 service_latency.go:356] Created: latency-svc-xcx5v
  I1012 13:02:37.783627 19 service_latency.go:363] Got endpoints: latency-svc-9ttcr [749.215987ms]
  I1012 13:02:37.795876 19 service_latency.go:356] Created: latency-svc-w8gt9
  I1012 13:02:37.832917 19 service_latency.go:363] Got endpoints: latency-svc-mvvhw [749.936281ms]
  I1012 13:02:37.843935 19 service_latency.go:356] Created: latency-svc-4p8nh
  I1012 13:02:37.882787 19 service_latency.go:363] Got endpoints: latency-svc-jgv8v [751.33046ms]
  I1012 13:02:37.892793 19 service_latency.go:356] Created: latency-svc-hjbzm
  I1012 13:02:37.934484 19 service_latency.go:363] Got endpoints: latency-svc-xgm5w [752.254603ms]
  I1012 13:02:37.946706 19 service_latency.go:356] Created: latency-svc-f8bhs
  I1012 13:02:37.982797 19 service_latency.go:363] Got endpoints: latency-svc-82p8z [748.673187ms]
  I1012 13:02:37.994575 19 service_latency.go:356] Created: latency-svc-g9dg5
  I1012 13:02:38.031944 19 service_latency.go:363] Got endpoints: latency-svc-gw9hb [747.409948ms]
  I1012 13:02:38.043111 19 service_latency.go:356] Created: latency-svc-n7gvm
  I1012 13:02:38.084426 19 service_latency.go:363] Got endpoints: latency-svc-xqpcv [750.845734ms]
  I1012 13:02:38.096236 19 service_latency.go:356] Created: latency-svc-jznkc
  I1012 13:02:38.133856 19 service_latency.go:363] Got endpoints: latency-svc-29lgl [751.40904ms]
  I1012 13:02:38.145408 19 service_latency.go:356] Created: latency-svc-5pdwl
  I1012 13:02:38.181541 19 service_latency.go:363] Got endpoints: latency-svc-5tkvq [747.899583ms]
  I1012 13:02:38.197822 19 service_latency.go:356] Created: latency-svc-5v5gm
  I1012 13:02:38.232298 19 service_latency.go:363] Got endpoints: latency-svc-8xlrq [748.169777ms]
  I1012 13:02:38.242363 19 service_latency.go:356] Created: latency-svc-jt5ht
  I1012 13:02:38.284973 19 service_latency.go:363] Got endpoints: latency-svc-8wwj4 [752.423713ms]
  I1012 13:02:38.298468 19 service_latency.go:356] Created: latency-svc-8tgqc
  I1012 13:02:38.331205 19 service_latency.go:363] Got endpoints: latency-svc-wjvkz [749.14293ms]
  I1012 13:02:38.341060 19 service_latency.go:356] Created: latency-svc-64rbc
  I1012 13:02:38.383165 19 service_latency.go:363] Got endpoints: latency-svc-tvjwt [749.239494ms]
  I1012 13:02:38.395714 19 service_latency.go:356] Created: latency-svc-8cmth
  I1012 13:02:38.431766 19 service_latency.go:363] Got endpoints: latency-svc-956bq [746.812773ms]
  I1012 13:02:38.444188 19 service_latency.go:356] Created: latency-svc-dxzrb
  I1012 13:02:38.480928 19 service_latency.go:363] Got endpoints: latency-svc-xcx5v [748.403387ms]
  I1012 13:02:38.493183 19 service_latency.go:356] Created: latency-svc-gmff6
  I1012 13:02:38.532849 19 service_latency.go:363] Got endpoints: latency-svc-w8gt9 [749.089717ms]
  I1012 13:02:38.545907 19 service_latency.go:356] Created: latency-svc-4xs8n
  I1012 13:02:38.585861 19 service_latency.go:363] Got endpoints: latency-svc-4p8nh [752.889119ms]
  I1012 13:02:38.597576 19 service_latency.go:356] Created: latency-svc-6sn4x
  I1012 13:02:38.633975 19 service_latency.go:363] Got endpoints: latency-svc-hjbzm [751.10331ms]
  I1012 13:02:38.644849 19 service_latency.go:356] Created: latency-svc-nfftp
  I1012 13:02:38.682741 19 service_latency.go:363] Got endpoints: latency-svc-f8bhs [748.172109ms]
  I1012 13:02:38.695635 19 service_latency.go:356] Created: latency-svc-t2kwz
  I1012 13:02:38.732800 19 service_latency.go:363] Got endpoints: latency-svc-g9dg5 [749.940765ms]
  I1012 13:02:38.743979 19 service_latency.go:356] Created: latency-svc-5m6gx
  I1012 13:02:38.781419 19 service_latency.go:363] Got endpoints: latency-svc-n7gvm [749.420921ms]
  I1012 13:02:38.792417 19 service_latency.go:356] Created: latency-svc-gtd6f
  I1012 13:02:38.834557 19 service_latency.go:363] Got endpoints: latency-svc-jznkc [750.058341ms]
  I1012 13:02:38.847560 19 service_latency.go:356] Created: latency-svc-6qzn5
  I1012 13:02:38.884887 19 service_latency.go:363] Got endpoints: latency-svc-5pdwl [750.974326ms]
  I1012 13:02:38.896069 19 service_latency.go:356] Created: latency-svc-7mn4n
  I1012 13:02:38.932450 19 service_latency.go:363] Got endpoints: latency-svc-5v5gm [750.729128ms]
  I1012 13:02:38.944950 19 service_latency.go:356] Created: latency-svc-ghrtp
  I1012 13:02:38.983563 19 service_latency.go:363] Got endpoints: latency-svc-jt5ht [751.213063ms]
  I1012 13:02:38.994319 19 service_latency.go:356] Created: latency-svc-79987
  I1012 13:02:39.034040 19 service_latency.go:363] Got endpoints: latency-svc-8tgqc [749.015196ms]
  I1012 13:02:39.045601 19 service_latency.go:356] Created: latency-svc-w2979
  I1012 13:02:39.084557 19 service_latency.go:363] Got endpoints: latency-svc-64rbc [753.301762ms]
  I1012 13:02:39.095922 19 service_latency.go:356] Created: latency-svc-bcc8b
  I1012 13:02:39.133315 19 service_latency.go:363] Got endpoints: latency-svc-8cmth [750.073112ms]
  I1012 13:02:39.145430 19 service_latency.go:356] Created: latency-svc-hjdzg
  I1012 13:02:39.182993 19 service_latency.go:363] Got endpoints: latency-svc-dxzrb [751.140486ms]
  I1012 13:02:39.195276 19 service_latency.go:356] Created: latency-svc-qj82q
  I1012 13:02:39.236351 19 service_latency.go:363] Got endpoints: latency-svc-gmff6 [755.366341ms]
  I1012 13:02:39.246766 19 service_latency.go:356] Created: latency-svc-gvdgz
  I1012 13:02:39.284517 19 service_latency.go:363] Got endpoints: latency-svc-4xs8n [751.613804ms]
  I1012 13:02:39.294135 19 service_latency.go:356] Created: latency-svc-c6dgh
  I1012 13:02:39.334468 19 service_latency.go:363] Got endpoints: latency-svc-6sn4x [748.552026ms]
  I1012 13:02:39.346228 19 service_latency.go:356] Created: latency-svc-wm6fp
  I1012 13:02:39.385463 19 service_latency.go:363] Got endpoints: latency-svc-nfftp [751.430085ms]
  I1012 13:02:39.395236 19 service_latency.go:356] Created: latency-svc-h8vsk
  I1012 13:02:39.434894 19 service_latency.go:363] Got endpoints: latency-svc-t2kwz [752.090267ms]
  I1012 13:02:39.446598 19 service_latency.go:356] Created: latency-svc-k5fcs
  I1012 13:02:39.484297 19 service_latency.go:363] Got endpoints: latency-svc-5m6gx [751.433885ms]
  I1012 13:02:39.495024 19 service_latency.go:356] Created: latency-svc-gz44l
  I1012 13:02:39.533744 19 service_latency.go:363] Got endpoints: latency-svc-gtd6f [752.270158ms]
  I1012 13:02:39.545075 19 service_latency.go:356] Created: latency-svc-cvgzs
  I1012 13:02:39.587819 19 service_latency.go:363] Got endpoints: latency-svc-6qzn5 [753.211457ms]
  I1012 13:02:39.612356 19 service_latency.go:356] Created: latency-svc-lkxzk
  I1012 13:02:39.633807 19 service_latency.go:363] Got endpoints: latency-svc-7mn4n [748.847511ms]
  I1012 13:02:39.646340 19 service_latency.go:356] Created: latency-svc-lz2vt
  I1012 13:02:39.681867 19 service_latency.go:363] Got endpoints: latency-svc-ghrtp [749.359816ms]
  I1012 13:02:39.693996 19 service_latency.go:356] Created: latency-svc-wj9sf
  I1012 13:02:39.734123 19 service_latency.go:363] Got endpoints: latency-svc-79987 [750.480292ms]
  I1012 13:02:39.746542 19 service_latency.go:356] Created: latency-svc-cnskw
  I1012 13:02:39.782774 19 service_latency.go:363] Got endpoints: latency-svc-w2979 [748.678151ms]
  I1012 13:02:39.795590 19 service_latency.go:356] Created: latency-svc-t7shh
  I1012 13:02:39.833069 19 service_latency.go:363] Got endpoints: latency-svc-bcc8b [748.447586ms]
  I1012 13:02:39.844299 19 service_latency.go:356] Created: latency-svc-cg7xb
  I1012 13:02:39.883862 19 service_latency.go:363] Got endpoints: latency-svc-hjdzg [750.490583ms]
  I1012 13:02:39.895401 19 service_latency.go:356] Created: latency-svc-cxvhj
  I1012 13:02:39.935619 19 service_latency.go:363] Got endpoints: latency-svc-qj82q [752.572194ms]
  I1012 13:02:39.946334 19 service_latency.go:356] Created: latency-svc-snb9t
  I1012 13:02:39.982863 19 service_latency.go:363] Got endpoints: latency-svc-gvdgz [746.423208ms]
  I1012 13:02:39.993946 19 service_latency.go:356] Created: latency-svc-2pnmd
  I1012 13:02:40.032852 19 service_latency.go:363] Got endpoints: latency-svc-c6dgh [748.278927ms]
  I1012 13:02:40.044231 19 service_latency.go:356] Created: latency-svc-wdqdh
  I1012 13:02:40.082860 19 service_latency.go:363] Got endpoints: latency-svc-wm6fp [748.346096ms]
  I1012 13:02:40.093973 19 service_latency.go:356] Created: latency-svc-svttf
  I1012 13:02:40.134179 19 service_latency.go:363] Got endpoints: latency-svc-h8vsk [748.662117ms]
  I1012 13:02:40.147407 19 service_latency.go:356] Created: latency-svc-lflsw
  I1012 13:02:40.183692 19 service_latency.go:363] Got endpoints: latency-svc-k5fcs [748.745655ms]
  I1012 13:02:40.195247 19 service_latency.go:356] Created: latency-svc-jt652
  I1012 13:02:40.233415 19 service_latency.go:363] Got endpoints: latency-svc-gz44l [748.977373ms]
  I1012 13:02:40.244919 19 service_latency.go:356] Created: latency-svc-5ndxh
  I1012 13:02:40.282616 19 service_latency.go:363] Got endpoints: latency-svc-cvgzs [748.807115ms]
  I1012 13:02:40.297178 19 service_latency.go:356] Created: latency-svc-4nncs
  I1012 13:02:40.332866 19 service_latency.go:363] Got endpoints: latency-svc-lkxzk [744.993793ms]
  I1012 13:02:40.346346 19 service_latency.go:356] Created: latency-svc-sgvhj
  I1012 13:02:40.384039 19 service_latency.go:363] Got endpoints: latency-svc-lz2vt [750.166625ms]
  I1012 13:02:40.395202 19 service_latency.go:356] Created: latency-svc-lcgp8
  I1012 13:02:40.433379 19 service_latency.go:363] Got endpoints: latency-svc-wj9sf [751.456609ms]
  I1012 13:02:40.444309 19 service_latency.go:356] Created: latency-svc-hh9ll
  I1012 13:02:40.482849 19 service_latency.go:363] Got endpoints: latency-svc-cnskw [748.670288ms]
  I1012 13:02:40.494251 19 service_latency.go:356] Created: latency-svc-glwbt
  I1012 13:02:40.532898 19 service_latency.go:363] Got endpoints: latency-svc-t7shh [750.063877ms]
  I1012 13:02:40.543967 19 service_latency.go:356] Created: latency-svc-mn62k
  I1012 13:02:40.582555 19 service_latency.go:363] Got endpoints: latency-svc-cg7xb [749.401893ms]
  I1012 13:02:40.594076 19 service_latency.go:356] Created: latency-svc-554vb
  I1012 13:02:40.634121 19 service_latency.go:363] Got endpoints: latency-svc-cxvhj [750.174676ms]
  I1012 13:02:40.645875 19 service_latency.go:356] Created: latency-svc-k752d
  I1012 13:02:40.683792 19 service_latency.go:363] Got endpoints: latency-svc-snb9t [748.116797ms]
  I1012 13:02:40.695993 19 service_latency.go:356] Created: latency-svc-w9zbc
  I1012 13:02:40.732632 19 service_latency.go:363] Got endpoints: latency-svc-2pnmd [749.711371ms]
  I1012 13:02:40.744655 19 service_latency.go:356] Created: latency-svc-rnb9b
  I1012 13:02:40.782595 19 service_latency.go:363] Got endpoints: latency-svc-wdqdh [749.688214ms]
  I1012 13:02:40.792514 19 service_latency.go:356] Created: latency-svc-4265d
  I1012 13:02:40.834079 19 service_latency.go:363] Got endpoints: latency-svc-svttf [751.130187ms]
  I1012 13:02:40.847726 19 service_latency.go:356] Created: latency-svc-djh95
  I1012 13:02:40.884528 19 service_latency.go:363] Got endpoints: latency-svc-lflsw [750.28643ms]
  I1012 13:02:40.894997 19 service_latency.go:356] Created: latency-svc-hmn84
  I1012 13:02:40.935377 19 service_latency.go:363] Got endpoints: latency-svc-jt652 [751.555338ms]
  I1012 13:02:40.946732 19 service_latency.go:356] Created: latency-svc-46p58
  I1012 13:02:40.982292 19 service_latency.go:363] Got endpoints: latency-svc-5ndxh [748.822857ms]
  I1012 13:02:40.994200 19 service_latency.go:356] Created: latency-svc-j5xql
  I1012 13:02:41.032954 19 service_latency.go:363] Got endpoints: latency-svc-4nncs [750.27679ms]
  I1012 13:02:41.044859 19 service_latency.go:356] Created: latency-svc-m987x
  I1012 13:02:41.083719 19 service_latency.go:363] Got endpoints: latency-svc-sgvhj [750.808882ms]
  I1012 13:02:41.097545 19 service_latency.go:356] Created: latency-svc-8sfcj
  I1012 13:02:41.134233 19 service_latency.go:363] Got endpoints: latency-svc-lcgp8 [750.110754ms]
  I1012 13:02:41.144760 19 service_latency.go:356] Created: latency-svc-bqp75
  I1012 13:02:41.182775 19 service_latency.go:363] Got endpoints: latency-svc-hh9ll [749.341831ms]
  I1012 13:02:41.194943 19 service_latency.go:356] Created: latency-svc-m8npr
  I1012 13:02:41.232532 19 service_latency.go:363] Got endpoints: latency-svc-glwbt [749.630575ms]
  I1012 13:02:41.244496 19 service_latency.go:356] Created: latency-svc-srzw4
  I1012 13:02:41.283570 19 service_latency.go:363] Got endpoints: latency-svc-mn62k [750.613217ms]
  I1012 13:02:41.294849 19 service_latency.go:356] Created: latency-svc-z44hj
  I1012 13:02:41.333938 19 service_latency.go:363] Got endpoints: latency-svc-554vb [751.326019ms]
  I1012 13:02:41.345463 19 service_latency.go:356] Created: latency-svc-l487m
  I1012 13:02:41.384716 19 service_latency.go:363] Got endpoints: latency-svc-k752d [750.538092ms]
  I1012 13:02:41.395089 19 service_latency.go:356] Created: latency-svc-76l5q
  I1012 13:02:41.434412 19 service_latency.go:363] Got endpoints: latency-svc-w9zbc [750.563288ms]
  I1012 13:02:41.448719 19 service_latency.go:356] Created: latency-svc-whszn
  I1012 13:02:41.481363 19 service_latency.go:363] Got endpoints: latency-svc-rnb9b [748.669975ms]
  I1012 13:02:41.491978 19 service_latency.go:356] Created: latency-svc-kgzxs
  I1012 13:02:41.533783 19 service_latency.go:363] Got endpoints: latency-svc-4265d [751.131095ms]
  I1012 13:02:41.545213 19 service_latency.go:356] Created: latency-svc-w7n9w
  I1012 13:02:41.584699 19 service_latency.go:363] Got endpoints: latency-svc-djh95 [750.435794ms]
  I1012 13:02:41.596261 19 service_latency.go:356] Created: latency-svc-s7l7t
  I1012 13:02:41.632940 19 service_latency.go:363] Got endpoints: latency-svc-hmn84 [748.358046ms]
  I1012 13:02:41.648016 19 service_latency.go:356] Created: latency-svc-9pmsf
  I1012 13:02:41.682596 19 service_latency.go:363] Got endpoints: latency-svc-46p58 [747.149234ms]
  I1012 13:02:41.693079 19 service_latency.go:356] Created: latency-svc-x8sx6
  I1012 13:02:41.733179 19 service_latency.go:363] Got endpoints: latency-svc-j5xql [750.843162ms]
  I1012 13:02:41.743567 19 service_latency.go:356] Created: latency-svc-9kcvt
  I1012 13:02:41.784172 19 service_latency.go:363] Got endpoints: latency-svc-m987x [751.156024ms]
  I1012 13:02:41.795112 19 service_latency.go:356] Created: latency-svc-zxb9q
  I1012 13:02:41.834522 19 service_latency.go:363] Got endpoints: latency-svc-8sfcj [750.749208ms]
  I1012 13:02:41.846432 19 service_latency.go:356] Created: latency-svc-lnszz
  I1012 13:02:41.883087 19 service_latency.go:363] Got endpoints: latency-svc-bqp75 [748.791091ms]
  I1012 13:02:41.895225 19 service_latency.go:356] Created: latency-svc-plw42
  I1012 13:02:41.932584 19 service_latency.go:363] Got endpoints: latency-svc-m8npr [749.746215ms]
  I1012 13:02:41.947047 19 service_latency.go:356] Created: latency-svc-nd46l
  I1012 13:02:41.986511 19 service_latency.go:363] Got endpoints: latency-svc-srzw4 [753.932343ms]
  I1012 13:02:41.999434 19 service_latency.go:356] Created: latency-svc-s7bs4
  I1012 13:02:42.034404 19 service_latency.go:363] Got endpoints: latency-svc-z44hj [750.78288ms]
  I1012 13:02:42.045565 19 service_latency.go:356] Created: latency-svc-mzmn9
  I1012 13:02:42.084200 19 service_latency.go:363] Got endpoints: latency-svc-l487m [750.201799ms]
  I1012 13:02:42.094462 19 service_latency.go:356] Created: latency-svc-j4q9m
  I1012 13:02:42.133292 19 service_latency.go:363] Got endpoints: latency-svc-76l5q [748.512579ms]
  I1012 13:02:42.145888 19 service_latency.go:356] Created: latency-svc-47spd
  I1012 13:02:42.183723 19 service_latency.go:363] Got endpoints: latency-svc-whszn [749.2273ms]
  I1012 13:02:42.195292 19 service_latency.go:356] Created: latency-svc-x4c4w
  I1012 13:02:42.233038 19 service_latency.go:363] Got endpoints: latency-svc-kgzxs [751.622667ms]
  I1012 13:02:42.244433 19 service_latency.go:356] Created: latency-svc-sm6p9
  I1012 13:02:42.284125 19 service_latency.go:363] Got endpoints: latency-svc-w7n9w [750.26067ms]
  I1012 13:02:42.295221 19 service_latency.go:356] Created: latency-svc-qs76j
  I1012 13:02:42.334008 19 service_latency.go:363] Got endpoints: latency-svc-s7l7t [749.232297ms]
  I1012 13:02:42.345960 19 service_latency.go:356] Created: latency-svc-58jnl
  I1012 13:02:42.384354 19 service_latency.go:363] Got endpoints: latency-svc-9pmsf [751.361823ms]
  I1012 13:02:42.395432 19 service_latency.go:356] Created: latency-svc-drwx9
  I1012 13:02:42.432026 19 service_latency.go:363] Got endpoints: latency-svc-x8sx6 [749.371317ms]
  I1012 13:02:42.442990 19 service_latency.go:356] Created: latency-svc-s7m9t
  I1012 13:02:42.482987 19 service_latency.go:363] Got endpoints: latency-svc-9kcvt [749.753697ms]
  I1012 13:02:42.494461 19 service_latency.go:356] Created: latency-svc-9v6ff
  I1012 13:02:42.534188 19 service_latency.go:363] Got endpoints: latency-svc-zxb9q [749.89279ms]
  I1012 13:02:42.546292 19 service_latency.go:356] Created: latency-svc-kwjrh
  I1012 13:02:42.583222 19 service_latency.go:363] Got endpoints: latency-svc-lnszz [748.648012ms]
  I1012 13:02:42.595685 19 service_latency.go:356] Created: latency-svc-txrq7
  I1012 13:02:42.632442 19 service_latency.go:363] Got endpoints: latency-svc-plw42 [749.281333ms]
  I1012 13:02:42.645795 19 service_latency.go:356] Created: latency-svc-fcx5c
  I1012 13:02:42.682778 19 service_latency.go:363] Got endpoints: latency-svc-nd46l [750.143669ms]
  I1012 13:02:42.692612 19 service_latency.go:356] Created: latency-svc-pk5km
  I1012 13:02:42.735227 19 service_latency.go:363] Got endpoints: latency-svc-s7bs4 [748.658325ms]
  I1012 13:02:42.748218 19 service_latency.go:356] Created: latency-svc-qql7h
  I1012 13:02:42.784792 19 service_latency.go:363] Got endpoints: latency-svc-mzmn9 [750.333348ms]
  I1012 13:02:42.796772 19 service_latency.go:356] Created: latency-svc-ms89g
  I1012 13:02:42.833425 19 service_latency.go:363] Got endpoints: latency-svc-j4q9m [749.171924ms]
  I1012 13:02:42.843686 19 service_latency.go:356] Created: latency-svc-bx5cb
  I1012 13:02:42.883750 19 service_latency.go:363] Got endpoints: latency-svc-47spd [750.404271ms]
  I1012 13:02:42.896204 19 service_latency.go:356] Created: latency-svc-z5sss
  I1012 13:02:42.931973 19 service_latency.go:363] Got endpoints: latency-svc-x4c4w [748.196945ms]
  I1012 13:02:42.942902 19 service_latency.go:356] Created: latency-svc-nnpqw
  I1012 13:02:42.983973 19 service_latency.go:363] Got endpoints: latency-svc-sm6p9 [750.876736ms]
  I1012 13:02:42.995670 19 service_latency.go:356] Created: latency-svc-p27b8
  I1012 13:02:43.034302 19 service_latency.go:363] Got endpoints: latency-svc-qs76j [750.117532ms]
  I1012 13:02:43.046021 19 service_latency.go:356] Created: latency-svc-9vlrx
  I1012 13:02:43.083149 19 service_latency.go:363] Got endpoints: latency-svc-58jnl [749.083333ms]
  I1012 13:02:43.093266 19 service_latency.go:356] Created: latency-svc-lbplf
  I1012 13:02:43.132857 19 service_latency.go:363] Got endpoints: latency-svc-drwx9 [748.44313ms]
  I1012 13:02:43.145862 19 service_latency.go:356] Created: latency-svc-qkw2w
  I1012 13:02:43.182073 19 service_latency.go:363] Got endpoints: latency-svc-s7m9t [749.987507ms]
  I1012 13:02:43.192840 19 service_latency.go:356] Created: latency-svc-h585c
  I1012 13:02:43.234476 19 service_latency.go:363] Got endpoints: latency-svc-9v6ff [751.370163ms]
  I1012 13:02:43.245054 19 service_latency.go:356] Created: latency-svc-76d24
  I1012 13:02:43.284176 19 service_latency.go:363] Got endpoints: latency-svc-kwjrh [749.851445ms]
  I1012 13:02:43.294884 19 service_latency.go:356] Created: latency-svc-tz4r6
  I1012 13:02:43.332112 19 service_latency.go:363] Got endpoints: latency-svc-txrq7 [748.818078ms]
  I1012 13:02:43.383610 19 service_latency.go:363] Got endpoints: latency-svc-fcx5c [751.109286ms]
  I1012 13:02:43.433290 19 service_latency.go:363] Got endpoints: latency-svc-pk5km [750.461789ms]
  I1012 13:02:43.483600 19 service_latency.go:363] Got endpoints: latency-svc-qql7h [748.100243ms]
  I1012 13:02:43.533526 19 service_latency.go:363] Got endpoints: latency-svc-ms89g [748.675566ms]
  I1012 13:02:43.584000 19 service_latency.go:363] Got endpoints: latency-svc-bx5cb [750.508689ms]
  I1012 13:02:43.634087 19 service_latency.go:363] Got endpoints: latency-svc-z5sss [750.284035ms]
  I1012 13:02:43.685344 19 service_latency.go:363] Got endpoints: latency-svc-nnpqw [753.323393ms]
  I1012 13:02:43.732642 19 service_latency.go:363] Got endpoints: latency-svc-p27b8 [748.609593ms]
  I1012 13:02:43.784126 19 service_latency.go:363] Got endpoints: latency-svc-9vlrx [749.731126ms]
  I1012 13:02:43.832470 19 service_latency.go:363] Got endpoints: latency-svc-lbplf [749.267641ms]
  I1012 13:02:43.884113 19 service_latency.go:363] Got endpoints: latency-svc-qkw2w [751.18653ms]
  I1012 13:02:43.934075 19 service_latency.go:363] Got endpoints: latency-svc-h585c [751.92537ms]
  I1012 13:02:43.983399 19 service_latency.go:363] Got endpoints: latency-svc-76d24 [748.864879ms]
  I1012 13:02:44.032729 19 service_latency.go:363] Got endpoints: latency-svc-tz4r6 [748.494639ms]
  I1012 13:02:44.032839 19 service_latency.go:114] Latencies: [19.736399ms 24.135045ms 30.970472ms 31.318943ms 38.756559ms 48.200378ms 56.501636ms 62.901182ms 72.006358ms 79.87435ms 84.986606ms 92.791851ms 95.395248ms 98.378173ms 100.640947ms 103.106444ms 105.226034ms 106.029082ms 107.078654ms 107.841058ms 109.63201ms 115.398788ms 115.584439ms 123.314791ms 139.288249ms 143.012298ms 147.592867ms 149.50145ms 154.195311ms 165.043346ms 169.95513ms 175.045995ms 177.666982ms 180.133883ms 180.193815ms 201.534393ms 201.714238ms 202.55722ms 256.151599ms 290.165812ms 339.10537ms 415.483726ms 456.719609ms 506.267663ms 546.45628ms 620.014449ms 646.459303ms 658.334539ms 704.54623ms 705.669547ms 744.993793ms 746.423208ms 746.812773ms 747.149234ms 747.409948ms 747.899583ms 747.93072ms 748.100243ms 748.116797ms 748.169777ms 748.172109ms 748.196945ms 748.278927ms 748.292771ms 748.346096ms 748.358046ms 748.403387ms 748.44313ms 748.447586ms 748.494639ms 748.512579ms 748.552026ms 748.554273ms 748.609593ms 748.648012ms 748.658325ms 748.662117ms 748.669975ms 748.670288ms 748.673187ms 748.675566ms 748.678151ms 748.744323ms 748.745655ms 748.791091ms 748.807115ms 748.818078ms 748.822857ms 748.846031ms 748.847511ms 748.864879ms 748.977373ms 749.015196ms 749.08024ms 749.083333ms 749.089717ms 749.097561ms 749.14293ms 749.171924ms 749.194481ms 749.215987ms 749.218ms 749.2273ms 749.232297ms 749.239494ms 749.267641ms 749.280131ms 749.281333ms 749.285117ms 749.341831ms 749.359816ms 749.371317ms 749.401893ms 749.420921ms 749.48532ms 749.544742ms 749.630575ms 749.688214ms 749.711371ms 749.71506ms 749.731126ms 749.746215ms 749.753697ms 749.775531ms 749.851445ms 749.89279ms 749.936281ms 749.940765ms 749.987507ms 749.988916ms 750.058341ms 750.06089ms 750.063877ms 750.073112ms 750.110754ms 750.117532ms 750.143669ms 750.166625ms 750.174676ms 750.201799ms 750.26067ms 750.27679ms 750.284035ms 750.28643ms 750.333348ms 750.404271ms 750.435794ms 750.461789ms 750.480292ms 750.490583ms 750.508689ms 750.538092ms 750.563288ms 750.613217ms 750.671134ms 750.729128ms 750.749208ms 750.782551ms 750.78288ms 750.808882ms 750.843162ms 750.845734ms 750.874459ms 750.876736ms 750.974326ms 751.10331ms 751.109286ms 751.130187ms 751.131095ms 751.140486ms 751.156024ms 751.18653ms 751.213063ms 751.226915ms 751.326019ms 751.33046ms 751.361823ms 751.370163ms 751.40904ms 751.430085ms 751.433885ms 751.456609ms 751.555338ms 751.613804ms 751.622667ms 751.92537ms 752.036777ms 752.090267ms 752.220715ms 752.221864ms 752.254603ms 752.270158ms 752.423713ms 752.572194ms 752.889119ms 753.211457ms 753.301762ms 753.323393ms 753.932343ms 755.366341ms]
  I1012 13:02:44.032855 19 service_latency.go:118] 50 %ile: 749.215987ms
  I1012 13:02:44.032863 19 service_latency.go:119] 90 %ile: 751.433885ms
  I1012 13:02:44.032870 19 service_latency.go:120] 99 %ile: 753.932343ms
  I1012 13:02:44.032875 19 service_latency.go:121] Total sample count: 200
  I1012 13:02:44.032964 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1612" for this suite. @ 10/12/24 13:02:44.038
• [9.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 10/12/24 13:02:44.047
  I1012 13:02:44.047468 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename aggregator @ 10/12/24 13:02:44.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:02:44.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:02:44.067
  I1012 13:02:44.071028 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Registering the sample API server. @ 10/12/24 13:02:44.071
  I1012 13:02:44.251770 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1012 13:02:44.286129 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1012 13:02:46.334007 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:48.339686 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:50.338354 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:52.338969 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:54.339651 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:56.339793 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:02:58.340012 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:03:00.339823 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:03:02.339354 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:03:04.339689 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:03:06.340051 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 2, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1012 13:03:08.464063 19 aggregator.go:755] Waited 116.571144ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/12/24 13:03:08.506
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/12/24 13:03:08.51
  STEP: List APIServices @ 10/12/24 13:03:08.518
  I1012 13:03:08.523863 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/12/24 13:03:08.523
  I1012 13:03:08.535910 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/12/24 13:03:08.535
  I1012 13:03:08.549644 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.October, 12, 13, 3, 8, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/12/24 13:03:08.549
  I1012 13:03:08.553319 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-10-12 13:03:08 +0000 UTC Passed all checks passed}
  I1012 13:03:08.553359 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 13:03:08.553368 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/12/24 13:03:08.553
  I1012 13:03:08.565461 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-271023355" @ 10/12/24 13:03:08.565
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/12/24 13:03:08.575
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/12/24 13:03:08.585
  STEP: Patch APIService Status @ 10/12/24 13:03:08.589
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/12/24 13:03:08.599
  I1012 13:03:08.603208 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-10-12 13:03:08 +0000 UTC Passed all checks passed}
  I1012 13:03:08.603253 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1012 13:03:08.603262 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1012 13:03:08.603277 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/12/24 13:03:08.603
  STEP: Confirm that the generated APIService has been deleted @ 10/12/24 13:03:08.616
  I1012 13:03:08.616156 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1012 13:03:08.620865 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1012 13:03:08.620893 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1012 13:03:08.727636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-961" for this suite. @ 10/12/24 13:03:08.731
• [24.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/12/24 13:03:08.741
  I1012 13:03:08.741366 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/12/24 13:03:08.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:08.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:08.76
  I1012 13:03:08.767301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6415" for this suite. @ 10/12/24 13:03:08.77
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 10/12/24 13:03:08.778
  I1012 13:03:08.778038 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 13:03:08.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:08.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:08.796
  STEP: Creating a job @ 10/12/24 13:03:08.799
  STEP: Ensuring job reaches completions @ 10/12/24 13:03:08.806
  I1012 13:03:20.818665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4262" for this suite. @ 10/12/24 13:03:20.823
• [12.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 10/12/24 13:03:20.831
  I1012 13:03:20.831633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:03:20.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:20.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:20.852
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:03:20.855
  STEP: Saw pod success @ 10/12/24 13:03:24.883
  I1012 13:03:24.888062 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-b5923bab-cd13-4641-b91f-298b2551227d container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:03:24.905
  I1012 13:03:24.926565 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3046" for this suite. @ 10/12/24 13:03:24.93
• [4.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/12/24 13:03:24.937
  I1012 13:03:24.937056 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename events @ 10/12/24 13:03:24.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:24.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:24.956
  STEP: creating a test event @ 10/12/24 13:03:24.96
  STEP: listing all events in all namespaces @ 10/12/24 13:03:24.964
  STEP: patching the test event @ 10/12/24 13:03:24.972
  STEP: fetching the test event @ 10/12/24 13:03:24.978
  STEP: updating the test event @ 10/12/24 13:03:24.982
  STEP: getting the test event @ 10/12/24 13:03:24.991
  STEP: deleting the test event @ 10/12/24 13:03:24.994
  STEP: listing all events in all namespaces @ 10/12/24 13:03:25.003
  I1012 13:03:25.011160 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-271" for this suite. @ 10/12/24 13:03:25.016
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 10/12/24 13:03:25.023
  I1012 13:03:25.023672 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:03:25.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:25.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:25.043
  STEP: Setting up server cert @ 10/12/24 13:03:25.068
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:03:25.282
  STEP: Deploying the webhook pod @ 10/12/24 13:03:25.292
  STEP: Wait for the deployment to be ready @ 10/12/24 13:03:25.306
  I1012 13:03:25.317128 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:03:27.331
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:03:27.34
  I1012 13:03:28.341146 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/12/24 13:03:28.351
  STEP: create a pod that should be denied by the webhook @ 10/12/24 13:03:28.364
  STEP: create a pod that causes the webhook to hang @ 10/12/24 13:03:28.375
  STEP: create a configmap that should be denied by the webhook @ 10/12/24 13:03:38.383
  STEP: create a configmap that should be admitted by the webhook @ 10/12/24 13:03:38.416
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/12/24 13:03:38.425
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/12/24 13:03:38.434
  STEP: create a namespace that bypass the webhook @ 10/12/24 13:03:38.44
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/12/24 13:03:38.455
  I1012 13:03:38.510763 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8022" for this suite. @ 10/12/24 13:03:38.514
  STEP: Destroying namespace "webhook-markers-5472" for this suite. @ 10/12/24 13:03:38.523
  STEP: Destroying namespace "exempted-namespace-5229" for this suite. @ 10/12/24 13:03:38.529
• [13.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 10/12/24 13:03:38.537
  I1012 13:03:38.537409 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:03:38.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:38.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:38.559
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/12/24 13:03:38.562
  STEP: Saw pod success @ 10/12/24 13:03:40.582
  I1012 13:03:40.586863 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-2f78ebe7-824d-4c84-ae15-882f23640cfc container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:03:40.593
  I1012 13:03:40.615923 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5854" for this suite. @ 10/12/24 13:03:40.62
• [2.092 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 10/12/24 13:03:40.629
  I1012 13:03:40.629464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 13:03:40.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:03:40.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:03:40.652
  STEP: Creating pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051 @ 10/12/24 13:03:40.657
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 13:03:42.681
  I1012 13:03:42.685402 19 container_probe.go:1749] Initial restart count of pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 is 0
  I1012 13:03:42.688973 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:44.695315 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:46.700840 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:48.708264 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:50.714432 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:52.720947 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:54.726185 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:56.731674 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:03:58.737132 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:00.742786 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:02.749010 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:04.754588 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:06.759803 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:08.764941 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:10.771080 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:12.776284 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:14.781326 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:16.786683 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:18.793179 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:20.798742 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:22.804534 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:24.810378 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:26.816048 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:28.822741 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:30.828379 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:32.833998 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:34.840303 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:36.845015 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:38.849547 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:40.854427 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:42.859959 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:44.864632 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:47.043815 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:49.049450 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:51.057043 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:53.062999 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:55.068817 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:57.074548 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:04:59.079479 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:01.086978 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:03.094292 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:05.098562 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:07.105147 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:09.109790 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:11.115975 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:13.120866 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:15.127149 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:17.131988 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:19.137634 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:21.142727 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:23.149268 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:25.154757 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:27.159852 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:29.165050 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:31.170523 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:33.176140 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:35.182614 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:37.187861 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:39.193548 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:41.201160 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:43.207209 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:45.212427 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:47.218879 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:49.224362 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:51.230012 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:53.235769 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:55.242048 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:57.247802 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:05:59.254364 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:01.260399 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:03.266825 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:05.272204 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:07.277755 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:09.284312 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:11.289837 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:13.295800 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:15.300437 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:17.305728 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:19.310428 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:21.316435 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:23.323022 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:25.328271 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:27.333187 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:29.339292 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:31.344383 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:33.351013 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:35.356276 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:37.362600 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:39.369039 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:41.374538 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:43.380392 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:45.385657 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:47.390782 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:49.396014 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:51.401849 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:53.407854 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:55.413083 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:57.418212 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:06:59.424233 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:01.429866 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:03.436174 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:05.442925 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:07.448162 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:09.453437 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:11.458548 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:13.465046 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:15.470650 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:17.475862 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:19.481385 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:21.486018 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:23.492853 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:25.497418 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:27.502837 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:29.507874 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:31.514372 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:33.520493 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:35.526698 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:37.531625 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:39.537686 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  I1012 13:07:41.542817 19 container_probe.go:1759] Get pod test-grpc-f9d1623c-12f8-4671-bdee-ff7babc30b05 in namespace container-probe-8051
  STEP: deleting the pod @ 10/12/24 13:07:43.544
  I1012 13:07:43.560942 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8051" for this suite. @ 10/12/24 13:07:43.567
• [242.945 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 10/12/24 13:07:43.574
  I1012 13:07:43.574848 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:07:43.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:07:43.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:07:43.595
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:07:43.599
  STEP: Saw pod success @ 10/12/24 13:07:47.624
  I1012 13:07:47.628570 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-e8784668-38f1-4ddb-9552-9200d808af2c container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:07:47.638
  I1012 13:07:47.656497 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6104" for this suite. @ 10/12/24 13:07:47.66
• [4.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 10/12/24 13:07:47.667
  I1012 13:07:47.667869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:07:47.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:07:47.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:07:47.687
  STEP: Creating configMap with name projected-configmap-test-volume-map-eee879dd-d2e3-4053-a830-77c7278cf1fc @ 10/12/24 13:07:47.689
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:07:47.696
  STEP: Saw pod success @ 10/12/24 13:07:51.718
  I1012 13:07:51.723445 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-1a9955ed-4335-4995-83e1-ca795972aff1 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:07:51.729
  I1012 13:07:51.750289 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5039" for this suite. @ 10/12/24 13:07:51.754
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 10/12/24 13:07:51.76
  I1012 13:07:51.760291 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:07:51.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:07:51.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:07:51.781
  STEP: Creating simple DaemonSet "daemon-set" @ 10/12/24 13:07:51.804
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 13:07:51.811
  I1012 13:07:51.815699 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:51.815738 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:51.818335 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:07:51.818353 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:07:52.815748 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:52.815793 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:52.819067 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 13:07:52.819091 19 fixtures.go:130] Node ip-172-31-46-196 is running 0 daemon pod, expected 1
  I1012 13:07:53.817417 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:53.817465 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:53.821037 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:07:53.821064 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/12/24 13:07:53.825
  STEP: DeleteCollection of the DaemonSets @ 10/12/24 13:07:53.828
  STEP: Verify that ReplicaSets have been deleted @ 10/12/24 13:07:53.838
  I1012 13:07:53.847665 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23507"},"items":null}

  I1012 13:07:53.860628 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23510"},"items":[{"metadata":{"name":"daemon-set-9rd4p","generateName":"daemon-set-","namespace":"daemonsets-2413","uid":"b1939dd2-a489-4dfe-b3ed-1b6fcb08cf64","resourceVersion":"23508","creationTimestamp":"2024-10-12T13:07:51Z","deletionTimestamp":"2024-10-12T13:08:23Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9157baad-4720-4060-9421-631132be0053","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9157baad-4720-4060-9421-631132be0053\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.127.152\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5rxfg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5rxfg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-23-48","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-23-48"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"}],"hostIP":"172.31.23.48","hostIPs":[{"ip":"172.31.23.48"}],"podIP":"192.168.127.152","podIPs":[{"ip":"192.168.127.152"}],"startTime":"2024-10-12T13:07:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-12T13:07:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5a216dd7b2777d7c7dc548b50030cee3d082c542be2e4aa6354c8f5d55e3d7a5","started":true,"volumeMounts":[{"name":"kube-api-access-5rxfg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qh4fp","generateName":"daemon-set-","namespace":"daemonsets-2413","uid":"8f8f038c-7e36-484d-9e83-70544906d8cf","resourceVersion":"23509","creationTimestamp":"2024-10-12T13:07:51Z","deletionTimestamp":"2024-10-12T13:08:23Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9157baad-4720-4060-9421-631132be0053","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9157baad-4720-4060-9421-631132be0053\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.195.250\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ljbdc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ljbdc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-46-196","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-46-196"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:53Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"}],"hostIP":"172.31.46.196","hostIPs":[{"ip":"172.31.46.196"}],"podIP":"192.168.195.250","podIPs":[{"ip":"192.168.195.250"}],"startTime":"2024-10-12T13:07:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-12T13:07:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0f97c8fc2c9bced576bb66ff6e0e26ad4f6599661bebabf8dcaf7c3bf8a7c578","started":true,"volumeMounts":[{"name":"kube-api-access-ljbdc","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wvwcn","generateName":"daemon-set-","namespace":"daemonsets-2413","uid":"a4e2dfaf-8046-4cef-85b4-568b0aee7b1c","resourceVersion":"23497","creationTimestamp":"2024-10-12T13:07:51Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9157baad-4720-4060-9421-631132be0053","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9157baad-4720-4060-9421-631132be0053\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-12T13:07:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.61.73\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wsqz9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wsqz9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-91-95","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-91-95"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-12T13:07:51Z"}],"hostIP":"172.31.91.95","hostIPs":[{"ip":"172.31.91.95"}],"podIP":"192.168.61.73","podIPs":[{"ip":"192.168.61.73"}],"startTime":"2024-10-12T13:07:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-12T13:07:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://661d800adc03dacaa3beb571d4dd195c6d6116d9e9b914f50dccecd606d29f47","started":true,"volumeMounts":[{"name":"kube-api-access-wsqz9","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1012 13:07:53.875797 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2413" for this suite. @ 10/12/24 13:07:53.878
• [2.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/12/24 13:07:53.886
  I1012 13:07:53.886565 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:07:53.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:07:53.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:07:53.904
  I1012 13:07:53.929217 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 13:07:53.936
  I1012 13:07:53.940263 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:53.940303 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:53.943023 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:07:53.943044 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:07:54.941247 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:54.941288 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:54.945512 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:07:54.945539 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:07:55.943018 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:55.943063 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:55.947490 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:07:55.947515 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/12/24 13:07:55.962
  STEP: Check that daemon pods images are updated. @ 10/12/24 13:07:55.975
  I1012 13:07:55.978852 19 daemon_set.go:1193] Wrong image for pod: daemon-set-55whz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1012 13:07:55.978880 19 daemon_set.go:1193] Wrong image for pod: daemon-set-6vqlf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1012 13:07:55.978886 19 daemon_set.go:1193] Wrong image for pod: daemon-set-rt7gg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1012 13:07:55.982562 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:55.982595 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:56.979851 19 daemon_set.go:1193] Wrong image for pod: daemon-set-55whz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1012 13:07:56.989759 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:56.989820 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:57.981522 19 daemon_set.go:1193] Wrong image for pod: daemon-set-55whz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1012 13:07:57.981562 19 daemon_set.go:1198] Pod daemon-set-j2htz is not available
  I1012 13:07:57.986041 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:57.986070 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:58.980328 19 daemon_set.go:1198] Pod daemon-set-xt5sk is not available
  I1012 13:07:58.983684 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:58.983716 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/12/24 13:07:58.983
  I1012 13:07:58.987796 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:58.987828 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:58.992181 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 13:07:58.992208 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:07:59.989565 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:59.989610 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:07:59.993868 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:07:59.993898 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 13:08:00.009
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2982, will wait for the garbage collector to delete the pods @ 10/12/24 13:08:00.009
  I1012 13:08:00.072029 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.048482ms
  I1012 13:08:00.172532 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.496815ms
  I1012 13:08:01.577378 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:08:01.577425 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 13:08:01.581344 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23727"},"items":null}

  I1012 13:08:01.585672 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23727"},"items":null}

  I1012 13:08:01.600434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2982" for this suite. @ 10/12/24 13:08:01.604
• [7.726 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/12/24 13:08:01.612
  I1012 13:08:01.612550 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:08:01.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:08:01.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:08:01.632
  I1012 13:08:01.658252 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1012 13:08:01.665730 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1012 13:08:01.669649 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:01.669700 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:01.673076 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:08:01.673118 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:08:02.671212 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:02.671254 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:02.674897 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:08:02.674921 19 fixtures.go:130] Node ip-172-31-46-196 is running 0 daemon pod, expected 1
  I1012 13:08:03.670625 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:03.670698 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:03.674671 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:08:03.674708 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1012 13:08:03.674727 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1012 13:08:03.683345 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1012 13:08:05.696008 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1012 13:08:05.708248 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1012 13:08:05.708294 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1012 13:08:05.713207 19 daemon_set.go:1193] Wrong image for pod: daemon-set-r2rk8. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1012 13:08:05.713231 19 daemon_set.go:1198] Pod daemon-set-r2rk8 is not available
  I1012 13:08:05.717481 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:05.717516 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:06.716563 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:06.716605 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:07.713076 19 daemon_set.go:1198] Pod daemon-set-kmkn4 is not available
  I1012 13:08:07.718178 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:08:07.718324 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 13:08:07.727
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5764, will wait for the garbage collector to delete the pods @ 10/12/24 13:08:07.727
  I1012 13:08:07.789751 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.583615ms
  I1012 13:08:07.890562 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.808448ms
  I1012 13:08:09.294411 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:08:09.294445 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 13:08:09.298559 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23903"},"items":null}

  I1012 13:08:09.302592 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23903"},"items":null}

  I1012 13:08:09.316447 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5764" for this suite. @ 10/12/24 13:08:09.319
• [7.714 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 10/12/24 13:08:09.327
  I1012 13:08:09.327376 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename runtimeclass @ 10/12/24 13:08:09.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:08:09.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:08:09.349
  I1012 13:08:11.382336 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4267" for this suite. @ 10/12/24 13:08:11.386
• [2.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 10/12/24 13:08:11.393
  I1012 13:08:11.393259 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 13:08:11.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:08:11.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:08:11.413
  I1012 13:08:11.422415 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-7694"
  I1012 13:08:11.428619 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-7694"
  STEP: waiting for a new root ca configmap created @ 10/12/24 13:08:11.929
  I1012 13:08:11.934007 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-7694"
  I1012 13:08:11.939814 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-7694"
  STEP: waiting for the root ca configmap reconciled @ 10/12/24 13:08:12.44
  I1012 13:08:12.446224 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-7694"
  I1012 13:08:12.446360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7694" for this suite. @ 10/12/24 13:08:12.451
• [1.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 10/12/24 13:08:12.458
  I1012 13:08:12.459014 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename cronjob @ 10/12/24 13:08:12.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:08:12.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:08:12.482
  STEP: Creating a cronjob @ 10/12/24 13:08:12.485
  STEP: creating @ 10/12/24 13:08:12.485
  STEP: getting @ 10/12/24 13:08:12.492
  STEP: listing @ 10/12/24 13:08:12.495
  STEP: watching @ 10/12/24 13:08:12.499
  I1012 13:08:12.499873 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 10/12/24 13:08:12.501
  STEP: cluster-wide watching @ 10/12/24 13:08:12.505
  I1012 13:08:12.505400 19 cronjob.go:382] starting watch
  STEP: patching @ 10/12/24 13:08:12.506
  STEP: updating @ 10/12/24 13:08:12.511
  I1012 13:08:12.522883 19 cronjob.go:406] waiting for watch events with expected annotations
  I1012 13:08:12.522936 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 10/12/24 13:08:12.522
  STEP: updating /status @ 10/12/24 13:08:12.528
  STEP: get /status @ 10/12/24 13:08:12.537
  STEP: deleting @ 10/12/24 13:08:12.541
  STEP: deleting a collection @ 10/12/24 13:08:12.557
  I1012 13:08:12.569420 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7483" for this suite. @ 10/12/24 13:08:12.573
• [0.122 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 10/12/24 13:08:12.581
  I1012 13:08:12.581265 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 13:08:12.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:08:12.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:08:12.599
  STEP: Creating pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918 @ 10/12/24 13:08:12.602
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 13:08:14.621
  I1012 13:08:14.624608 19 container_probe.go:1749] Initial restart count of pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is 0
  I1012 13:08:14.629804 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:16.636228 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:18.642155 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:20.648590 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:22.654198 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:24.660381 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:26.666598 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:28.672619 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:30.678292 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:32.683821 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:34.688832 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:34.688871 19 container_probe.go:1763] Restart count of pod container-probe-5918/liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is now 1 (20.064236955s elapsed)
  I1012 13:08:36.695064 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:38.700524 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:40.706241 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:42.710824 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:44.716705 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:46.723242 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:48.729834 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:50.736844 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:52.742773 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:54.747908 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:54.747946 19 container_probe.go:1763] Restart count of pod container-probe-5918/liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is now 2 (40.123310799s elapsed)
  I1012 13:08:56.754416 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:08:58.759818 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:00.765761 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:02.771235 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:04.776795 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:06.783355 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:08.789511 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:10.794813 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:12.800488 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:14.806397 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:14.806436 19 container_probe.go:1763] Restart count of pod container-probe-5918/liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is now 3 (1m0.181801315s elapsed)
  I1012 13:09:16.811524 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:18.816492 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:20.823012 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:22.827900 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:24.833811 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:26.839298 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:28.845911 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:30.852570 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:32.859182 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:34.865655 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:34.865695 19 container_probe.go:1763] Restart count of pod container-probe-5918/liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is now 4 (1m20.241060846s elapsed)
  I1012 13:09:36.871031 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:38.877038 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:40.882991 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:42.891402 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:44.897206 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:46.901916 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:48.908150 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:50.913527 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:52.919165 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:54.925008 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:56.929614 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:09:58.935613 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:00.941438 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:02.947617 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:04.953237 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:06.959648 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:08.964821 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:10.970370 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:12.975579 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:14.982382 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:16.987253 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:18.992754 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:20.998483 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:23.004925 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:25.010721 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:27.016827 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:29.022760 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:31.028953 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:33.034359 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:35.041117 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:37.046071 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:39.052993 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:41.059227 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:43.065618 19 container_probe.go:1759] Get pod liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 in namespace container-probe-5918
  I1012 13:10:43.065658 19 container_probe.go:1763] Restart count of pod container-probe-5918/liveness-6e7cc209-88c4-42c4-95b6-b7524125b8c6 is now 5 (2m28.441023345s elapsed)
  STEP: deleting the pod @ 10/12/24 13:10:43.065
  I1012 13:10:43.081649 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5918" for this suite. @ 10/12/24 13:10:43.085
• [150.512 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 10/12/24 13:10:43.093
  I1012 13:10:43.093546 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 13:10:43.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:10:43.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:10:43.117
  I1012 13:10:43.120560 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  W1012 13:10:45.658464      19 warnings.go:70] unknown field "alpha"
  W1012 13:10:45.658490      19 warnings.go:70] unknown field "beta"
  W1012 13:10:45.658494      19 warnings.go:70] unknown field "delta"
  W1012 13:10:45.658497      19 warnings.go:70] unknown field "epsilon"
  W1012 13:10:45.658500      19 warnings.go:70] unknown field "gamma"
  I1012 13:10:46.209610 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7471" for this suite. @ 10/12/24 13:10:46.214
• [3.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 10/12/24 13:10:46.22
  I1012 13:10:46.220899 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:10:46.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:10:46.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:10:46.24
  I1012 13:10:46.244684 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-9234 version'
  I1012 13:10:46.286131 19 builder.go:146] stderr: ""
  I1012 13:10:46.286177 19 builder.go:147] stdout: "Client Version: v1.31.1\nKustomize Version: v5.4.2\nServer Version: v1.31.1\n"
  I1012 13:10:46.286490 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9234" for this suite. @ 10/12/24 13:10:46.29
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/12/24 13:10:46.302
  I1012 13:10:46.302469 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subpath @ 10/12/24 13:10:46.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:10:46.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:10:46.323
  STEP: Setting up data @ 10/12/24 13:10:46.327
  STEP: Creating pod pod-subpath-test-configmap-6dq7 @ 10/12/24 13:10:46.338
  STEP: Creating a pod to test atomic-volume-subpath @ 10/12/24 13:10:46.338
  STEP: Saw pod success @ 10/12/24 13:11:08.416
  I1012 13:11:08.420210 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-subpath-test-configmap-6dq7 container test-container-subpath-configmap-6dq7: <nil>
  STEP: delete the pod @ 10/12/24 13:11:08.438
  STEP: Deleting pod pod-subpath-test-configmap-6dq7 @ 10/12/24 13:11:08.458
  I1012 13:11:08.458123 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-6dq7" in namespace "subpath-2386"
  I1012 13:11:08.462169 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2386" for this suite. @ 10/12/24 13:11:08.466
• [22.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/12/24 13:11:08.473
  I1012 13:11:08.473644 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubelet-test @ 10/12/24 13:11:08.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:08.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:08.494
  I1012 13:11:12.517787 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-595" for this suite. @ 10/12/24 13:11:12.521
• [4.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 10/12/24 13:11:12.529
  I1012 13:11:12.529375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 13:11:12.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:12.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:12.552
  STEP: Creating a test headless service @ 10/12/24 13:11:12.555
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_udp@PTR;check="$$(dig +tcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_tcp@PTR;sleep 1; done
   @ 10/12/24 13:11:12.573
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7491.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7491.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_udp@PTR;check="$$(dig +tcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_tcp@PTR;sleep 1; done
   @ 10/12/24 13:11:12.573
  STEP: creating a pod to probe DNS @ 10/12/24 13:11:12.573
  STEP: submitting the pod to kubernetes @ 10/12/24 13:11:12.573
  STEP: retrieving the pod @ 10/12/24 13:11:14.596
  STEP: looking for the results for each expected name from probers @ 10/12/24 13:11:14.6
  I1012 13:11:14.604813 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.609151 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.613237 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.616832 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.636918 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.640368 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.644867 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.649045 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local from pod dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87: the server could not find the requested resource (get pods dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87)
  I1012 13:11:14.663546 19 dns_common.go:489] Lookups using dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87 failed for: [wheezy_udp@dns-test-service.dns-7491.svc.cluster.local wheezy_tcp@dns-test-service.dns-7491.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local jessie_udp@dns-test-service.dns-7491.svc.cluster.local jessie_tcp@dns-test-service.dns-7491.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc.cluster.local]

  I1012 13:11:14.670316 19 dns_common.go:495] Pod client logs for webserver: 
  I1012 13:11:14.676202 19 dns_common.go:495] Pod client logs for querier: 
  I1012 13:11:14.681804 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1012 13:11:19.674516 19 dns_common.go:527] DNS probes using dns-7491/dns-test-a10842fa-97d2-4676-be1f-bb87f3a2cd87 succeeded

  STEP: deleting the pod @ 10/12/24 13:11:19.674
  STEP: deleting the test service @ 10/12/24 13:11:19.698
  STEP: deleting the test headless service @ 10/12/24 13:11:19.72
  I1012 13:11:19.731040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7491" for this suite. @ 10/12/24 13:11:19.735
• [7.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 10/12/24 13:11:19.743
  I1012 13:11:19.743998 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 13:11:19.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:19.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:19.762
  STEP: apply creating a deployment @ 10/12/24 13:11:19.766
  I1012 13:11:19.781943 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5827" for this suite. @ 10/12/24 13:11:19.786
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 10/12/24 13:11:19.794
  I1012 13:11:19.794865 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:11:19.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:19.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:19.812
  STEP: creating service nodeport-test with type=NodePort in namespace services-6636 @ 10/12/24 13:11:19.816
  STEP: creating replication controller nodeport-test in namespace services-6636 @ 10/12/24 13:11:19.831
  I1012 13:11:19.837684      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6636, replica count: 2
  I1012 13:11:22.889166      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:11:22.889206 19 resource.go:361] Creating new exec pod
  I1012 13:11:25.912241 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6636 exec execpodkcwcl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1012 13:11:26.003443 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1012 13:11:26.003486 19 builder.go:147] stdout: "nodeport-test-dgm8n"
  I1012 13:11:26.003627 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6636 exec execpodkcwcl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.191 80'
  I1012 13:11:26.087761 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.191 80\nConnection to 10.152.183.191 80 port [tcp/http] succeeded!\n"
  I1012 13:11:26.087812 19 builder.go:147] stdout: "nodeport-test-vh729"
  I1012 13:11:26.087906 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6636 exec execpodkcwcl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.48 32062'
  I1012 13:11:26.178556 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.48 32062\nConnection to 172.31.23.48 32062 port [tcp/*] succeeded!\n"
  I1012 13:11:26.178600 19 builder.go:147] stdout: ""
  I1012 13:11:27.088130 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6636 exec execpodkcwcl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.48 32062'
  I1012 13:11:27.172801 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.48 32062\nConnection to 172.31.23.48 32062 port [tcp/*] succeeded!\n"
  I1012 13:11:27.172843 19 builder.go:147] stdout: "nodeport-test-dgm8n"
  I1012 13:11:27.172952 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-6636 exec execpodkcwcl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.46.196 32062'
  I1012 13:11:27.260328 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.46.196 32062\n+ echo hostName\nConnection to 172.31.46.196 32062 port [tcp/*] succeeded!\n"
  I1012 13:11:27.260383 19 builder.go:147] stdout: "nodeport-test-dgm8n"
  I1012 13:11:27.260537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6636" for this suite. @ 10/12/24 13:11:27.266
• [7.478 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 10/12/24 13:11:27.273
  I1012 13:11:27.273222 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:11:27.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:27.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:27.296
  STEP: Setting up server cert @ 10/12/24 13:11:27.323
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:11:27.575
  STEP: Deploying the webhook pod @ 10/12/24 13:11:27.583
  STEP: Wait for the deployment to be ready @ 10/12/24 13:11:27.597
  I1012 13:11:27.607134 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:11:29.621
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:11:29.632
  I1012 13:11:30.632565 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/12/24 13:11:30.641
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/12/24 13:11:30.643
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/12/24 13:11:30.643
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/12/24 13:11:30.643
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/12/24 13:11:30.644
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/12/24 13:11:30.644
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/12/24 13:11:30.646
  I1012 13:11:30.686784 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7321" for this suite. @ 10/12/24 13:11:30.689
  STEP: Destroying namespace "webhook-markers-5304" for this suite. @ 10/12/24 13:11:30.7
• [3.436 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 10/12/24 13:11:30.708
  I1012 13:11:30.708989 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 13:11:30.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:11:30.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:11:30.728
  STEP: Creating pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590 @ 10/12/24 13:11:30.732
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/12/24 13:11:32.751
  I1012 13:11:32.756053 19 container_probe.go:1749] Initial restart count of pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b is 0
  I1012 13:11:32.759211 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:34.765466 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:36.770620 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:38.776283 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:40.782864 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:42.788802 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:44.796514 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:46.802071 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:48.808773 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:50.814991 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:52.820003 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:54.825953 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:56.829684 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:11:58.836226 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:00.840738 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:02.846782 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:04.852895 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:06.859358 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:08.864709 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:10.871378 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:12.877651 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:14.883580 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:16.888615 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:18.894784 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:20.902060 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:22.907077 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:24.913339 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:26.919692 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:28.924756 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:30.930627 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:32.936159 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:34.942889 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:36.947678 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:38.952911 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:40.957671 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:42.964048 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:44.970269 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:46.976525 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:48.981798 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:50.987814 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:52.994136 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:54.999202 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:57.005158 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:12:59.011846 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:01.018393 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:03.024439 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:05.030616 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:07.035801 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:09.042459 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:11.048542 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:13.054463 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:15.060860 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:17.066088 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:19.072253 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:21.079041 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:23.085792 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:25.091509 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:27.096546 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:29.102156 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:31.107516 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:33.114255 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:35.121516 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:37.126835 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:39.133550 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:41.139288 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:43.145815 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:45.153946 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:47.159355 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:49.165537 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:51.171376 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:53.178713 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:55.183006 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:57.188024 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:13:59.194859 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:01.201927 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:03.207533 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:05.212977 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:07.217256 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:09.222892 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:11.228826 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:13.234879 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:15.239735 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:17.245790 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:19.252804 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:21.258412 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:23.263325 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:25.269028 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:27.274646 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:29.281157 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:31.286169 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:33.292626 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:35.299198 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:37.305759 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:39.311462 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:41.317460 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:43.324733 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:45.331197 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:47.336357 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:49.340901 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:51.347298 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:53.353649 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:55.359484 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:57.365717 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:14:59.372092 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:01.378587 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:03.385004 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:05.390634 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:07.395743 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:09.401648 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:11.406990 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:13.411911 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:15.418048 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:17.424861 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:19.430424 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:21.435960 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:23.441199 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:25.447637 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:27.452754 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:29.458036 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  I1012 13:15:31.463964 19 container_probe.go:1759] Get pod liveness-0b1cff65-d1d2-4703-b9f7-b4e6cc412a7b in namespace container-probe-590
  STEP: deleting the pod @ 10/12/24 13:15:33.464
  I1012 13:15:33.479718 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-590" for this suite. @ 10/12/24 13:15:33.484
• [242.783 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 10/12/24 13:15:33.492
  I1012 13:15:33.492561 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:15:33.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:15:33.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:15:33.513
  STEP: Creating a pod to test downward api env vars @ 10/12/24 13:15:33.518
  STEP: Saw pod success @ 10/12/24 13:15:37.544
  I1012 13:15:37.548741 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downward-api-fe41620b-037e-4ca4-afeb-2eca7981a7ba container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 13:15:37.558
  I1012 13:15:37.578335 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-265" for this suite. @ 10/12/24 13:15:37.582
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 10/12/24 13:15:37.59
  I1012 13:15:37.590326 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 13:15:37.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:15:37.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:15:37.61
  STEP: reading a file in the container @ 10/12/24 13:15:39.639
  I1012 13:15:39.639926 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6086 pod-service-account-a2f5c0c0-d940-476d-a5db-b4ac20661827 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/12/24 13:15:39.726
  I1012 13:15:39.726763 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6086 pod-service-account-a2f5c0c0-d940-476d-a5db-b4ac20661827 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/12/24 13:15:39.814
  I1012 13:15:39.815003 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6086 pod-service-account-a2f5c0c0-d940-476d-a5db-b4ac20661827 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1012 13:15:39.900129 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6086"
  I1012 13:15:39.902413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6086" for this suite. @ 10/12/24 13:15:39.906
• [2.325 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/12/24 13:15:39.915
  I1012 13:15:39.915786 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename proxy @ 10/12/24 13:15:39.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:15:39.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:15:39.937
  STEP: starting an echo server on multiple ports @ 10/12/24 13:15:39.951
  STEP: creating replication controller proxy-service-kjwcd in namespace proxy-789 @ 10/12/24 13:15:39.951
  I1012 13:15:39.962311      19 runners.go:193] Created replication controller with name: proxy-service-kjwcd, namespace: proxy-789, replica count: 1
  I1012 13:15:41.013243      19 runners.go:193] proxy-service-kjwcd Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1012 13:15:42.014194      19 runners.go:193] proxy-service-kjwcd Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:15:42.019583 19 proxy.go:230] setup took 2.078634129s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/12/24 13:15:42.019
  I1012 13:15:42.024857 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 5.009732ms)
  I1012 13:15:42.025293 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.207541ms)
  I1012 13:15:42.025379 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.44149ms)
  I1012 13:15:42.026306 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.854406ms)
  I1012 13:15:42.026462 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 6.571193ms)
  I1012 13:15:42.028479 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 8.260531ms)
  I1012 13:15:42.028572 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 8.540519ms)
  I1012 13:15:42.028636 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 8.270059ms)
  I1012 13:15:42.028885 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 8.464441ms)
  I1012 13:15:42.029388 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 8.99292ms)
  I1012 13:15:42.029426 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 9.741759ms)
  I1012 13:15:42.029522 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 9.185883ms)
  I1012 13:15:42.029572 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 9.425053ms)
  I1012 13:15:42.029588 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 9.287828ms)
  I1012 13:15:42.029652 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 9.212626ms)
  I1012 13:15:42.029999 19 proxy.go:558] (0) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 10.015196ms)
  I1012 13:15:42.034186 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 3.708909ms)
  I1012 13:15:42.034222 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.855002ms)
  I1012 13:15:42.034235 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 4.103468ms)
  I1012 13:15:42.035125 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 4.345508ms)
  I1012 13:15:42.035178 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.147907ms)
  I1012 13:15:42.035202 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.552945ms)
  I1012 13:15:42.036116 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 5.311854ms)
  I1012 13:15:42.036160 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.4219ms)
  I1012 13:15:42.036372 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 5.852007ms)
  I1012 13:15:42.037267 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 6.592327ms)
  I1012 13:15:42.037575 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 6.815477ms)
  I1012 13:15:42.037603 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 6.783805ms)
  I1012 13:15:42.037941 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.223172ms)
  I1012 13:15:42.038158 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.735557ms)
  I1012 13:15:42.038212 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.082516ms)
  I1012 13:15:42.038708 19 proxy.go:558] (1) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 8.011324ms)
  I1012 13:15:42.042165 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 3.3049ms)
  I1012 13:15:42.042884 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.143069ms)
  I1012 13:15:42.042860 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.730166ms)
  I1012 13:15:42.043533 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 4.153242ms)
  I1012 13:15:42.043828 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.873807ms)
  I1012 13:15:42.044002 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 5.006067ms)
  I1012 13:15:42.044091 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.016347ms)
  I1012 13:15:42.044429 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.515969ms)
  I1012 13:15:42.044540 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.124804ms)
  I1012 13:15:42.045189 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 5.947691ms)
  I1012 13:15:42.045227 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 5.951881ms)
  I1012 13:15:42.045301 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 6.107716ms)
  I1012 13:15:42.045312 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 6.0026ms)
  I1012 13:15:42.045575 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 6.234038ms)
  I1012 13:15:42.046368 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.20849ms)
  I1012 13:15:42.046399 19 proxy.go:558] (2) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.363233ms)
  I1012 13:15:42.050009 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 3.42105ms)
  I1012 13:15:42.050314 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 3.274321ms)
  I1012 13:15:42.050758 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.334376ms)
  I1012 13:15:42.050833 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.202427ms)
  I1012 13:15:42.051168 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.178954ms)
  I1012 13:15:42.051588 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.916153ms)
  I1012 13:15:42.051719 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 4.604278ms)
  I1012 13:15:42.051931 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.98642ms)
  I1012 13:15:42.052160 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.373791ms)
  I1012 13:15:42.052226 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.344182ms)
  I1012 13:15:42.052990 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 5.970573ms)
  I1012 13:15:42.052969 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 5.910199ms)
  I1012 13:15:42.053315 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 6.442559ms)
  I1012 13:15:42.053697 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 6.785482ms)
  I1012 13:15:42.054031 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.209636ms)
  I1012 13:15:42.054057 19 proxy.go:558] (3) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.347273ms)
  I1012 13:15:42.058289 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.141036ms)
  I1012 13:15:42.058374 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 3.993831ms)
  I1012 13:15:42.059647 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 5.295213ms)
  I1012 13:15:42.059708 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.03416ms)
  I1012 13:15:42.059727 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.159636ms)
  I1012 13:15:42.060153 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.730312ms)
  I1012 13:15:42.061084 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.5871ms)
  I1012 13:15:42.061058 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 6.451341ms)
  I1012 13:15:42.061404 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.068071ms)
  I1012 13:15:42.061432 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 6.903442ms)
  I1012 13:15:42.061453 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.701944ms)
  I1012 13:15:42.061803 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 7.721744ms)
  I1012 13:15:42.061823 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.10691ms)
  I1012 13:15:42.061870 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 7.411188ms)
  I1012 13:15:42.062075 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.433463ms)
  I1012 13:15:42.062682 19 proxy.go:558] (4) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.894884ms)
  I1012 13:15:42.065877 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 2.97142ms)
  I1012 13:15:42.067557 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.22521ms)
  I1012 13:15:42.067587 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 4.327475ms)
  I1012 13:15:42.068204 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 5.478668ms)
  I1012 13:15:42.068751 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.787857ms)
  I1012 13:15:42.068781 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.953409ms)
  I1012 13:15:42.069662 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.365762ms)
  I1012 13:15:42.070001 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 6.997902ms)
  I1012 13:15:42.070052 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 6.881296ms)
  I1012 13:15:42.070082 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 7.162206ms)
  I1012 13:15:42.070123 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 7.054666ms)
  I1012 13:15:42.070659 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.432756ms)
  I1012 13:15:42.070707 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.58847ms)
  I1012 13:15:42.070722 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.683159ms)
  I1012 13:15:42.071061 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.862212ms)
  I1012 13:15:42.071151 19 proxy.go:558] (5) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.792446ms)
  I1012 13:15:42.074609 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 3.187019ms)
  I1012 13:15:42.075252 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 3.576617ms)
  I1012 13:15:42.075830 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.192459ms)
  I1012 13:15:42.076010 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.372061ms)
  I1012 13:15:42.076956 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.085184ms)
  I1012 13:15:42.077021 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 5.042686ms)
  I1012 13:15:42.077360 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 5.340402ms)
  I1012 13:15:42.077611 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.778339ms)
  I1012 13:15:42.077769 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.67591ms)
  I1012 13:15:42.078354 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 6.808496ms)
  I1012 13:15:42.078453 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.158251ms)
  I1012 13:15:42.078469 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.758006ms)
  I1012 13:15:42.078932 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.169734ms)
  I1012 13:15:42.078954 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.008033ms)
  I1012 13:15:42.079150 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.355041ms)
  I1012 13:15:42.079195 19 proxy.go:558] (6) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.288734ms)
  I1012 13:15:42.083807 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.861368ms)
  I1012 13:15:42.083694 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.146585ms)
  I1012 13:15:42.084452 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.303933ms)
  I1012 13:15:42.084859 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.85965ms)
  I1012 13:15:42.084892 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.771419ms)
  I1012 13:15:42.084918 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.013428ms)
  I1012 13:15:42.084976 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.791054ms)
  I1012 13:15:42.085016 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 5.538168ms)
  I1012 13:15:42.086014 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 6.286343ms)
  I1012 13:15:42.086570 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 6.497355ms)
  I1012 13:15:42.086649 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 6.56021ms)
  I1012 13:15:42.086676 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.512444ms)
  I1012 13:15:42.086691 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 6.835673ms)
  I1012 13:15:42.086882 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.196199ms)
  I1012 13:15:42.087584 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.874666ms)
  I1012 13:15:42.088080 19 proxy.go:558] (7) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 8.031326ms)
  I1012 13:15:42.091660 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 3.39958ms)
  I1012 13:15:42.092028 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.740158ms)
  I1012 13:15:42.092133 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 4.003801ms)
  I1012 13:15:42.093082 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.328165ms)
  I1012 13:15:42.093364 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.714707ms)
  I1012 13:15:42.094056 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 5.640277ms)
  I1012 13:15:42.094086 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 5.30021ms)
  I1012 13:15:42.094308 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 5.853245ms)
  I1012 13:15:42.094347 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.628608ms)
  I1012 13:15:42.094428 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.828841ms)
  I1012 13:15:42.094445 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.880534ms)
  I1012 13:15:42.094812 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 6.481576ms)
  I1012 13:15:42.095240 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 6.864163ms)
  I1012 13:15:42.095472 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.980605ms)
  I1012 13:15:42.095927 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.400813ms)
  I1012 13:15:42.096150 19 proxy.go:558] (8) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.462079ms)
  I1012 13:15:42.099846 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.642382ms)
  I1012 13:15:42.100346 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.057498ms)
  I1012 13:15:42.101207 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.418391ms)
  I1012 13:15:42.101643 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.929055ms)
  I1012 13:15:42.101927 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.453237ms)
  I1012 13:15:42.102352 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 5.704082ms)
  I1012 13:15:42.102388 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 5.772278ms)
  I1012 13:15:42.102402 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.724603ms)
  I1012 13:15:42.102436 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.857128ms)
  I1012 13:15:42.102651 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 6.100311ms)
  I1012 13:15:42.102767 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.883649ms)
  I1012 13:15:42.103201 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.844685ms)
  I1012 13:15:42.103593 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.220375ms)
  I1012 13:15:42.103639 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.232409ms)
  I1012 13:15:42.104037 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.279519ms)
  I1012 13:15:42.104179 19 proxy.go:558] (9) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.664522ms)
  I1012 13:15:42.108759 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.556026ms)
  I1012 13:15:42.109145 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 4.440167ms)
  I1012 13:15:42.109255 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.941279ms)
  I1012 13:15:42.109419 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.147608ms)
  I1012 13:15:42.109805 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 5.426279ms)
  I1012 13:15:42.110905 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.94632ms)
  I1012 13:15:42.111427 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.417649ms)
  I1012 13:15:42.111516 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.434831ms)
  I1012 13:15:42.111558 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 6.320996ms)
  I1012 13:15:42.111587 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 6.744162ms)
  I1012 13:15:42.111602 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 6.213103ms)
  I1012 13:15:42.111662 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.349463ms)
  I1012 13:15:42.111682 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 6.331939ms)
  I1012 13:15:42.111693 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 6.716181ms)
  I1012 13:15:42.111759 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 6.607685ms)
  I1012 13:15:42.112416 19 proxy.go:558] (10) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.606602ms)
  I1012 13:15:42.117655 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.105083ms)
  I1012 13:15:42.117691 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.894107ms)
  I1012 13:15:42.117703 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 4.985587ms)
  I1012 13:15:42.117713 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.719224ms)
  I1012 13:15:42.117788 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.626512ms)
  I1012 13:15:42.117807 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.739118ms)
  I1012 13:15:42.118884 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.632828ms)
  I1012 13:15:42.119292 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 6.168049ms)
  I1012 13:15:42.119375 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 6.614816ms)
  I1012 13:15:42.119395 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.734781ms)
  I1012 13:15:42.119410 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 6.481938ms)
  I1012 13:15:42.119495 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.460052ms)
  I1012 13:15:42.119511 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.546713ms)
  I1012 13:15:42.120391 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.501755ms)
  I1012 13:15:42.120772 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.926615ms)
  I1012 13:15:42.121157 19 proxy.go:558] (11) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.952142ms)
  I1012 13:15:42.125043 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 3.612313ms)
  I1012 13:15:42.126144 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.525741ms)
  I1012 13:15:42.126764 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.94543ms)
  I1012 13:15:42.127333 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.464157ms)
  I1012 13:15:42.127727 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.020963ms)
  I1012 13:15:42.127749 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.066277ms)
  I1012 13:15:42.127810 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 6.08258ms)
  I1012 13:15:42.127851 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 6.184864ms)
  I1012 13:15:42.128081 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 6.48983ms)
  I1012 13:15:42.128207 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 6.373266ms)
  I1012 13:15:42.129001 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.3539ms)
  I1012 13:15:42.129023 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.651474ms)
  I1012 13:15:42.129053 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.202501ms)
  I1012 13:15:42.129362 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.56374ms)
  I1012 13:15:42.129748 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.95204ms)
  I1012 13:15:42.129864 19 proxy.go:558] (12) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 8.109048ms)
  I1012 13:15:42.134364 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.202615ms)
  I1012 13:15:42.134727 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.061459ms)
  I1012 13:15:42.136038 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.316051ms)
  I1012 13:15:42.136076 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.887443ms)
  I1012 13:15:42.136114 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 5.608813ms)
  I1012 13:15:42.136130 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.536891ms)
  I1012 13:15:42.136741 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 5.725166ms)
  I1012 13:15:42.137529 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.714478ms)
  I1012 13:15:42.137926 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.170453ms)
  I1012 13:15:42.137869 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 7.012454ms)
  I1012 13:15:42.138020 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 7.337831ms)
  I1012 13:15:42.138092 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.205069ms)
  I1012 13:15:42.138525 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.959851ms)
  I1012 13:15:42.138720 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 8.321927ms)
  I1012 13:15:42.139127 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 8.151224ms)
  I1012 13:15:42.139233 19 proxy.go:558] (13) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 8.303998ms)
  I1012 13:15:42.143424 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 3.716087ms)
  I1012 13:15:42.143758 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.417776ms)
  I1012 13:15:42.144335 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.440116ms)
  I1012 13:15:42.144370 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 4.547509ms)
  I1012 13:15:42.144842 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.057062ms)
  I1012 13:15:42.145073 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.20879ms)
  I1012 13:15:42.144924 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.179045ms)
  I1012 13:15:42.146260 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 6.603855ms)
  I1012 13:15:42.146230 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 6.289436ms)
  I1012 13:15:42.146427 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.364752ms)
  I1012 13:15:42.146790 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.200398ms)
  I1012 13:15:42.147145 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.00505ms)
  I1012 13:15:42.147196 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.22823ms)
  I1012 13:15:42.147422 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.19354ms)
  I1012 13:15:42.147741 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.56283ms)
  I1012 13:15:42.147769 19 proxy.go:558] (14) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.488423ms)
  I1012 13:15:42.151470 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 3.573413ms)
  I1012 13:15:42.151564 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.624696ms)
  I1012 13:15:42.152141 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.013875ms)
  I1012 13:15:42.152206 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 4.293176ms)
  I1012 13:15:42.152825 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.317524ms)
  I1012 13:15:42.153481 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.233535ms)
  I1012 13:15:42.153994 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 5.453067ms)
  I1012 13:15:42.154043 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.618038ms)
  I1012 13:15:42.154058 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.691825ms)
  I1012 13:15:42.154073 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 6.088248ms)
  I1012 13:15:42.154135 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 6.110457ms)
  I1012 13:15:42.153812 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.339995ms)
  I1012 13:15:42.154687 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 6.615324ms)
  I1012 13:15:42.155296 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.129642ms)
  I1012 13:15:42.155740 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.53224ms)
  I1012 13:15:42.155833 19 proxy.go:558] (15) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.509939ms)
  I1012 13:15:42.159640 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 3.719181ms)
  I1012 13:15:42.160019 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.867848ms)
  I1012 13:15:42.160354 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.261171ms)
  I1012 13:15:42.160733 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 4.429055ms)
  I1012 13:15:42.160896 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 4.432407ms)
  I1012 13:15:42.161082 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.497872ms)
  I1012 13:15:42.162570 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 6.023255ms)
  I1012 13:15:42.162622 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.435445ms)
  I1012 13:15:42.162641 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 6.019448ms)
  I1012 13:15:42.163300 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 6.801576ms)
  I1012 13:15:42.163332 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 6.990379ms)
  I1012 13:15:42.163221 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.189235ms)
  I1012 13:15:42.163614 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.385967ms)
  I1012 13:15:42.163993 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.572089ms)
  I1012 13:15:42.164018 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.641664ms)
  I1012 13:15:42.164069 19 proxy.go:558] (16) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.803286ms)
  I1012 13:15:42.167817 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 3.495309ms)
  I1012 13:15:42.168153 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 4.040585ms)
  I1012 13:15:42.168612 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.358336ms)
  I1012 13:15:42.169331 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.63656ms)
  I1012 13:15:42.169639 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 5.199034ms)
  I1012 13:15:42.170025 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.477165ms)
  I1012 13:15:42.170188 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.564638ms)
  I1012 13:15:42.170866 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 6.138633ms)
  I1012 13:15:42.171300 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.967101ms)
  I1012 13:15:42.171869 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 7.286156ms)
  I1012 13:15:42.171918 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 7.261531ms)
  I1012 13:15:42.171935 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.735274ms)
  I1012 13:15:42.172005 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.532677ms)
  I1012 13:15:42.172021 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.508813ms)
  I1012 13:15:42.172045 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.640979ms)
  I1012 13:15:42.172056 19 proxy.go:558] (17) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.686134ms)
  I1012 13:15:42.175553 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 3.474669ms)
  I1012 13:15:42.176270 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.024757ms)
  I1012 13:15:42.176379 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 4.096439ms)
  I1012 13:15:42.176849 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 4.24891ms)
  I1012 13:15:42.177086 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 4.460384ms)
  I1012 13:15:42.177673 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 5.013197ms)
  I1012 13:15:42.177696 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 5.264765ms)
  I1012 13:15:42.177922 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 5.45387ms)
  I1012 13:15:42.178007 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 5.316873ms)
  I1012 13:15:42.178172 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 5.606988ms)
  I1012 13:15:42.179041 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 6.716175ms)
  I1012 13:15:42.179686 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 7.157039ms)
  I1012 13:15:42.179642 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 7.449304ms)
  I1012 13:15:42.180131 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.769554ms)
  I1012 13:15:42.180170 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 7.772404ms)
  I1012 13:15:42.180298 19 proxy.go:558] (18) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 7.797842ms)
  I1012 13:15:42.184619 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">t... (200; 4.137355ms)
  I1012 13:15:42.185025 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:460/proxy/: tls baz (200; 4.691734ms)
  I1012 13:15:42.185894 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx/proxy/rewriteme">test</a> (200; 5.42903ms)
  I1012 13:15:42.186189 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 5.494419ms)
  I1012 13:15:42.186726 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:1080/proxy/rewriteme">test</... (200; 6.068166ms)
  I1012 13:15:42.186777 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:462/proxy/: tls qux (200; 6.136313ms)
  I1012 13:15:42.187624 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:160/proxy/: foo (200; 7.06028ms)
  I1012 13:15:42.187666 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname1/proxy/: tls baz (200; 7.054348ms)
  I1012 13:15:42.188165 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/: <a href="/api/v1/namespaces/proxy-789/pods/https:proxy-service-kjwcd-r9ktx:443/proxy/tlsrewriteme... (200; 7.641247ms)
  I1012 13:15:42.188218 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname1/proxy/: foo (200; 7.789831ms)
  I1012 13:15:42.188234 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/http:proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.729062ms)
  I1012 13:15:42.188465 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/pods/proxy-service-kjwcd-r9ktx:162/proxy/: bar (200; 7.887497ms)
  I1012 13:15:42.189388 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname2/proxy/: bar (200; 8.850475ms)
  I1012 13:15:42.189419 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/proxy-service-kjwcd:portname2/proxy/: bar (200; 8.747107ms)
  I1012 13:15:42.189280 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/http:proxy-service-kjwcd:portname1/proxy/: foo (200; 8.682753ms)
  I1012 13:15:42.190061 19 proxy.go:558] (19) /api/v1/namespaces/proxy-789/services/https:proxy-service-kjwcd:tlsportname2/proxy/: tls qux (200; 9.43236ms)
  STEP: deleting ReplicationController proxy-service-kjwcd in namespace proxy-789, will wait for the garbage collector to delete the pods @ 10/12/24 13:15:42.19
  I1012 13:15:42.252045 19 resources.go:139] Deleting ReplicationController proxy-service-kjwcd took: 8.035821ms
  I1012 13:15:42.353162 19 resources.go:163] Terminating ReplicationController proxy-service-kjwcd pods took: 101.11343ms
  I1012 13:15:44.653668 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-789" for this suite. @ 10/12/24 13:15:44.658
• [4.751 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/12/24 13:15:44.667
  I1012 13:15:44.667374 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:15:44.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:15:44.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:15:44.686
  STEP: Saw pod success @ 10/12/24 13:15:48.74
  I1012 13:15:48.744673 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod client-envvars-3122eb56-3d65-46f5-aab3-a902f6fa518e container env3cont: <nil>
  STEP: delete the pod @ 10/12/24 13:15:48.752
  I1012 13:15:48.771204 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5249" for this suite. @ 10/12/24 13:15:48.775
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/12/24 13:15:48.783
  I1012 13:15:48.783582 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename init-container @ 10/12/24 13:15:48.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:15:48.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:15:48.803
  STEP: creating the pod @ 10/12/24 13:15:48.806
  I1012 13:15:48.806452 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1012 13:16:26.663424 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e012b343-8b0c-49d4-8918-99968df03fe3", GenerateName:"", Namespace:"init-container-2838", SelfLink:"", UID:"530b07d6-2b66-4cc6-9838-d2f5c2da5317", ResourceVersion:"25660", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"806442236"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00538a0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 16, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00538a0d8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-lgd75", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0040c89c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lgd75", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lgd75", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lgd75", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0026a1098), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-91-95", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000557900), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0026a1120)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0026a1140)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0026a1148), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0026a114c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004ba8f30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 12, 13, 15, 49, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.91.95", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.91.95"}}, PodIP:"192.168.61.86", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.61.86"}}, StartTime:time.Date(2024, time.October, 12, 13, 15, 48, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00016c460)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00016cbd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://14de82b024bf819964021932c215e17b2b9bf5b0a3bdd864b686c73c56bfafc9", Started:(*bool)(0xc0026a11fa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lgd75", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004ba8f50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040c8a20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0026a120d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lgd75", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004ba8f60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040c8a00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0026a11cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lgd75", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004ba8f40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1012 13:16:26.663571 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2838" for this suite. @ 10/12/24 13:16:26.668
• [37.894 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 10/12/24 13:16:26.677
  I1012 13:16:26.677878 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:16:26.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:16:26.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:16:26.7
  STEP: Creating configMap with name configmap-test-volume-459ff681-7df1-4b37-96f5-e33aa9141313 @ 10/12/24 13:16:26.704
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:16:26.709
  STEP: Saw pod success @ 10/12/24 13:16:30.734
  I1012 13:16:30.738245 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-configmaps-f6deaee4-741e-4744-8f31-b09fe08a680c container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:16:30.755
  I1012 13:16:30.774900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6940" for this suite. @ 10/12/24 13:16:30.779
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/12/24 13:16:30.787
  I1012 13:16:30.787086 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubelet-test @ 10/12/24 13:16:30.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:16:30.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:16:30.808
  I1012 13:16:30.829732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8339" for this suite. @ 10/12/24 13:16:30.833
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/12/24 13:16:30.84
  I1012 13:16:30.840135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename init-container @ 10/12/24 13:16:30.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:16:30.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:16:30.857
  STEP: creating the pod @ 10/12/24 13:16:30.86
  I1012 13:16:30.861014 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1012 13:16:33.681555 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7633" for this suite. @ 10/12/24 13:16:33.686
• [2.856 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 10/12/24 13:16:33.696
  I1012 13:16:33.696526 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:16:33.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:16:33.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:16:33.716
  STEP: Creating a ResourceQuota with best effort scope @ 10/12/24 13:16:33.72
  STEP: Ensuring ResourceQuota status is calculated @ 10/12/24 13:16:33.725
  STEP: Creating a ResourceQuota with not best effort scope @ 10/12/24 13:16:35.73
  STEP: Ensuring ResourceQuota status is calculated @ 10/12/24 13:16:35.738
  STEP: Creating a best-effort pod @ 10/12/24 13:16:37.744
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/12/24 13:16:37.759
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/12/24 13:16:39.765
  STEP: Deleting the pod @ 10/12/24 13:16:41.77
  STEP: Ensuring resource quota status released the pod usage @ 10/12/24 13:16:41.789
  STEP: Creating a not best-effort pod @ 10/12/24 13:16:43.794
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/12/24 13:16:43.806
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/12/24 13:16:45.812
  STEP: Deleting the pod @ 10/12/24 13:16:47.816
  STEP: Ensuring resource quota status released the pod usage @ 10/12/24 13:16:47.829
  I1012 13:16:49.835141 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5384" for this suite. @ 10/12/24 13:16:49.84
• [16.150 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 10/12/24 13:16:49.846
  I1012 13:16:49.846391 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 13:16:49.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:16:49.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:16:49.869
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/12/24 13:16:49.872
  I1012 13:16:49.873161 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/12/24 13:16:54.96
  I1012 13:16:54.960819 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:16:56.176799 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:17:01.171294 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9755" for this suite. @ 10/12/24 13:17:01.179
• [11.342 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 10/12/24 13:17:01.188
  I1012 13:17:01.188910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 13:17:01.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:17:01.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:17:01.204
  I1012 13:17:01.221384 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 10/12/24 13:17:05.238
  I1012 13:17:35.241327 19 service_accounts.go:624] polling logs
  I1012 13:17:35.264400 19 service_accounts.go:634] Pod logs: 
  I1012 13:17:01.762380       1 log.go:245] OK: Got token
  I1012 13:17:01.762429       1 log.go:245] validating with in-cluster discovery
  I1012 13:17:01.762646       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1012 13:17:01.762849       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9411:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013530), NotBefore:(*jwt.NumericDate)(0xc000013620), IssuedAt:(*jwt.NumericDate)(0xc000013540), ID:"1e231447-41ba-4f8b-8906-b19ba0d49991"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9411", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"71c337ef-de73-4f67-b598-eb85455f692b"}}}
  I1012 13:17:01.769356       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1012 13:17:01.773112       1 log.go:245] OK: Validated signature on JWT
  I1012 13:17:01.773193       1 log.go:245] OK: Got valid claims from token!
  I1012 13:17:01.773242       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9411:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000beb28), NotBefore:(*jwt.NumericDate)(0xc0000beb50), IssuedAt:(*jwt.NumericDate)(0xc0000beb30), ID:"1e231447-41ba-4f8b-8906-b19ba0d49991"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9411", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"71c337ef-de73-4f67-b598-eb85455f692b"}}}

  I1012 13:17:35.264445 19 service_accounts.go:638] completed pod
  I1012 13:17:35.270927 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9411" for this suite. @ 10/12/24 13:17:35.275
• [34.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 10/12/24 13:17:35.283
  I1012 13:17:35.283076 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:17:35.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:17:35.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:17:35.3
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/12/24 13:17:35.304
  STEP: Saw pod success @ 10/12/24 13:17:39.328
  I1012 13:17:39.332648 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-e9d58afc-3ca3-4147-b792-f3797bc6ea85 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:17:39.339
  I1012 13:17:39.355016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5002" for this suite. @ 10/12/24 13:17:39.359
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 10/12/24 13:17:39.371
  I1012 13:17:39.371921 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename svcaccounts @ 10/12/24 13:17:39.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:17:39.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:17:39.391
  STEP: Creating a pod to test service account token:  @ 10/12/24 13:17:39.395
  STEP: Saw pod success @ 10/12/24 13:17:43.418
  I1012 13:17:43.422439 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod test-pod-847b8127-d836-41f1-9119-5f8a39690eff container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:17:43.429
  I1012 13:17:43.444082 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4493" for this suite. @ 10/12/24 13:17:43.447
• [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/12/24 13:17:43.455
  I1012 13:17:43.455830 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 13:17:43.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:17:43.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:17:43.473
  STEP: Create a ReplicaSet @ 10/12/24 13:17:43.476
  STEP: Verify that the required pods have come up @ 10/12/24 13:17:43.483
  I1012 13:17:43.487212 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1012 13:17:48.492666 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/12/24 13:17:48.492
  I1012 13:17:48.496144 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/12/24 13:17:48.496
  STEP: DeleteCollection of the ReplicaSets @ 10/12/24 13:17:48.5
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/12/24 13:17:48.507
  I1012 13:17:48.511317 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3696" for this suite. @ 10/12/24 13:17:48.515
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 10/12/24 13:17:48.528
  I1012 13:17:48.528428 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 13:17:48.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:17:48.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:17:48.549
  STEP: create the rc @ 10/12/24 13:17:48.557
  W1012 13:17:48.562505      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/12/24 13:17:54.59
  STEP: wait for the rc to be deleted @ 10/12/24 13:17:54.608
  I1012 13:17:55.648757 19 garbage_collector.go:670] 80 pods remaining
  I1012 13:17:55.648813 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1012 13:17:55.648821 19 garbage_collector.go:678] 
  I1012 13:17:56.631786 19 garbage_collector.go:670] 70 pods remaining
  I1012 13:17:56.631834 19 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I1012 13:17:56.631842 19 garbage_collector.go:678] 
  I1012 13:17:57.624983 19 garbage_collector.go:670] 60 pods remaining
  I1012 13:17:57.625092 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1012 13:17:57.625128 19 garbage_collector.go:678] 
  I1012 13:17:58.622459 19 garbage_collector.go:670] 40 pods remaining
  I1012 13:17:58.622598 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1012 13:17:58.622606 19 garbage_collector.go:678] 
  I1012 13:17:59.624859 19 garbage_collector.go:670] 30 pods remaining
  I1012 13:17:59.624898 19 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I1012 13:17:59.624905 19 garbage_collector.go:678] 
  I1012 13:18:00.616736 19 garbage_collector.go:670] 20 pods remaining
  I1012 13:18:00.616778 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1012 13:18:00.616786 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 10/12/24 13:18:01.615
  W1012 13:18:01.623222      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 13:18:01.623402 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 13:18:01.624140 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7563" for this suite. @ 10/12/24 13:18:01.632
• [13.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/12/24 13:18:01.643
  I1012 13:18:01.643582 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-runtime @ 10/12/24 13:18:01.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:18:01.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:18:01.676
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/12/24 13:18:01.691
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/12/24 13:18:18.784
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/12/24 13:18:18.789
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/12/24 13:18:18.796
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/12/24 13:18:18.796
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/12/24 13:18:18.82
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/12/24 13:18:21.84
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/12/24 13:18:22.85
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/12/24 13:18:22.858
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/12/24 13:18:22.858
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/12/24 13:18:22.879
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/12/24 13:18:23.889
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/12/24 13:18:25.903
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/12/24 13:18:25.911
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/12/24 13:18:25.911
  I1012 13:18:25.939447 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4035" for this suite. @ 10/12/24 13:18:25.944
• [24.308 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 10/12/24 13:18:25.951
  I1012 13:18:25.951733 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:18:25.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:18:25.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:18:25.966
  STEP: Setting up server cert @ 10/12/24 13:18:25.989
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:18:26.375
  STEP: Deploying the webhook pod @ 10/12/24 13:18:26.386
  STEP: Wait for the deployment to be ready @ 10/12/24 13:18:26.403
  I1012 13:18:26.410451 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/12/24 13:18:28.424
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:18:28.437
  I1012 13:18:29.437579 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/12/24 13:18:29.447
  I1012 13:18:29.486325 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2354" for this suite. @ 10/12/24 13:18:29.492
  STEP: Destroying namespace "webhook-markers-5318" for this suite. @ 10/12/24 13:18:29.499
• [3.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 10/12/24 13:18:29.506
  I1012 13:18:29.506761 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 13:18:29.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:18:29.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:18:29.522
  STEP: create the deployment @ 10/12/24 13:18:29.525
  W1012 13:18:29.532279      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/12/24 13:18:29.532
  STEP: delete the deployment @ 10/12/24 13:18:30.039
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/12/24 13:18:30.049
  STEP: Gathering metrics @ 10/12/24 13:18:30.567
  W1012 13:18:30.574198      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 13:18:30.574234 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 13:18:30.574436 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-616" for this suite. @ 10/12/24 13:18:30.579
• [1.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/12/24 13:18:30.588
  I1012 13:18:30.588403 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename cronjob @ 10/12/24 13:18:30.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:18:30.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:18:30.603
  STEP: Creating a ReplaceConcurrent cronjob @ 10/12/24 13:18:30.606
  STEP: Ensuring a job is scheduled @ 10/12/24 13:18:30.611
  STEP: Ensuring exactly one is scheduled @ 10/12/24 13:19:00.617
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/12/24 13:19:00.621
  STEP: Ensuring the job is replaced with a new one @ 10/12/24 13:19:00.625
  STEP: Removing cronjob @ 10/12/24 13:20:00.631
  I1012 13:20:00.638848 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8400" for this suite. @ 10/12/24 13:20:00.644
• [90.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 10/12/24 13:20:00.65
  I1012 13:20:00.650512 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:20:00.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:00.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:00.671
  STEP: Setting up server cert @ 10/12/24 13:20:00.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:20:00.848
  STEP: Deploying the webhook pod @ 10/12/24 13:20:00.857
  STEP: Wait for the deployment to be ready @ 10/12/24 13:20:00.874
  I1012 13:20:00.888183 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:20:02.904
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:20:02.917
  I1012 13:20:03.917163 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/12/24 13:20:03.995
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/12/24 13:20:04.027
  STEP: Deleting the collection of validation webhooks @ 10/12/24 13:20:04.057
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/12/24 13:20:04.109
  I1012 13:20:04.156269 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3502" for this suite. @ 10/12/24 13:20:04.161
  STEP: Destroying namespace "webhook-markers-2874" for this suite. @ 10/12/24 13:20:04.17
• [3.526 seconds]
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/12/24 13:20:04.176
  I1012 13:20:04.176259 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:20:04.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:04.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:04.189
  STEP: Creating secret with name secret-test-9ce7b239-ec5b-44fc-a7a1-5f0e0a7b89c3 @ 10/12/24 13:20:04.192
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:20:04.198
  STEP: Saw pod success @ 10/12/24 13:20:08.223
  I1012 13:20:08.227767 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-secrets-d2b0d044-c090-4c72-8623-659f99ccfc23 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:20:08.24
  I1012 13:20:08.255636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3519" for this suite. @ 10/12/24 13:20:08.259
• [4.090 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 10/12/24 13:20:08.266
  I1012 13:20:08.266497 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption @ 10/12/24 13:20:08.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:08.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:08.283
  STEP: Creating a kubernetes client @ 10/12/24 13:20:08.286
  I1012 13:20:08.286959 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename disruption-2 @ 10/12/24 13:20:08.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:08.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:08.303
  STEP: Waiting for the pdb to be processed @ 10/12/24 13:20:08.31
  STEP: Waiting for the pdb to be processed @ 10/12/24 13:20:10.322
  STEP: Waiting for the pdb to be processed @ 10/12/24 13:20:12.334
  STEP: listing a collection of PDBs across all namespaces @ 10/12/24 13:20:14.338
  STEP: listing a collection of PDBs in namespace disruption-6424 @ 10/12/24 13:20:14.342
  STEP: deleting a collection of PDBs @ 10/12/24 13:20:14.346
  STEP: Waiting for the PDB collection to be deleted @ 10/12/24 13:20:14.359
  I1012 13:20:14.363449 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1896" for this suite. @ 10/12/24 13:20:14.366
  I1012 13:20:14.375037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6424" for this suite. @ 10/12/24 13:20:14.379
• [6.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 10/12/24 13:20:14.385
  I1012 13:20:14.385633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:20:14.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:14.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:14.404
  STEP: Creating configMap with name projected-configmap-test-volume-9c99e8d8-3d69-42e7-bc0a-a926e81b985b @ 10/12/24 13:20:14.408
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:20:14.412
  STEP: Saw pod success @ 10/12/24 13:20:16.431
  I1012 13:20:16.436153 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-projected-configmaps-b335c428-9f5d-4579-9cea-1eca21f448fa container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:20:16.441
  I1012 13:20:16.459914 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8887" for this suite. @ 10/12/24 13:20:16.465
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/12/24 13:20:16.475
  I1012 13:20:16.475210 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-pred @ 10/12/24 13:20:16.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:16.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:16.491
  I1012 13:20:16.494442 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1012 13:20:16.502309 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 13:20:16.505954 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-23-48 before test
  I1012 13:20:16.511772 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hkx2j from ingress-nginx-kubernetes-worker started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511792 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:20:16.511799 19 predicates.go:957] calico-node-8fbzw from kube-system started at 2024-10-12 12:10:08 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511804 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:20:16.511810 19 predicates.go:957] coredns-5b4857d7c8-2prp4 from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511815 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1012 13:20:16.511822 19 predicates.go:957] kube-state-metrics-5d7bdccd49-fdm9v from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511828 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1012 13:20:16.511834 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-7gfhl from kube-system started at 2024-10-12 11:58:56 +0000 UTC (2 container statuses recorded)
  I1012 13:20:16.511838 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1012 13:20:16.511843 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1012 13:20:16.511849 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-52gtn from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511854 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1012 13:20:16.511861 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-jg7q5 from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.511871 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1012 13:20:16.511878 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:20:16.511883 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:20:16.511888 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:20:16.511894 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-46-196 before test
  I1012 13:20:16.528607 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mtf2j from ingress-nginx-kubernetes-worker started at 2024-10-12 12:08:07 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.528644 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:20:16.528651 19 predicates.go:957] calico-node-z2z5r from kube-system started at 2024-10-12 12:09:19 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.528656 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:20:16.528662 19 predicates.go:957] sonobuoy-e2e-job-f6ba430c2ee44c56 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:20:16.528688 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1012 13:20:16.528692 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:20:16.528698 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-lg8hq from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:20:16.528703 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:20:16.528708 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:20:16.528713 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-91-95 before test
  I1012 13:20:16.535851 19 predicates.go:957] replace-28812319-khfj8 from cronjob-8400 started at 2024-10-12 13:19:00 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.535883 19 predicates.go:959] 	Container c ready: true, restart count 0
  I1012 13:20:16.535892 19 predicates.go:957] replace-28812320-5525f from cronjob-8400 started at 2024-10-12 13:20:00 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.535897 19 predicates.go:959] 	Container c ready: true, restart count 0
  I1012 13:20:16.535903 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9xvxz from ingress-nginx-kubernetes-worker started at 2024-10-12 12:49:28 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.535908 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:20:16.535913 19 predicates.go:957] calico-node-2k2cp from kube-system started at 2024-10-12 12:10:19 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.535918 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:20:16.535924 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-12 12:12:34 +0000 UTC (1 container statuses recorded)
  I1012 13:20:16.535928 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1012 13:20:16.535936 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-6zbrj from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:20:16.535940 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:20:16.535945 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/12/24 13:20:16.536
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/12/24 13:20:18.562
  STEP: Trying to apply a random label on the found node. @ 10/12/24 13:20:18.574
  STEP: verifying the node has the label kubernetes.io/e2e-7918d029-b419-4dfc-9e02-c4ba12703f39 42 @ 10/12/24 13:20:18.584
  STEP: Trying to relaunch the pod, now with labels. @ 10/12/24 13:20:18.589
  STEP: removing the label kubernetes.io/e2e-7918d029-b419-4dfc-9e02-c4ba12703f39 off the node ip-172-31-46-196 @ 10/12/24 13:20:20.611
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7918d029-b419-4dfc-9e02-c4ba12703f39 @ 10/12/24 13:20:20.624
  I1012 13:20:20.627492 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7521" for this suite. @ 10/12/24 13:20:20.633
• [4.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/12/24 13:20:20.642
  I1012 13:20:20.642237 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pod-network-test @ 10/12/24 13:20:20.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:20.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:20.66
  STEP: Performing setup for networking test in namespace pod-network-test-7960 @ 10/12/24 13:20:20.665
  STEP: creating a selector @ 10/12/24 13:20:20.665
  STEP: Creating the service pods in kubernetes @ 10/12/24 13:20:20.666
  I1012 13:20:20.666093 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/12/24 13:20:42.785
  I1012 13:20:44.807749 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1012 13:20:44.807785 19 networking.go:42] Breadth first check of 192.168.127.190 on host 172.31.23.48...
  I1012 13:20:44.810948 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.72:9080/dial?request=hostname&protocol=http&host=192.168.127.190&port=8083&tries=1'] Namespace:pod-network-test-7960 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:20:44.810971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:20:44.811396 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:20:44.811437 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7960/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.127.190%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 13:20:44.852993 19 utils.go:356] Waiting for responses: map[]
  I1012 13:20:44.853036 19 utils.go:360] reached 192.168.127.190 after 0/1 tries
  I1012 13:20:44.853046 19 networking.go:42] Breadth first check of 192.168.195.239 on host 172.31.46.196...
  I1012 13:20:44.857148 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.72:9080/dial?request=hostname&protocol=http&host=192.168.195.239&port=8083&tries=1'] Namespace:pod-network-test-7960 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:20:44.857178 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:20:44.857636 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:20:44.857683 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7960/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.195.239%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 13:20:44.903941 19 utils.go:356] Waiting for responses: map[]
  I1012 13:20:44.903979 19 utils.go:360] reached 192.168.195.239 after 0/1 tries
  I1012 13:20:44.903988 19 networking.go:42] Breadth first check of 192.168.61.71 on host 172.31.91.95...
  I1012 13:20:44.907873 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.61.72:9080/dial?request=hostname&protocol=http&host=192.168.61.71&port=8083&tries=1'] Namespace:pod-network-test-7960 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:20:44.907903 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:20:44.908362 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:20:44.908456 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7960/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.61.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.61.71%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1012 13:20:44.945645 19 utils.go:356] Waiting for responses: map[]
  I1012 13:20:44.945687 19 utils.go:360] reached 192.168.61.71 after 0/1 tries
  I1012 13:20:44.945696 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1012 13:20:44.945799 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7960" for this suite. @ 10/12/24 13:20:44.95
• [24.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/12/24 13:20:44.959
  I1012 13:20:44.959791 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:20:44.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:44.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:44.978
  STEP: Creating secret with name secret-test-map-7f5a2a17-51e3-4e71-8fbf-4960cb139003 @ 10/12/24 13:20:44.981
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:20:44.986
  STEP: Saw pod success @ 10/12/24 13:20:49.012
  I1012 13:20:49.017335 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-secrets-f09c15f1-7a08-438a-adcd-d7d8933dcbfc container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:20:49.024
  I1012 13:20:49.038614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2526" for this suite. @ 10/12/24 13:20:49.043
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 10/12/24 13:20:49.051
  I1012 13:20:49.051789 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-webhook @ 10/12/24 13:20:49.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:49.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:49.069
  STEP: Setting up server cert @ 10/12/24 13:20:49.072
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/12/24 13:20:49.182
  STEP: Deploying the custom resource conversion webhook pod @ 10/12/24 13:20:49.192
  STEP: Wait for the deployment to be ready @ 10/12/24 13:20:49.205
  I1012 13:20:49.212113 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:20:51.225
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:20:51.238
  I1012 13:20:52.238514 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1012 13:20:52.247124 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Creating a v1 custom resource @ 10/12/24 13:20:54.797
  STEP: v2 custom resource should be converted @ 10/12/24 13:20:54.803
  I1012 13:20:55.364151 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9935" for this suite. @ 10/12/24 13:20:55.37
• [6.328 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 10/12/24 13:20:55.38
  I1012 13:20:55.380420 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:20:55.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:20:55.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:20:55.398
  STEP: creating all guestbook components @ 10/12/24 13:20:55.401
  I1012 13:20:55.401966 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1012 13:20:55.402049 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.493820 19 builder.go:146] stderr: ""
  I1012 13:20:55.493864 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1012 13:20:55.493908 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1012 13:20:55.494008 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.588694 19 builder.go:146] stderr: ""
  I1012 13:20:55.588736 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1012 13:20:55.588781 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1012 13:20:55.588846 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.687340 19 builder.go:146] stderr: ""
  I1012 13:20:55.687378 19 builder.go:147] stdout: "service/frontend created\n"
  I1012 13:20:55.687443 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1012 13:20:55.687594 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.759563 19 builder.go:146] stderr: ""
  I1012 13:20:55.759620 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1012 13:20:55.759718 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1012 13:20:55.759850 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.833967 19 builder.go:146] stderr: ""
  I1012 13:20:55.834018 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1012 13:20:55.834125 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1012 13:20:55.834207 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 create -f -'
  I1012 13:20:55.908551 19 builder.go:146] stderr: ""
  I1012 13:20:55.908591 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/12/24 13:20:55.908
  I1012 13:20:55.908687 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1012 13:21:00.963205 19 kubectl.go:2276] Waiting for frontend to serve content.
  I1012 13:21:00.974080 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1012 13:21:00.985892 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/12/24 13:21:00.995
  I1012 13:21:00.995502 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.061852 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.061903 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/12/24 13:21:01.061
  I1012 13:21:01.062032 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.125359 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.125399 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/12/24 13:21:01.125
  I1012 13:21:01.125520 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.193943 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.193982 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/12/24 13:21:01.194
  I1012 13:21:01.194196 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.245341 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.245389 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/12/24 13:21:01.245
  I1012 13:21:01.245552 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.310311 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.310350 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/12/24 13:21:01.31
  I1012 13:21:01.310517 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-5149 delete --grace-period=0 --force -f -'
  I1012 13:21:01.378173 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:21:01.378226 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1012 13:21:01.378727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5149" for this suite. @ 10/12/24 13:21:01.382
• [6.010 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 10/12/24 13:21:01.391
  I1012 13:21:01.391461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:21:01.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:21:01.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:21:01.411
  STEP: Starting the proxy @ 10/12/24 13:21:01.416
  I1012 13:21:01.416817 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-3983 proxy --unix-socket=/tmp/kubectl-proxy-unix1385305530/test'
  STEP: retrieving proxy /api/ output @ 10/12/24 13:21:01.537
  I1012 13:21:01.540443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3983" for this suite. @ 10/12/24 13:21:01.546
• [0.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 10/12/24 13:21:01.556
  I1012 13:21:01.556329 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl-logs @ 10/12/24 13:21:01.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:21:01.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:21:01.571
  STEP: creating a pod @ 10/12/24 13:21:01.575
  I1012 13:21:01.575490 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1012 13:21:01.689911 19 builder.go:146] stderr: ""
  I1012 13:21:01.689949 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/12/24 13:21:01.69
  I1012 13:21:01.690187 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1012 13:21:03.699383 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/12/24 13:21:03.699
  I1012 13:21:03.699501 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator'
  I1012 13:21:03.759580 19 builder.go:146] stderr: ""
  I1012 13:21:03.759631 19 builder.go:147] stdout: "I1012 13:21:02.237147       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/trw 518\nI1012 13:21:02.437548       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/v6lj 563\nI1012 13:21:02.637867       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/v9wh 347\nI1012 13:21:02.838206       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/952 501\nI1012 13:21:03.037494       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/tkwj 454\nI1012 13:21:03.237794       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/6zp6 249\nI1012 13:21:03.438108       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/l6zc 265\nI1012 13:21:03.637259       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/p7j 350\n"
  STEP: limiting log lines @ 10/12/24 13:21:03.759
  I1012 13:21:03.759722 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --tail=1'
  I1012 13:21:03.818539 19 builder.go:146] stderr: ""
  I1012 13:21:03.818582 19 builder.go:147] stdout: "I1012 13:21:03.637259       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/p7j 350\n"
  I1012 13:21:03.818591 19 logs.go:180] got output "I1012 13:21:03.637259       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/p7j 350\n"
  STEP: limiting log bytes @ 10/12/24 13:21:03.818
  I1012 13:21:03.818824 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --limit-bytes=1'
  I1012 13:21:03.872412 19 builder.go:146] stderr: ""
  I1012 13:21:03.872450 19 builder.go:147] stdout: "I"
  I1012 13:21:03.872459 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 10/12/24 13:21:03.872
  I1012 13:21:03.872575 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --tail=1 --timestamps'
  I1012 13:21:03.928710 19 builder.go:146] stderr: ""
  I1012 13:21:03.928807 19 builder.go:147] stdout: "2024-10-12T13:21:03.837636643Z I1012 13:21:03.837529       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/x2q 308\n"
  I1012 13:21:03.928819 19 logs.go:192] got output "2024-10-12T13:21:03.837636643Z I1012 13:21:03.837529       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/x2q 308\n"
  STEP: restricting to a time range @ 10/12/24 13:21:03.928
  I1012 13:21:06.429310 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --since=1s'
  I1012 13:21:06.482433 19 builder.go:146] stderr: ""
  I1012 13:21:06.482477 19 builder.go:147] stdout: "I1012 13:21:05.637237       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/l2bh 225\nI1012 13:21:05.837529       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/24n 225\nI1012 13:21:06.037829       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/msjw 490\nI1012 13:21:06.238139       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/tgs 253\nI1012 13:21:06.437388       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/cx9 525\n"
  I1012 13:21:06.482612 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 logs logs-generator logs-generator --since=24h'
  I1012 13:21:06.537269 19 builder.go:146] stderr: ""
  I1012 13:21:06.537327 19 builder.go:147] stdout: "I1012 13:21:02.237147       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/trw 518\nI1012 13:21:02.437548       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/v6lj 563\nI1012 13:21:02.637867       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/v9wh 347\nI1012 13:21:02.838206       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/952 501\nI1012 13:21:03.037494       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/tkwj 454\nI1012 13:21:03.237794       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/6zp6 249\nI1012 13:21:03.438108       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/l6zc 265\nI1012 13:21:03.637259       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/p7j 350\nI1012 13:21:03.837529       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/x2q 308\nI1012 13:21:04.037859       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/55s 442\nI1012 13:21:04.237201       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/t2s 326\nI1012 13:21:04.437533       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/54r 214\nI1012 13:21:04.637842       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/lc5h 422\nI1012 13:21:04.838137       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/zbk 255\nI1012 13:21:05.037391       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/ml5d 475\nI1012 13:21:05.237758       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/4rl 311\nI1012 13:21:05.438123       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/jgll 226\nI1012 13:21:05.637237       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/l2bh 225\nI1012 13:21:05.837529       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/24n 225\nI1012 13:21:06.037829       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/msjw 490\nI1012 13:21:06.238139       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/tgs 253\nI1012 13:21:06.437388       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/cx9 525\n"
  I1012 13:21:06.537456 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-logs-1834 delete pod logs-generator'
  I1012 13:21:07.374594 19 builder.go:146] stderr: ""
  I1012 13:21:07.374643 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1012 13:21:07.374767 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1834" for this suite. @ 10/12/24 13:21:07.379
• [5.833 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 10/12/24 13:21:07.389
  I1012 13:21:07.389308 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 13:21:07.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:21:07.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:21:07.406
  STEP: create the rc @ 10/12/24 13:21:07.412
  W1012 13:21:07.417941      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/12/24 13:21:13.43
  STEP: wait for the rc to be deleted @ 10/12/24 13:21:13.444
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/12/24 13:21:18.449
  STEP: Gathering metrics @ 10/12/24 13:21:48.46
  W1012 13:21:48.466443      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 13:21:48.466479 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 13:21:48.466527 19 delete.go:95] Deleting pod "simpletest.rc-244lw" in namespace "gc-5799"
  I1012 13:21:48.479673 19 delete.go:95] Deleting pod "simpletest.rc-2s5lp" in namespace "gc-5799"
  I1012 13:21:48.490032 19 delete.go:95] Deleting pod "simpletest.rc-4fcnf" in namespace "gc-5799"
  I1012 13:21:48.504536 19 delete.go:95] Deleting pod "simpletest.rc-4mnkk" in namespace "gc-5799"
  I1012 13:21:48.515817 19 delete.go:95] Deleting pod "simpletest.rc-565f2" in namespace "gc-5799"
  I1012 13:21:48.526766 19 delete.go:95] Deleting pod "simpletest.rc-5gmpq" in namespace "gc-5799"
  I1012 13:21:48.536494 19 delete.go:95] Deleting pod "simpletest.rc-5kzwt" in namespace "gc-5799"
  I1012 13:21:48.547802 19 delete.go:95] Deleting pod "simpletest.rc-5mg4r" in namespace "gc-5799"
  I1012 13:21:48.559375 19 delete.go:95] Deleting pod "simpletest.rc-5plfr" in namespace "gc-5799"
  I1012 13:21:48.570356 19 delete.go:95] Deleting pod "simpletest.rc-67gbs" in namespace "gc-5799"
  I1012 13:21:48.581041 19 delete.go:95] Deleting pod "simpletest.rc-6bw5r" in namespace "gc-5799"
  I1012 13:21:48.594516 19 delete.go:95] Deleting pod "simpletest.rc-6dlh8" in namespace "gc-5799"
  I1012 13:21:48.603624 19 delete.go:95] Deleting pod "simpletest.rc-6pcj8" in namespace "gc-5799"
  I1012 13:21:48.615338 19 delete.go:95] Deleting pod "simpletest.rc-6rw8p" in namespace "gc-5799"
  I1012 13:21:48.629174 19 delete.go:95] Deleting pod "simpletest.rc-6svv2" in namespace "gc-5799"
  I1012 13:21:48.640412 19 delete.go:95] Deleting pod "simpletest.rc-756kz" in namespace "gc-5799"
  I1012 13:21:48.653325 19 delete.go:95] Deleting pod "simpletest.rc-779jr" in namespace "gc-5799"
  I1012 13:21:48.663936 19 delete.go:95] Deleting pod "simpletest.rc-7jlcq" in namespace "gc-5799"
  I1012 13:21:48.675510 19 delete.go:95] Deleting pod "simpletest.rc-7mv8m" in namespace "gc-5799"
  I1012 13:21:48.686264 19 delete.go:95] Deleting pod "simpletest.rc-7p5w5" in namespace "gc-5799"
  I1012 13:21:48.697879 19 delete.go:95] Deleting pod "simpletest.rc-8lw48" in namespace "gc-5799"
  I1012 13:21:48.713270 19 delete.go:95] Deleting pod "simpletest.rc-926x7" in namespace "gc-5799"
  I1012 13:21:48.722793 19 delete.go:95] Deleting pod "simpletest.rc-9clgf" in namespace "gc-5799"
  I1012 13:21:48.733832 19 delete.go:95] Deleting pod "simpletest.rc-9vlqw" in namespace "gc-5799"
  I1012 13:21:48.746927 19 delete.go:95] Deleting pod "simpletest.rc-ccrhw" in namespace "gc-5799"
  I1012 13:21:48.758476 19 delete.go:95] Deleting pod "simpletest.rc-cnz4p" in namespace "gc-5799"
  I1012 13:21:48.770267 19 delete.go:95] Deleting pod "simpletest.rc-cp5mn" in namespace "gc-5799"
  I1012 13:21:48.779019 19 delete.go:95] Deleting pod "simpletest.rc-cqrvt" in namespace "gc-5799"
  I1012 13:21:48.790166 19 delete.go:95] Deleting pod "simpletest.rc-dkqwh" in namespace "gc-5799"
  I1012 13:21:48.804593 19 delete.go:95] Deleting pod "simpletest.rc-flcbv" in namespace "gc-5799"
  I1012 13:21:48.815755 19 delete.go:95] Deleting pod "simpletest.rc-fmts7" in namespace "gc-5799"
  I1012 13:21:48.828778 19 delete.go:95] Deleting pod "simpletest.rc-gkrlx" in namespace "gc-5799"
  I1012 13:21:48.843802 19 delete.go:95] Deleting pod "simpletest.rc-gmw6k" in namespace "gc-5799"
  I1012 13:21:48.853531 19 delete.go:95] Deleting pod "simpletest.rc-gtsgz" in namespace "gc-5799"
  I1012 13:21:48.865930 19 delete.go:95] Deleting pod "simpletest.rc-gwmf6" in namespace "gc-5799"
  I1012 13:21:48.874893 19 delete.go:95] Deleting pod "simpletest.rc-gww7t" in namespace "gc-5799"
  I1012 13:21:48.887418 19 delete.go:95] Deleting pod "simpletest.rc-hbftn" in namespace "gc-5799"
  I1012 13:21:48.901534 19 delete.go:95] Deleting pod "simpletest.rc-hqkbs" in namespace "gc-5799"
  I1012 13:21:48.915535 19 delete.go:95] Deleting pod "simpletest.rc-hrpjn" in namespace "gc-5799"
  I1012 13:21:48.925080 19 delete.go:95] Deleting pod "simpletest.rc-hww57" in namespace "gc-5799"
  I1012 13:21:48.936247 19 delete.go:95] Deleting pod "simpletest.rc-hxwwg" in namespace "gc-5799"
  I1012 13:21:48.950773 19 delete.go:95] Deleting pod "simpletest.rc-j2bvc" in namespace "gc-5799"
  I1012 13:21:48.964422 19 delete.go:95] Deleting pod "simpletest.rc-j9zss" in namespace "gc-5799"
  I1012 13:21:48.977357 19 delete.go:95] Deleting pod "simpletest.rc-jdtls" in namespace "gc-5799"
  I1012 13:21:48.986187 19 delete.go:95] Deleting pod "simpletest.rc-jmjc9" in namespace "gc-5799"
  I1012 13:21:48.996844 19 delete.go:95] Deleting pod "simpletest.rc-jrcs6" in namespace "gc-5799"
  I1012 13:21:49.011242 19 delete.go:95] Deleting pod "simpletest.rc-k8wcc" in namespace "gc-5799"
  I1012 13:21:49.023074 19 delete.go:95] Deleting pod "simpletest.rc-kdlnd" in namespace "gc-5799"
  I1012 13:21:49.037221 19 delete.go:95] Deleting pod "simpletest.rc-klq62" in namespace "gc-5799"
  I1012 13:21:49.047463 19 delete.go:95] Deleting pod "simpletest.rc-knx9r" in namespace "gc-5799"
  I1012 13:21:49.060172 19 delete.go:95] Deleting pod "simpletest.rc-ls86m" in namespace "gc-5799"
  I1012 13:21:49.074759 19 delete.go:95] Deleting pod "simpletest.rc-lvh8b" in namespace "gc-5799"
  I1012 13:21:49.090791 19 delete.go:95] Deleting pod "simpletest.rc-m4vgd" in namespace "gc-5799"
  I1012 13:21:49.103130 19 delete.go:95] Deleting pod "simpletest.rc-m5qtj" in namespace "gc-5799"
  I1012 13:21:49.116721 19 delete.go:95] Deleting pod "simpletest.rc-ms9kz" in namespace "gc-5799"
  I1012 13:21:49.129439 19 delete.go:95] Deleting pod "simpletest.rc-mw5qx" in namespace "gc-5799"
  I1012 13:21:49.142912 19 delete.go:95] Deleting pod "simpletest.rc-mxl49" in namespace "gc-5799"
  I1012 13:21:49.161603 19 delete.go:95] Deleting pod "simpletest.rc-n4jcq" in namespace "gc-5799"
  I1012 13:21:49.175781 19 delete.go:95] Deleting pod "simpletest.rc-n9q88" in namespace "gc-5799"
  I1012 13:21:49.192638 19 delete.go:95] Deleting pod "simpletest.rc-np8ql" in namespace "gc-5799"
  I1012 13:21:49.204407 19 delete.go:95] Deleting pod "simpletest.rc-nqx9f" in namespace "gc-5799"
  I1012 13:21:49.217788 19 delete.go:95] Deleting pod "simpletest.rc-nwfxw" in namespace "gc-5799"
  I1012 13:21:49.228743 19 delete.go:95] Deleting pod "simpletest.rc-nxqpd" in namespace "gc-5799"
  I1012 13:21:49.241060 19 delete.go:95] Deleting pod "simpletest.rc-p2cff" in namespace "gc-5799"
  I1012 13:21:49.264516 19 delete.go:95] Deleting pod "simpletest.rc-pdzz7" in namespace "gc-5799"
  I1012 13:21:49.314496 19 delete.go:95] Deleting pod "simpletest.rc-pf4ck" in namespace "gc-5799"
  I1012 13:21:49.361742 19 delete.go:95] Deleting pod "simpletest.rc-q684p" in namespace "gc-5799"
  I1012 13:21:49.419802 19 delete.go:95] Deleting pod "simpletest.rc-qhxqj" in namespace "gc-5799"
  I1012 13:21:49.462208 19 delete.go:95] Deleting pod "simpletest.rc-qv87p" in namespace "gc-5799"
  I1012 13:21:49.518012 19 delete.go:95] Deleting pod "simpletest.rc-qzm84" in namespace "gc-5799"
  I1012 13:21:49.564344 19 delete.go:95] Deleting pod "simpletest.rc-r87sg" in namespace "gc-5799"
  I1012 13:21:49.614641 19 delete.go:95] Deleting pod "simpletest.rc-rg5tz" in namespace "gc-5799"
  I1012 13:21:49.662828 19 delete.go:95] Deleting pod "simpletest.rc-rm4fl" in namespace "gc-5799"
  I1012 13:21:49.714917 19 delete.go:95] Deleting pod "simpletest.rc-rtc6n" in namespace "gc-5799"
  I1012 13:21:49.764037 19 delete.go:95] Deleting pod "simpletest.rc-rtt9r" in namespace "gc-5799"
  I1012 13:21:49.812182 19 delete.go:95] Deleting pod "simpletest.rc-s8zv8" in namespace "gc-5799"
  I1012 13:21:49.863454 19 delete.go:95] Deleting pod "simpletest.rc-svsl7" in namespace "gc-5799"
  I1012 13:21:49.915504 19 delete.go:95] Deleting pod "simpletest.rc-tlzf5" in namespace "gc-5799"
  I1012 13:21:49.965502 19 delete.go:95] Deleting pod "simpletest.rc-trlbb" in namespace "gc-5799"
  I1012 13:21:50.018528 19 delete.go:95] Deleting pod "simpletest.rc-v6b8f" in namespace "gc-5799"
  I1012 13:21:50.070614 19 delete.go:95] Deleting pod "simpletest.rc-v6fqh" in namespace "gc-5799"
  I1012 13:21:50.115916 19 delete.go:95] Deleting pod "simpletest.rc-vf2f8" in namespace "gc-5799"
  I1012 13:21:50.163996 19 delete.go:95] Deleting pod "simpletest.rc-vqw4n" in namespace "gc-5799"
  I1012 13:21:50.217674 19 delete.go:95] Deleting pod "simpletest.rc-vrxk6" in namespace "gc-5799"
  I1012 13:21:50.267413 19 delete.go:95] Deleting pod "simpletest.rc-vx6bp" in namespace "gc-5799"
  I1012 13:21:50.317518 19 delete.go:95] Deleting pod "simpletest.rc-w8dtb" in namespace "gc-5799"
  I1012 13:21:50.369398 19 delete.go:95] Deleting pod "simpletest.rc-wbjl5" in namespace "gc-5799"
  I1012 13:21:50.419772 19 delete.go:95] Deleting pod "simpletest.rc-wfjff" in namespace "gc-5799"
  I1012 13:21:50.470814 19 delete.go:95] Deleting pod "simpletest.rc-whz8b" in namespace "gc-5799"
  I1012 13:21:50.514226 19 delete.go:95] Deleting pod "simpletest.rc-wkzk7" in namespace "gc-5799"
  I1012 13:21:50.562601 19 delete.go:95] Deleting pod "simpletest.rc-wqdm5" in namespace "gc-5799"
  I1012 13:21:50.612815 19 delete.go:95] Deleting pod "simpletest.rc-wwsmm" in namespace "gc-5799"
  I1012 13:21:50.664003 19 delete.go:95] Deleting pod "simpletest.rc-wxpdh" in namespace "gc-5799"
  I1012 13:21:50.717992 19 delete.go:95] Deleting pod "simpletest.rc-wxx9z" in namespace "gc-5799"
  I1012 13:21:50.773279 19 delete.go:95] Deleting pod "simpletest.rc-x7949" in namespace "gc-5799"
  I1012 13:21:50.829628 19 delete.go:95] Deleting pod "simpletest.rc-x865f" in namespace "gc-5799"
  I1012 13:21:50.866222 19 delete.go:95] Deleting pod "simpletest.rc-x8sjv" in namespace "gc-5799"
  I1012 13:21:50.912928 19 delete.go:95] Deleting pod "simpletest.rc-xg9qj" in namespace "gc-5799"
  I1012 13:21:50.968286 19 delete.go:95] Deleting pod "simpletest.rc-znpqb" in namespace "gc-5799"
  I1012 13:21:51.013413 19 delete.go:95] Deleting pod "simpletest.rc-zz5r9" in namespace "gc-5799"
  I1012 13:21:51.064628 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5799" for this suite. @ 10/12/24 13:21:51.117
• [43.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 10/12/24 13:21:51.16
  I1012 13:21:51.160085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:21:51.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:21:51.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:21:51.2
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:21:51.204
  STEP: Saw pod success @ 10/12/24 13:21:57.254
  I1012 13:21:57.258161 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-0ba0edaf-831e-4844-991b-a1f133717258 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:21:57.264
  I1012 13:21:57.283785 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7091" for this suite. @ 10/12/24 13:21:57.287
• [6.133 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 10/12/24 13:21:57.292
  I1012 13:21:57.292960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context-test @ 10/12/24 13:21:57.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:21:57.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:21:57.309
  I1012 13:22:01.341612 19 security_context.go:538] Got logs for pod "busybox-privileged-false-d965b4f4-728e-446b-a3d5-a8a3c50eaf5a": "ip: RTNETLINK answers: Operation not permitted\n"
  I1012 13:22:01.341749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4052" for this suite. @ 10/12/24 13:22:01.348
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 10/12/24 13:22:01.356
  I1012 13:22:01.356445 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:22:01.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:22:01.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:22:01.377
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/12/24 13:22:01.38
  STEP: Saw pod success @ 10/12/24 13:22:05.408
  I1012 13:22:05.412768 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-50303b3d-508f-4389-8b69-cafe47828257 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:22:05.419
  I1012 13:22:05.434517 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3847" for this suite. @ 10/12/24 13:22:05.438
• [4.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/12/24 13:22:05.445
  I1012 13:22:05.445551 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename conformance-tests @ 10/12/24 13:22:05.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:22:05.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:22:05.461
  STEP: Getting node addresses @ 10/12/24 13:22:05.465
  I1012 13:22:05.465169 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1012 13:22:05.471000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6817" for this suite. @ 10/12/24 13:22:05.474
• [0.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 10/12/24 13:22:05.481
  I1012 13:22:05.481652 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:22:05.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:22:05.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:22:05.498
  STEP: Creating service test in namespace statefulset-3592 @ 10/12/24 13:22:05.501
  STEP: Creating a new StatefulSet @ 10/12/24 13:22:05.505
  I1012 13:22:05.517830 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I1012 13:22:15.521146 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:22:15.521173 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:22:15.521180 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/12/24 13:22:15.531
  I1012 13:22:15.543591 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/12/24 13:22:15.543
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/12/24 13:22:25.557
  STEP: Performing a canary update @ 10/12/24 13:22:25.557
  I1012 13:22:25.566412 19 statefulset.go:2507] Updating stateful set ss2
  I1012 13:22:25.574446 19 wait.go:74] Waiting for Pod statefulset-3592/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/12/24 13:22:35.575
  I1012 13:22:35.616801 19 wait.go:40] Found 2 stateful pods, waiting for 3
  I1012 13:22:45.618285 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:22:45.618326 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:22:45.618334 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/12/24 13:22:45.623
  I1012 13:22:45.635135 19 statefulset.go:2507] Updating stateful set ss2
  I1012 13:22:45.644393 19 wait.go:74] Waiting for Pod statefulset-3592/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1012 13:22:55.658012 19 statefulset.go:2507] Updating stateful set ss2
  I1012 13:22:55.667886 19 wait.go:56] Waiting for StatefulSet statefulset-3592/ss2 to complete update
  I1012 13:22:55.667937 19 wait.go:63] Waiting for Pod statefulset-3592/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1012 13:23:05.668623 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3592
  I1012 13:23:05.673368 19 rest.go:150] Scaling statefulset ss2 to 0
  I1012 13:23:15.691383 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:23:15.695424 19 rest.go:88] Deleting statefulset ss2
  I1012 13:23:15.712573 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3592" for this suite. @ 10/12/24 13:23:15.716
• [70.243 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 10/12/24 13:23:15.724
  I1012 13:23:15.724354 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 13:23:15.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:15.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:15.742
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/12/24 13:23:15.747
  STEP: When a replication controller with a matching selector is created @ 10/12/24 13:23:17.768
  STEP: Then the orphan pod is adopted @ 10/12/24 13:23:17.775
  I1012 13:23:18.784907 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6806" for this suite. @ 10/12/24 13:23:18.788
• [3.071 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/12/24 13:23:18.795
  I1012 13:23:18.795335 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/12/24 13:23:18.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:18.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:18.811
  STEP: create the container to handle the HTTPGet hook request. @ 10/12/24 13:23:18.819
  STEP: create the pod with lifecycle hook @ 10/12/24 13:23:20.838
  STEP: check poststart hook @ 10/12/24 13:23:22.86
  STEP: delete the pod with lifecycle hook @ 10/12/24 13:23:22.875
  I1012 13:23:24.894022 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4004" for this suite. @ 10/12/24 13:23:24.898
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 10/12/24 13:23:24.906
  I1012 13:23:24.906545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:23:24.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:24.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:24.924
  STEP: creating the pod @ 10/12/24 13:23:24.927
  I1012 13:23:24.927549 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 create -f -'
  I1012 13:23:25.020189 19 builder.go:146] stderr: ""
  I1012 13:23:25.020230 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/12/24 13:23:27.031
  I1012 13:23:27.031346 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 label pods pause testing-label=testing-label-value'
  I1012 13:23:27.089359 19 builder.go:146] stderr: ""
  I1012 13:23:27.089396 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/12/24 13:23:27.089
  I1012 13:23:27.089481 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 get pod pause -L testing-label'
  I1012 13:23:27.138299 19 builder.go:146] stderr: ""
  I1012 13:23:27.138341 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/12/24 13:23:27.138
  I1012 13:23:27.138584 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 label pods pause testing-label-'
  I1012 13:23:27.193848 19 builder.go:146] stderr: ""
  I1012 13:23:27.193893 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/12/24 13:23:27.193
  I1012 13:23:27.193984 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 get pod pause -L testing-label'
  I1012 13:23:27.242285 19 builder.go:146] stderr: ""
  I1012 13:23:27.242325 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/12/24 13:23:27.242
  I1012 13:23:27.242462 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 delete --grace-period=0 --force -f -'
  I1012 13:23:27.304591 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1012 13:23:27.304635 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1012 13:23:27.304689 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 get rc,svc -l name=pause --no-headers'
  I1012 13:23:27.357648 19 builder.go:146] stderr: "No resources found in kubectl-2591 namespace.\n"
  I1012 13:23:27.357692 19 builder.go:147] stdout: ""
  I1012 13:23:27.357746 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2591 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1012 13:23:27.406116 19 builder.go:146] stderr: ""
  I1012 13:23:27.406161 19 builder.go:147] stdout: ""
  I1012 13:23:27.406287 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2591" for this suite. @ 10/12/24 13:23:27.41
• [2.510 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 10/12/24 13:23:27.416
  I1012 13:23:27.416240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 13:23:27.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:27.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:27.43
  STEP: Looking for a node to schedule job pod @ 10/12/24 13:23:27.433
  STEP: Creating a job @ 10/12/24 13:23:27.437
  STEP: Ensuring job fails @ 10/12/24 13:23:27.442
  I1012 13:23:31.451545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-603" for this suite. @ 10/12/24 13:23:31.456
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 10/12/24 13:23:31.464
  I1012 13:23:31.464752 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 13:23:31.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:31.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:31.484
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/12/24 13:23:31.488
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/12/24 13:23:31.488
  STEP: creating a pod to probe DNS @ 10/12/24 13:23:31.488
  STEP: submitting the pod to kubernetes @ 10/12/24 13:23:31.488
  STEP: retrieving the pod @ 10/12/24 13:23:33.512
  STEP: looking for the results for each expected name from probers @ 10/12/24 13:23:33.515
  I1012 13:23:33.534264 19 dns_common.go:527] DNS probes using dns-4991/dns-test-adade3b5-ebbb-4011-8602-458bf8342e97 succeeded

  STEP: deleting the pod @ 10/12/24 13:23:33.534
  I1012 13:23:33.546177 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4991" for this suite. @ 10/12/24 13:23:33.549
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/12/24 13:23:33.555
  I1012 13:23:33.555644 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename events @ 10/12/24 13:23:33.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:33.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:33.572
  STEP: creating a test event @ 10/12/24 13:23:33.575
  STEP: listing events in all namespaces @ 10/12/24 13:23:33.58
  STEP: listing events in test namespace @ 10/12/24 13:23:33.584
  STEP: listing events with field selection filtering on source @ 10/12/24 13:23:33.587
  STEP: listing events with field selection filtering on reportingController @ 10/12/24 13:23:33.591
  STEP: getting the test event @ 10/12/24 13:23:33.595
  STEP: patching the test event @ 10/12/24 13:23:33.597
  STEP: getting the test event @ 10/12/24 13:23:33.605
  STEP: updating the test event @ 10/12/24 13:23:33.608
  STEP: getting the test event @ 10/12/24 13:23:33.615
  STEP: deleting the test event @ 10/12/24 13:23:33.617
  STEP: listing events in all namespaces @ 10/12/24 13:23:33.625
  STEP: listing events in test namespace @ 10/12/24 13:23:33.63
  I1012 13:23:33.633935 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9240" for this suite. @ 10/12/24 13:23:33.638
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 10/12/24 13:23:33.645
  I1012 13:23:33.645260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:23:33.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:23:33.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:23:33.661
  STEP: Creating service test in namespace statefulset-3966 @ 10/12/24 13:23:33.664
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/12/24 13:23:33.671
  STEP: Creating stateful set ss in namespace statefulset-3966 @ 10/12/24 13:23:33.676
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3966 @ 10/12/24 13:23:33.681
  I1012 13:23:33.688164 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1012 13:23:43.687699 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/12/24 13:23:43.687
  I1012 13:23:43.692170 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:23:43.785003 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:23:43.785049 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:23:43.785059 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:23:43.788878 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1012 13:23:53.791365 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:23:53.791409 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1012 13:23:53.811468 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999679s
  I1012 13:23:54.816190 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.993144844s
  I1012 13:23:55.821735 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989015453s
  I1012 13:23:56.827214 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.983146421s
  I1012 13:23:57.831636 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.97785977s
  I1012 13:23:58.837676 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.9731437s
  I1012 13:23:59.843460 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.967510546s
  I1012 13:24:00.848442 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.961160363s
  I1012 13:24:01.855573 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.955848357s
  I1012 13:24:02.861426 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 949.584153ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3966 @ 10/12/24 13:24:03.861
  I1012 13:24:03.867908 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:24:03.967898 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:24:03.968230 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:24:03.968248 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:24:03.973442 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I1012 13:24:13.975213 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:24:13.975251 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:24:13.975258 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/12/24 13:24:13.975
  STEP: Scale down will halt with unhealthy stateful pod @ 10/12/24 13:24:13.975
  I1012 13:24:13.982615 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:24:14.066444 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:24:14.066493 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:24:14.066504 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:24:14.066558 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:24:14.166629 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:24:14.166676 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:24:14.166686 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:24:14.166733 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:24:14.257343 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:24:14.257391 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:24:14.257399 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:24:14.257408 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1012 13:24:14.260711 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1012 13:24:24.270499 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:24:24.270537 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:24:24.270545 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:24:24.283842 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999464s
  I1012 13:24:25.288474 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996962778s
  I1012 13:24:26.293498 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991491751s
  I1012 13:24:27.298699 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.987314435s
  I1012 13:24:28.303279 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.982045955s
  I1012 13:24:29.308417 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.976724569s
  I1012 13:24:30.314253 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.97221877s
  I1012 13:24:31.321180 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.965854474s
  I1012 13:24:32.325913 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.959659157s
  I1012 13:24:33.331217 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 954.896847ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3966 @ 10/12/24 13:24:34.332
  I1012 13:24:34.337288 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:24:34.420780 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:24:34.420820 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:24:34.420831 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:24:34.420886 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:24:34.508076 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:24:34.508134 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:24:34.508145 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:24:34.508191 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-3966 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:24:34.591668 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:24:34.591771 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:24:34.591783 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:24:34.591795 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/12/24 13:24:44.603
  I1012 13:24:44.603782 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3966
  I1012 13:24:44.606648 19 rest.go:150] Scaling statefulset ss to 0
  I1012 13:24:44.614378 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:24:44.618476 19 rest.go:88] Deleting statefulset ss
  I1012 13:24:44.631829 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3966" for this suite. @ 10/12/24 13:24:44.634
• [70.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 10/12/24 13:24:44.641
  I1012 13:24:44.641937 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:24:44.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:24:44.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:24:44.66
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:24:44.665
  STEP: Saw pod success @ 10/12/24 13:24:48.693
  I1012 13:24:48.697443 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-a5fec759-1c04-4121-929a-6b7a32a72699 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:24:48.713
  I1012 13:24:48.729611 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-367" for this suite. @ 10/12/24 13:24:48.734
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 10/12/24 13:24:48.74
  I1012 13:24:48.740572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:24:48.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:24:48.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:24:48.756
  STEP: Setting up server cert @ 10/12/24 13:24:48.78
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:24:49.092
  STEP: Deploying the webhook pod @ 10/12/24 13:24:49.1
  STEP: Wait for the deployment to be ready @ 10/12/24 13:24:49.113
  I1012 13:24:49.123000 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/12/24 13:24:51.139
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:24:51.149
  I1012 13:24:52.150553 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/12/24 13:24:52.16
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/12/24 13:24:52.173
  STEP: Creating a dummy validating-webhook-configuration object @ 10/12/24 13:24:52.187
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/12/24 13:24:52.195
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/12/24 13:24:52.203
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/12/24 13:24:52.211
  I1012 13:24:52.267525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8296" for this suite. @ 10/12/24 13:24:52.27
  STEP: Destroying namespace "webhook-markers-7652" for this suite. @ 10/12/24 13:24:52.276
• [3.542 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/12/24 13:24:52.283
  I1012 13:24:52.283168 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:24:52.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:24:52.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:24:52.298
  STEP: creating the pod @ 10/12/24 13:24:52.301
  STEP: submitting the pod to kubernetes @ 10/12/24 13:24:52.301
  W1012 13:24:52.308670      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 10/12/24 13:24:54.321
  STEP: updating the pod @ 10/12/24 13:24:54.325
  I1012 13:24:54.838740 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-6bf46da2-f0ce-46bf-9f2a-7becba6a1adf"
  I1012 13:24:58.853694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7555" for this suite. @ 10/12/24 13:24:58.858
• [6.583 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 10/12/24 13:24:58.866
  I1012 13:24:58.866491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:24:58.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:24:58.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:24:58.882
  I1012 13:24:58.885843 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 create -f -'
  I1012 13:24:58.983040 19 builder.go:146] stderr: ""
  I1012 13:24:58.983112 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1012 13:24:58.983189 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 create -f -'
  I1012 13:24:59.083902 19 builder.go:146] stderr: ""
  I1012 13:24:59.083987 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/12/24 13:24:59.084
  I1012 13:25:00.089921 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 13:25:00.089961 19 framework.go:733] Found 1 / 1
  I1012 13:25:00.089977 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1012 13:25:00.094580 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1012 13:25:00.094600 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1012 13:25:00.094652 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 describe pod agnhost-primary-7sb4c'
  I1012 13:25:00.157373 19 builder.go:146] stderr: ""
  I1012 13:25:00.157438 19 builder.go:147] stdout: "Name:             agnhost-primary-7sb4c\nNamespace:        kubectl-4026\nPriority:         0\nService Account:  default\nNode:             ip-172-31-91-95/172.31.91.95\nStart Time:       Sat, 12 Oct 2024 13:24:58 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.61.127\nIPs:\n  IP:           192.168.61.127\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://cc86e3024480e9656fa13b8e1455df3df13d6c6781322fcc7b3328d4f90679f6\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 12 Oct 2024 13:24:59 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mfkc2 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-mfkc2:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-4026/agnhost-primary-7sb4c to ip-172-31-91-95\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1012 13:25:00.157505 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 describe rc agnhost-primary'
  I1012 13:25:00.220859 19 builder.go:146] stderr: ""
  I1012 13:25:00.220910 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4026\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7sb4c\n"
  I1012 13:25:00.220978 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 describe service agnhost-primary'
  I1012 13:25:00.297511 19 builder.go:146] stderr: ""
  I1012 13:25:00.297590 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-4026\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.175\nIPs:                      10.152.183.175\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.61.127:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1012 13:25:00.306041 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 describe node ip-172-31-23-48'
  I1012 13:25:00.412847 19 builder.go:146] stderr: ""
  I1012 13:25:00.413033 19 builder.go:147] stdout: "Name:               ip-172-31-23-48\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-23-48\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 12 Oct 2024 11:53:12 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-23-48\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 12 Oct 2024 13:24:58 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 12 Oct 2024 12:10:10 +0000   Sat, 12 Oct 2024 12:10:10 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 12 Oct 2024 13:23:02 +0000   Sat, 12 Oct 2024 11:53:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 12 Oct 2024 13:23:02 +0000   Sat, 12 Oct 2024 11:53:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 12 Oct 2024 13:23:02 +0000   Sat, 12 Oct 2024 11:53:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 12 Oct 2024 13:23:02 +0000   Sat, 12 Oct 2024 11:54:19 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.23.48\n  Hostname:    ip-172-31-23-48\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967656Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865256Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2cb4e714510f2d69454b23afef6c24\n  System UUID:                     ec2cb4e7-1451-0f2d-6945-4b23afef6c24\n  Boot ID:                         9ba7b7c9-b7ad-42bc-b524-afd7f7b67aa6\n  Kernel Version:                  6.8.0-1015-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.1\n  Kube-Proxy Version:              v1.31.1\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-hkx2j           0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                      calico-node-8fbzw                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                      coredns-5b4857d7c8-2prp4                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     94m\n  kube-system                      kube-state-metrics-5d7bdccd49-fdm9v                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         94m\n  kube-system                      metrics-server-v0.7.1-6c77d69467-7gfhl                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     94m\n  kubernetes-dashboard             dashboard-metrics-scraper-64757cf48d-52gtn                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         94m\n  kubernetes-dashboard             kubernetes-dashboard-7b6b7bcb5d-jg7q5                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         94m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5    0 (0%)        0 (0%)      0 (0%)           0 (0%)         72m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                355m (17%)  100m (5%)\n  memory             120Mi (1%)  470Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1012 13:25:00.413162 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4026 describe namespace kubectl-4026'
  I1012 13:25:00.470160 19 builder.go:146] stderr: ""
  I1012 13:25:00.470205 19 builder.go:147] stdout: "Name:         kubectl-4026\nLabels:       e2e-framework=kubectl\n              e2e-run=ac297cd5-b86b-4448-8b12-55e3a6149588\n              kubernetes.io/metadata.name=kubectl-4026\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1012 13:25:00.470320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4026" for this suite. @ 10/12/24 13:25:00.474
• [1.616 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 10/12/24 13:25:00.482
  I1012 13:25:00.482473 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 13:25:00.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:00.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:00.499
  STEP: creating a Namespace @ 10/12/24 13:25:00.502
  STEP: patching the Namespace @ 10/12/24 13:25:00.513
  STEP: get the Namespace and ensuring it has the label @ 10/12/24 13:25:00.52
  I1012 13:25:00.525047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5390" for this suite. @ 10/12/24 13:25:00.528
  STEP: Destroying namespace "nspatchtest-f8d4395d-a98f-447c-87e5-baa040a747c4-9015" for this suite. @ 10/12/24 13:25:00.536
• [0.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/12/24 13:25:00.542
  I1012 13:25:00.542793 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename discovery @ 10/12/24 13:25:00.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:00.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:00.561
  STEP: Setting up server cert @ 10/12/24 13:25:00.566
  I1012 13:25:00.806316 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1012 13:25:00.807781 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1012 13:25:00.807800 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1012 13:25:00.807808 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1012 13:25:00.807816 19 discovery.go:139] Checking APIGroup: apps
  I1012 13:25:00.809138 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1012 13:25:00.809149 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I1012 13:25:00.809154 19 discovery.go:154] apps/v1 matches apps/v1
  I1012 13:25:00.809160 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I1012 13:25:00.810361 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1012 13:25:00.810375 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1012 13:25:00.810380 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1012 13:25:00.810386 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1012 13:25:00.811600 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1012 13:25:00.811614 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1012 13:25:00.811620 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1012 13:25:00.811626 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1012 13:25:00.813032 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1012 13:25:00.813053 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1012 13:25:00.813059 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1012 13:25:00.813065 19 discovery.go:139] Checking APIGroup: autoscaling
  I1012 13:25:00.814315 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1012 13:25:00.814342 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1012 13:25:00.814348 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1012 13:25:00.814355 19 discovery.go:139] Checking APIGroup: batch
  I1012 13:25:00.815874 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1012 13:25:00.815895 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I1012 13:25:00.815901 19 discovery.go:154] batch/v1 matches batch/v1
  I1012 13:25:00.815907 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1012 13:25:00.817174 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1012 13:25:00.817187 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1012 13:25:00.817192 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1012 13:25:00.817201 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1012 13:25:00.818500 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1012 13:25:00.818514 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1012 13:25:00.818519 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1012 13:25:00.818525 19 discovery.go:139] Checking APIGroup: policy
  I1012 13:25:00.819890 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1012 13:25:00.819902 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I1012 13:25:00.819908 19 discovery.go:154] policy/v1 matches policy/v1
  I1012 13:25:00.819914 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1012 13:25:00.821152 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1012 13:25:00.821164 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1012 13:25:00.821170 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1012 13:25:00.821176 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1012 13:25:00.822368 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1012 13:25:00.822389 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1012 13:25:00.822395 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1012 13:25:00.822410 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1012 13:25:00.823852 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1012 13:25:00.823873 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1012 13:25:00.823879 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1012 13:25:00.823886 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1012 13:25:00.825285 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1012 13:25:00.825310 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1012 13:25:00.825317 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1012 13:25:00.825323 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1012 13:25:00.826623 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1012 13:25:00.826638 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1012 13:25:00.826644 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1012 13:25:00.826651 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1012 13:25:00.828019 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1012 13:25:00.828041 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1012 13:25:00.828047 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1012 13:25:00.828053 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I1012 13:25:00.829298 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1012 13:25:00.829328 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1012 13:25:00.829334 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1012 13:25:00.829339 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1012 13:25:00.830586 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1012 13:25:00.830609 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1012 13:25:00.830614 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1012 13:25:00.830620 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1012 13:25:00.831860 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1012 13:25:00.831871 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1012 13:25:00.831886 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1012 13:25:00.831894 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1012 13:25:00.833076 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1012 13:25:00.833092 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1012 13:25:00.833113 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1012 13:25:00.833279 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6034" for this suite. @ 10/12/24 13:25:00.838
• [0.303 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/12/24 13:25:00.845
  I1012 13:25:00.845461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename var-expansion @ 10/12/24 13:25:00.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:00.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:00.862
  STEP: Creating a pod to test env composition @ 10/12/24 13:25:00.866
  STEP: Saw pod success @ 10/12/24 13:25:04.888
  I1012 13:25:04.892479 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod var-expansion-af292d3d-d598-46b9-90f4-cd6ee3d2c665 container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 13:25:04.904
  I1012 13:25:04.916904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4986" for this suite. @ 10/12/24 13:25:04.92
• [4.082 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/12/24 13:25:04.927
  I1012 13:25:04.927322 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 13:25:04.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:04.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:04.943
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/12/24 13:25:04.945
  I1012 13:25:04.954688 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1012 13:25:09.960411 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 13:25:09.96
  STEP: getting scale subresource @ 10/12/24 13:25:09.96
  STEP: updating a scale subresource @ 10/12/24 13:25:09.963
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/12/24 13:25:09.971
  STEP: Patch a scale subresource @ 10/12/24 13:25:09.975
  I1012 13:25:09.986625 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7235" for this suite. @ 10/12/24 13:25:09.992
• [5.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 10/12/24 13:25:10
  I1012 13:25:10.000459 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:25:10.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:10.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:10.019
  STEP: Creating configMap with name configmap-test-volume-b2cbef58-1a03-41c3-8b3a-3854945e271b @ 10/12/24 13:25:10.022
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:25:10.027
  STEP: Saw pod success @ 10/12/24 13:25:14.05
  I1012 13:25:14.055126 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-9a5aa86d-0d17-45f2-9294-c0baecb2d1f1 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:25:14.061
  I1012 13:25:14.077347 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6533" for this suite. @ 10/12/24 13:25:14.082
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/12/24 13:25:14.088
  I1012 13:25:14.088763 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename ingress @ 10/12/24 13:25:14.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:14.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:14.106
  STEP: getting /apis @ 10/12/24 13:25:14.109
  STEP: getting /apis/networking.k8s.io @ 10/12/24 13:25:14.113
  STEP: getting /apis/networking.k8s.iov1 @ 10/12/24 13:25:14.114
  STEP: creating @ 10/12/24 13:25:14.116
  STEP: getting @ 10/12/24 13:25:14.135
  STEP: listing @ 10/12/24 13:25:14.138
  STEP: watching @ 10/12/24 13:25:14.141
  I1012 13:25:14.141862 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/12/24 13:25:14.143
  STEP: cluster-wide watching @ 10/12/24 13:25:14.147
  I1012 13:25:14.147319 19 ingress.go:198] starting watch
  STEP: patching @ 10/12/24 13:25:14.148
  STEP: updating @ 10/12/24 13:25:14.153
  I1012 13:25:14.164509 19 ingress.go:221] waiting for watch events with expected annotations
  I1012 13:25:14.164782 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/12/24 13:25:14.165
  STEP: updating /status @ 10/12/24 13:25:14.171
  STEP: get /status @ 10/12/24 13:25:14.185
  STEP: deleting @ 10/12/24 13:25:14.191
  STEP: deleting a collection @ 10/12/24 13:25:14.206
  I1012 13:25:14.222317 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7550" for this suite. @ 10/12/24 13:25:14.226
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 10/12/24 13:25:14.233
  I1012 13:25:14.233324 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-probe @ 10/12/24 13:25:14.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:25:14.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:25:14.25
  I1012 13:26:14.268585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8824" for this suite. @ 10/12/24 13:26:14.273
• [60.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 10/12/24 13:26:14.28
  I1012 13:26:14.280320 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pv @ 10/12/24 13:26:14.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:14.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:14.296
  STEP: Creating initial PV and PVC @ 10/12/24 13:26:14.299
  I1012 13:26:14.299890 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5848" @ 10/12/24 13:26:14.313
  STEP: Listing PVCs in namespace "pv-5848" @ 10/12/24 13:26:14.319
  STEP: Reading "pvc-wztl2" Status @ 10/12/24 13:26:14.322
  STEP: Reading "pv-5848-4px45" Status @ 10/12/24 13:26:14.325
  STEP: Patching "pvc-wztl2" Status @ 10/12/24 13:26:14.33
  STEP: Patching "pv-5848-4px45" Status @ 10/12/24 13:26:14.337
  STEP: Updating "pvc-wztl2" Status @ 10/12/24 13:26:14.353
  STEP: Updating "pv-5848-4px45" Status @ 10/12/24 13:26:14.365
  I1012 13:26:14.375463 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1012 13:26:14.375500 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-wztl2"
  I1012 13:26:14.383784 19 pv.go:193] Deleting PersistentVolume "pv-5848-4px45"
  I1012 13:26:14.390673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5848" for this suite. @ 10/12/24 13:26:14.395
• [0.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/12/24 13:26:14.4
  I1012 13:26:14.400924 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:26:14.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:14.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:14.422
  STEP: Creating secret with name secret-test-map-db937dae-56c4-49c6-83e7-763eb42660b2 @ 10/12/24 13:26:14.425
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:26:14.429
  STEP: Saw pod success @ 10/12/24 13:26:16.45
  I1012 13:26:16.454298 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-13907290-b9e3-4dd4-ab61-9cb6383919e4 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:26:16.46
  I1012 13:26:16.476849 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2387" for this suite. @ 10/12/24 13:26:16.481
• [2.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 10/12/24 13:26:16.491
  I1012 13:26:16.491815 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:26:16.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:16.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:16.507
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/12/24 13:26:16.51
  STEP: Saw pod success @ 10/12/24 13:26:20.537
  I1012 13:26:20.541423 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-43640267-de1b-4b69-901c-f5fc1c58a3ff container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:26:20.548
  I1012 13:26:20.562928 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8053" for this suite. @ 10/12/24 13:26:20.566
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 10/12/24 13:26:20.572
  I1012 13:26:20.572995 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:26:20.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:20.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:20.589
  STEP: Setting up server cert @ 10/12/24 13:26:20.612
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:26:20.827
  STEP: Deploying the webhook pod @ 10/12/24 13:26:20.834
  STEP: Wait for the deployment to be ready @ 10/12/24 13:26:20.851
  I1012 13:26:20.860717 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:26:22.874
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:26:22.887
  I1012 13:26:23.887833 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/12/24 13:26:23.895
  STEP: verifying the mutating webhook match conditions @ 10/12/24 13:26:23.903
  STEP: updating the mutating webhook match conditions @ 10/12/24 13:26:23.907
  STEP: verifying the mutating webhook match conditions @ 10/12/24 13:26:23.915
  I1012 13:26:23.963177 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7097" for this suite. @ 10/12/24 13:26:23.966
  STEP: Destroying namespace "webhook-markers-8315" for this suite. @ 10/12/24 13:26:23.973
• [3.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 10/12/24 13:26:23.98
  I1012 13:26:23.980952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:26:23.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:23.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:23.996
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:26:23.999
  STEP: Saw pod success @ 10/12/24 13:26:28.024
  I1012 13:26:28.028609 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-6bd46b4b-438b-4108-8dde-c41de4c9f45c container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:26:28.035
  I1012 13:26:28.050622 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3764" for this suite. @ 10/12/24 13:26:28.054
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 10/12/24 13:26:28.06
  I1012 13:26:28.060410 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:26:28.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:26:28.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:26:28.076
  STEP: Creating resourceQuota "e2e-rq-status-sfpnr" @ 10/12/24 13:26:28.083
  I1012 13:26:28.092957 19 resource_quota.go:1102] Resource quota "e2e-rq-status-sfpnr" reports spec: hard cpu limit of 500m
  I1012 13:26:28.092991 19 resource_quota.go:1104] Resource quota "e2e-rq-status-sfpnr" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-sfpnr" /status @ 10/12/24 13:26:28.093
  STEP: Confirm /status for "e2e-rq-status-sfpnr" resourceQuota via watch @ 10/12/24 13:26:28.1
  I1012 13:26:28.102039 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-sfpnr" in namespace "resourcequota-4347" with hard status: v1.ResourceList(nil)
  I1012 13:26:28.102127 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-sfpnr" in namespace "resourcequota-4347" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1012 13:26:28.102214 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-sfpnr" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/12/24 13:26:28.106
  I1012 13:26:28.112252 19 resource_quota.go:1152] Resource quota "e2e-rq-status-sfpnr" reports spec: hard cpu limit of 1
  I1012 13:26:28.112275 19 resource_quota.go:1153] Resource quota "e2e-rq-status-sfpnr" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-sfpnr" /status @ 10/12/24 13:26:28.112
  STEP: Confirm /status for "e2e-rq-status-sfpnr" resourceQuota via watch @ 10/12/24 13:26:28.12
  I1012 13:26:28.121734 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-sfpnr" in namespace "resourcequota-4347" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1012 13:26:28.121777 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-sfpnr" in namespace "resourcequota-4347" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1012 13:26:28.121787 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-sfpnr" /status was patched
  STEP: Get "e2e-rq-status-sfpnr" /status @ 10/12/24 13:26:28.121
  I1012 13:26:28.126300 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-sfpnr" reports status: hard cpu of 1
  I1012 13:26:28.126323 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-sfpnr" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-sfpnr" /status before checking Spec is unchanged @ 10/12/24 13:26:28.129
  I1012 13:26:28.134775 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-sfpnr" reports status: hard cpu of 2
  I1012 13:26:28.134807 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-sfpnr" reports status: hard memory of 2Gi
  I1012 13:26:28.136261 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-sfpnr" in namespace "resourcequota-4347" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1012 13:26:28.140234 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351dbf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351dc50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351dc80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:33.140050 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351de48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351de90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00351dec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:38.143420 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:43.143572 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:48.140503 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e92fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:53.141513 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:26:58.142209 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9a9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9aa68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9aae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:03.141239 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9aca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9acf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9ad20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:08.141820 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9af48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b0b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:13.143222 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e933e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e934a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:18.142332 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e937a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:23.143728 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b2c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:28.143705 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93a40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:33.141892 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93cb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:38.142078 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93e60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93ea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e93ef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:43.141549 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b6b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b6e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:48.140557 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9b938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:53.143513 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9bae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9bb30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9bb78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:27:58.141605 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9bdb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9be48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b9be78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:03.141118 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc21b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:08.142144 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f60c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:13.141424 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f63c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:18.143124 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f65d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:23.142830 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc21c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:28.141405 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc23a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:33.141474 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:38.141466 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc26d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:43.141475 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:48.143147 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053f6dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:53.142000 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-sfpnr" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sfpnr", GenerateName:"", Namespace:"resourcequota-4347", SelfLink:"", UID:"6a2081c5-33ce-47ba-a69a-746f048bb28d", ResourceVersion:"34835", Generation:0, CreationTimestamp:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sfpnr"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc28a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc28d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 12, 13, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004bc2918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1012 13:28:58.143445 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-sfpnr" Spec was unchanged and /status reset
  I1012 13:28:58.143581 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4347" for this suite. @ 10/12/24 13:28:58.147
• [150.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/12/24 13:28:58.155
  I1012 13:28:58.155394 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename apf @ 10/12/24 13:28:58.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:28:58.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:28:58.174
  STEP: getting /apis @ 10/12/24 13:28:58.177
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/12/24 13:28:58.18
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/12/24 13:28:58.181
  STEP: creating @ 10/12/24 13:28:58.183
  STEP: getting @ 10/12/24 13:28:58.198
  STEP: listing @ 10/12/24 13:28:58.201
  STEP: watching @ 10/12/24 13:28:58.204
  I1012 13:28:58.204944 19 flowcontrol.go:620] starting watch
  STEP: patching @ 10/12/24 13:28:58.206
  STEP: updating @ 10/12/24 13:28:58.213
  I1012 13:28:58.221844 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/12/24 13:28:58.221
  STEP: patching /status @ 10/12/24 13:28:58.226
  STEP: updating /status @ 10/12/24 13:28:58.231
  STEP: deleting @ 10/12/24 13:28:58.24
  STEP: deleting a collection @ 10/12/24 13:28:58.255
  I1012 13:28:58.276140 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7616" for this suite. @ 10/12/24 13:28:58.28
• [0.132 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 10/12/24 13:28:58.287
  I1012 13:28:58.287175 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:28:58.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:28:58.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:28:58.303
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:28:58.306
  STEP: Saw pod success @ 10/12/24 13:29:02.34
  I1012 13:29:02.344485 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-4d5bad2b-cd27-4847-a2c1-bddd9629c7bc container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:29:02.355
  I1012 13:29:02.370468 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2572" for this suite. @ 10/12/24 13:29:02.373
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 10/12/24 13:29:02.38
  I1012 13:29:02.380855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:29:02.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:02.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:02.397
  STEP: Creating configMap with name configmap-test-volume-map-bf7c88ca-4e40-415e-a04c-cd48ba8c884a @ 10/12/24 13:29:02.4
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:29:02.405
  STEP: Saw pod success @ 10/12/24 13:29:06.428
  I1012 13:29:06.432954 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-53df1120-79c7-4a53-99c9-4e819b308bff container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:29:06.439
  I1012 13:29:06.455394 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1483" for this suite. @ 10/12/24 13:29:06.46
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/12/24 13:29:06.466
  I1012 13:29:06.466681 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-pred @ 10/12/24 13:29:06.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:06.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:06.485
  I1012 13:29:06.488312 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1012 13:29:06.494997 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 13:29:06.497549 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-23-48 before test
  I1012 13:29:06.503040 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hkx2j from ingress-nginx-kubernetes-worker started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503065 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:29:06.503072 19 predicates.go:957] calico-node-8fbzw from kube-system started at 2024-10-12 12:10:08 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503077 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:29:06.503083 19 predicates.go:957] coredns-5b4857d7c8-2prp4 from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503088 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1012 13:29:06.503115 19 predicates.go:957] kube-state-metrics-5d7bdccd49-fdm9v from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503120 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1012 13:29:06.503127 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-7gfhl from kube-system started at 2024-10-12 11:58:56 +0000 UTC (2 container statuses recorded)
  I1012 13:29:06.503132 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1012 13:29:06.503140 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1012 13:29:06.503151 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-52gtn from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503155 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1012 13:29:06.503160 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-jg7q5 from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.503165 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1012 13:29:06.503171 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:29:06.503176 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:29:06.503180 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:29:06.503186 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-46-196 before test
  I1012 13:29:06.509292 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mtf2j from ingress-nginx-kubernetes-worker started at 2024-10-12 12:08:07 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.509319 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:29:06.509326 19 predicates.go:957] calico-node-z2z5r from kube-system started at 2024-10-12 12:09:19 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.509331 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:29:06.509336 19 predicates.go:957] sonobuoy-e2e-job-f6ba430c2ee44c56 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:29:06.509341 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1012 13:29:06.509346 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:29:06.509352 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-lg8hq from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:29:06.509356 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:29:06.509360 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:29:06.509366 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-91-95 before test
  I1012 13:29:06.515122 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9xvxz from ingress-nginx-kubernetes-worker started at 2024-10-12 12:49:28 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.515150 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:29:06.515158 19 predicates.go:957] calico-node-2k2cp from kube-system started at 2024-10-12 12:10:19 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.515164 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:29:06.515171 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-12 12:12:34 +0000 UTC (1 container statuses recorded)
  I1012 13:29:06.515176 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1012 13:29:06.515182 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-6zbrj from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:29:06.515189 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:29:06.515194 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-23-48 @ 10/12/24 13:29:06.53
  STEP: verifying the node has the label node ip-172-31-46-196 @ 10/12/24 13:29:06.541
  STEP: verifying the node has the label node ip-172-31-91-95 @ 10/12/24 13:29:06.553
  I1012 13:29:06.567449 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-9xvxz requesting resource cpu=0m on Node ip-172-31-91-95
  I1012 13:29:06.567487 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-hkx2j requesting resource cpu=0m on Node ip-172-31-23-48
  I1012 13:29:06.567495 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-mtf2j requesting resource cpu=0m on Node ip-172-31-46-196
  I1012 13:29:06.567503 19 predicates.go:372] Pod calico-node-2k2cp requesting resource cpu=250m on Node ip-172-31-91-95
  I1012 13:29:06.567512 19 predicates.go:372] Pod calico-node-8fbzw requesting resource cpu=250m on Node ip-172-31-23-48
  I1012 13:29:06.567521 19 predicates.go:372] Pod calico-node-z2z5r requesting resource cpu=250m on Node ip-172-31-46-196
  I1012 13:29:06.567529 19 predicates.go:372] Pod coredns-5b4857d7c8-2prp4 requesting resource cpu=100m on Node ip-172-31-23-48
  I1012 13:29:06.567537 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-fdm9v requesting resource cpu=0m on Node ip-172-31-23-48
  I1012 13:29:06.567544 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-7gfhl requesting resource cpu=5m on Node ip-172-31-23-48
  I1012 13:29:06.567552 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-52gtn requesting resource cpu=0m on Node ip-172-31-23-48
  I1012 13:29:06.567559 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-jg7q5 requesting resource cpu=0m on Node ip-172-31-23-48
  I1012 13:29:06.567565 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-91-95
  I1012 13:29:06.567571 19 predicates.go:372] Pod sonobuoy-e2e-job-f6ba430c2ee44c56 requesting resource cpu=0m on Node ip-172-31-46-196
  I1012 13:29:06.567577 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-6zbrj requesting resource cpu=0m on Node ip-172-31-91-95
  I1012 13:29:06.567585 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5 requesting resource cpu=0m on Node ip-172-31-23-48
  I1012 13:29:06.567591 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-lg8hq requesting resource cpu=0m on Node ip-172-31-46-196
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/12/24 13:29:06.567
  I1012 13:29:06.567629 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-91-95
  I1012 13:29:06.577849 19 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-23-48
  I1012 13:29:06.583820 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-46-196
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/12/24 13:29:08.609
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616.17fdb7a3e81316b8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9706/filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616 to ip-172-31-91-95] @ 10/12/24 13:29:08.613
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616.17fdb7a405360d77], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/12/24 13:29:08.613
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616.17fdb7a4063b9660], Reason = [Created], Message = [Created container filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616.17fdb7a4087d3301], Reason = [Started], Message = [Started container filler-pod-65e6bdbf-81e8-4f92-a9a6-5a9f6c768616] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf.17fdb7a3e8c1fd63], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9706/filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf to ip-172-31-23-48] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf.17fdb7a405fd9a18], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf.17fdb7a406f864c2], Reason = [Created], Message = [Created container filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf.17fdb7a409545535], Reason = [Started], Message = [Started container filler-pod-a194f4d5-083c-44cf-a93c-0025854277bf] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb.17fdb7a3e9000f35], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9706/filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb to ip-172-31-46-196] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb.17fdb7a40779f583], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb.17fdb7a4084b0432], Reason = [Created], Message = [Created container filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb.17fdb7a40aad6294], Reason = [Started], Message = [Started container filler-pod-c4e826f0-befa-46b9-ac1b-d0b579a360bb] @ 10/12/24 13:29:08.614
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17fdb7a461a2d490], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 10/12/24 13:29:08.627
  STEP: removing the label node off the node ip-172-31-23-48 @ 10/12/24 13:29:09.626
  STEP: verifying the node doesn't have the label node @ 10/12/24 13:29:09.637
  STEP: removing the label node off the node ip-172-31-46-196 @ 10/12/24 13:29:09.643
  STEP: verifying the node doesn't have the label node @ 10/12/24 13:29:09.655
  STEP: removing the label node off the node ip-172-31-91-95 @ 10/12/24 13:29:09.659
  STEP: verifying the node doesn't have the label node @ 10/12/24 13:29:09.672
  I1012 13:29:09.679743 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9706" for this suite. @ 10/12/24 13:29:09.685
• [3.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/12/24 13:29:09.693
  I1012 13:29:09.693949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/12/24 13:29:09.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:09.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:09.713
  STEP: fetching the /apis discovery document @ 10/12/24 13:29:09.716
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/12/24 13:29:09.717
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/12/24 13:29:09.717
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/12/24 13:29:09.717
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/12/24 13:29:09.719
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/12/24 13:29:09.719
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/12/24 13:29:09.72
  I1012 13:29:09.720573 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9933" for this suite. @ 10/12/24 13:29:09.724
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/12/24 13:29:09.824
  I1012 13:29:09.824860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:29:09.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:09.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:09.839
  STEP: creating a ConfigMap @ 10/12/24 13:29:09.843
  STEP: fetching the ConfigMap @ 10/12/24 13:29:09.847
  STEP: patching the ConfigMap @ 10/12/24 13:29:09.85
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/12/24 13:29:09.855
  STEP: deleting the ConfigMap by collection with a label selector @ 10/12/24 13:29:09.86
  STEP: listing all ConfigMaps in test namespace @ 10/12/24 13:29:09.867
  I1012 13:29:09.870804 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4199" for this suite. @ 10/12/24 13:29:09.875
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 10/12/24 13:29:09.881
  I1012 13:29:09.881967 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context-test @ 10/12/24 13:29:09.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:09.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:09.903
  I1012 13:29:13.934187 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9478" for this suite. @ 10/12/24 13:29:13.938
• [4.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/12/24 13:29:13.947
  I1012 13:29:13.947570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:29:13.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:13.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:13.963
  I1012 13:29:13.966371 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: creating the pod @ 10/12/24 13:29:13.966
  STEP: submitting the pod to kubernetes @ 10/12/24 13:29:13.966
  I1012 13:29:16.032189 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2333" for this suite. @ 10/12/24 13:29:16.036
• [2.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/12/24 13:29:16.044
  I1012 13:29:16.044155 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:29:16.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:16.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:16.06
  STEP: creating the pod @ 10/12/24 13:29:16.063
  STEP: submitting the pod to kubernetes @ 10/12/24 13:29:16.063
  STEP: verifying QOS class is set on the pod @ 10/12/24 13:29:16.07
  I1012 13:29:16.083037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1228" for this suite. @ 10/12/24 13:29:16.087
• [0.052 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 10/12/24 13:29:16.096
  I1012 13:29:16.096464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:29:16.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:16.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:16.111
  STEP: Creating the pod @ 10/12/24 13:29:16.114
  I1012 13:29:18.665617 19 pod_client.go:173] Successfully updated pod "labelsupdatee7eebdda-1fb2-4aaa-83a3-c72c67f06c1a"
  I1012 13:29:22.693319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7127" for this suite. @ 10/12/24 13:29:22.697
• [6.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 10/12/24 13:29:22.705
  I1012 13:29:22.705487 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:29:22.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:22.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:22.721
  STEP: Setting up server cert @ 10/12/24 13:29:22.742
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:29:22.937
  STEP: Deploying the webhook pod @ 10/12/24 13:29:22.946
  STEP: Wait for the deployment to be ready @ 10/12/24 13:29:22.958
  I1012 13:29:22.967965 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:29:24.981
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:29:24.99
  I1012 13:29:25.990320 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1012 13:29:25.998420 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7013-crds.webhook.example.com via the AdmissionRegistration API @ 10/12/24 13:29:26.509
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/12/24 13:29:26.523
  I1012 13:29:29.111425 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6212" for this suite. @ 10/12/24 13:29:29.116
  STEP: Destroying namespace "webhook-markers-9054" for this suite. @ 10/12/24 13:29:29.123
• [6.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 10/12/24 13:29:29.131
  I1012 13:29:29.131771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:29:29.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:29:29.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:29:29.146
  STEP: Creating service test in namespace statefulset-6167 @ 10/12/24 13:29:29.149
  STEP: Creating stateful set ss in namespace statefulset-6167 @ 10/12/24 13:29:29.153
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6167 @ 10/12/24 13:29:29.163
  I1012 13:29:29.166382 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1012 13:29:39.168856 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/12/24 13:29:39.168
  I1012 13:29:39.173505 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:29:39.271607 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:29:39.271647 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:29:39.271657 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:29:39.276580 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1012 13:29:49.278695 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:29:49.278743 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1012 13:29:49.298235 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1012 13:29:49.298296 19 resource.go:175] ss-0  ip-172-31-46-196  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:29 +0000 UTC  }]
  I1012 13:29:49.298302 19 resource.go:178] 
  I1012 13:29:49.298309 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1012 13:29:50.307285 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.993849255s
  I1012 13:29:51.313501 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.98485726s
  I1012 13:29:52.318454 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.978766425s
  I1012 13:29:53.324843 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.973872153s
  I1012 13:29:54.329880 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968032666s
  I1012 13:29:55.336067 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.962207887s
  I1012 13:29:56.342714 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.955940262s
  I1012 13:29:57.347474 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.949791977s
  I1012 13:29:58.353465 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 945.232998ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6167 @ 10/12/24 13:29:59.353
  I1012 13:29:59.358915 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:29:59.443184 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:29:59.443230 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:29:59.443242 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:29:59.443288 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:29:59.532519 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1012 13:29:59.532566 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:29:59.532577 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:29:59.532637 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:29:59.629091 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1012 13:29:59.629149 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:29:59.629159 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1012 13:29:59.632944 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:29:59.632971 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:29:59.632978 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/12/24 13:29:59.632
  I1012 13:29:59.636951 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:29:59.730837 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:29:59.730886 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:29:59.730895 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:29:59.730941 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:29:59.816905 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:29:59.816944 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:29:59.816955 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:29:59.817010 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-6167 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:29:59.912731 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:29:59.912777 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:29:59.912786 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1012 13:29:59.912795 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1012 13:29:59.918610 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1012 13:30:09.926428 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:30:09.926457 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:30:09.926465 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1012 13:30:09.944326 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1012 13:30:09.944385 19 resource.go:175] ss-0  ip-172-31-46-196  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:29 +0000 UTC  }]
  I1012 13:30:09.944404 19 resource.go:175] ss-1  ip-172-31-23-48   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:49 +0000 UTC  }]
  I1012 13:30:09.944420 19 resource.go:175] ss-2  ip-172-31-91-95   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:30:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:29:49 +0000 UTC  }]
  I1012 13:30:09.944425 19 resource.go:178] 
  I1012 13:30:09.944431 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1012 13:30:10.951608 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.994374781s
  I1012 13:30:11.958249 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.987304537s
  I1012 13:30:12.963320 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.980288296s
  I1012 13:30:13.968162 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.976091018s
  I1012 13:30:14.973268 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.970311397s
  I1012 13:30:15.978185 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.966138052s
  I1012 13:30:16.983240 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.961153969s
  I1012 13:30:17.987484 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.956135438s
  I1012 13:30:18.993085 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 951.850142ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6167 @ 10/12/24 13:30:19.994
  I1012 13:30:19.999064 19 rest.go:150] Scaling statefulset ss to 0
  I1012 13:30:20.007244 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:30:20.011112 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6167
  I1012 13:30:20.013791 19 rest.go:150] Scaling statefulset ss to 0
  I1012 13:30:20.020846 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:30:20.024994 19 rest.go:88] Deleting statefulset ss
  I1012 13:30:20.042891 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6167" for this suite. @ 10/12/24 13:30:20.046
• [50.922 seconds]
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/12/24 13:30:20.053
  I1012 13:30:20.053708 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename endpointslice @ 10/12/24 13:30:20.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:30:20.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:30:20.071
  STEP: referencing a single matching pod @ 10/12/24 13:30:22.14
  STEP: referencing matching pods with named port @ 10/12/24 13:30:22.148
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/12/24 13:30:22.154
  STEP: recreating EndpointSlices after they've been deleted @ 10/12/24 13:30:22.162
  I1012 13:30:22.181268 19 endpointslice.go:938] EndpointSlice for Service endpointslice-3021/example-named-port not found
  I1012 13:30:24.187545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3021" for this suite. @ 10/12/24 13:30:24.192
• [4.145 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 10/12/24 13:30:24.198
  I1012 13:30:24.198555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:30:24.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:30:24.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:30:24.214
  STEP: Discovering how many secrets are in namespace by default @ 10/12/24 13:30:24.217
  STEP: Counting existing ResourceQuota @ 10/12/24 13:30:29.221
  STEP: Creating a ResourceQuota @ 10/12/24 13:30:34.225
  STEP: Ensuring resource quota status is calculated @ 10/12/24 13:30:34.231
  STEP: Creating a Secret @ 10/12/24 13:30:36.237
  STEP: Ensuring resource quota status captures secret creation @ 10/12/24 13:30:36.248
  STEP: Deleting a secret @ 10/12/24 13:30:38.255
  STEP: Ensuring resource quota status released usage @ 10/12/24 13:30:38.265
  I1012 13:30:40.269809 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9781" for this suite. @ 10/12/24 13:30:40.278
• [16.087 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/12/24 13:30:40.286
  I1012 13:30:40.286062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename container-runtime @ 10/12/24 13:30:40.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:30:40.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:30:40.312
  STEP: create the container @ 10/12/24 13:30:40.319
  W1012 13:30:40.330514      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/12/24 13:30:40.33
  STEP: get the container status @ 10/12/24 13:30:43.354
  STEP: the container should be terminated @ 10/12/24 13:30:43.358
  STEP: the termination message should be set @ 10/12/24 13:30:43.358
  I1012 13:30:43.358979 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/12/24 13:30:43.358
  I1012 13:30:43.373820 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6978" for this suite. @ 10/12/24 13:30:43.378
• [3.099 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/12/24 13:30:43.384
  I1012 13:30:43.384878 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename tables @ 10/12/24 13:30:43.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:30:43.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:30:43.402
  I1012 13:30:43.408535 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1540" for this suite. @ 10/12/24 13:30:43.412
• [0.035 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 10/12/24 13:30:43.419
  I1012 13:30:43.419838 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:30:43.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:30:43.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:30:43.437
  STEP: Creating configMap with name configmap-test-upd-1675ad9a-943d-438a-b953-ef53b0ce116e @ 10/12/24 13:30:43.443
  STEP: Creating the pod @ 10/12/24 13:30:43.449
  STEP: Updating configmap configmap-test-upd-1675ad9a-943d-438a-b953-ef53b0ce116e @ 10/12/24 13:30:45.483
  STEP: waiting to observe update in volume @ 10/12/24 13:30:45.489
  I1012 13:32:11.868983 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5833" for this suite. @ 10/12/24 13:32:11.873
• [88.464 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 10/12/24 13:32:11.883
  I1012 13:32:11.883465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:32:11.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:11.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:11.907
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/12/24 13:32:11.912
  I1012 13:32:11.913066 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2530 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1012 13:32:11.968649 19 builder.go:146] stderr: ""
  I1012 13:32:11.968691 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/12/24 13:32:11.968
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/12/24 13:32:17.019
  I1012 13:32:17.019940 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2530 get pod e2e-test-httpd-pod -o json'
  I1012 13:32:17.069421 19 builder.go:146] stderr: ""
  I1012 13:32:17.069539 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-10-12T13:32:11Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2530\",\n        \"resourceVersion\": \"36361\",\n        \"uid\": \"f0fedb61-319b-468d-a747-b27ecab857b6\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5pjjv\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-91-95\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5pjjv\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-12T13:32:12Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-12T13:32:11Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-12T13:32:12Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-12T13:32:12Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-12T13:32:11Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://fbcb7f90113e380f12a3ec2e95fefac168e03fab9cc78955a7d8fa94429e241b\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-10-12T13:32:12Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5pjjv\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.91.95\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.91.95\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.61.117\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.61.117\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-10-12T13:32:11Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/12/24 13:32:17.069
  I1012 13:32:17.069737 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2530 replace -f -'
  I1012 13:32:17.164073 19 builder.go:146] stderr: ""
  I1012 13:32:17.164131 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/12/24 13:32:17.164
  I1012 13:32:17.167986 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-2530 delete pods e2e-test-httpd-pod'
  I1012 13:32:18.731929 19 builder.go:146] stderr: ""
  I1012 13:32:18.731970 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1012 13:32:18.732183 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2530" for this suite. @ 10/12/24 13:32:18.736
• [6.860 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 10/12/24 13:32:18.743
  I1012 13:32:18.743713 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:32:18.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:18.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:18.779
  STEP: Creating simple DaemonSet "daemon-set" @ 10/12/24 13:32:18.808
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 13:32:18.815
  I1012 13:32:18.819993 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:18.820026 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:18.822905 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:32:18.822927 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:32:19.819689 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:19.819728 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:19.823720 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:32:19.823748 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:32:20.820734 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:20.820776 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:32:20.824111 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:32:20.824136 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/12/24 13:32:20.828
  I1012 13:32:20.832806 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/12/24 13:32:20.832
  I1012 13:32:20.843629 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/12/24 13:32:20.843
  I1012 13:32:20.845562 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1012 13:32:20.845643 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.845828 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.845923 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.846057 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.846144 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8812 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1012 13:32:20.846168 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/12/24 13:32:20.846
  STEP: watching for the daemon set status to be patched @ 10/12/24 13:32:20.852
  I1012 13:32:20.854518 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1012 13:32:20.854611 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.854691 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.854879 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.854939 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.854961 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8812 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1012 13:32:20.855025 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1012 13:32:20.855043 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8812 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1012 13:32:20.855052 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 13:32:20.859
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8812, will wait for the garbage collector to delete the pods @ 10/12/24 13:32:20.859
  I1012 13:32:20.921493 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.211506ms
  I1012 13:32:21.022474 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.983432ms
  I1012 13:32:22.027924 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:32:22.027964 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 13:32:22.032321 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36484"},"items":null}

  I1012 13:32:22.035264 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36484"},"items":null}

  I1012 13:32:22.051010 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8812" for this suite. @ 10/12/24 13:32:22.054
• [3.317 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 10/12/24 13:32:22.061
  I1012 13:32:22.061411 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 13:32:22.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:22.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:22.077
  STEP: Creating ReplicationController "e2e-rc-sqvqr" @ 10/12/24 13:32:22.08
  I1012 13:32:22.086230 19 rc.go:792] Get Replication Controller "e2e-rc-sqvqr" to confirm replicas
  I1012 13:32:23.086551 19 rc.go:792] Get Replication Controller "e2e-rc-sqvqr" to confirm replicas
  I1012 13:32:23.090839 19 rc.go:801] Found 1 replicas for "e2e-rc-sqvqr" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-sqvqr" @ 10/12/24 13:32:23.09
  STEP: Updating a scale subresource @ 10/12/24 13:32:23.094
  STEP: Verifying replicas where modified for replication controller "e2e-rc-sqvqr" @ 10/12/24 13:32:23.101
  I1012 13:32:23.101080 19 rc.go:792] Get Replication Controller "e2e-rc-sqvqr" to confirm replicas
  I1012 13:32:24.101160 19 rc.go:792] Get Replication Controller "e2e-rc-sqvqr" to confirm replicas
  I1012 13:32:24.106654 19 rc.go:801] Found 2 replicas for "e2e-rc-sqvqr" replication controller
  I1012 13:32:24.106879 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5816" for this suite. @ 10/12/24 13:32:24.111
• [2.058 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/12/24 13:32:24.119
  I1012 13:32:24.119851 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:32:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:24.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:24.135
  STEP: Creating secret with name secret-test-903f48fd-dd51-4622-be8b-a6e1fd093310 @ 10/12/24 13:32:24.138
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:32:24.145
  STEP: Saw pod success @ 10/12/24 13:32:28.169
  I1012 13:32:28.173813 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-9fc3bd60-c151-4db2-9a63-448fc966c773 container secret-env-test: <nil>
  STEP: delete the pod @ 10/12/24 13:32:28.181
  I1012 13:32:28.195795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1883" for this suite. @ 10/12/24 13:32:28.198
• [4.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/12/24 13:32:28.204
  I1012 13:32:28.204906 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename hostport @ 10/12/24 13:32:28.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:28.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:28.222
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/12/24 13:32:28.229
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.23.48 on the node which pod1 resides and expect scheduled @ 10/12/24 13:32:30.248
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.23.48 but use UDP protocol on the node which pod2 resides @ 10/12/24 13:32:32.262
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/12/24 13:32:46.324
  I1012 13:32:46.324236 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.23.48 http://127.0.0.1:54323/hostname] Namespace:hostport-2174 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:32:46.324255 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:32:46.324762 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:32:46.324814 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2174/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.23.48+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.48, port: 54323 @ 10/12/24 13:32:46.37
  I1012 13:32:46.370660 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.23.48:54323/hostname] Namespace:hostport-2174 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:32:46.370678 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:32:46.371160 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:32:46.371210 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2174/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.23.48%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.48, port: 54323 UDP @ 10/12/24 13:32:46.409
  I1012 13:32:46.409221 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.23.48 54323] Namespace:hostport-2174 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:32:46.409240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:32:46.409757 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:32:46.409866 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2174/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.23.48+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1012 13:32:51.453903 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2174" for this suite. @ 10/12/24 13:32:51.458
• [23.260 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/12/24 13:32:51.465
  I1012 13:32:51.465492 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/12/24 13:32:51.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:51.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:51.483
  I1012 13:32:51.486891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:32:54.566122 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9928" for this suite. @ 10/12/24 13:32:54.571
• [3.114 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 10/12/24 13:32:54.579
  I1012 13:32:54.579202 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:32:54.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:32:54.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:32:54.596
  STEP: Creating a ResourceQuota with terminating scope @ 10/12/24 13:32:54.599
  STEP: Ensuring ResourceQuota status is calculated @ 10/12/24 13:32:54.603
  STEP: Creating a ResourceQuota with not terminating scope @ 10/12/24 13:32:56.608
  STEP: Ensuring ResourceQuota status is calculated @ 10/12/24 13:32:56.612
  STEP: Creating a long running pod @ 10/12/24 13:32:58.618
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/12/24 13:32:58.632
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/12/24 13:33:00.638
  STEP: Deleting the pod @ 10/12/24 13:33:02.643
  STEP: Ensuring resource quota status released the pod usage @ 10/12/24 13:33:02.658
  STEP: Creating a terminating pod @ 10/12/24 13:33:04.664
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/12/24 13:33:04.674
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/12/24 13:33:06.678
  STEP: Deleting the pod @ 10/12/24 13:33:08.683
  STEP: Ensuring resource quota status released the pod usage @ 10/12/24 13:33:08.699
  I1012 13:33:10.705727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9075" for this suite. @ 10/12/24 13:33:10.709
• [16.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/12/24 13:33:10.717
  I1012 13:33:10.717075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:33:10.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:10.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:10.735
  I1012 13:33:10.759023 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/12/24 13:33:10.764
  I1012 13:33:10.769413 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:10.769445 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/12/24 13:33:10.769
  I1012 13:33:10.788958 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:10.788997 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:33:11.790217 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:11.790253 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:33:12.791040 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:33:12.791077 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/12/24 13:33:12.795
  I1012 13:33:12.815501 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:33:12.815543 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1012 13:33:13.812849 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:13.812885 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/12/24 13:33:13.812
  I1012 13:33:13.825621 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:13.825656 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:33:14.824663 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:14.824701 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:33:15.822064 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:33:15.822109 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 13:33:15.828
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3767, will wait for the garbage collector to delete the pods @ 10/12/24 13:33:15.828
  I1012 13:33:15.887924 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.376759ms
  I1012 13:33:15.988342 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.415062ms
  I1012 13:33:17.194513 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:33:17.194557 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 13:33:17.197789 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36944"},"items":null}

  I1012 13:33:17.204917 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36944"},"items":null}

  I1012 13:33:17.228351 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3767" for this suite. @ 10/12/24 13:33:17.231
• [6.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/12/24 13:33:17.239
  I1012 13:33:17.239664 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 13:33:17.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:17.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:17.253
  STEP: creating a Deployment @ 10/12/24 13:33:17.26
  STEP: waiting for Deployment to be created @ 10/12/24 13:33:17.265
  STEP: waiting for all Replicas to be Ready @ 10/12/24 13:33:17.267
  I1012 13:33:17.268912 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.268934 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.277958 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.278009 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.293361 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.293402 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.316074 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:17.316137 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1012 13:33:18.080529 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1012 13:33:18.080563 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1012 13:33:18.838368 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/12/24 13:33:18.838
  I1012 13:33:18.845208 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/12/24 13:33:18.845
  I1012 13:33:18.846885 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846905 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846914 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846921 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846929 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846935 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846984 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.846996 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 0
  I1012 13:33:18.847008 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:18.847015 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:18.847025 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.847030 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.847150 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.847161 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.855164 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.855199 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.878425 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.878459 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:18.895437 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:18.895475 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:18.907404 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:18.907439 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:19.847346 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:19.847388 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:19.870559 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  STEP: listing Deployments @ 10/12/24 13:33:19.87
  I1012 13:33:19.874872 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/12/24 13:33:19.874
  I1012 13:33:19.888462 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/12/24 13:33:19.888
  I1012 13:33:19.897548 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:19.907367 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:19.960378 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:19.977378 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:19.988776 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:20.856258 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:20.888496 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:20.898191 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1012 13:33:22.099195 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/12/24 13:33:22.123
  STEP: fetching the DeploymentStatus @ 10/12/24 13:33:22.13
  I1012 13:33:22.138075 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:22.138167 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:22.138248 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:22.138263 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:22.138271 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 1
  I1012 13:33:22.138353 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:22.138362 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:22.138370 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 2
  I1012 13:33:22.138442 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-920 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/12/24 13:33:22.138
  I1012 13:33:22.147771 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.147805 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.147832 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.147900 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.147913 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.147920 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148069 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148087 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148112 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148225 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148240 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.148252 19 deployment.go:475] observed event type MODIFIED
  I1012 13:33:22.152228 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1012 13:33:22.158175 19 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-920",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40c59a82-6b3b-4e5f-b5a2-8daf3f234528",
      ResourceVersion: (string) (len=5) "37116",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "976bb1d2-44f2-418a-9ce2-7988d49bea8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 37 36 62  62 31 64 32 2d 34 34 66  |":\"976bb1d2-44f|
              00000130  32 2d 34 31 38 61 2d 39  63 65 32 2d 37 39 38 38  |2-418a-9ce2-7988|
              00000140  64 34 39 62 65 61 38 65  5c 22 7d 22 3a 7b 7d 7d  |d49bea8e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1012 13:33:22.162596 19 deployment.go:669] pod: "test-deployment-6c86c7f765-jf2qg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-jf2qg",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-920",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01da08b0-8c04-45f9-9e31-91e11b16f661",
      ResourceVersion: (string) (len=5) "37115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "40c59a82-6b3b-4e5f-b5a2-8daf3f234528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 30 63 35 39 61 38 32  |uid\":\"40c59a82|
              000000a0  2d 36 62 33 62 2d 34 65  35 66 2d 62 35 61 32 2d  |-6b3b-4e5f-b5a2-|
              000000b0  38 64 61 66 33 66 32 33  34 35 32 38 5c 22 7d 22  |8daf3f234528\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 31 34 5c 22 7d  |2.168.195.214\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf75b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf75b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336801,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd3cd8b84622af544999024a004b43a9a11c0cfc90b33b1a0aa87bb5aa66d04c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sf75b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1012 13:33:22.164764 19 deployment.go:669] pod: "test-deployment-6c86c7f765-x7gwd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-x7gwd",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-920",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "764c9f9c-5290-4bcf-9cdd-8001e6025f03",
      ResourceVersion: (string) (len=5) "37074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "40c59a82-6b3b-4e5f-b5a2-8daf3f234528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 30 63 35 39 61 38 32  |uid\":\"40c59a82|
              000000a0  2d 36 62 33 62 2d 34 65  35 66 2d 62 35 61 32 2d  |-6b3b-4e5f-b5a2-|
              000000b0  38 64 61 66 33 66 32 33  34 35 32 38 5c 22 7d 22  |8daf3f234528\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 37 39 5c 22 7d 22 3a  |2.168.61.79\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fk79d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fk79d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336800,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://662c71800fb90fde09463b4b6505e135d4725729ffcdc3453ff0652d9495f69c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fk79d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1012 13:33:22.166347 19 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-920",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f70fa5c4-bc45-4402-bb8d-b87f4e3c9c3f",
      ResourceVersion: (string) (len=5) "37029",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "976bb1d2-44f2-418a-9ce2-7988d49bea8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 37 36 62  62 31 64 32 2d 34 34 66  |":\"976bb1d2-44f|
              00000130  32 2d 34 31 38 61 2d 39  63 65 32 2d 37 39 38 38  |2-418a-9ce2-7988|
              00000140  64 34 39 62 65 61 38 65  5c 22 7d 22 3a 7b 7d 7d  |d49bea8e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1012 13:33:22.170603 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-920" for this suite. @ 10/12/24 13:33:22.175
• [4.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 10/12/24 13:33:22.182
  I1012 13:33:22.182146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:33:22.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:22.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:22.2
  STEP: Setting up server cert @ 10/12/24 13:33:22.218
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:33:22.342
  STEP: Deploying the webhook pod @ 10/12/24 13:33:22.349
  STEP: Wait for the deployment to be ready @ 10/12/24 13:33:22.361
  I1012 13:33:22.369915 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:33:24.383
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:33:24.396
  I1012 13:33:25.396358 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/12/24 13:33:25.405
  STEP: create the configmap with a random name @ 10/12/24 13:33:25.422
  STEP: verify the configmap is mutated @ 10/12/24 13:33:25.431
  STEP: create the configmap with 'skip-me' name @ 10/12/24 13:33:25.431
  I1012 13:33:25.484485 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8421" for this suite. @ 10/12/24 13:33:25.488
  STEP: Destroying namespace "webhook-markers-2926" for this suite. @ 10/12/24 13:33:25.494
• [3.320 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 10/12/24 13:33:25.502
  I1012 13:33:25.502551 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:33:25.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:25.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:25.517
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:33:25.52
  STEP: Saw pod success @ 10/12/24 13:33:29.544
  I1012 13:33:29.548785 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-e2355514-5c96-4c17-90c8-5715f688c1f9 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:33:29.554
  I1012 13:33:29.570088 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4955" for this suite. @ 10/12/24 13:33:29.574
• [4.080 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/12/24 13:33:29.582
  I1012 13:33:29.582365 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/12/24 13:33:29.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:29.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:29.596
  STEP: Creating 50 configmaps @ 10/12/24 13:33:29.599
  STEP: Creating RC which spawns configmap-volume pods @ 10/12/24 13:33:29.842
  I1012 13:33:29.987864 19 resource.go:87] Pod name wrapped-volume-race-3d854d57-f29b-4644-af96-a94493e90251: Found 3 pods out of 5
  I1012 13:33:34.996405 19 resource.go:87] Pod name wrapped-volume-race-3d854d57-f29b-4644-af96-a94493e90251: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/12/24 13:33:34.996
  STEP: Creating RC which spawns configmap-volume pods @ 10/12/24 13:33:35.02
  I1012 13:33:35.032000 19 resource.go:87] Pod name wrapped-volume-race-3d31b10a-6d9f-40f3-a701-2db3a053ce17: Found 0 pods out of 5
  I1012 13:33:40.041203 19 resource.go:87] Pod name wrapped-volume-race-3d31b10a-6d9f-40f3-a701-2db3a053ce17: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/12/24 13:33:40.041
  STEP: Creating RC which spawns configmap-volume pods @ 10/12/24 13:33:40.067
  I1012 13:33:40.080988 19 resource.go:87] Pod name wrapped-volume-race-22dd7b61-5262-4d03-853b-d4293b7aeb5f: Found 0 pods out of 5
  I1012 13:33:45.093693 19 resource.go:87] Pod name wrapped-volume-race-22dd7b61-5262-4d03-853b-d4293b7aeb5f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/12/24 13:33:45.093
  STEP: deleting ReplicationController wrapped-volume-race-22dd7b61-5262-4d03-853b-d4293b7aeb5f in namespace emptydir-wrapper-6106, will wait for the garbage collector to delete the pods @ 10/12/24 13:33:45.112
  I1012 13:33:45.177647 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-22dd7b61-5262-4d03-853b-d4293b7aeb5f took: 10.635182ms
  I1012 13:33:45.278642 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-22dd7b61-5262-4d03-853b-d4293b7aeb5f pods took: 100.991706ms
  STEP: deleting ReplicationController wrapped-volume-race-3d31b10a-6d9f-40f3-a701-2db3a053ce17 in namespace emptydir-wrapper-6106, will wait for the garbage collector to delete the pods @ 10/12/24 13:33:46.379
  I1012 13:33:46.445309 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-3d31b10a-6d9f-40f3-a701-2db3a053ce17 took: 9.326765ms
  I1012 13:33:46.546169 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-3d31b10a-6d9f-40f3-a701-2db3a053ce17 pods took: 100.857615ms
  STEP: deleting ReplicationController wrapped-volume-race-3d854d57-f29b-4644-af96-a94493e90251 in namespace emptydir-wrapper-6106, will wait for the garbage collector to delete the pods @ 10/12/24 13:33:48.346
  I1012 13:33:48.410279 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-3d854d57-f29b-4644-af96-a94493e90251 took: 8.991501ms
  I1012 13:33:48.511276 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-3d854d57-f29b-4644-af96-a94493e90251 pods took: 100.984529ms
  STEP: Cleaning up the configMaps @ 10/12/24 13:33:49.411
  I1012 13:33:49.725950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6106" for this suite. @ 10/12/24 13:33:49.73
• [20.163 seconds]
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/12/24 13:33:49.745
  I1012 13:33:49.745345 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replicaset @ 10/12/24 13:33:49.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:49.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:49.768
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/12/24 13:33:49.773
  STEP: When a replicaset with a matching selector is created @ 10/12/24 13:33:51.798
  STEP: Then the orphan pod is adopted @ 10/12/24 13:33:51.804
  STEP: When the matched label of one of its pods change @ 10/12/24 13:33:52.814
  I1012 13:33:52.818950 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/12/24 13:33:52.829
  I1012 13:33:53.841971 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5402" for this suite. @ 10/12/24 13:33:53.846
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/12/24 13:33:53.853
  I1012 13:33:53.853538 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename endpointslice @ 10/12/24 13:33:53.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:53.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:53.87
  I1012 13:33:53.884823 19 endpointslice.go:1045] Endpoints addresses: [172.31.76.59 172.31.90.139] , ports: [6443]
  I1012 13:33:53.884860 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.76.59 172.31.90.139] , ports: [6443]
  I1012 13:33:53.884954 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4760" for this suite. @ 10/12/24 13:33:53.887
• [0.040 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/12/24 13:33:53.893
  I1012 13:33:53.893927 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename discovery @ 10/12/24 13:33:53.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:53.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:53.909
  STEP: Setting up server cert @ 10/12/24 13:33:53.913
  STEP: Requesting APIResourceList from "/api/v1" @ 10/12/24 13:33:54.054
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/12/24 13:33:54.056
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/12/24 13:33:54.057
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/12/24 13:33:54.059
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/12/24 13:33:54.06
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/12/24 13:33:54.061
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/12/24 13:33:54.063
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/12/24 13:33:54.064
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/12/24 13:33:54.066
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/12/24 13:33:54.067
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/12/24 13:33:54.068
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/12/24 13:33:54.069
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/12/24 13:33:54.07
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/12/24 13:33:54.072
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/12/24 13:33:54.073
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/12/24 13:33:54.074
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/12/24 13:33:54.076
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/12/24 13:33:54.077
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/12/24 13:33:54.078
  I1012 13:33:54.080080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5201" for this suite. @ 10/12/24 13:33:54.085
• [0.198 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 10/12/24 13:33:54.092
  I1012 13:33:54.092060 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:33:54.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:54.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:54.108
  STEP: Creating configMap with name configmap-test-upd-a1714540-bb5e-4eb1-bf3b-abfaf05b95f6 @ 10/12/24 13:33:54.115
  STEP: Creating the pod @ 10/12/24 13:33:54.121
  STEP: Waiting for pod with text data @ 10/12/24 13:33:56.14
  STEP: Waiting for pod with binary data @ 10/12/24 13:33:56.15
  I1012 13:33:56.158248 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-257" for this suite. @ 10/12/24 13:33:56.162
• [2.078 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/12/24 13:33:56.17
  I1012 13:33:56.170380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 13:33:56.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:33:56.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:33:56.185
  I1012 13:33:56.191092 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I1012 13:33:56.196592 19 deployment.go:1200] Waiting for observed generation 1
  I1012 13:33:58.205447 19 deployment.go:1205] Waiting for all required pods to come up
  I1012 13:33:58.209682 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/12/24 13:33:58.209
  I1012 13:33:58.209760 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1012 13:33:58.218006 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1012 13:33:58.227134 19 deployment.go:313] Updating deployment webserver-deployment
  I1012 13:33:58.227179 19 deployment.go:1224] Waiting for observed generation 2
  I1012 13:34:00.236252 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1012 13:34:00.239346 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1012 13:34:00.243325 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1012 13:34:00.254409 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1012 13:34:00.254480 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1012 13:34:00.258380 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1012 13:34:00.265329 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1012 13:34:00.265368 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1012 13:34:00.276734 19 deployment.go:313] Updating deployment webserver-deployment
  I1012 13:34:00.276783 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1012 13:34:00.295405 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1012 13:34:00.300391 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1012 13:34:02.308907 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62f9e27d-bbdd-44b9-a851-00df16bed9ef",
      ResourceVersion: (string) (len=5) "38616",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      UnavailableReplicas: (int32) 15,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 13:34:02.313427 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
      ResourceVersion: (string) (len=5) "38392",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "62f9e27d-bbdd-44b9-a851-00df16bed9ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 66 39 65 32  37 64 2d 62 62 64 64 2d  |\"62f9e27d-bbdd-|
              00000120  34 34 62 39 2d 61 38 35  31 2d 30 30 64 66 31 36  |44b9-a851-00df16|
              00000130  62 65 64 39 65 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bed9ef\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 13:34:02.313915 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1012 13:34:02.314144 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
      ResourceVersion: (string) (len=5) "38615",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "62f9e27d-bbdd-44b9-a851-00df16bed9ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 66 39 65 32  37 64 2d 62 62 64 64 2d  |\"62f9e27d-bbdd-|
              00000120  34 34 62 39 2d 61 38 35  31 2d 30 30 64 66 31 36  |44b9-a851-00df16|
              00000130  62 65 64 39 65 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bed9ef\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 13:34:02.319537 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-42bwd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-42bwd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42f4d233-13d5-4641-b627-73eda25cd09b",
      ResourceVersion: (string) (len=5) "38143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 38 38 5c 22 7d  |2.168.127.188\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fszvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fszvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://68e2afad43a94ac38172e1bd57e40c0a9a5f78561c3e20ca3cb13251ba92d5db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fszvz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.321673 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4zwv8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4zwv8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d40502f-1d77-46e0-869e-85e97796b15f",
      ResourceVersion: (string) (len=5) "38375",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfk4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfk4j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kfk4j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.322858 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8h47l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8h47l",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f1d7815-5cd7-4002-b5bd-7a2a18652b96",
      ResourceVersion: (string) (len=5) "38132",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 32 32 5c 22 7d  |2.168.195.222\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8z7ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8z7ts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6369daae26b0b4e68cae45afa8b086f2b037ce18cdd2c84506e83d61983703de",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8z7ts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.327351 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8hdn2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8hdn2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61321de2-690a-46df-9de6-82dc848648ec",
      ResourceVersion: (string) (len=5) "38585",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 31 30 35 5c 22 7d 22  |2.168.61.105\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xxbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xxbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0641f71e32a86be75011b7b427b30d08d087b530e1286a30f873c990c06ce00c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4xxbk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.329841 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9q7r2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9q7r2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06ad6710-1ade-4d70-ae6c-28eb04f0f91c",
      ResourceVersion: (string) (len=5) "38574",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 38 32 5c 22 7d 22 3a  |2.168.61.82\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zbjvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zbjvg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03ddab86a38edaa4e685c88991a0ebb1c315647e8b7ed04827a3c8bc0a95a1e9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zbjvg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.332340 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9qpjl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9qpjl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f561c8a4-28dd-4d25-8581-23e7975efb08",
      ResourceVersion: (string) (len=5) "38608",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 33 38 5c 22 7d  |2.168.195.238\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czzfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czzfp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://63c8e0bd7e8c8d7e02f30ff36c94dcb9f30dc4c2d3b2a907d2e0046a48524860",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-czzfp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.335338 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f2lhn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f2lhn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a1685a1-5a10-44fd-ac24-51db9a209aae",
      ResourceVersion: (string) (len=5) "38593",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 33 34 5c 22 7d  |2.168.195.234\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9ct5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9ct5j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65d906b680d718135ca9dca74054d6244a94e0df34f8d4b4b83bfa60cc3d2898",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9ct5j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.338062 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fgs6r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fgs6r",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abda6ac1-866e-4fcf-98ec-914b97a54584",
      ResourceVersion: (string) (len=5) "38590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 39 30 5c 22 7d 22 3a  |2.168.61.90\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5mn8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5mn8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://932eb8f94453e08465d1fdde3e577576c3072199403d7d0871b380f3defded55",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m5mn8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.339346 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-h5vp5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-h5vp5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10fa8a1a-24be-4fad-b8a2-e155f499b77d",
      ResourceVersion: (string) (len=5) "38600",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 33 33 5c 22 7d  |2.168.195.233\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7zt9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7zt9v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://634146364929640c45d66d7b5925c93c18a1a7e9f03edc9dc47343f8c6f0fb43",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7zt9v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.340621 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hpl4c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hpl4c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c163bb3b-c29d-4500-8809-10c4c59ced8d",
      ResourceVersion: (string) (len=5) "38162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 38 35 5c 22 7d 22 3a  |2.168.61.85\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k6ndm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k6ndm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d87be5b265c665d6d8d232e16517237167bf3ea4eb695fcb3ea712c93390b2b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k6ndm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.341972 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hz8s2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hz8s2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b7e4ec8-7c1c-4cb7-875b-7b7c349bff4d",
      ResourceVersion: (string) (len=5) "38135",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 32 31 5c 22 7d  |2.168.195.221\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ncsr5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ncsr5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fd4306b8deb9f3b4c525b77293dca88186ebf5c53746943480c5aabf9178cdf5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ncsr5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.343338 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kqxk4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kqxk4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee474d95-4217-4e9a-bc71-443a81678536",
      ResourceVersion: (string) (len=5) "38159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 31 31 32 5c 22 7d 22  |2.168.61.112\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4hjtw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4hjtw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6162f2208d2f9ad956902e010840780bfad968d6e76d5dfd1a2fb75cd99667bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4hjtw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.344578 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-l6t42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-l6t42",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84b39df0-a2ae-4081-a687-7b188043af64",
      ResourceVersion: (string) (len=5) "38603",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 33 37 5c 22 7d  |2.168.195.237\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pspzl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pspzl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b0ef7fb18dc3fede8547d7936819ee01a5f9a8da575fa2dd189ac195d3de55cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pspzl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.345816 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mzt82" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mzt82",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd49e5c5-9f4f-4b18-ba44-6a969523e396",
      ResourceVersion: (string) (len=5) "38570",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 38 34 5c 22 7d 22 3a  |2.168.61.84\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf6ls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf6ls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e0d0bef9f0cc61ce632c868f308aa4e738d485c0a967e08f9a943846df36f2a3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sf6ls",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.347296 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n7jf4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n7jf4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12967c13-c8b1-4cf2-b9bd-d5e814d2e2e2",
      ResourceVersion: (string) (len=5) "38613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 37 33 5c 22 7d  |2.168.127.173\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4vtd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4vtd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://05f2f2771c50da743cb2470d457010bad693ae16ded9b48cc2880699cd7c64ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b4vtd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.348832 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qvvnc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qvvnc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c43d720-7a7e-4346-8c40-a6b562306ddb",
      ResourceVersion: (string) (len=5) "38140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 30 35 5c 22 7d  |2.168.195.205\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sd6kg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sd6kg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b2d534bdf89d42c04bf154d82349860dea3cc5e3537552fb8b9ebe2b23af919",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sd6kg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.351306 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rwtrm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rwtrm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa3cdbb2-dc5e-429f-8322-a25317e34ccf",
      ResourceVersion: (string) (len=5) "38393",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7brt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7brt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x7brt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.353539 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tgp6x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tgp6x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b89a983-44dc-4e3d-af31-f9f72831a682",
      ResourceVersion: (string) (len=5) "38146",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 39 31 5c 22 7d  |2.168.127.191\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdbms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdbms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e83b58b340f8cdd939719258c5b763e074fabdf0bbec7f5a960c5413d80d08c6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pdbms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.355614 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-x98h7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-x98h7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83f0c1ab-f448-4af5-b486-222f25dba050",
      ResourceVersion: (string) (len=5) "38149",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  37 2e 31 39 30 5c 22 7d  |2.168.127.190\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ttm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ttm6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ae823ce915a510d0bbd97779c1d555c8b69d780ae801f679c92b87ff02845c38",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ttm6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.356869 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zj9kk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zj9kk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19066bf1-9fbd-47b4-895b-102aa7d48243",
      ResourceVersion: (string) (len=5) "38582",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45fbfa9f-9344-4d59-9507-dcacc25b8fc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  66 62 66 61 39 66 2d 39  |d\":\"45fbfa9f-9|
              00000090  33 34 34 2d 34 64 35 39  2d 39 35 30 37 2d 64 63  |344-4d59-9507-dc|
              000000a0  61 63 63 32 35 62 38 66  63 35 5c 22 7d 22 3a 7b  |acc25b8fc5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 31  2e 31 31 38 5c 22 7d 22  |2.168.61.118\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6fgp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6fgp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://768884ff53f8f243e196d0b24156167bdf3c5bcd310e5d50375c9e6823c3e8c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f6fgp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.358131 19 deployment.go:67] Pod "webserver-deployment-786f49d774-92d2t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-92d2t",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dcf21f7-81e9-4b2b-b620-653fa0f2af62",
      ResourceVersion: (string) (len=5) "38589",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 31 2e 39 37  5c 22 7d 22 3a 7b 22 2e  |68.61.97\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7qwdt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7qwdt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7qwdt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.359515 19 deployment.go:67] Pod "webserver-deployment-786f49d774-f72kc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-f72kc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c08a3443-6a5f-4224-94d5-229661fea0d7",
      ResourceVersion: (string) (len=5) "38618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  38 30 5c 22 7d 22 3a 7b  |68.127.180\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdh2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdh2s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vdh2s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.362835 19 deployment.go:67] Pod "webserver-deployment-786f49d774-gb4cn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gb4cn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "460af4eb-9dfe-4b39-9f57-449fe7314b1c",
      ResourceVersion: (string) (len=5) "38607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 35 2e 32  33 35 5c 22 7d 22 3a 7b  |68.195.235\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hq8fp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hq8fp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hq8fp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.364107 19 deployment.go:67] Pod "webserver-deployment-786f49d774-grr6k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-grr6k",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c311e28-8f6a-481d-b68d-7857cdfdde09",
      ResourceVersion: (string) (len=5) "38286",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 35 2e 32  32 38 5c 22 7d 22 3a 7b  |68.195.228\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94ltc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94ltc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-94ltc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.365348 19 deployment.go:67] Pod "webserver-deployment-786f49d774-j2vl2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j2vl2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5b279e7-ee7b-4450-ad14-fd3d675da138",
      ResourceVersion: (string) (len=5) "38606",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 35 2e 32  33 36 5c 22 7d 22 3a 7b  |68.195.236\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n9xh4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n9xh4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n9xh4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.366618 19 deployment.go:67] Pod "webserver-deployment-786f49d774-l8j9v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-l8j9v",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed433e1b-3b2c-4255-a078-94d1cef72a34",
      ResourceVersion: (string) (len=5) "38620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  34 38 5c 22 7d 22 3a 7b  |68.127.148\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z84dx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z84dx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z84dx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.367892 19 deployment.go:67] Pod "webserver-deployment-786f49d774-lwr6d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lwr6d",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d0ae2aa-52b2-40f2-8735-d6874b054cd4",
      ResourceVersion: (string) (len=5) "38293",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  34 34 5c 22 7d 22 3a 7b  |68.127.144\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-shhtz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-shhtz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-shhtz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.369122 19 deployment.go:67] Pod "webserver-deployment-786f49d774-nw2sh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nw2sh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b73f9bc-b52f-4440-a4f4-233c067cdbe2",
      ResourceVersion: (string) (len=5) "38580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 31 2e 31 30  38 5c 22 7d 22 3a 7b 22  |68.61.108\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q9q5x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q9q5x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q9q5x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.372479 19 deployment.go:67] Pod "webserver-deployment-786f49d774-rmrqv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rmrqv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb8d39f9-55b6-4ac3-8cad-b5272330d74b",
      ResourceVersion: (string) (len=5) "38282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 39 35 2e 32  33 31 5c 22 7d 22 3a 7b  |68.195.231\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-89r7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-89r7j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-89r7j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.373750 19 deployment.go:67] Pod "webserver-deployment-786f49d774-swr8x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-swr8x",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a904160-ee6b-4f07-ad40-105a501b8eb5",
      ResourceVersion: (string) (len=5) "38588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 31 2e 31 32  32 5c 22 7d 22 3a 7b 22  |68.61.122\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jlrzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jlrzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=14) "192.168.61.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.61.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jlrzs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.375034 19 deployment.go:67] Pod "webserver-deployment-786f49d774-z29gm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-z29gm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df15bc1a-ff28-4e84-bbb9-858a4c5641b9",
      ResourceVersion: (string) (len=5) "38491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 37 2e 31  34 37 5c 22 7d 22 3a 7b  |68.127.147\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5gld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5gld",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-23-48",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.23.48",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.23.48"
        }
      },
      PodIP: (string) (len=15) "192.168.127.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w5gld",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.376301 19 deployment.go:67] Pod "webserver-deployment-786f49d774-z9rlp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-z9rlp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "728b4ee2-bf4c-4978-a4e0-38ba25d98e36",
      ResourceVersion: (string) (len=5) "38253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 31 2e 38 36  5c 22 7d 22 3a 7b 22 2e  |68.61.86\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qz44",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qz44",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5qz44",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.377522 19 deployment.go:67] Pod "webserver-deployment-786f49d774-zgcq2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zgcq2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6091",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c902002-cc22-468c-8420-5c51d19562e4",
      ResourceVersion: (string) (len=5) "38257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "f6f3aa6a-f79b-4cca-9dbd-843fcc2cbb7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  66 33 61 61 36 61 2d 66  |d\":\"f6f3aa6a-f|
              00000090  37 39 62 2d 34 63 63 61  2d 39 64 62 64 2d 38 34  |79b-4cca-9dbd-84|
              000000a0  33 66 63 63 32 63 62 62  37 66 5c 22 7d 22 3a 7b  |3fcc2cbb7f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 31 2e 39 31  5c 22 7d 22 3a 7b 22 2e  |68.61.91\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hd47t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hd47t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-91-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.91.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.91.95"
        }
      },
      PodIP: (string) (len=13) "192.168.61.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.61.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hd47t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:34:02.378576 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6091" for this suite. @ 10/12/24 13:34:02.383
• [6.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 10/12/24 13:34:02.393
  I1012 13:34:02.393579 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:34:02.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:02.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:02.41
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/12/24 13:34:02.413
  STEP: Saw pod success @ 10/12/24 13:34:06.438
  I1012 13:34:06.442143 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-fba97a7a-3786-411d-87f3-84508e31cfe8 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:34:06.449
  I1012 13:34:06.465465 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7882" for this suite. @ 10/12/24 13:34:06.469
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 10/12/24 13:34:06.477
  I1012 13:34:06.477805 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 13:34:06.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:06.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:06.493
  STEP: Creating Indexed job @ 10/12/24 13:34:06.496
  STEP: Ensuring job reaches completions @ 10/12/24 13:34:06.504
  STEP: Ensuring pods with index for job exist @ 10/12/24 13:34:16.514
  I1012 13:34:16.518479 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9361" for this suite. @ 10/12/24 13:34:16.521
• [10.051 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 10/12/24 13:34:16.528
  I1012 13:34:16.528541 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:34:16.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:16.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:16.546
  STEP: creating an Endpoint @ 10/12/24 13:34:16.553
  STEP: waiting for available Endpoint @ 10/12/24 13:34:16.557
  STEP: listing all Endpoints @ 10/12/24 13:34:16.558
  STEP: updating the Endpoint @ 10/12/24 13:34:16.562
  STEP: fetching the Endpoint @ 10/12/24 13:34:16.569
  STEP: patching the Endpoint @ 10/12/24 13:34:16.571
  STEP: fetching the Endpoint @ 10/12/24 13:34:16.58
  STEP: deleting the Endpoint by Collection @ 10/12/24 13:34:16.584
  STEP: waiting for Endpoint deletion @ 10/12/24 13:34:16.593
  STEP: fetching the Endpoint @ 10/12/24 13:34:16.595
  I1012 13:34:16.599055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7564" for this suite. @ 10/12/24 13:34:16.603
• [0.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/12/24 13:34:16.61
  I1012 13:34:16.610569 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:34:16.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:16.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:16.626
  STEP: Creating secret with name secret-test-0e459c39-2116-40c0-8753-8ba3741dbf47 @ 10/12/24 13:34:16.63
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:34:16.636
  STEP: Saw pod success @ 10/12/24 13:34:20.66
  I1012 13:34:20.663687 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-e3fd8dc0-5a2c-4941-9f51-0762abe92a97 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:34:20.671
  I1012 13:34:20.691893 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6372" for this suite. @ 10/12/24 13:34:20.695
• [4.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 10/12/24 13:34:20.703
  I1012 13:34:20.703843 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename runtimeclass @ 10/12/24 13:34:20.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:20.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:20.72
  STEP: getting /apis @ 10/12/24 13:34:20.723
  STEP: getting /apis/node.k8s.io @ 10/12/24 13:34:20.727
  STEP: getting /apis/node.k8s.io/v1 @ 10/12/24 13:34:20.728
  STEP: creating @ 10/12/24 13:34:20.729
  STEP: watching @ 10/12/24 13:34:20.745
  I1012 13:34:20.745623 19 runtimeclass.go:275] starting watch
  STEP: getting @ 10/12/24 13:34:20.753
  STEP: listing @ 10/12/24 13:34:20.756
  STEP: patching @ 10/12/24 13:34:20.759
  STEP: updating @ 10/12/24 13:34:20.764
  I1012 13:34:20.770045 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 10/12/24 13:34:20.77
  STEP: deleting a collection @ 10/12/24 13:34:20.783
  I1012 13:34:20.797126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8835" for this suite. @ 10/12/24 13:34:20.8
• [0.105 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 10/12/24 13:34:20.809
  I1012 13:34:20.809312 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:34:20.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:20.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:20.825
  STEP: Setting up server cert @ 10/12/24 13:34:20.846
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:34:20.99
  STEP: Deploying the webhook pod @ 10/12/24 13:34:21
  STEP: Wait for the deployment to be ready @ 10/12/24 13:34:21.01
  I1012 13:34:21.024981 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/12/24 13:34:23.037
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:34:23.048
  I1012 13:34:24.048311 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1012 13:34:24.058029 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2119-crds.webhook.example.com via the AdmissionRegistration API @ 10/12/24 13:34:24.57
  STEP: Creating a custom resource while v1 is storage version @ 10/12/24 13:34:24.584
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/12/24 13:34:26.611
  STEP: Patching the custom resource while v2 is storage version @ 10/12/24 13:34:26.625
  I1012 13:34:27.207630 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2717" for this suite. @ 10/12/24 13:34:27.213
  STEP: Destroying namespace "webhook-markers-1996" for this suite. @ 10/12/24 13:34:27.222
• [6.421 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/12/24 13:34:27.23
  I1012 13:34:27.230143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:34:27.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:27.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:27.258
  STEP: creating a Pod with a static label @ 10/12/24 13:34:27.277
  STEP: watching for Pod to be ready @ 10/12/24 13:34:27.288
  I1012 13:34:27.290991 19 pods.go:945] observed Pod pod-test in namespace pods-2190 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1012 13:34:27.293262 19 pods.go:945] observed Pod pod-test in namespace pods-2190 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  }]
  I1012 13:34:27.311228 19 pods.go:945] observed Pod pod-test in namespace pods-2190 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  }]
  I1012 13:34:28.240690 19 pods.go:948] Found Pod pod-test in namespace pods-2190 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:28 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:28 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-12 13:34:27 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/12/24 13:34:28.245
  STEP: getting the Pod and ensuring that it's patched @ 10/12/24 13:34:28.253
  STEP: replacing the Pod's status Ready condition to False @ 10/12/24 13:34:28.259
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/12/24 13:34:28.271
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/12/24 13:34:28.271
  STEP: watching for the Pod to be deleted @ 10/12/24 13:34:28.28
  I1012 13:34:28.282610 19 pods.go:1058] observed event type MODIFIED
  I1012 13:34:30.254637 19 pods.go:1058] observed event type MODIFIED
  I1012 13:34:30.465781 19 pods.go:1058] observed event type MODIFIED
  I1012 13:34:31.273006 19 pods.go:1058] observed event type MODIFIED
  I1012 13:34:31.279724 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2190" for this suite. @ 10/12/24 13:34:31.284
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/12/24 13:34:31.29
  I1012 13:34:31.290364 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubelet-test @ 10/12/24 13:34:31.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:31.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:31.311
  I1012 13:34:33.343359 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7402" for this suite. @ 10/12/24 13:34:33.347
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 10/12/24 13:34:33.355
  I1012 13:34:33.355073 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:34:33.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:33.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:33.37
  STEP: Creating service test in namespace statefulset-168 @ 10/12/24 13:34:33.374
  STEP: Creating statefulset ss in namespace statefulset-168 @ 10/12/24 13:34:33.378
  I1012 13:34:33.390275 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1012 13:34:43.392028 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/12/24 13:34:43.4
  STEP: updating a scale subresource @ 10/12/24 13:34:43.404
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/12/24 13:34:43.411
  STEP: Patch a scale subresource @ 10/12/24 13:34:43.415
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/12/24 13:34:43.428
  I1012 13:34:43.432379 19 statefulset.go:138] Deleting all statefulset in ns statefulset-168
  I1012 13:34:43.435750 19 rest.go:150] Scaling statefulset ss to 0
  I1012 13:34:53.477372 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:34:53.481604 19 rest.go:88] Deleting statefulset ss
  I1012 13:34:53.498255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-168" for this suite. @ 10/12/24 13:34:53.503
• [20.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/12/24 13:34:53.51
  I1012 13:34:53.510465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename proxy @ 10/12/24 13:34:53.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:53.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:53.527
  I1012 13:34:53.530263 19 proxy.go:293] Creating pod...
  I1012 13:34:55.548813 19 proxy.go:317] Creating service...
  I1012 13:34:55.559567 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/DELETE
  I1012 13:34:55.568498 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1012 13:34:55.568553 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/GET
  I1012 13:34:55.572850 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1012 13:34:55.573046 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/HEAD
  I1012 13:34:55.576559 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1012 13:34:55.576601 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/OPTIONS
  I1012 13:34:55.581337 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1012 13:34:55.581382 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/PATCH
  I1012 13:34:55.585563 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1012 13:34:55.585597 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/POST
  I1012 13:34:55.589205 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1012 13:34:55.589235 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/pods/agnhost/proxy/some/path/with/PUT
  I1012 13:34:55.593336 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1012 13:34:55.593380 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/DELETE
  I1012 13:34:55.598641 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1012 13:34:55.598669 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/GET
  I1012 13:34:55.604222 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1012 13:34:55.604264 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/HEAD
  I1012 13:34:55.610249 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1012 13:34:55.610295 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/OPTIONS
  I1012 13:34:55.615687 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1012 13:34:55.615723 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/PATCH
  I1012 13:34:55.620959 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1012 13:34:55.621005 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/POST
  I1012 13:34:55.627369 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1012 13:34:55.627412 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1233/services/test-service/proxy/some/path/with/PUT
  I1012 13:34:55.632235 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1012 13:34:55.632365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1233" for this suite. @ 10/12/24 13:34:55.636
• [2.135 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/12/24 13:34:55.645
  I1012 13:34:55.645304 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename controllerrevisions @ 10/12/24 13:34:55.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:55.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:55.664
  STEP: Creating DaemonSet "e2e-l9lsq-daemon-set" @ 10/12/24 13:34:55.686
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 13:34:55.693
  I1012 13:34:55.700911 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:34:55.700996 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:34:55.709368 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-l9lsq-daemon-set: 0
  I1012 13:34:55.709420 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  I1012 13:34:56.698525 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:34:56.698561 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:34:56.702128 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-l9lsq-daemon-set: 3
  I1012 13:34:56.702151 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-l9lsq-daemon-set
  STEP: Confirm DaemonSet "e2e-l9lsq-daemon-set" successfully created with "daemonset-name=e2e-l9lsq-daemon-set" label @ 10/12/24 13:34:56.705
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-l9lsq-daemon-set" @ 10/12/24 13:34:56.713
  I1012 13:34:56.716623 19 controller_revision.go:162] Located ControllerRevision: "e2e-l9lsq-daemon-set-5f68c497bc"
  STEP: Patching ControllerRevision "e2e-l9lsq-daemon-set-5f68c497bc" @ 10/12/24 13:34:56.72
  I1012 13:34:56.728133 19 controller_revision.go:173] e2e-l9lsq-daemon-set-5f68c497bc has been patched
  STEP: Create a new ControllerRevision @ 10/12/24 13:34:56.728
  I1012 13:34:56.732418 19 controller_revision.go:191] Created ControllerRevision: e2e-l9lsq-daemon-set-696fbcdf6c
  STEP: Confirm that there are two ControllerRevisions @ 10/12/24 13:34:56.732
  I1012 13:34:56.732477 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1012 13:34:56.736435 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-l9lsq-daemon-set-5f68c497bc" @ 10/12/24 13:34:56.736
  STEP: Confirm that there is only one ControllerRevision @ 10/12/24 13:34:56.742
  I1012 13:34:56.742773 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1012 13:34:56.746263 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-l9lsq-daemon-set-696fbcdf6c" @ 10/12/24 13:34:56.75
  I1012 13:34:56.758312 19 controller_revision.go:220] e2e-l9lsq-daemon-set-696fbcdf6c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/12/24 13:34:56.758
  W1012 13:34:56.764454      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/12/24 13:34:56.764
  I1012 13:34:56.764582 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1012 13:34:57.765460 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1012 13:34:57.770357 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-l9lsq-daemon-set-696fbcdf6c=updated" @ 10/12/24 13:34:57.77
  STEP: Confirm that there is only one ControllerRevision @ 10/12/24 13:34:57.779
  I1012 13:34:57.779370 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1012 13:34:57.783506 19 controller_revision.go:265] Found 1 ControllerRevisions
  I1012 13:34:57.786433 19 controller_revision.go:246] ControllerRevision "e2e-l9lsq-daemon-set-9bccc9c9d" has revision 3
  STEP: Deleting DaemonSet "e2e-l9lsq-daemon-set" @ 10/12/24 13:34:57.79
  STEP: deleting DaemonSet.extensions e2e-l9lsq-daemon-set in namespace controllerrevisions-5465, will wait for the garbage collector to delete the pods @ 10/12/24 13:34:57.79
  I1012 13:34:57.852633 19 resources.go:139] Deleting DaemonSet.extensions e2e-l9lsq-daemon-set took: 9.25553ms
  I1012 13:34:57.953658 19 resources.go:163] Terminating DaemonSet.extensions e2e-l9lsq-daemon-set pods took: 101.010508ms
  I1012 13:34:59.358251 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-l9lsq-daemon-set: 0
  I1012 13:34:59.358291 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-l9lsq-daemon-set
  I1012 13:34:59.362935 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39741"},"items":null}

  I1012 13:34:59.366636 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39742"},"items":null}

  I1012 13:34:59.380250 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5465" for this suite. @ 10/12/24 13:34:59.384
• [3.747 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 10/12/24 13:34:59.392
  I1012 13:34:59.392307 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:34:59.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:59.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:59.409
  I1012 13:34:59.454850 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7447" for this suite. @ 10/12/24 13:34:59.458
• [0.073 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 10/12/24 13:34:59.465
  I1012 13:34:59.465596 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:34:59.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:34:59.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:34:59.483
  STEP: Counting existing ResourceQuota @ 10/12/24 13:34:59.486
  STEP: Creating a ResourceQuota @ 10/12/24 13:35:04.49
  STEP: Ensuring resource quota status is calculated @ 10/12/24 13:35:04.494
  STEP: Creating a ReplicationController @ 10/12/24 13:35:06.499
  STEP: Ensuring resource quota status captures replication controller creation @ 10/12/24 13:35:06.512
  STEP: Deleting a ReplicationController @ 10/12/24 13:35:08.517
  STEP: Ensuring resource quota status released usage @ 10/12/24 13:35:08.524
  I1012 13:35:10.528816 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4143" for this suite. @ 10/12/24 13:35:10.532
• [11.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/12/24 13:35:10.544
  I1012 13:35:10.544230 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:35:10.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:10.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:10.562
  STEP: Creating projection with secret that has name projected-secret-test-map-4a783991-00cb-4941-9301-eeb987009be3 @ 10/12/24 13:35:10.565
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:35:10.57
  STEP: Saw pod success @ 10/12/24 13:35:12.589
  I1012 13:35:12.593720 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-c8e0eb8a-3de4-49ef-aeff-79183d37a73d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:35:12.601
  I1012 13:35:12.615445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9343" for this suite. @ 10/12/24 13:35:12.62
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 10/12/24 13:35:12.627
  I1012 13:35:12.627859 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:35:12.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:12.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:12.643
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:35:12.646
  STEP: Saw pod success @ 10/12/24 13:35:14.664
  I1012 13:35:14.668613 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-30f5bd9e-1056-41ae-8400-16d81b0b839b container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:35:14.675
  I1012 13:35:14.689452 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6808" for this suite. @ 10/12/24 13:35:14.693
• [2.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 10/12/24 13:35:14.699
  I1012 13:35:14.699750 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 13:35:14.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:14.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:14.719
  STEP: creating a ReplicationController @ 10/12/24 13:35:14.725
  STEP: waiting for RC to be added @ 10/12/24 13:35:14.731
  STEP: waiting for available Replicas @ 10/12/24 13:35:14.731
  STEP: patching ReplicationController @ 10/12/24 13:35:15.369
  STEP: waiting for RC to be modified @ 10/12/24 13:35:15.377
  STEP: patching ReplicationController status @ 10/12/24 13:35:15.377
  STEP: waiting for RC to be modified @ 10/12/24 13:35:15.383
  STEP: waiting for available Replicas @ 10/12/24 13:35:15.383
  STEP: fetching ReplicationController status @ 10/12/24 13:35:15.388
  STEP: patching ReplicationController scale @ 10/12/24 13:35:15.391
  STEP: waiting for RC to be modified @ 10/12/24 13:35:15.4
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/12/24 13:35:15.4
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/12/24 13:35:16.467
  STEP: updating ReplicationController status @ 10/12/24 13:35:16.47
  STEP: waiting for RC to be modified @ 10/12/24 13:35:16.477
  STEP: listing all ReplicationControllers @ 10/12/24 13:35:16.477
  STEP: checking that ReplicationController has expected values @ 10/12/24 13:35:16.481
  STEP: deleting ReplicationControllers by collection @ 10/12/24 13:35:16.481
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/12/24 13:35:16.489
  I1012 13:35:16.515781 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1012 13:35:16.515885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3357" for this suite. @ 10/12/24 13:35:16.52
• [1.827 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 10/12/24 13:35:16.527
  I1012 13:35:16.527215 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:35:16.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:16.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:16.544
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/12/24 13:35:16.547
  E1012 13:35:17.516152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:18.516359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:35:18.565
  I1012 13:35:18.569595 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-b3bf323e-2944-4265-9cf8-40100f6244f5 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:35:18.575
  I1012 13:35:18.590756 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7265" for this suite. @ 10/12/24 13:35:18.595
• [2.077 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 10/12/24 13:35:18.604
  I1012 13:35:18.604064 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 13:35:18.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:18.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:18.624
  STEP: Creating a job @ 10/12/24 13:35:18.627
  STEP: Ensuring active pods == parallelism @ 10/12/24 13:35:18.633
  E1012 13:35:19.516474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:20.516791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 10/12/24 13:35:20.639
  STEP: deleting Job.batch foo in namespace job-4625, will wait for the garbage collector to delete the pods @ 10/12/24 13:35:20.639
  I1012 13:35:20.700908 19 resources.go:139] Deleting Job.batch foo took: 8.416419ms
  I1012 13:35:20.801643 19 resources.go:163] Terminating Job.batch foo pods took: 100.701418ms
  STEP: Ensuring job was deleted @ 10/12/24 13:35:21.502
  I1012 13:35:21.505754 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4625" for this suite. @ 10/12/24 13:35:21.509
  E1012 13:35:21.517038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [2.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 10/12/24 13:35:21.517
  I1012 13:35:21.517863 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 13:35:21.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:21.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:21.537
  I1012 13:35:21.541278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  E1012 13:35:22.517281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:23.517648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1012 13:35:24.079787      19 warnings.go:70] unknown field "alpha"
  W1012 13:35:24.079809      19 warnings.go:70] unknown field "beta"
  W1012 13:35:24.079812      19 warnings.go:70] unknown field "delta"
  W1012 13:35:24.079816      19 warnings.go:70] unknown field "epsilon"
  W1012 13:35:24.079819      19 warnings.go:70] unknown field "gamma"
  E1012 13:35:24.518510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:24.624191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9281" for this suite. @ 10/12/24 13:35:24.627
• [3.117 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 10/12/24 13:35:24.634
  I1012 13:35:24.634601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename security-context-test @ 10/12/24 13:35:24.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:24.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:24.652
  E1012 13:35:25.518669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:26.519725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:26.673405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6293" for this suite. @ 10/12/24 13:35:26.677
• [2.050 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/12/24 13:35:26.685
  I1012 13:35:26.685025 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename apf @ 10/12/24 13:35:26.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:26.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:26.703
  STEP: getting /apis @ 10/12/24 13:35:26.706
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/12/24 13:35:26.71
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/12/24 13:35:26.711
  STEP: creating @ 10/12/24 13:35:26.712
  STEP: getting @ 10/12/24 13:35:26.732
  STEP: listing @ 10/12/24 13:35:26.743
  STEP: watching @ 10/12/24 13:35:26.754
  I1012 13:35:26.754182 19 flowcontrol.go:394] starting watch
  STEP: patching @ 10/12/24 13:35:26.759
  STEP: updating @ 10/12/24 13:35:26.77
  I1012 13:35:26.783896 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 10/12/24 13:35:26.784
  STEP: patching /status @ 10/12/24 13:35:26.791
  STEP: updating /status @ 10/12/24 13:35:26.797
  STEP: deleting @ 10/12/24 13:35:26.842
  STEP: deleting a collection @ 10/12/24 13:35:26.857
  I1012 13:35:26.876963 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8890" for this suite. @ 10/12/24 13:35:26.881
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 10/12/24 13:35:26.888
  I1012 13:35:26.888703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 13:35:26.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:26.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:26.905
  STEP: Creating a test headless service @ 10/12/24 13:35:26.909
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8076 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8076;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8076 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8076;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8076.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8076.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8076.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8076.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8076.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8076.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8076.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8076.svc;check="$$(dig +notcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_tcp@PTR;sleep 1; done
   @ 10/12/24 13:35:26.928
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8076 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8076;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8076 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8076;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8076.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8076.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8076.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8076.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8076.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8076.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8076.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8076.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8076.svc;check="$$(dig +notcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_tcp@PTR;sleep 1; done
   @ 10/12/24 13:35:26.928
  STEP: creating a pod to probe DNS @ 10/12/24 13:35:26.928
  STEP: submitting the pod to kubernetes @ 10/12/24 13:35:26.928
  E1012 13:35:27.519830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:28.520122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/12/24 13:35:28.955
  STEP: looking for the results for each expected name from probers @ 10/12/24 13:35:28.959
  I1012 13:35:28.965514 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.968952 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.973838 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8076 from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.978707 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8076 from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.982218 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.986632 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.991724 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:28.995831 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.017769 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.020859 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.025357 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8076 from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.032402 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8076 from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.036161 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.040166 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.044682 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.048569 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8076.svc from pod dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427: the server could not find the requested resource (get pods dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427)
  I1012 13:35:29.065885 19 dns_common.go:489] Lookups using dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8076 wheezy_tcp@dns-test-service.dns-8076 wheezy_udp@dns-test-service.dns-8076.svc wheezy_tcp@dns-test-service.dns-8076.svc wheezy_udp@_http._tcp.dns-test-service.dns-8076.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8076.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8076 jessie_tcp@dns-test-service.dns-8076 jessie_udp@dns-test-service.dns-8076.svc jessie_tcp@dns-test-service.dns-8076.svc jessie_udp@_http._tcp.dns-test-service.dns-8076.svc jessie_tcp@_http._tcp.dns-test-service.dns-8076.svc]

  I1012 13:35:29.072416 19 dns_common.go:495] Pod client logs for webserver: 
  I1012 13:35:29.078204 19 dns_common.go:495] Pod client logs for querier: 
  I1012 13:35:29.084897 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1012 13:35:29.520570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:30.520795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:31.520890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:32.520993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:33.521309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:34.056663 19 dns_common.go:527] DNS probes using dns-8076/dns-test-ff1f8187-81a5-4145-ba7e-f95697cf2427 succeeded

  STEP: deleting the pod @ 10/12/24 13:35:34.056
  STEP: deleting the test service @ 10/12/24 13:35:34.074
  STEP: deleting the test headless service @ 10/12/24 13:35:34.095
  I1012 13:35:34.109291 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8076" for this suite. @ 10/12/24 13:35:34.112
• [7.231 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/12/24 13:35:34.12
  I1012 13:35:34.120187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename deployment @ 10/12/24 13:35:34.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:34.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:34.136
  I1012 13:35:34.148203 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1012 13:35:34.521738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:35.522556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:36.522633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:37.522754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:38.522857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:39.151665 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/12/24 13:35:39.151
  I1012 13:35:39.151744 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1012 13:35:39.522976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:40.523628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:41.157597 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1012 13:35:41.167352 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1012 13:35:41.523903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:42.524177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:43.175772 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1012 13:35:43.182916 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1012 13:35:43.189756 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1012 13:35:43.200411 19 deployment.go:313] Updating deployment test-rollover-deployment
  I1012 13:35:43.200454 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1012 13:35:43.524635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:44.524861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:45.210505 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1012 13:35:45.217672 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1012 13:35:45.225032 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1012 13:35:45.225091 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1012 13:35:45.525433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:46.525572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:47.233494 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1012 13:35:47.233558 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1012 13:35:47.525877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:48.526081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:49.235078 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1012 13:35:49.235167 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1012 13:35:49.526271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:50.526507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:51.236425 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1012 13:35:51.236493 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1012 13:35:51.526770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:52.527034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:53.233241 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1012 13:35:53.233308 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 12, 13, 35, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 12, 13, 35, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1012 13:35:53.527380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:54.527629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:35:55.233004 19 deployment.go:94] 
  I1012 13:35:55.233059 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I1012 13:35:55.246152 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7678",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebb21695-ec06-4eb4-a65d-aaa92b990587",
      ResourceVersion: (string) (len=5) "40440",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336941,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1012 13:35:55.249921 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7678",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "220925b0-dddf-4c94-9c82-64635e693d88",
      ResourceVersion: (string) (len=5) "40430",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ebb21695-ec06-4eb4-a65d-aaa92b990587",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 62 62 32 31 36  39 35 2d 65 63 30 36 2d  |\"ebb21695-ec06-|
              00000120  34 65 62 34 2d 61 36 35  64 2d 61 61 61 39 32 62  |4eb4-a65d-aaa92b|
              00000130  39 39 30 35 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |990587\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 13:35:55.250410 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1012 13:35:55.250672 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7678",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b04a5ec-f820-4c00-9984-22d77ca12a66",
      ResourceVersion: (string) (len=5) "40439",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ebb21695-ec06-4eb4-a65d-aaa92b990587",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 62 62 32 31 36 39 35  2d 65 63 30 36 2d 34 65  |ebb21695-ec06-4e|
              000000c0  62 34 2d 61 36 35 64 2d  61 61 61 39 32 62 39 39  |b4-a65d-aaa92b99|
              000000d0  30 35 38 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |0587\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 13:35:55.252309 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7678",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7446eef-496e-4c51-b8a5-96cfbd1384e4",
      ResourceVersion: (string) (len=5) "40392",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336941,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ebb21695-ec06-4eb4-a65d-aaa92b990587",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 62 62 32 31 36  39 35 2d 65 63 30 36 2d  |\"ebb21695-ec06-|
              00000120  34 65 62 34 2d 61 36 35  64 2d 61 61 61 39 32 62  |4eb4-a65d-aaa92b|
              00000130  39 39 30 35 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |990587\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1012 13:35:55.256421 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-zc9jz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-zc9jz",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-7678",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae8ebce9-80b2-43be-94ae-8ccacae063f8",
      ResourceVersion: (string) (len=5) "40409",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "220925b0-dddf-4c94-9c82-64635e693d88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 32  30 39 32 35 62 30 2d 64  |d\":\"220925b0-d|
              00000090  64 64 66 2d 34 63 39 34  2d 39 63 38 32 2d 36 34  |ddf-4c94-9c82-64|
              000000a0  36 33 35 65 36 39 33 64  38 38 5c 22 7d 22 3a 7b  |635e693d88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 39  35 2e 32 30 38 5c 22 7d  |2.168.195.208\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkthn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkthn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-46-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864336943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.46.196",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.46.196"
        }
      },
      PodIP: (string) (len=15) "192.168.195.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.195.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864336943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864336943,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://4386e0962473df8c6c7fda52760f8021050aa14b655b0e5bfae8092818def5c9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lkthn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1012 13:35:55.257475 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7678" for this suite. @ 10/12/24 13:35:55.262
• [21.150 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 10/12/24 13:35:55.269
  I1012 13:35:55.270013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:35:55.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:35:55.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:35:55.289
  STEP: Counting existing ResourceQuota @ 10/12/24 13:35:55.292
  E1012 13:35:55.528049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:56.528715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:57.528766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:58.528929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:35:59.529879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/12/24 13:36:00.297
  STEP: Ensuring resource quota status is calculated @ 10/12/24 13:36:00.305
  E1012 13:36:00.531042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:01.531379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/12/24 13:36:02.309
  STEP: Ensuring resource quota status captures replicaset creation @ 10/12/24 13:36:02.322
  E1012 13:36:02.531525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:03.532352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/12/24 13:36:04.328
  STEP: Ensuring resource quota status released usage @ 10/12/24 13:36:04.334
  E1012 13:36:04.533129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:05.533293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:36:06.340510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4770" for this suite. @ 10/12/24 13:36:06.344
• [11.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/12/24 13:36:06.352
  I1012 13:36:06.352569 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename subpath @ 10/12/24 13:36:06.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:36:06.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:36:06.375
  STEP: Setting up data @ 10/12/24 13:36:06.378
  STEP: Creating pod pod-subpath-test-projected-6cqk @ 10/12/24 13:36:06.388
  STEP: Creating a pod to test atomic-volume-subpath @ 10/12/24 13:36:06.388
  E1012 13:36:06.533788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:07.534020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:08.534163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:09.534272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:10.534901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:11.535034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:12.535151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:13.535290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:14.535738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:15.535995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:16.536926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:17.537174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:18.537918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:19.538083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:20.538741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:21.539161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:22.539337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:23.539517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:24.540088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:25.540282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:26.541046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:27.541490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:28.542590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:29.543413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:36:30.465
  I1012 13:36:30.468767 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-subpath-test-projected-6cqk container test-container-subpath-projected-6cqk: <nil>
  STEP: delete the pod @ 10/12/24 13:36:30.48
  STEP: Deleting pod pod-subpath-test-projected-6cqk @ 10/12/24 13:36:30.494
  I1012 13:36:30.494242 19 delete.go:62] Deleting pod "pod-subpath-test-projected-6cqk" in namespace "subpath-4647"
  I1012 13:36:30.498465 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4647" for this suite. @ 10/12/24 13:36:30.503
• [24.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/12/24 13:36:30.51
  I1012 13:36:30.510071 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:36:30.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:36:30.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:36:30.527
  STEP: Creating a pod to test downward api env vars @ 10/12/24 13:36:30.53
  E1012 13:36:30.543413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:31.544513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:32.544777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:33.545003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:34.545294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:36:34.556
  I1012 13:36:34.560341 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downward-api-907bf097-0404-4ef5-9a4c-29ff6598239a container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 13:36:34.567
  I1012 13:36:34.585776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-643" for this suite. @ 10/12/24 13:36:34.589
• [4.086 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/12/24 13:36:34.596
  I1012 13:36:34.596169 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename cronjob @ 10/12/24 13:36:34.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:36:34.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:36:34.613
  STEP: Creating a ForbidConcurrent cronjob @ 10/12/24 13:36:34.619
  STEP: Ensuring a job is scheduled @ 10/12/24 13:36:34.625
  E1012 13:36:35.545587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:36.545723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:37.545926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:38.546194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:39.546317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:40.547330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:41.547775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:42.548331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:43.548503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:44.548697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:45.548901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:46.549070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:47.549233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:48.549436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:49.550373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:50.550476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:51.551164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:52.551285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:53.551378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:54.551476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:55.551577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:56.551790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:57.552261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:58.553301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:36:59.553492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:00.553630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/12/24 13:37:00.631
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/12/24 13:37:00.634
  STEP: Ensuring no more jobs are scheduled @ 10/12/24 13:37:00.638
  STEP: Removing cronjob @ 10/12/24 13:37:00.643
  I1012 13:37:00.649765 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1096" for this suite. @ 10/12/24 13:37:00.655
• [26.066 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 10/12/24 13:37:00.662
  I1012 13:37:00.662276 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:37:00.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:37:00.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:37:00.682
  I1012 13:37:00.688835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5913" for this suite. @ 10/12/24 13:37:00.693
• [0.038 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 10/12/24 13:37:00.7
  I1012 13:37:00.700197 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 13:37:00.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:37:00.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:37:00.717
  STEP: set up a multi version CRD @ 10/12/24 13:37:00.72
  I1012 13:37:00.720935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  E1012 13:37:01.553835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:02.553949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:03.554517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/12/24 13:37:03.816
  STEP: check the new version name is served @ 10/12/24 13:37:03.829
  E1012 13:37:04.555533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/12/24 13:37:04.623
  STEP: check the other version is not changed @ 10/12/24 13:37:05.254
  E1012 13:37:05.556468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:06.556687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:07.557680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:37:07.755377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2076" for this suite. @ 10/12/24 13:37:07.762
• [7.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 10/12/24 13:37:07.77
  I1012 13:37:07.770328 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename kubectl @ 10/12/24 13:37:07.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:37:07.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:37:07.791
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/12/24 13:37:07.794
  I1012 13:37:07.794857 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4272 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1012 13:37:07.852790 19 builder.go:146] stderr: ""
  I1012 13:37:07.852830 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/12/24 13:37:07.852
  I1012 13:37:07.857812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=kubectl-4272 delete pods e2e-test-httpd-pod'
  E1012 13:37:08.557745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:09.557995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:37:09.681323 19 builder.go:146] stderr: ""
  I1012 13:37:09.681368 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1012 13:37:09.681560 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4272" for this suite. @ 10/12/24 13:37:09.686
• [1.924 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 10/12/24 13:37:09.694
  I1012 13:37:09.694651 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename gc @ 10/12/24 13:37:09.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:37:09.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:37:09.717
  STEP: create the rc1 @ 10/12/24 13:37:09.725
  STEP: create the rc2 @ 10/12/24 13:37:09.731
  E1012 13:37:10.558278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:11.560315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:12.560871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:13.561647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:14.562360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:15.562885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/12/24 13:37:15.743
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/12/24 13:37:16.422
  STEP: wait for the rc to be deleted @ 10/12/24 13:37:16.434
  E1012 13:37:16.562972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:17.563688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:18.563799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:19.564262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:20.564305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:37:21.447626 19 garbage_collector.go:762] 70 pods remaining
  I1012 13:37:21.447659 19 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I1012 13:37:21.447665 19 garbage_collector.go:770] 
  E1012 13:37:21.565338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:22.569769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:23.566733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:24.567807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:25.568190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/12/24 13:37:26.446
  W1012 13:37:26.452961      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1012 13:37:26.452997 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1012 13:37:26.453046 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hjc6" in namespace "gc-8565"
  I1012 13:37:26.468322 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jgnn" in namespace "gc-8565"
  I1012 13:37:26.481638 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2q5k6" in namespace "gc-8565"
  I1012 13:37:26.502427 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2xr5x" in namespace "gc-8565"
  I1012 13:37:26.518748 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49k62" in namespace "gc-8565"
  I1012 13:37:26.531177 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4cdtw" in namespace "gc-8565"
  I1012 13:37:26.545874 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kfj8" in namespace "gc-8565"
  I1012 13:37:26.567556 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4n7nb" in namespace "gc-8565"
  E1012 13:37:26.568456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:37:26.581173 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4nr9v" in namespace "gc-8565"
  I1012 13:37:26.594711 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sgmh" in namespace "gc-8565"
  I1012 13:37:26.609152 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5tb8b" in namespace "gc-8565"
  I1012 13:37:26.622568 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bpm2" in namespace "gc-8565"
  I1012 13:37:26.636008 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6j7s5" in namespace "gc-8565"
  I1012 13:37:26.648857 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6w5jl" in namespace "gc-8565"
  I1012 13:37:26.661738 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77fhj" in namespace "gc-8565"
  I1012 13:37:26.674207 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hzrc" in namespace "gc-8565"
  I1012 13:37:26.687455 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7zc2l" in namespace "gc-8565"
  I1012 13:37:26.700195 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89m79" in namespace "gc-8565"
  I1012 13:37:26.713228 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8x8qr" in namespace "gc-8565"
  I1012 13:37:26.731423 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d7b8" in namespace "gc-8565"
  I1012 13:37:26.746337 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dl22" in namespace "gc-8565"
  I1012 13:37:26.764009 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dl6b" in namespace "gc-8565"
  I1012 13:37:26.781541 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9kc5v" in namespace "gc-8565"
  I1012 13:37:26.796263 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zdpf" in namespace "gc-8565"
  I1012 13:37:26.808981 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5ndp" in namespace "gc-8565"
  I1012 13:37:26.828300 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbbb2" in namespace "gc-8565"
  I1012 13:37:26.842888 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bt9s5" in namespace "gc-8565"
  I1012 13:37:26.859053 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bts44" in namespace "gc-8565"
  I1012 13:37:26.874338 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvmrw" in namespace "gc-8565"
  I1012 13:37:26.888600 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c72m4" in namespace "gc-8565"
  I1012 13:37:26.902507 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cb6pb" in namespace "gc-8565"
  I1012 13:37:26.923012 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cd7wk" in namespace "gc-8565"
  I1012 13:37:26.944444 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czph4" in namespace "gc-8565"
  I1012 13:37:26.959800 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6jds" in namespace "gc-8565"
  I1012 13:37:26.974228 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8jcg" in namespace "gc-8565"
  I1012 13:37:26.987429 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj7pp" in namespace "gc-8565"
  I1012 13:37:27.004002 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmlsm" in namespace "gc-8565"
  I1012 13:37:27.019522 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmlwp" in namespace "gc-8565"
  I1012 13:37:27.041877 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvnzb" in namespace "gc-8565"
  I1012 13:37:27.059871 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4p4r" in namespace "gc-8565"
  I1012 13:37:27.073616 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7ntl" in namespace "gc-8565"
  I1012 13:37:27.088597 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7q2d" in namespace "gc-8565"
  I1012 13:37:27.105769 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fb7ft" in namespace "gc-8565"
  I1012 13:37:27.120059 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ff6zd" in namespace "gc-8565"
  I1012 13:37:27.135772 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgwhs" in namespace "gc-8565"
  I1012 13:37:27.150017 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftzvr" in namespace "gc-8565"
  I1012 13:37:27.163396 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2nw8" in namespace "gc-8565"
  I1012 13:37:27.175357 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g47nh" in namespace "gc-8565"
  I1012 13:37:27.195026 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdjhz" in namespace "gc-8565"
  I1012 13:37:27.212710 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gllqc" in namespace "gc-8565"
  I1012 13:37:27.223755 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8565" for this suite. @ 10/12/24 13:37:27.228
• [17.541 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 10/12/24 13:37:27.236
  I1012 13:37:27.237947 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption @ 10/12/24 13:37:27.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:37:27.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:37:27.259
  I1012 13:37:27.308505 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1012 13:37:27.570775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:28.568673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:29.568815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:30.569561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:31.569693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:32.569824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:33.570270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:34.571212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:35.571977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:36.572300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:37.573204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:38.573390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:39.573976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:40.574232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:41.575196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:42.575325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:43.576220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:44.576465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:45.577053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:46.577287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:47.578244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:48.578490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:49.578635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:50.578679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:51.578919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:52.579180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:53.580070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:54.580253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:55.580815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:56.581325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:57.581927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:58.582379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:37:59.583244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:00.583357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:01.584008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:02.584262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:03.585001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:04.585291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:05.585446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:06.585598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:07.586025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:08.586341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:09.587046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:10.587265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:11.587895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:12.587986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:13.588084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:14.588309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:15.589346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:16.589527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:17.590079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:18.590433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:19.590556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:20.590687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:21.591351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:22.591438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:23.592055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:24.592259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:25.593152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:26.593518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:38:27.314362 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/12/24 13:38:27.318
  I1012 13:38:27.338470 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1012 13:38:27.345381 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1012 13:38:27.366213 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1012 13:38:27.375041 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1012 13:38:27.396200 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1012 13:38:27.404829 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/12/24 13:38:27.404
  E1012 13:38:27.593868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:28.594141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/12/24 13:38:29.434
  E1012 13:38:29.594740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:30.594980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:31.595065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:32.595321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:38:33.552399 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6755" for this suite. @ 10/12/24 13:38:33.555
• [66.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/12/24 13:38:33.562
  I1012 13:38:33.562910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:38:33.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:33.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:33.583
  STEP: creating secret secrets-3133/secret-test-b76ba4f2-9d12-4b90-9250-5042c3885299 @ 10/12/24 13:38:33.586
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:38:33.59
  E1012 13:38:33.595844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:34.596220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:35.597235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:36.597498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:37.597710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:38:37.616
  I1012 13:38:37.620064 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-configmaps-c306e98d-bd03-4566-80db-12aee9abc723 container env-test: <nil>
  STEP: delete the pod @ 10/12/24 13:38:37.63
  I1012 13:38:37.649040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3133" for this suite. @ 10/12/24 13:38:37.655
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/12/24 13:38:37.661
  I1012 13:38:37.661981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename containers @ 10/12/24 13:38:37.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:37.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:37.683
  STEP: Creating a pod to test override all @ 10/12/24 13:38:37.686
  E1012 13:38:38.598366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:39.598461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:40.598748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:41.599362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:38:41.713
  I1012 13:38:41.717596 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod client-containers-97cc4796-2c84-4fae-b957-7602f26b515b container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:38:41.724
  I1012 13:38:41.745326 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4132" for this suite. @ 10/12/24 13:38:41.749
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 10/12/24 13:38:41.757
  I1012 13:38:41.757529 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:38:41.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:41.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:41.779
  STEP: creating a collection of services @ 10/12/24 13:38:41.783
  I1012 13:38:41.783270 19 service.go:3655] Creating e2e-svc-a-7jjlz
  I1012 13:38:41.793735 19 service.go:3655] Creating e2e-svc-b-h2tqc
  I1012 13:38:41.803353 19 service.go:3655] Creating e2e-svc-c-k4q2b
  STEP: deleting service collection @ 10/12/24 13:38:41.817
  I1012 13:38:41.850260 19 service.go:3690] Collection of services has been deleted
  I1012 13:38:41.850405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4227" for this suite. @ 10/12/24 13:38:41.854
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/12/24 13:38:41.861
  I1012 13:38:41.861073 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:38:41.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:41.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:41.881
  STEP: Creating projection with secret that has name projected-secret-test-52a5b988-3a20-4112-8504-9068f04bcbde @ 10/12/24 13:38:41.884
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:38:41.889
  E1012 13:38:42.599494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:43.599582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:44.600624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:45.601303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:38:45.916
  I1012 13:38:45.920175 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-78bf8f94-eb93-4b17-97ad-5e860e926c63 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:38:45.927
  I1012 13:38:45.949340 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3922" for this suite. @ 10/12/24 13:38:45.953
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 10/12/24 13:38:45.963
  I1012 13:38:45.963071 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:38:45.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:45.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:45.985
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:38:45.988
  E1012 13:38:46.602344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:47.602453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:48.602559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:49.603366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:38:50.015
  I1012 13:38:50.019714 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-37283503-c8ed-4b81-b14c-9cf27be1d0f1 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:38:50.026
  I1012 13:38:50.046319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-273" for this suite. @ 10/12/24 13:38:50.05
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/12/24 13:38:50.058
  I1012 13:38:50.058773 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/12/24 13:38:50.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:50.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:50.08
  STEP: creating a target pod @ 10/12/24 13:38:50.084
  E1012 13:38:50.603967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:51.604569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/12/24 13:38:52.109
  E1012 13:38:52.605375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:53.605551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/12/24 13:38:54.129
  I1012 13:38:54.129680 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7360 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:38:54.129699 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:38:54.130213 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:38:54.130271 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7360/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1012 13:38:54.171663 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/12/24 13:38:54.178
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/12/24 13:38:54.183
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/12/24 13:38:54.195
  I1012 13:38:54.200641 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7360" for this suite. @ 10/12/24 13:38:54.205
• [4.158 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 10/12/24 13:38:54.217
  I1012 13:38:54.217234 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 13:38:54.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:54.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:54.237
  I1012 13:38:54.240988 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1012 13:38:54.606360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/12/24 13:38:55.255
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/12/24 13:38:55.262
  E1012 13:38:55.607344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/12/24 13:38:56.271
  I1012 13:38:56.282350 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/12/24 13:38:56.282
  E1012 13:38:56.608340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:38:57.292233 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7415" for this suite. @ 10/12/24 13:38:57.296
• [3.087 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 10/12/24 13:38:57.304
  I1012 13:38:57.304319 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:38:57.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:57.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:57.328
  STEP: Creating a pod to test downward api env vars @ 10/12/24 13:38:57.333
  E1012 13:38:57.608471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:38:58.608578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:38:59.351
  I1012 13:38:59.356892 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downward-api-88e301ac-9c56-47aa-a60b-6bae87589f78 container dapi-container: <nil>
  STEP: delete the pod @ 10/12/24 13:38:59.364
  I1012 13:38:59.383727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9074" for this suite. @ 10/12/24 13:38:59.388
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 10/12/24 13:38:59.396
  I1012 13:38:59.396593 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 13:38:59.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:38:59.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:38:59.415
  I1012 13:38:59.419123 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  E1012 13:38:59.609143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:00.628350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/12/24 13:39:00.792
  I1012 13:39:00.792719 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-1758 --namespace=crd-publish-openapi-1758 create -f -'
  E1012 13:39:01.629351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:02.629507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:39:02.865994 19 builder.go:146] stderr: ""
  I1012 13:39:02.866039 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1012 13:39:02.866126 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-1758 --namespace=crd-publish-openapi-1758 delete e2e-test-crd-publish-openapi-651-crds test-cr'
  I1012 13:39:02.923703 19 builder.go:146] stderr: ""
  I1012 13:39:02.923742 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1012 13:39:02.923791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-1758 --namespace=crd-publish-openapi-1758 apply -f -'
  I1012 13:39:02.998893 19 builder.go:146] stderr: ""
  I1012 13:39:02.998932 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1012 13:39:02.999037 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-1758 --namespace=crd-publish-openapi-1758 delete e2e-test-crd-publish-openapi-651-crds test-cr'
  I1012 13:39:03.054379 19 builder.go:146] stderr: ""
  I1012 13:39:03.054418 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-651-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/12/24 13:39:03.054
  I1012 13:39:03.054513 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=crd-publish-openapi-1758 explain e2e-test-crd-publish-openapi-651-crds'
  I1012 13:39:03.101866 19 builder.go:146] stderr: ""
  I1012 13:39:03.101918 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-651-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1012 13:39:03.629695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:39:04.322871 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1758" for this suite. @ 10/12/24 13:39:04.331
• [4.942 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/12/24 13:39:04.338
  I1012 13:39:04.338577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/12/24 13:39:04.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:04.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:04.355
  E1012 13:39:04.630382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:05.630493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 10/12/24 13:39:06.392
  STEP: Cleaning up the configmap @ 10/12/24 13:39:06.399
  STEP: Cleaning up the pod @ 10/12/24 13:39:06.405
  I1012 13:39:06.416888 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7534" for this suite. @ 10/12/24 13:39:06.421
• [2.090 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/12/24 13:39:06.428
  I1012 13:39:06.428680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:39:06.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:06.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:06.499
  STEP: creating the pod @ 10/12/24 13:39:06.502
  STEP: submitting the pod to kubernetes @ 10/12/24 13:39:06.502
  E1012 13:39:06.630800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:07.631456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/12/24 13:39:08.525
  STEP: updating the pod @ 10/12/24 13:39:08.529
  E1012 13:39:08.632271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:39:09.043237 19 pod_client.go:173] Successfully updated pod "pod-update-cd8719d5-8710-40db-97f6-92089289a3cb"
  STEP: verifying the updated pod is in kubernetes @ 10/12/24 13:39:09.048
  I1012 13:39:09.051362 19 pods.go:391] Pod update OK
  I1012 13:39:09.051487 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5738" for this suite. @ 10/12/24 13:39:09.054
• [2.632 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 10/12/24 13:39:09.06
  I1012 13:39:09.060834 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename runtimeclass @ 10/12/24 13:39:09.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:09.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:09.081
  E1012 13:39:09.632758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:10.632883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:39:11.112367 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2271" for this suite. @ 10/12/24 13:39:11.117
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/12/24 13:39:11.123
  I1012 13:39:11.123355 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename lease-test @ 10/12/24 13:39:11.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:11.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:11.141
  I1012 13:39:11.202487 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8947" for this suite. @ 10/12/24 13:39:11.207
• [0.092 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/12/24 13:39:11.215
  I1012 13:39:11.215417 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename init-container @ 10/12/24 13:39:11.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:11.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:11.231
  STEP: creating the pod @ 10/12/24 13:39:11.234
  I1012 13:39:11.234879 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1012 13:39:11.633168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:12.634132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:13.634211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:39:14.538655 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9238" for this suite. @ 10/12/24 13:39:14.542
• [3.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 10/12/24 13:39:14.563
  I1012 13:39:14.563170 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption @ 10/12/24 13:39:14.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:39:14.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:39:14.587
  I1012 13:39:14.608367 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1012 13:39:14.635035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:15.635156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:16.635267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:17.635682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:18.636640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:19.636854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:20.637497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:21.637622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:22.638516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:23.638749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:24.639376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:25.639508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:26.640353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:27.640424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:28.641408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:29.642309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:30.642519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:31.643303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:32.643771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:33.644006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:34.644403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:35.644537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:36.645142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:37.645297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:38.645961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:39.646180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:40.647126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:41.647484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:42.648529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:43.648606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:44.649691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:45.649863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:46.650692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:47.650770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:48.651205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:49.651277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:50.651356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:51.651447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:52.651686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:53.652627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:54.653411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:55.653495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:56.654201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:57.654481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:58.655275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:39:59.655297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:00.655811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:01.655995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:02.656600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:03.656767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:04.657154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:05.657243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:06.658300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:07.658521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:08.659202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:09.659481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:10.659922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:11.660698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:12.661487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:13.661600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:14.615338 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/12/24 13:40:14.618
  I1012 13:40:14.618649 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/12/24 13:40:14.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:40:14.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:40:14.638
  I1012 13:40:14.656018 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1012 13:40:14.659955 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  E1012 13:40:14.662073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:14.738913 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6674" for this suite. @ 10/12/24 13:40:14.743
  I1012 13:40:14.749376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9439" for this suite. @ 10/12/24 13:40:14.753
• [60.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/12/24 13:40:14.76
  I1012 13:40:14.760932 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename chunking @ 10/12/24 13:40:14.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:40:14.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:40:14.777
  STEP: creating a large number of resources @ 10/12/24 13:40:14.78
  E1012 13:40:15.662308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:16.662395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:17.662808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:18.663025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:19.663260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:20.663494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:21.664194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:22.665254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:23.665799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:24.666212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:25.666449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:26.667065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:27.667068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:28.667458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:29.667995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:30.668336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:31.668757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 10/12/24 13:40:32.467
  I1012 13:40:32.517423 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1012 13:40:32.567163 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1012 13:40:32.617159 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1012 13:40:32.667726 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E1012 13:40:32.669761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:32.717588 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1012 13:40:32.765957 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1012 13:40:32.817559 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1012 13:40:32.866804 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1012 13:40:32.916240 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1012 13:40:32.966486 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1012 13:40:33.016370 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1012 13:40:33.065549 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1012 13:40:33.117430 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1012 13:40:33.166578 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1012 13:40:33.215933 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1012 13:40:33.267294 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1012 13:40:33.316686 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1012 13:40:33.366149 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1012 13:40:33.417437 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1012 13:40:33.466543 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1012 13:40:33.515956 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1012 13:40:33.567356 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1012 13:40:33.616533 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1012 13:40:33.665599 19 chunking.go:98] Retrieved 9/17 results with rv 44839 and continue 
  E1012 13:40:33.670626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:33.716822 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1012 13:40:33.766822 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1012 13:40:33.816123 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1012 13:40:33.867622 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1012 13:40:33.916384 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1012 13:40:33.965469 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1012 13:40:34.016711 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1012 13:40:34.066765 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1012 13:40:34.116089 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1012 13:40:34.167235 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1012 13:40:34.217171 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1012 13:40:34.266360 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1012 13:40:34.317140 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1012 13:40:34.367363 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1012 13:40:34.415359 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1012 13:40:34.467049 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1012 13:40:34.517246 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1012 13:40:34.565235 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1012 13:40:34.616470 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1012 13:40:34.666355 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  E1012 13:40:34.671365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:34.715241 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1012 13:40:34.766522 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1012 13:40:34.816746 19 chunking.go:98] Retrieved 17/17 results with rv 44839 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4MzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1012 13:40:34.865943 19 chunking.go:98] Retrieved 9/17 results with rv 44839 and continue 
  I1012 13:40:34.917304 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1012 13:40:34.966497 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1012 13:40:35.016429 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1012 13:40:35.066455 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1012 13:40:35.116570 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1012 13:40:35.166054 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1012 13:40:35.217474 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1012 13:40:35.266566 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1012 13:40:35.316251 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1012 13:40:35.366625 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1012 13:40:35.416574 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1012 13:40:35.465654 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1012 13:40:35.517034 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1012 13:40:35.567037 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1012 13:40:35.616463 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1012 13:40:35.666526 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E1012 13:40:35.671421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:35.716640 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1012 13:40:35.765988 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1012 13:40:35.817395 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1012 13:40:35.866146 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1012 13:40:35.916335 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1012 13:40:35.965960 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1012 13:40:36.017633 19 chunking.go:98] Retrieved 17/17 results with rv 44841 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDQ4NDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1012 13:40:36.065774 19 chunking.go:98] Retrieved 9/17 results with rv 44841 and continue 
  STEP: retrieving those results all at once @ 10/12/24 13:40:36.065
  I1012 13:40:36.128707 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7966" for this suite. @ 10/12/24 13:40:36.166
• [21.459 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/12/24 13:40:36.22
  I1012 13:40:36.220250 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename init-container @ 10/12/24 13:40:36.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:40:36.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:40:36.237
  STEP: creating the pod @ 10/12/24 13:40:36.24
  I1012 13:40:36.240430 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1012 13:40:36.671594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:37.672347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:38.672428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:39.673198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:40.433461 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7238" for this suite. @ 10/12/24 13:40:40.438
• [4.226 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/12/24 13:40:40.446
  I1012 13:40:40.446416 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/12/24 13:40:40.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:40:40.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:40:40.463
  STEP: mirroring a new custom Endpoint @ 10/12/24 13:40:40.475
  I1012 13:40:40.485226 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1012 13:40:40.673610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:41.673816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/12/24 13:40:42.489
  STEP: mirroring deletion of a custom Endpoint @ 10/12/24 13:40:42.5
  I1012 13:40:42.512024 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1012 13:40:42.674523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:43.674644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:40:44.516482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1535" for this suite. @ 10/12/24 13:40:44.521
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 10/12/24 13:40:44.53
  I1012 13:40:44.530423 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename taint-single-pod @ 10/12/24 13:40:44.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:40:44.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:40:44.552
  I1012 13:40:44.555921 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1012 13:40:44.674967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:45.675064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:46.676138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:47.676276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:48.676972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:49.677193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:50.677580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:51.677707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:52.677848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:53.678078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:54.678744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:55.678945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:56.679974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:57.680054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:58.680815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:40:59.681316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:00.681429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:01.682377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:02.682919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:03.683306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:04.683646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:05.683730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:06.683844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:07.684016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:08.684220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:09.684429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:10.684720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:11.685184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:12.685588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:13.685813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:14.686755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:15.686877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:16.687042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:17.687207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:18.687391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:19.687476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:20.688221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:21.688546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:22.688711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:23.688944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:24.689523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:25.689692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:26.690443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:27.690554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:28.691339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:29.691444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:30.691474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:31.691579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:32.692477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:33.692572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:34.693606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:35.693750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:36.694309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:37.694391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:38.695306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:39.695477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:40.696024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:41.696200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:42.697010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:43.697265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:41:44.556227 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 13:41:44.561149 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 10/12/24 13:41:44.561
  E1012 13:41:44.698267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:41:44.778831 19 taints.go:294] Pod is running on ip-172-31-91-95. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/12/24 13:41:44.778
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/12/24 13:41:44.789
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/12/24 13:41:44.793
  I1012 13:41:44.793351 19 taints.go:313] Pod wasn't evicted. Proceeding
  I1012 13:41:44.793367 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/12/24 13:41:44.806
  STEP: Waiting some time to make sure that toleration time passed. @ 10/12/24 13:41:44.814
  E1012 13:41:45.698400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:46.698770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:47.698993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:48.699175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:49.699269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:50.699312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:51.699399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:52.699482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:53.699578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:54.699722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:55.699793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:56.699879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:57.700749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:58.700852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:41:59.701329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:00.702223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:01.702317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:02.703298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:03.704316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:04.704620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:05.704801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:06.704940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:07.705331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:08.705536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:09.705751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:10.705978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:11.706252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:12.706393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:13.706604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:14.706832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:15.706945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:16.707178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:17.707267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:18.707414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:19.707560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:20.707792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:21.707924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:22.708183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:23.708405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:24.708683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:25.708898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:26.709202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:27.710231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:28.710399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:29.711221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:30.711322      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:31.712305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:32.713303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:33.713391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:34.713604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:35.713708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:36.714150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:37.714359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:38.714606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:39.714810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:40.714982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:41.715189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:42.715401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:43.715647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:44.716009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:45.716702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:46.716907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:47.717151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:48.717403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:49.717647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:50.718340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:51.718568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:52.718843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:53.718916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:54.719176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:55.719349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:56.719448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:57.719541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:58.720317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:42:59.721303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:42:59.814556 19 taints.go:329] Pod wasn't evicted. Test successful
  I1012 13:42:59.814743 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2893" for this suite. @ 10/12/24 13:42:59.819
• [135.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 10/12/24 13:42:59.828
  I1012 13:42:59.828032 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename field-validation @ 10/12/24 13:42:59.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:42:59.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:42:59.846
  STEP: apply creating a deployment @ 10/12/24 13:42:59.849
  I1012 13:42:59.863773 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2966" for this suite. @ 10/12/24 13:42:59.868
• [0.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/12/24 13:42:59.876
  I1012 13:42:59.876373 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename daemonsets @ 10/12/24 13:42:59.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:42:59.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:42:59.894
  STEP: Creating simple DaemonSet "daemon-set" @ 10/12/24 13:42:59.923
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/12/24 13:42:59.932
  I1012 13:42:59.938656 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:42:59.938697 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:42:59.944083 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:42:59.944131 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  E1012 13:43:00.721463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:00.938708 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:00.938745 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:00.942135 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1012 13:43:00.942157 19 fixtures.go:130] Node ip-172-31-23-48 is running 0 daemon pod, expected 1
  E1012 13:43:01.721544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:01.938834 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:01.938872 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:01.942486 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:43:01.942513 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/12/24 13:43:01.945
  I1012 13:43:01.962047 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:01.962090 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:01.966396 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 13:43:01.966417 19 fixtures.go:130] Node ip-172-31-91-95 is running 0 daemon pod, expected 1
  E1012 13:43:02.722169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:02.964675 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:02.964731 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:02.968818 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1012 13:43:02.968851 19 fixtures.go:130] Node ip-172-31-91-95 is running 0 daemon pod, expected 1
  E1012 13:43:03.722475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:03.964796 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-76-59 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:03.964853 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-90-139 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1012 13:43:03.968145 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1012 13:43:03.968164 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/12/24 13:43:03.971
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4829, will wait for the garbage collector to delete the pods @ 10/12/24 13:43:03.971
  I1012 13:43:04.032744 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.453568ms
  I1012 13:43:04.133316 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.484928ms
  E1012 13:43:04.723002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:05.637250 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1012 13:43:05.637297 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1012 13:43:05.641553 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45776"},"items":null}

  I1012 13:43:05.645769 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45776"},"items":null}

  I1012 13:43:05.659136 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4829" for this suite. @ 10/12/24 13:43:05.663
• [5.794 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/12/24 13:43:05.67
  I1012 13:43:05.670585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename watch @ 10/12/24 13:43:05.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:05.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:05.688
  STEP: getting a starting resourceVersion @ 10/12/24 13:43:05.691
  STEP: starting a background goroutine to produce watch events @ 10/12/24 13:43:05.695
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/12/24 13:43:05.695
  E1012 13:43:05.723965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:06.724728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:07.725240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:08.431633 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5908" for this suite. @ 10/12/24 13:43:08.476
• [2.860 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/12/24 13:43:08.53
  I1012 13:43:08.530626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename events @ 10/12/24 13:43:08.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:08.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:08.549
  STEP: Create set of events @ 10/12/24 13:43:08.552
  STEP: get a list of Events with a label in the current namespace @ 10/12/24 13:43:08.567
  STEP: delete a list of events @ 10/12/24 13:43:08.57
  I1012 13:43:08.570976 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/12/24 13:43:08.592
  I1012 13:43:08.595525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-554" for this suite. @ 10/12/24 13:43:08.598
• [0.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 10/12/24 13:43:08.607
  I1012 13:43:08.607182 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:43:08.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:08.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:08.622
  STEP: creating a Service @ 10/12/24 13:43:08.628
  STEP: watching for the Service to be added @ 10/12/24 13:43:08.642
  I1012 13:43:08.644173 19 service.go:3445] Found Service test-service-vh7xl in namespace services-7238 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30341}]
  I1012 13:43:08.644212 19 service.go:3452] Service test-service-vh7xl created
  STEP: Getting /status @ 10/12/24 13:43:08.644
  I1012 13:43:08.649190 19 service.go:3463] Service test-service-vh7xl has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/12/24 13:43:08.649
  STEP: watching for the Service to be patched @ 10/12/24 13:43:08.654
  I1012 13:43:08.656887 19 service.go:3486] observed Service test-service-vh7xl in namespace services-7238 with annotations: map[] & LoadBalancer: {[]}
  I1012 13:43:08.656927 19 service.go:3489] Found Service test-service-vh7xl in namespace services-7238 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0007f65b0 []}]}
  I1012 13:43:08.656936 19 service.go:3496] Service test-service-vh7xl has service status patched
  STEP: updating the ServiceStatus @ 10/12/24 13:43:08.656
  I1012 13:43:08.667047 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/12/24 13:43:08.667
  I1012 13:43:08.668625 19 service.go:3527] Observed Service test-service-vh7xl in namespace services-7238 with annotations: map[] & Conditions: []
  I1012 13:43:08.668648 19 service.go:3538] Observed Service test-service-vh7xl in namespace services-7238 with annotations: map[patchedstatus:true] & Conditions: []
  I1012 13:43:08.668674 19 service.go:3534] Found Service test-service-vh7xl in namespace services-7238 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1012 13:43:08.668683 19 service.go:3545] Service test-service-vh7xl has service status updated
  STEP: patching the service @ 10/12/24 13:43:08.668
  STEP: watching for the Service to be patched @ 10/12/24 13:43:08.678
  I1012 13:43:08.680143 19 service.go:3568] observed Service test-service-vh7xl in namespace services-7238 with labels: map[test-service-static:true]
  I1012 13:43:08.680168 19 service.go:3568] observed Service test-service-vh7xl in namespace services-7238 with labels: map[test-service-static:true]
  I1012 13:43:08.680203 19 service.go:3568] observed Service test-service-vh7xl in namespace services-7238 with labels: map[test-service-static:true]
  I1012 13:43:08.680278 19 service.go:3571] Found Service test-service-vh7xl in namespace services-7238 with labels: map[test-service:patched test-service-static:true]
  I1012 13:43:08.680289 19 service.go:3578] Service test-service-vh7xl patched
  STEP: deleting the service @ 10/12/24 13:43:08.68
  STEP: watching for the Service to be deleted @ 10/12/24 13:43:08.697
  I1012 13:43:08.698671 19 service.go:3602] Observed event: ADDED
  I1012 13:43:08.698703 19 service.go:3602] Observed event: MODIFIED
  I1012 13:43:08.698712 19 service.go:3602] Observed event: MODIFIED
  I1012 13:43:08.698767 19 service.go:3602] Observed event: MODIFIED
  I1012 13:43:08.698801 19 service.go:3598] Found Service test-service-vh7xl in namespace services-7238 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1012 13:43:08.698809 19 service.go:3607] Service test-service-vh7xl deleted
  I1012 13:43:08.698957 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7238" for this suite. @ 10/12/24 13:43:08.703
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/12/24 13:43:08.711
  I1012 13:43:08.711479 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename events @ 10/12/24 13:43:08.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:08.724
  E1012 13:43:08.725200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:08.727
  STEP: Create set of events @ 10/12/24 13:43:08.731
  I1012 13:43:08.737619 19 core_events.go:198] created test-event-1
  I1012 13:43:08.742822 19 core_events.go:198] created test-event-2
  I1012 13:43:08.746657 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/12/24 13:43:08.746
  STEP: delete collection of events @ 10/12/24 13:43:08.75
  I1012 13:43:08.750836 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/12/24 13:43:08.771
  I1012 13:43:08.771146 19 core_events.go:230] requesting list of events to confirm quantity
  I1012 13:43:08.774253 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9884" for this suite. @ 10/12/24 13:43:08.778
• [0.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 10/12/24 13:43:08.786
  I1012 13:43:08.786592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:43:08.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:08.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:08.803
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/12/24 13:43:08.806
  E1012 13:43:09.725393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:10.725635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:43:10.827
  I1012 13:43:10.834307 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-c65cda71-283e-4056-a173-e6135c2670a6 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:43:10.848
  I1012 13:43:10.865202 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6502" for this suite. @ 10/12/24 13:43:10.87
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 10/12/24 13:43:10.876
  I1012 13:43:10.876400 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename replication-controller @ 10/12/24 13:43:10.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:10.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:10.893
  STEP: Creating replication controller my-hostname-basic-45aa09d6-356a-4449-96b6-4f3d4d5de5b4 @ 10/12/24 13:43:10.896
  I1012 13:43:10.903727 19 resource.go:87] Pod name my-hostname-basic-45aa09d6-356a-4449-96b6-4f3d4d5de5b4: Found 0 pods out of 1
  E1012 13:43:11.726333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:12.726583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:13.726682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:14.726946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:15.727547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:15.907764 19 resource.go:87] Pod name my-hostname-basic-45aa09d6-356a-4449-96b6-4f3d4d5de5b4: Found 1 pods out of 1
  I1012 13:43:15.907801 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-45aa09d6-356a-4449-96b6-4f3d4d5de5b4" are running
  I1012 13:43:15.910671 19 rc.go:523] Pod "my-hostname-basic-45aa09d6-356a-4449-96b6-4f3d4d5de5b4-rn667" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 13:43:11 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 13:43:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 13:43:11 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 13:43:11 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-12 13:43:10 +0000 UTC Reason: Message:}])
  I1012 13:43:15.910696 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/12/24 13:43:15.91
  I1012 13:43:15.922079 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3661" for this suite. @ 10/12/24 13:43:15.926
• [5.056 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 10/12/24 13:43:15.932
  I1012 13:43:15.932635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:43:15.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:15.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:15.948
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:43:15.952
  E1012 13:43:16.727708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:17.728623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:43:17.97
  I1012 13:43:17.974211 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod downwardapi-volume-83aa3da8-a787-4f70-be9c-70f9ff8ecac0 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:43:17.988
  I1012 13:43:18.003525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8900" for this suite. @ 10/12/24 13:43:18.007
• [2.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 10/12/24 13:43:18.015
  I1012 13:43:18.015139 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:43:18.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:18.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:18.033
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:43:18.036
  E1012 13:43:18.729336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:19.729589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:20.729668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:21.730010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:43:22.06
  I1012 13:43:22.064200 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-45eec91a-7578-4fc3-a526-eb8ebed82aa7 container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:43:22.072
  I1012 13:43:22.088196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6695" for this suite. @ 10/12/24 13:43:22.091
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 10/12/24 13:43:22.097
  I1012 13:43:22.097716 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:43:22.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:22.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:22.115
  STEP: Setting up server cert @ 10/12/24 13:43:22.137
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:43:22.374
  STEP: Deploying the webhook pod @ 10/12/24 13:43:22.384
  STEP: Wait for the deployment to be ready @ 10/12/24 13:43:22.397
  I1012 13:43:22.408556 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:43:22.730950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:23.731056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:43:24.422
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:43:24.432
  E1012 13:43:24.731201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:25.433001 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/12/24 13:43:25.441
  STEP: verifying the validating webhook match conditions @ 10/12/24 13:43:25.449
  STEP: updating the validating webhook match conditions @ 10/12/24 13:43:25.451
  STEP: verifying the validating webhook match conditions @ 10/12/24 13:43:25.459
  I1012 13:43:25.504331 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2308" for this suite. @ 10/12/24 13:43:25.508
  STEP: Destroying namespace "webhook-markers-6891" for this suite. @ 10/12/24 13:43:25.518
• [3.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/12/24 13:43:25.524
  I1012 13:43:25.524769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename sched-pred @ 10/12/24 13:43:25.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:25.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:25.54
  I1012 13:43:25.544061 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1012 13:43:25.552056 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1012 13:43:25.555521 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-23-48 before test
  I1012 13:43:25.559301 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-hkx2j from ingress-nginx-kubernetes-worker started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559320 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:43:25.559327 19 predicates.go:957] calico-node-8fbzw from kube-system started at 2024-10-12 12:10:08 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559332 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:43:25.559339 19 predicates.go:957] coredns-5b4857d7c8-2prp4 from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559344 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1012 13:43:25.559350 19 predicates.go:957] kube-state-metrics-5d7bdccd49-fdm9v from kube-system started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559355 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1012 13:43:25.559362 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-7gfhl from kube-system started at 2024-10-12 11:58:56 +0000 UTC (2 container statuses recorded)
  I1012 13:43:25.559370 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1012 13:43:25.559376 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1012 13:43:25.559381 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-52gtn from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559386 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1012 13:43:25.559398 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-jg7q5 from kubernetes-dashboard started at 2024-10-12 11:58:56 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.559403 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1012 13:43:25.559408 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-gwbp5 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:43:25.559413 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:43:25.559417 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:43:25.559422 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-46-196 before test
  I1012 13:43:25.565123 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mtf2j from ingress-nginx-kubernetes-worker started at 2024-10-12 12:08:07 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.565145 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:43:25.565152 19 predicates.go:957] calico-node-z2z5r from kube-system started at 2024-10-12 12:09:19 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.565158 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:43:25.565164 19 predicates.go:957] sonobuoy-e2e-job-f6ba430c2ee44c56 from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:43:25.565169 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1012 13:43:25.565174 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:43:25.565180 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-lg8hq from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:43:25.565186 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:43:25.565191 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1012 13:43:25.565197 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-91-95 before test
  I1012 13:43:25.570407 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-t2lpw from ingress-nginx-kubernetes-worker started at 2024-10-12 13:41:55 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.570431 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1012 13:43:25.570439 19 predicates.go:957] calico-node-2k2cp from kube-system started at 2024-10-12 12:10:19 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.570444 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1012 13:43:25.570450 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-10-12 12:12:34 +0000 UTC (1 container statuses recorded)
  I1012 13:43:25.570455 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1012 13:43:25.570461 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4f7b4c738d5f4a10-6zbrj from sonobuoy started at 2024-10-12 12:12:36 +0000 UTC (2 container statuses recorded)
  I1012 13:43:25.570466 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1012 13:43:25.570473 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/12/24 13:43:25.57
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17fdb86be8d8c24a], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 10/12/24 13:43:25.594
  E1012 13:43:25.731771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:26.593320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-926" for this suite. @ 10/12/24 13:43:26.597
• [1.080 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/12/24 13:43:26.604
  I1012 13:43:26.604664 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:43:26.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:26.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:26.623
  STEP: Create set of pods @ 10/12/24 13:43:26.627
  I1012 13:43:26.636700 19 pods.go:871] created test-pod-1
  I1012 13:43:26.645434 19 pods.go:871] created test-pod-2
  I1012 13:43:26.651163 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/12/24 13:43:26.651
  E1012 13:43:26.732604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:27.732910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/12/24 13:43:28.688
  I1012 13:43:28.692431 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1012 13:43:28.733471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:29.693609 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E1012 13:43:29.733786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:30.691434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1647" for this suite. @ 10/12/24 13:43:30.694
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 10/12/24 13:43:30.701
  I1012 13:43:30.701567 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:43:30.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:30.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:30.718
  E1012 13:43:30.733773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/12/24 13:43:30.746
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:43:30.901
  STEP: Deploying the webhook pod @ 10/12/24 13:43:30.908
  STEP: Wait for the deployment to be ready @ 10/12/24 13:43:30.922
  I1012 13:43:30.936410 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:43:31.733987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:32.734241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:43:32.949
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:43:32.961
  E1012 13:43:33.734559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:33.961947 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/12/24 13:43:33.97
  STEP: create a pod that should be updated by the webhook @ 10/12/24 13:43:33.984
  I1012 13:43:34.058312 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3588" for this suite. @ 10/12/24 13:43:34.062
  STEP: Destroying namespace "webhook-markers-9739" for this suite. @ 10/12/24 13:43:34.067
• [3.374 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/12/24 13:43:34.075
  I1012 13:43:34.075446 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:43:34.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:34.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:34.093
  STEP: Creating configMap with name configmap-projected-all-test-volume-3dbaa03d-e4dc-4406-906e-a71901e56bc5 @ 10/12/24 13:43:34.096
  STEP: Creating secret with name secret-projected-all-test-volume-b890c31b-b113-4d43-9d23-6addbefe23b0 @ 10/12/24 13:43:34.1
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/12/24 13:43:34.108
  E1012 13:43:34.734735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:35.734796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:36.735273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:37.735665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:43:38.134
  I1012 13:43:38.139377 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod projected-volume-6540ef0e-fee3-4bf3-af31-bd26e1fadd8d container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:43:38.146
  I1012 13:43:38.161765 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4800" for this suite. @ 10/12/24 13:43:38.165
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 10/12/24 13:43:38.173
  I1012 13:43:38.173413 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:43:38.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:38.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:38.193
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5258 @ 10/12/24 13:43:38.196
  STEP: changing the ExternalName service to type=ClusterIP @ 10/12/24 13:43:38.199
  STEP: creating replication controller externalname-service in namespace services-5258 @ 10/12/24 13:43:38.215
  I1012 13:43:38.222113      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5258, replica count: 2
  E1012 13:43:38.735706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:39.736707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:40.736871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:41.273501      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:43:41.273548 19 resource.go:361] Creating new exec pod
  E1012 13:43:41.737228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:42.737533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:43.737532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:44.291315 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5258 exec execpodf78qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1012 13:43:44.382881 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1012 13:43:44.382924 19 builder.go:147] stdout: ""
  E1012 13:43:44.738503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:45.292275 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5258 exec execpodf78qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1012 13:43:45.377451 19 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1012 13:43:45.377496 19 builder.go:147] stdout: "externalname-service-g2dzz"
  I1012 13:43:45.377646 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-5258 exec execpodf78qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.37 80'
  I1012 13:43:45.469278 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.37 80\nConnection to 10.152.183.37 80 port [tcp/http] succeeded!\n"
  I1012 13:43:45.469319 19 builder.go:147] stdout: "externalname-service-52zx5"
  I1012 13:43:45.469416 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1012 13:43:45.487685 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5258" for this suite. @ 10/12/24 13:43:45.491
• [7.326 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 10/12/24 13:43:45.499
  I1012 13:43:45.499717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename dns @ 10/12/24 13:43:45.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:45.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:45.516
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/12/24 13:43:45.519
  I1012 13:43:45.528893 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4608  8bcc2d87-3887-4ca8-ae4a-8062009b4b5d 46572 0 2024-10-12 13:43:45 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-10-12 13:43:45 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-j9dpn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-j9dpn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1012 13:43:45.738574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:46.739185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/12/24 13:43:47.54
  I1012 13:43:47.540063 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4608 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:43:47.540082 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:43:47.540609 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:43:47.540679 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-4608/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/12/24 13:43:47.587
  I1012 13:43:47.587092 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4608 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1012 13:43:47.587134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:43:47.587631 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1012 13:43:47.587678 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-4608/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1012 13:43:47.635685 19 dns.go:423] Deleting pod test-dns-nameservers...
  I1012 13:43:47.650900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4608" for this suite. @ 10/12/24 13:43:47.656
• [2.163 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 10/12/24 13:43:47.662
  I1012 13:43:47.662838 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:43:47.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:47.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:47.679
  STEP: Setting up server cert @ 10/12/24 13:43:47.701
  E1012 13:43:47.739554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:43:48.158
  STEP: Deploying the webhook pod @ 10/12/24 13:43:48.164
  STEP: Wait for the deployment to be ready @ 10/12/24 13:43:48.177
  I1012 13:43:48.187180 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:43:48.740364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:49.740441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:43:50.201
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:43:50.216
  E1012 13:43:50.741318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:51.217170 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/12/24 13:43:51.297
  STEP: Creating a configMap that should be mutated @ 10/12/24 13:43:51.306
  STEP: Deleting the collection of validation webhooks @ 10/12/24 13:43:51.329
  STEP: Creating a configMap that should not be mutated @ 10/12/24 13:43:51.379
  I1012 13:43:51.429478 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4350" for this suite. @ 10/12/24 13:43:51.435
  STEP: Destroying namespace "webhook-markers-6708" for this suite. @ 10/12/24 13:43:51.442
• [3.785 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 10/12/24 13:43:51.447
  I1012 13:43:51.447986 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:43:51.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:43:51.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:43:51.471
  STEP: creating service in namespace services-9410 @ 10/12/24 13:43:51.474
  STEP: creating service affinity-nodeport in namespace services-9410 @ 10/12/24 13:43:51.474
  STEP: creating replication controller affinity-nodeport in namespace services-9410 @ 10/12/24 13:43:51.488
  I1012 13:43:51.499344      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-9410, replica count: 3
  E1012 13:43:51.741883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:52.742720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:53.742271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:54.551312      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:43:54.565231 19 resource.go:361] Creating new exec pod
  E1012 13:43:54.742953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:55.743066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:56.743137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:57.586320 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-9410 exec execpod-affinitywnjgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1012 13:43:57.681599 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1012 13:43:57.681644 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:43:57.681734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-9410 exec execpod-affinitywnjgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  E1012 13:43:57.744137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:43:57.769230 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  I1012 13:43:57.769279 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:43:57.769373 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-9410 exec execpod-affinitywnjgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.91.95 30907'
  I1012 13:43:57.853000 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.91.95 30907\nConnection to 172.31.91.95 30907 port [tcp/*] succeeded!\n"
  I1012 13:43:57.853054 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:43:57.853167 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-9410 exec execpod-affinitywnjgn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.46.196 30907'
  I1012 13:43:57.940147 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.46.196 30907\nConnection to 172.31.46.196 30907 port [tcp/*] succeeded!\n"
  I1012 13:43:57.940192 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:43:57.940268 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-9410 exec execpod-affinitywnjgn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.48:30907/ ; done'
  I1012 13:43:58.091982 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.48:30907/\n"
  I1012 13:43:58.092038 19 builder.go:147] stdout: "\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb\naffinity-nodeport-z6gzb"
  I1012 13:43:58.092052 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092061 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092068 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092074 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092080 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092086 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092091 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092120 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092126 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092131 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092138 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092144 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092150 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092160 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092167 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092177 19 service.go:242] Received response from host: affinity-nodeport-z6gzb
  I1012 13:43:58.092461 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9410, will wait for the garbage collector to delete the pods @ 10/12/24 13:43:58.106
  I1012 13:43:58.168021 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.831372ms
  I1012 13:43:58.268399 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.372865ms
  E1012 13:43:58.744603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:43:59.744927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:00.745978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:00.991935 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9410" for this suite. @ 10/12/24 13:44:00.996
• [9.555 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 10/12/24 13:44:01.002
  I1012 13:44:01.002896 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:44:01.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:01.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:01.02
  STEP: Setting up server cert @ 10/12/24 13:44:01.043
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:44:01.145
  STEP: Deploying the webhook pod @ 10/12/24 13:44:01.154
  STEP: Wait for the deployment to be ready @ 10/12/24 13:44:01.167
  I1012 13:44:01.181382 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:44:01.746089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:02.746333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:44:03.194
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:44:03.206
  E1012 13:44:03.746442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:04.207020 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1012 13:44:04.216148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8932-crds.webhook.example.com via the AdmissionRegistration API @ 10/12/24 13:44:04.732
  E1012 13:44:04.746529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/12/24 13:44:04.746
  E1012 13:44:05.746663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:06.746707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:07.334394 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7991" for this suite. @ 10/12/24 13:44:07.337
  STEP: Destroying namespace "webhook-markers-9110" for this suite. @ 10/12/24 13:44:07.344
• [6.350 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 10/12/24 13:44:07.353
  I1012 13:44:07.353523 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:44:07.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:07.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:07.369
  STEP: creating service in namespace services-2057 @ 10/12/24 13:44:07.372
  STEP: creating service affinity-clusterip-transition in namespace services-2057 @ 10/12/24 13:44:07.372
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2057 @ 10/12/24 13:44:07.383
  I1012 13:44:07.390204      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2057, replica count: 3
  E1012 13:44:07.747468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:08.747702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:09.748342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:10.441170      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:44:10.454688 19 resource.go:361] Creating new exec pod
  E1012 13:44:10.749141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:11.749285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:12.749920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:13.471252 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-2057 exec execpod-affinity8vf76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1012 13:44:13.560389 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1012 13:44:13.560429 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:44:13.560547 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-2057 exec execpod-affinity8vf76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 80'
  I1012 13:44:13.643655 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.86 80\nConnection to 10.152.183.86 80 port [tcp/http] succeeded!\n"
  I1012 13:44:13.643702 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:44:13.653853 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-2057 exec execpod-affinity8vf76 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.86:80/ ; done'
  E1012 13:44:13.750759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:13.804220 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n"
  I1012 13:44:13.804272 19 builder.go:147] stdout: "\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-f7mc4\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-f7mc4\naffinity-clusterip-transition-f7mc4\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-2wmw9\naffinity-clusterip-transition-f7mc4\naffinity-clusterip-transition-2wmw9"
  I1012 13:44:13.804284 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804293 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.804300 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804307 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.804313 19 service.go:242] Received response from host: affinity-clusterip-transition-f7mc4
  I1012 13:44:13.804323 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.804334 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.804341 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.804352 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804357 19 service.go:242] Received response from host: affinity-clusterip-transition-f7mc4
  I1012 13:44:13.804362 19 service.go:242] Received response from host: affinity-clusterip-transition-f7mc4
  I1012 13:44:13.804368 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804374 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804382 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.804388 19 service.go:242] Received response from host: affinity-clusterip-transition-f7mc4
  I1012 13:44:13.804394 19 service.go:242] Received response from host: affinity-clusterip-transition-2wmw9
  I1012 13:44:13.814931 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-2057 exec execpod-affinity8vf76 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.86:80/ ; done'
  I1012 13:44:13.973332 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n"
  I1012 13:44:13.973387 19 builder.go:147] stdout: "\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk\naffinity-clusterip-transition-rmcvk"
  I1012 13:44:13.973400 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973426 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973435 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973441 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973447 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973453 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973460 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973466 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973479 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973517 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973523 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973529 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973534 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973543 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973551 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973556 19 service.go:242] Received response from host: affinity-clusterip-transition-rmcvk
  I1012 13:44:13.973659 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2057, will wait for the garbage collector to delete the pods @ 10/12/24 13:44:13.987
  I1012 13:44:14.050233 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 7.779314ms
  I1012 13:44:14.151162 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.924973ms
  E1012 13:44:14.751434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:15.751654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:16.752541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:16.969970 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2057" for this suite. @ 10/12/24 13:44:16.973
• [9.626 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 10/12/24 13:44:16.979
  I1012 13:44:16.979623 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/12/24 13:44:16.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:16.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:16.997
  STEP: set up a multi version CRD @ 10/12/24 13:44:17
  I1012 13:44:17.001030 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  E1012 13:44:17.752829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:18.752946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:19.753749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/12/24 13:44:20.174
  STEP: check the unserved version gets removed @ 10/12/24 13:44:20.191
  E1012 13:44:20.754176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/12/24 13:44:20.904
  E1012 13:44:21.754277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:22.755216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:23.434816 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8794" for this suite. @ 10/12/24 13:44:23.442
• [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/12/24 13:44:23.45
  I1012 13:44:23.450537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename pods @ 10/12/24 13:44:23.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:23.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:23.472
  STEP: Create a pod @ 10/12/24 13:44:23.475
  E1012 13:44:23.755905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:24.756172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/12/24 13:44:25.497
  I1012 13:44:25.504487 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1012 13:44:25.504611 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3542" for this suite. @ 10/12/24 13:44:25.509
• [2.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/12/24 13:44:25.517
  I1012 13:44:25.517677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/12/24 13:44:25.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:25.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:25.536
  STEP: getting /apis @ 10/12/24 13:44:25.54
  STEP: getting /apis/storage.k8s.io @ 10/12/24 13:44:25.543
  STEP: getting /apis/storage.k8s.io/v1 @ 10/12/24 13:44:25.545
  STEP: creating @ 10/12/24 13:44:25.546
  STEP: watching @ 10/12/24 13:44:25.565
  I1012 13:44:25.565519 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/12/24 13:44:25.573
  STEP: listing in namespace @ 10/12/24 13:44:25.577
  STEP: listing across namespaces @ 10/12/24 13:44:25.58
  STEP: patching @ 10/12/24 13:44:25.583
  STEP: updating @ 10/12/24 13:44:25.589
  I1012 13:44:25.594564 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1012 13:44:25.594657 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/12/24 13:44:25.594
  STEP: deleting a collection @ 10/12/24 13:44:25.608
  I1012 13:44:25.624527 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5939" for this suite. @ 10/12/24 13:44:25.628
• [0.119 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 10/12/24 13:44:25.636
  I1012 13:44:25.636406 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename resourcequota @ 10/12/24 13:44:25.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:25.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:25.656
  STEP: Counting existing ResourceQuota @ 10/12/24 13:44:25.659
  E1012 13:44:25.756390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:26.756637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:27.757198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:28.758168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:29.759020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/12/24 13:44:30.664
  STEP: Ensuring resource quota status is calculated @ 10/12/24 13:44:30.671
  E1012 13:44:30.759606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:31.760445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:32.676775 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5189" for this suite. @ 10/12/24 13:44:32.68
• [7.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/12/24 13:44:32.687
  I1012 13:44:32.687249 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:44:32.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:32.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:32.707
  STEP: Creating projection with secret that has name projected-secret-test-0d5f1654-3325-4121-94bb-625cf39bc5e4 @ 10/12/24 13:44:32.711
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:44:32.717
  E1012 13:44:32.761362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:33.762398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:34.762958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:35.763220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:44:36.744
  I1012 13:44:36.749391 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-secrets-c5d4f070-f323-45e8-b637-6fde8d21d1cd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:44:36.759
  E1012 13:44:36.764056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:44:36.777688 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3235" for this suite. @ 10/12/24 13:44:36.781
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/12/24 13:44:36.788
  I1012 13:44:36.788734 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:44:36.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:44:36.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:44:36.811
  STEP: Creating secret with name s-test-opt-del-306ad76d-14d1-4445-9e30-7f4dd6b6a4b0 @ 10/12/24 13:44:36.817
  STEP: Creating secret with name s-test-opt-upd-c42aa70e-bd3f-4e27-9bd6-77b1e37081ce @ 10/12/24 13:44:36.821
  STEP: Creating the pod @ 10/12/24 13:44:36.826
  E1012 13:44:37.764288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:38.764537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-306ad76d-14d1-4445-9e30-7f4dd6b6a4b0 @ 10/12/24 13:44:38.869
  STEP: Updating secret s-test-opt-upd-c42aa70e-bd3f-4e27-9bd6-77b1e37081ce @ 10/12/24 13:44:38.878
  STEP: Creating secret with name s-test-opt-create-8b7b797d-4f50-4bc4-b857-4e1807aa026c @ 10/12/24 13:44:38.883
  STEP: waiting to observe update in volume @ 10/12/24 13:44:38.888
  E1012 13:44:39.764798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:40.765018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:41.765290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:42.765445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:43.765607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:44.765853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:45.766280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:46.766626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:47.767053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:48.767810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:49.768026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:50.768758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:51.769398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:52.770289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:53.771218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:54.771243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:55.772236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:56.773309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:57.774308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:58.774502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:44:59.775280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:00.775472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:01.775690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:02.775948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:03.776203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:04.776290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:05.777216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:06.777358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:07.777682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:08.777936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:09.778747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:10.778985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:11.779796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:12.779929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:13.780530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:14.781329      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:15.782302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:16.782405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:17.783300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:18.783515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:19.783758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:20.784031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:21.784216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:22.784270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:23.784414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:24.784626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:25.785264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:26.785471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:27.786205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:28.786407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:29.787398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:30.787648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:31.787925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:32.788038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:33.788533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:34.788747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:35.788916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:36.789438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:37.789566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:38.789781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:39.790631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:40.790740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:41.791341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:42.792316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:43.793335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:44.793444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:45.793618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:46.793905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:47.794844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:48.794981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:49.795923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:50.796260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:51.796930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:52.797163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:53.797325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:54.797547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:55.797699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:56.797904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:57.798025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:58.798274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:45:59.798403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:00.798619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:01.272577 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8932" for this suite. @ 10/12/24 13:46:01.277
• [84.498 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 10/12/24 13:46:01.286
  I1012 13:46:01.286686 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:46:01.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:01.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:01.306
  STEP: Setting up server cert @ 10/12/24 13:46:01.328
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:46:01.723
  STEP: Deploying the webhook pod @ 10/12/24 13:46:01.733
  STEP: Wait for the deployment to be ready @ 10/12/24 13:46:01.747
  I1012 13:46:01.755355 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:46:01.799430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:02.799521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:46:03.769
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:46:03.78
  E1012 13:46:03.800110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:04.781150 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/12/24 13:46:04.79
  E1012 13:46:04.800036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/12/24 13:46:04.809
  STEP: Creating a configMap that should not be mutated @ 10/12/24 13:46:04.819
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/12/24 13:46:04.832
  STEP: Creating a configMap that should be mutated @ 10/12/24 13:46:04.84
  I1012 13:46:04.899786 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6850" for this suite. @ 10/12/24 13:46:04.907
  STEP: Destroying namespace "webhook-markers-3839" for this suite. @ 10/12/24 13:46:04.915
• [3.635 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 10/12/24 13:46:04.921
  I1012 13:46:04.921849 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:46:04.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:04.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:04.942
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/12/24 13:46:04.946
  E1012 13:46:05.800786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:06.800869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:07.801315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:08.801358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:46:08.971
  I1012 13:46:08.976319 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-d21d3561-df31-41ec-b555-a9575d7b629b container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:46:08.99
  I1012 13:46:09.005819 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6480" for this suite. @ 10/12/24 13:46:09.01
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 10/12/24 13:46:09.019
  I1012 13:46:09.019214 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:46:09.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:09.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:09.04
  STEP: creating service in namespace services-4295 @ 10/12/24 13:46:09.043
  STEP: creating service affinity-clusterip in namespace services-4295 @ 10/12/24 13:46:09.043
  STEP: creating replication controller affinity-clusterip in namespace services-4295 @ 10/12/24 13:46:09.053
  I1012 13:46:09.062500      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4295, replica count: 3
  E1012 13:46:09.801615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:10.801986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:11.802311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:12.113817      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1012 13:46:12.122138 19 resource.go:361] Creating new exec pod
  E1012 13:46:12.802960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:13.803316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:14.803802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:15.143408 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4295 exec execpod-affinity9bn78 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1012 13:46:15.225288 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1012 13:46:15.225335 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:46:15.225427 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4295 exec execpod-affinity9bn78 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.77 80'
  I1012 13:46:15.307481 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.77 80\nConnection to 10.152.183.77 80 port [tcp/http] succeeded!\n"
  I1012 13:46:15.307528 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:46:15.307667 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4295 exec execpod-affinity9bn78 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.77:80/ ; done'
  I1012 13:46:15.434769 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n"
  I1012 13:46:15.434817 19 builder.go:147] stdout: "\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh\naffinity-clusterip-kmjjh"
  I1012 13:46:15.434830 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434839 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434846 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434851 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434858 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434863 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434869 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434875 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434882 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434888 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434900 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434907 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434918 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434923 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434929 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.434934 19 service.go:242] Received response from host: affinity-clusterip-kmjjh
  I1012 13:46:15.435020 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4295, will wait for the garbage collector to delete the pods @ 10/12/24 13:46:15.451
  I1012 13:46:15.515413 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.247262ms
  I1012 13:46:15.615643 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.228305ms
  E1012 13:46:15.804347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:16.804621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:17.805342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:18.235823 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4295" for this suite. @ 10/12/24 13:46:18.239
• [9.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 10/12/24 13:46:18.245
  I1012 13:46:18.245926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:46:18.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:18.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:18.265
  STEP: Setting up server cert @ 10/12/24 13:46:18.285
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:46:18.462
  STEP: Deploying the webhook pod @ 10/12/24 13:46:18.469
  STEP: Wait for the deployment to be ready @ 10/12/24 13:46:18.484
  I1012 13:46:18.496165 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:46:18.806349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:19.806602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:46:20.51
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:46:20.521
  E1012 13:46:20.806772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:21.521840 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1012 13:46:21.531359 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  E1012 13:46:21.806867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/12/24 13:46:22.044
  STEP: Creating a custom resource that should be denied by the webhook @ 10/12/24 13:46:22.058
  E1012 13:46:22.807344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:23.807589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/12/24 13:46:24.075
  STEP: Updating the custom resource with disallowed data should be denied @ 10/12/24 13:46:24.081
  STEP: Deleting the custom resource should be denied @ 10/12/24 13:46:24.091
  STEP: Remove the offending key and value from the custom resource data @ 10/12/24 13:46:24.098
  STEP: Deleting the updated custom resource should be successful @ 10/12/24 13:46:24.109
  I1012 13:46:24.674352 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2872" for this suite. @ 10/12/24 13:46:24.679
  STEP: Destroying namespace "webhook-markers-8220" for this suite. @ 10/12/24 13:46:24.687
• [6.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 10/12/24 13:46:24.696
  I1012 13:46:24.696904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename namespaces @ 10/12/24 13:46:24.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:24.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:24.712
  STEP: Read namespace status @ 10/12/24 13:46:24.715
  I1012 13:46:24.719703 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/12/24 13:46:24.719
  I1012 13:46:24.726355 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/12/24 13:46:24.726
  I1012 13:46:24.736881 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1012 13:46:24.737002 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4496" for this suite. @ 10/12/24 13:46:24.741
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 10/12/24 13:46:24.748
  I1012 13:46:24.748778 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename webhook @ 10/12/24 13:46:24.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:24.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:24.769
  STEP: Setting up server cert @ 10/12/24 13:46:24.796
  E1012 13:46:24.807671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/12/24 13:46:25.176
  STEP: Deploying the webhook pod @ 10/12/24 13:46:25.183
  STEP: Wait for the deployment to be ready @ 10/12/24 13:46:25.197
  I1012 13:46:25.204608 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1012 13:46:25.808254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:26.808351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/12/24 13:46:27.217
  STEP: Verifying the service has paired with the endpoint @ 10/12/24 13:46:27.227
  E1012 13:46:27.808508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:28.227837 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/12/24 13:46:28.237
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/12/24 13:46:28.251
  I1012 13:46:28.251288 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  I1012 13:46:28.302674 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9790" for this suite. @ 10/12/24 13:46:28.306
  STEP: Destroying namespace "webhook-markers-9368" for this suite. @ 10/12/24 13:46:28.311
• [3.570 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 10/12/24 13:46:28.318
  I1012 13:46:28.318852 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename downward-api @ 10/12/24 13:46:28.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:28.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:28.337
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:46:28.343
  E1012 13:46:28.809157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:29.809401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:46:30.362
  I1012 13:46:30.366978 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-d783511f-3f8d-4775-bc4f-5449f64370cd container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:46:30.376
  I1012 13:46:30.392410 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1150" for this suite. @ 10/12/24 13:46:30.396
• [2.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 10/12/24 13:46:30.404
  I1012 13:46:30.404852 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:46:30.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:30.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:30.424
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f06d29c5-5a9b-447b-b294-6f7059f3e770 @ 10/12/24 13:46:30.43
  STEP: Creating the pod @ 10/12/24 13:46:30.435
  E1012 13:46:30.809843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:31.809954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-f06d29c5-5a9b-447b-b294-6f7059f3e770 @ 10/12/24 13:46:32.465
  STEP: waiting to observe update in volume @ 10/12/24 13:46:32.471
  E1012 13:46:32.810950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:33.811262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:34.812341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:35.812561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:46:36.496060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6993" for this suite. @ 10/12/24 13:46:36.5
• [6.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 10/12/24 13:46:36.507
  I1012 13:46:36.507996 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:46:36.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:36.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:36.529
  STEP: Creating a pod to test downward API volume plugin @ 10/12/24 13:46:36.533
  E1012 13:46:36.812953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:37.813328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:38.813505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:39.814349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:46:40.559
  I1012 13:46:40.564353 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod downwardapi-volume-4824ef32-b83e-46e8-958d-914cfa9c380e container client-container: <nil>
  STEP: delete the pod @ 10/12/24 13:46:40.57
  I1012 13:46:40.589149 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-507" for this suite. @ 10/12/24 13:46:40.593
• [4.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/12/24 13:46:40.6
  I1012 13:46:40.600871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename cronjob @ 10/12/24 13:46:40.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:46:40.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:46:40.618
  STEP: Creating a suspended cronjob @ 10/12/24 13:46:40.621
  STEP: Ensuring no jobs are scheduled @ 10/12/24 13:46:40.627
  E1012 13:46:40.815073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:41.815206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:42.816238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:43.816515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:44.817361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:45.817623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:46.817728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:47.817975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:48.818344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:49.818568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:50.819508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:51.819595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:52.820340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:53.820427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:54.820516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:55.820635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:56.821326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:57.821401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:58.822085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:46:59.822321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:00.822934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:01.823112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:02.823573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:03.823683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:04.824733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:05.824858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:06.825928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:07.826039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:08.826710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:09.826976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:10.828058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:11.828232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:12.828328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:13.828572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:14.829364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:15.829585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:16.830206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:17.830356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:18.831200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:19.831278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:20.832180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:21.832303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:22.832400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:23.832579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:24.833487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:25.833598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:26.834520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:27.834767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:28.835486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:29.835733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:30.836201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:31.836699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:32.837260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:33.837395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:34.837998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:35.838244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:36.838736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:37.839348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:38.839569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:39.839665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:40.840658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:41.840783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:42.841714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:43.842333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:44.842413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:45.842502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:46.843023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:47.843918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:48.844432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:49.844698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:50.844998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:51.845265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:52.845669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:53.845897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:54.846039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:55.846202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:56.846267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:57.846417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:58.846914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:47:59.847051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:00.847279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:01.847663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:02.847535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:03.847839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:04.848048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:05.848259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:06.848661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:07.849234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:08.849393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:09.849487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:10.849621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:11.850232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:12.850350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:13.851283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:14.852294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:15.852392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:16.853340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:17.853466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:18.854297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:19.854428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:20.854671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:21.855556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:22.855895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:23.856149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:24.856380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:25.856617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:26.857007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:27.857414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:28.857646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:29.857743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:30.857959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:31.858042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:32.858296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:33.858412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:34.858636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:35.859023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:36.859188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:37.859253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:38.859723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:39.859948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:40.860125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:41.860839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:42.861545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:43.862241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:44.862497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:45.863317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:46.863424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:47.863532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:48.863649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:49.864616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:50.864839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:51.865729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:52.865936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:53.867003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:54.867316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:55.867438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:56.868299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:57.868431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:58.868642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:48:59.869729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:00.869844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:01.869958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:02.870213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:03.870596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:04.870697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:05.871553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:06.871659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:07.871782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:08.872295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:09.872450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:10.873231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:11.873702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:12.873924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:13.874305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:14.874406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:15.874544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:16.874837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:17.874967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:18.875199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:19.875300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:20.875566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:21.875741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:22.875957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:23.876064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:24.876332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:25.877273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:26.877535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:27.878604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:28.878820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:29.879888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:30.880009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:31.880242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:32.880662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:33.881242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:34.882320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:35.883283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:36.883964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:37.884242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:38.884456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:39.885350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:40.885453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:41.886328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:42.887306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:43.888313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:44.889309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:45.889449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:46.889546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:47.890244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:48.891333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:49.892341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:50.892446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:51.893345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:52.893547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:53.893750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:54.893882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:55.894244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:56.894358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:57.894457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:58.894711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:49:59.894828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:00.895039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:01.895400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:02.895381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:03.896225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:04.896357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:05.897066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:06.897244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:07.897655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:08.897889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:09.898880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:10.899023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:11.900021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:12.900169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:13.900263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:14.901304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:15.901399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:16.902300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:17.903301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:18.903499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:19.903599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:20.904313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:21.904854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:22.905081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:23.906143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:24.906255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:25.906385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:26.906546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:27.907054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:28.907355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:29.907510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:30.907616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:31.908247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:32.908414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:33.908616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:34.908937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:35.909167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:36.909273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:37.909463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:38.909684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:39.909788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:40.909905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:41.910070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:42.910275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:43.910359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:44.910434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:45.910537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:46.910637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:47.911363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:48.912295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:49.912431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:50.913298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:51.913419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:52.914311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:53.915320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:54.915428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:55.915536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:56.916298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:57.916754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:58.916990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:50:59.917062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:00.917264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:01.918327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:02.918546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:03.919354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:04.919619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:05.919724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:06.920081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:07.920247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:08.920325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:09.921341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:10.921452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:11.922246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:12.922619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:13.922703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:14.923313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:15.923428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:16.924423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:17.924545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:18.924901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:19.925058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:20.925259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:21.925342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:22.926308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:23.926959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:24.927071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:25.927908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:26.928009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:27.928994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:28.929233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:29.929369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:30.929481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:31.929782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:32.930016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:33.931023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:34.931149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:35.931237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:36.931784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:37.932303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:38.932426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:39.933331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/12/24 13:51:40.628
  STEP: Removing cronjob @ 10/12/24 13:51:40.632
  I1012 13:51:40.639690 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8800" for this suite. @ 10/12/24 13:51:40.644
• [300.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 10/12/24 13:51:40.653
  I1012 13:51:40.653412 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename emptydir @ 10/12/24 13:51:40.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:51:40.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:51:40.68
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/12/24 13:51:40.683
  E1012 13:51:40.933456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:41.933653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:51:42.703
  I1012 13:51:42.708124 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-1f23c201-fa46-4dbc-a89a-199bd2f2d748 container test-container: <nil>
  STEP: delete the pod @ 10/12/24 13:51:42.723
  I1012 13:51:42.743458 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1320" for this suite. @ 10/12/24 13:51:42.747
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/12/24 13:51:42.753
  I1012 13:51:42.753928 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename secrets @ 10/12/24 13:51:42.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:51:42.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:51:42.771
  STEP: Creating secret with name secret-test-c71d884a-a8bb-4a89-b332-02fc5b56c6b3 @ 10/12/24 13:51:42.775
  STEP: Creating a pod to test consume secrets @ 10/12/24 13:51:42.78
  E1012 13:51:42.933823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:43.934660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:44.935676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:45.936409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:51:46.807
  I1012 13:51:46.810397 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-secrets-43f455b8-48a4-4cc4-ae5f-c270a2c716c3 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:51:46.816
  I1012 13:51:46.835475 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3752" for this suite. @ 10/12/24 13:51:46.839
• [4.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 10/12/24 13:51:46.845
  I1012 13:51:46.845442 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename job @ 10/12/24 13:51:46.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:51:46.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:51:46.869
  STEP: Creating a job @ 10/12/24 13:51:46.872
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/12/24 13:51:46.879
  E1012 13:51:46.936509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:47.936628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/12/24 13:51:48.884
  STEP: updating /status @ 10/12/24 13:51:48.892
  STEP: get /status @ 10/12/24 13:51:48.9
  I1012 13:51:48.905400 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-924" for this suite. @ 10/12/24 13:51:48.909
• [2.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 10/12/24 13:51:48.918
  I1012 13:51:48.918747 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename configmap @ 10/12/24 13:51:48.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:51:48.933
  E1012 13:51:48.936628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:51:48.936
  STEP: Creating configMap with name configmap-test-volume-32b79eff-267e-4a50-ac66-4629943bbb8c @ 10/12/24 13:51:48.94
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:51:48.944
  E1012 13:51:49.936847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:50.937083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:51:50.964
  I1012 13:51:50.968896 19 output.go:196] Trying to get logs from node ip-172-31-46-196 pod pod-configmaps-6fd4277c-29da-4d0f-a34d-d5d5d5945c52 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/12/24 13:51:50.984
  I1012 13:51:51.000832 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-585" for this suite. @ 10/12/24 13:51:51.005
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 10/12/24 13:51:51.012
  I1012 13:51:51.012661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename statefulset @ 10/12/24 13:51:51.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:51:51.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:51:51.034
  STEP: Creating service test in namespace statefulset-2017 @ 10/12/24 13:51:51.037
  STEP: Creating a new StatefulSet @ 10/12/24 13:51:51.042
  I1012 13:51:51.057831 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1012 13:51:51.938068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:52.938247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:53.938493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:54.939385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:55.939670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:56.940002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:57.940145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:58.940957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:51:59.941049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:00.941250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:52:01.056064 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:52:01.056122 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:52:01.056132 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1012 13:52:01.068814 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-2017 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:52:01.164262 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:52:01.164311 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:52:01.164321 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1012 13:52:01.941541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:02.941684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:03.942245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:04.942335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:05.943297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:06.944309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:07.944516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:08.944810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:09.945010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:10.945346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/12/24 13:52:11.174
  I1012 13:52:11.185887 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/12/24 13:52:11.185
  E1012 13:52:11.945523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:12.945747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:13.945879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:14.946134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:15.946255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:16.946327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:17.946568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:18.946803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:19.947005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:20.947184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/12/24 13:52:21.196
  I1012 13:52:21.200022 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-2017 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:52:21.280697 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:52:21.280737 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:52:21.280747 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1012 13:52:21.948224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:22.948323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:23.948464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:24.948719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:25.948901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:26.949254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:27.949510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:28.950271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:29.950635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:30.950726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/12/24 13:52:31.297
  I1012 13:52:31.297396 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-2017 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1012 13:52:31.382677 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1012 13:52:31.382717 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1012 13:52:31.382729 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1012 13:52:31.950868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:32.951387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:33.951512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:34.951598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:35.951700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:36.952425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:37.952547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:38.952647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:39.953336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:40.953658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:52:41.404731 19 statefulset.go:2507] Updating stateful set ss2
  E1012 13:52:41.953920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:42.954091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:43.954263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:44.954517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:45.954751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:46.955156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:47.955315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:48.955550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:49.955785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:50.956017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/12/24 13:52:51.413
  I1012 13:52:51.417920 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=statefulset-2017 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1012 13:52:51.503845 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1012 13:52:51.503889 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1012 13:52:51.503900 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1012 13:52:51.956091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:52.956360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:53.956509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:54.957334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:55.957643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:56.957677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:57.957869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:58.958338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:52:59.958599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:00.958897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:53:01.522120 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2017
  I1012 13:53:01.526140 19 rest.go:150] Scaling statefulset ss2 to 0
  E1012 13:53:01.959041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:02.959181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:03.959275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:04.959404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:05.959644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:06.959990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:07.960086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:08.960275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:09.960502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:10.960606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:53:11.540357 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1012 13:53:11.544535 19 rest.go:88] Deleting statefulset ss2
  I1012 13:53:11.557642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2017" for this suite. @ 10/12/24 13:53:11.562
• [80.556 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 10/12/24 13:53:11.568
  I1012 13:53:11.568761 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename projected @ 10/12/24 13:53:11.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:53:11.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:53:11.59
  STEP: Creating configMap with name projected-configmap-test-volume-map-a53aac3e-2dc2-468f-8380-33ab56887ef1 @ 10/12/24 13:53:11.593
  STEP: Creating a pod to test consume configMaps @ 10/12/24 13:53:11.599
  E1012 13:53:11.960957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:12.961651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:13.962325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:14.962434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/12/24 13:53:15.623
  I1012 13:53:15.627613 19 output.go:196] Trying to get logs from node ip-172-31-91-95 pod pod-projected-configmaps-2252838d-64c8-478b-9334-1ed046a32c21 container agnhost-container: <nil>
  STEP: delete the pod @ 10/12/24 13:53:15.634
  I1012 13:53:15.651799 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4186" for this suite. @ 10/12/24 13:53:15.656
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 10/12/24 13:53:15.663
  I1012 13:53:15.663540 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-155547415
  STEP: Building a namespace api object, basename services @ 10/12/24 13:53:15.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/12/24 13:53:15.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/12/24 13:53:15.684
  STEP: creating service multi-endpoint-test in namespace services-4886 @ 10/12/24 13:53:15.687
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4886 to expose endpoints map[] @ 10/12/24 13:53:15.703
  I1012 13:53:15.710832 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1012 13:53:15.963349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:53:16.720781 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4886 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4886 @ 10/12/24 13:53:16.72
  E1012 13:53:16.963460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:17.963552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4886 to expose endpoints map[pod1:[100]] @ 10/12/24 13:53:18.744
  I1012 13:53:18.755900 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4886 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4886 @ 10/12/24 13:53:18.755
  E1012 13:53:18.964442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:19.964532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4886 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/12/24 13:53:20.779
  I1012 13:53:20.793860 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4886 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/12/24 13:53:20.793
  I1012 13:53:20.793924 19 resource.go:361] Creating new exec pod
  E1012 13:53:20.965018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:21.965241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1012 13:53:22.966233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:53:23.812248 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4886 exec execpodx5nsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1012 13:53:23.899399 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1012 13:53:23.899448 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:53:23.899560 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4886 exec execpodx5nsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.240 80'
  E1012 13:53:23.967012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1012 13:53:23.991660 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.240 80\nConnection to 10.152.183.240 80 port [tcp/http] succeeded!\n"
  I1012 13:53:23.991703 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:53:23.991792 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4886 exec execpodx5nsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1012 13:53:24.078689 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1012 13:53:24.078742 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1012 13:53:24.078830 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-155547415 --namespace=services-4886 exec execpodx5nsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.240 81'
  I1012 13:53:24.167753 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.240 81\nConnection to 10.152.183.240 81 port [tcp/*] succeeded!\n"
  I1012 13:53:24.167821 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4886 @ 10/12/24 13:53:24.167
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4886 to expose endpoints map[pod2:[101]] @ 10/12/24 13:53:24.184
  I1012 13:53:24.197876 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4886 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4886 @ 10/12/24 13:53:24.197
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4886 to expose endpoints map[] @ 10/12/24 13:53:24.214
  I1012 13:53:24.231773 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4886 exposes endpoints map[]
  I1012 13:53:24.248811 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4886" for this suite. @ 10/12/24 13:53:24.251
• [8.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1012 13:53:24.257719 19 suites.go:34] Running AfterSuite actions on node 1
  I1012 13:53:24.257737 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.054 seconds]
------------------------------

Ran 404 of 6603 Specs in 6037.806 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h40m38.775322232s
Test Suite Passed
